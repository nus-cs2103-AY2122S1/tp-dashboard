[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W16-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W16-2/tp/actions)","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W16-2/tp/branch/master/graph/badge.svg?token\u003dPQVA8CSXQ8)](https://codecov.io/gh/AY2122S1-CS2103T-W16-2/tp)","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"BobTheBistroBoss (BTBB) is a **desktop application for home chefs to manage their orders and inventory,","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"optimized for use via a command line interface (CLI)**.","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"* If you are interested in using BBTB, head over to the [_Quick Start_ section of the **User Guide**](https://ay2122s1-cs2103t-w16-2.github.io/tp/UserGuide.html).","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"* If you are interested about developing BBTB, the [**Developer Guide**](https://ay2122s1-cs2103t-w16-2.github.io/tp/DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":"**Acknowledgements**","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"Imranr2":10,"zognin":1,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    id \u0027com.github.jakemarsden.git-hooks\u0027 version \u00270.0.2\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"mainClassName \u003d \u0027ay2122s1_cs2103t_w16_2.btbb.Main\u0027","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    ignoreFailures \u003d false","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    maxWarnings \u003d 0","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"        html.required \u003d true","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"        xml.required \u003d true","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"gitHooks {","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    hooks \u003d [","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u0027pre-push\u0027: \u0027clean check \u0026\u0026 .github/run-checks.sh\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    ]","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    hooksDirectory \u003d file(\u0027.git/hooks\u0027)","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    gradleCommand \u003d \u0027./gradlew\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"    archiveFileName \u003d \u0027btbb.jar\u0027","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"jacoco {","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    toolVersion \u003d \"0.8.7\"","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":83,"sivayogasubramanian":4}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for a modified version of the module\u0027s code standard at","lastModifiedDate":"2016-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://oss-generic.github.io/process/codingstandards/coding-standards-java.html","lastModifiedDate":"2016-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2019-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2017-01-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"sivayogasubramanian"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z0-9_]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2017-09-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"       value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2017-01-16"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":310,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":311,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2017-05-22"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2017-05-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":332,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":333,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":353,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":358,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":363,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":364,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every class, enumeration and interface have a header comment. --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":386,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":387,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"scope\" value\u003d\"public\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":388,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":390,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":397,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":398,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":399,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*)\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":402,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":403,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":402,"sivayogasubramanian":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"### Han Geng Ning","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"\u003cimg src\u003d\"images/zognin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"[[github](http://github.com/zognin)]","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"[[portfolio](team/zognin.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"* Role: Team Lead","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"### Manoharan Ajay Anand","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"\u003cimg src\u003d\"images/manoharan-ajay-anand.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"[[github](http://github.com/Manoharan-Ajay-Anand)]","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"[[portfolio](team/manoharan-ajay-anand.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"* Role: Developer","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"* Responsibilities: Code quality","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"### Muhammad Imran Bin Ridzuan","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"\u003cimg src\u003d\"images/imranr2.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"[[github](http://github.com/Imranr2)]","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"[[portfolio](team/imranr2.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"* Responsibilities: Deliverables and deadlines, Documentation, Testing","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"### Ruppa Nagarajan Sivayoga Subramanian","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"\u003cimg src\u003d\"images/sivayogasubramanian.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"[[github](http://github.com/sivayogasubramanian)] [[portfolio](team/sivayogasubramanian.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"* Responsibilities: Testing, Integration","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"### Sim Sing Yee, Eunice","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"\u003cimg src\u003d\"images/eunicesim142.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"[[github](http://github.com/EuniceSim142)]","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"[[portfolio](team/eunicesim142.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"* Responsibilities: Documentation, Code quality","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"EuniceSim142":26,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"sivayogasubramanian"},"content":"Classes used by multiple components are in the `ay2122s1_cs2103t_w16_2.btbb.commons` package.","lastModifiedDate":"2021-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"zognin"},"content":"* Home chef","lastModifiedDate":"2021-10-09"},{"lineNumber":261,"author":{"gitId":"zognin"},"content":"* Prepares meal orders at home","lastModifiedDate":"2021-10-09"},{"lineNumber":262,"author":{"gitId":"zognin"},"content":"* Sells meals to clients through delivery","lastModifiedDate":"2021-10-09"},{"lineNumber":263,"author":{"gitId":"zognin"},"content":"* Individual business owner","lastModifiedDate":"2021-10-09"},{"lineNumber":264,"author":{"gitId":"zognin"},"content":"* Tracks orders, inventory and revenue","lastModifiedDate":"2021-10-09"},{"lineNumber":265,"author":{"gitId":"zognin"},"content":"* Types quickly","lastModifiedDate":"2021-10-09"},{"lineNumber":266,"author":{"gitId":"zognin"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2021-10-09"},{"lineNumber":267,"author":{"gitId":"zognin"},"content":"* Comfortable with CLI applications","lastModifiedDate":"2021-10-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":270,"author":{"gitId":"zognin"},"content":"**Value proposition**: The application allows home chefs who are individual business owners to track orders and revenue.","lastModifiedDate":"2021-10-09"},{"lineNumber":271,"author":{"gitId":"zognin"},"content":"They can easily and quickly create new orders by copying bookmarked client and recipe details.","lastModifiedDate":"2021-10-09"},{"lineNumber":272,"author":{"gitId":"zognin"},"content":"They can also use the app to track the status of their inventory.","lastModifiedDate":"2021-10-09"},{"lineNumber":273,"author":{"gitId":"zognin"},"content":"Some business statistics are available to help home chefs make business plans.","lastModifiedDate":"2021-10-10"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"Imranr2"},"content":"Priorities: High - (must have), Medium - (nice to have), Low -  (unlikely to have)","lastModifiedDate":"2021-09-19"},{"lineNumber":279,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":280,"author":{"gitId":"Imranr2"},"content":"\u003ctable\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":281,"author":{"gitId":"Imranr2"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":282,"author":{"gitId":"zognin"},"content":"   \u003cth style\u003d\"text-align: center\" colspan\u003d\"3\"\u003e\u003ch3\u003e\u003cstrong\u003eAs a home chef\u003c/strong\u003e\u003c/h3\u003e\u003c/th\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":283,"author":{"gitId":"Imranr2"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":284,"author":{"gitId":"Imranr2"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":285,"author":{"gitId":"sivayogasubramanian"},"content":"    \u003cth style\u003d\"text-align: center\"\u003e\u003ch3\u003e\u003cstrong\u003ePriority\u003c/strong\u003e\u003c/h3\u003e\u003c/th\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":286,"author":{"gitId":"sivayogasubramanian"},"content":"    \u003cth style\u003d\"text-align: center\"\u003e\u003ch3\u003e\u003cstrong\u003eI can...\u003c/strong\u003e\u003c/h3\u003e\u003c/th\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":287,"author":{"gitId":"sivayogasubramanian"},"content":"    \u003cth style\u003d\"text-align: center\"\u003e\u003ch3\u003e\u003cstrong\u003eSo that...\u003c/strong\u003e\u003c/h3\u003e\u003c/th\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":288,"author":{"gitId":"Imranr2"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":289,"author":{"gitId":"Imranr2"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":290,"author":{"gitId":"Imranr2"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":291,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eAdd an ingredient and quantity to the inventory\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":292,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can keep track of my inventory\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":293,"author":{"gitId":"Imranr2"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":294,"author":{"gitId":"Imranr2"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":295,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":296,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eDelete ingredients from the inventory\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":297,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eMy inventory is always up to date\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":298,"author":{"gitId":"Imranr2"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":299,"author":{"gitId":"Imranr2"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":300,"author":{"gitId":"Imranr2"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":301,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eEdit ingredients in the inventory\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":302,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can update my inventory with ingredients that I recently bought or used.\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":303,"author":{"gitId":"Imranr2"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":304,"author":{"gitId":"Imranr2"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":305,"author":{"gitId":"Imranr2"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":306,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eFind ingredients by keywords\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":307,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI know the quantity of a specific ingredient\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":308,"author":{"gitId":"Imranr2"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":309,"author":{"gitId":"Imranr2"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":310,"author":{"gitId":"Imranr2"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":311,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eView all ingredients in my inventory\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":312,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can see the remaining quantity of all my ingredients\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":313,"author":{"gitId":"Imranr2"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":314,"author":{"gitId":"Imranr2"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":315,"author":{"gitId":"Imranr2"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":316,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eDetect duplicate ingredients\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":317,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI do not clutter the application with duplicate ingredients\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":318,"author":{"gitId":"Imranr2"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":319,"author":{"gitId":"Imranr2"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":320,"author":{"gitId":"Imranr2"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":321,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eAdd a client\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":322,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can copy details from a client to easily fill up the details of an order\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":323,"author":{"gitId":"Imranr2"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":324,"author":{"gitId":"Imranr2"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":325,"author":{"gitId":"Imranr2"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":326,"author":{"gitId":"Imranr2"},"content":"    \u003ctd\u003eDelete clients\u003c/td\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":327,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can remove former clients\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":328,"author":{"gitId":"zognin"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":329,"author":{"gitId":"zognin"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":330,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":331,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eEdit client details\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":332,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can update their contact information\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":333,"author":{"gitId":"zognin"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":334,"author":{"gitId":"zognin"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":335,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":336,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eFind clients by keywords\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":337,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can find client information to fill up the details of an order\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":338,"author":{"gitId":"zognin"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":339,"author":{"gitId":"zognin"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":340,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":341,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eView all clients\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":342,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can view all my current clients\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":343,"author":{"gitId":"zognin"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":344,"author":{"gitId":"zognin"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":345,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":346,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eDetect duplicate clients\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":347,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI do not clutter the application with duplicate clients\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":348,"author":{"gitId":"zognin"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":349,"author":{"gitId":"zognin"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":350,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":351,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eAdd an order\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":352,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can keep track of my orders\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":353,"author":{"gitId":"zognin"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":354,"author":{"gitId":"zognin"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":355,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":356,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eAdd a quantity to an order\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":357,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can create multiple orders for the same client\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":358,"author":{"gitId":"zognin"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":359,"author":{"gitId":"zognin"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":360,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":361,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eAdd a price to an order\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":362,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can keep track of my revenue\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":363,"author":{"gitId":"zognin"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":364,"author":{"gitId":"zognin"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":365,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":366,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eDelete orders\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":367,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can delete cancelled orders\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":368,"author":{"gitId":"zognin"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":369,"author":{"gitId":"zognin"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":370,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":371,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eEdit orders\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":372,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can update the details of my orders\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":373,"author":{"gitId":"zognin"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":374,"author":{"gitId":"zognin"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":375,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":376,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eFind orders by keywords\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":377,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can find a specific order\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":378,"author":{"gitId":"zognin"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":379,"author":{"gitId":"zognin"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":380,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":381,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eView all orders\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":382,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can view all my current orders\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":383,"author":{"gitId":"zognin"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":384,"author":{"gitId":"zognin"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":385,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":386,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eMark an order as done\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":387,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can set the status of an order\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":388,"author":{"gitId":"zognin"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":389,"author":{"gitId":"zognin"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":390,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":391,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eMark an order as undone\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":392,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can reverse the changes made to the status of an order\u003c/td\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":393,"author":{"gitId":"zognin"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":394,"author":{"gitId":"zognin"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":395,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":396,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eAdd a recipe\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":397,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can copy details from a recipe to easily fill up the details of an order\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":398,"author":{"gitId":"zognin"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":399,"author":{"gitId":"zognin"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":400,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":401,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eDelete recipes\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":402,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can delete unused recipes\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":403,"author":{"gitId":"zognin"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":404,"author":{"gitId":"zognin"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":405,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":406,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eEdit recipes\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":407,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can update recipe details, like changing the ingredients used or recipe name\u003c/td\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":408,"author":{"gitId":"Imranr2"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":409,"author":{"gitId":"Imranr2"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":410,"author":{"gitId":"Imranr2"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":411,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eFind recipes by keywords\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":412,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can reference certain recipes when creating an order\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":413,"author":{"gitId":"Imranr2"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":414,"author":{"gitId":"Imranr2"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":415,"author":{"gitId":"Imranr2"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":416,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eView all recipes\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":417,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can see all the current recipes used\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":418,"author":{"gitId":"Imranr2"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":419,"author":{"gitId":"Imranr2"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":420,"author":{"gitId":"Imranr2"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":421,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eDetect duplicate recipes\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":422,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI do not clutter the application with duplicate recipes\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":423,"author":{"gitId":"Imranr2"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":424,"author":{"gitId":"Imranr2"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":425,"author":{"gitId":"Imranr2"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":426,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eView my most popular recipes\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":427,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can focus on growing my business with the popular recipes\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":428,"author":{"gitId":"Imranr2"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":429,"author":{"gitId":"Imranr2"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":430,"author":{"gitId":"Imranr2"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":431,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eView my least popular recipes\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":432,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can spend less time refining my skills for those recipes\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":433,"author":{"gitId":"Imranr2"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":434,"author":{"gitId":"Imranr2"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":435,"author":{"gitId":"Imranr2"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":436,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eView my monthly revenue\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":437,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can tell if my business is growing\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":438,"author":{"gitId":"Imranr2"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":439,"author":{"gitId":"Imranr2"},"content":"  \u003ctr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":440,"author":{"gitId":"Imranr2"},"content":"    \u003ctd\u003eHIGH\u003c/td\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":441,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eView my most popular clients\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":442,"author":{"gitId":"zognin"},"content":"    \u003ctd\u003eI can reinforce business relationships with my popular clients\u003c/td\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":443,"author":{"gitId":"Imranr2"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":444,"author":{"gitId":"Imranr2"},"content":"\u003c/table\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"sivayogasubramanian"},"content":"(For all use cases below, the **System** is the `BobTheBistroBoss (BTBB)` and the **Actor** is the `Home Chef`, unless specified otherwise)","lastModifiedDate":"2021-10-13"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"**Use case: UC01 Add a client**","lastModifiedDate":"2021-09-19"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"sivayogasubramanian"},"content":"1.  Home Chef chooses to add a client.","lastModifiedDate":"2021-10-13"},{"lineNumber":456,"author":{"gitId":"sivayogasubramanian"},"content":"2.  Home Chef enters details in required format.","lastModifiedDate":"2021-10-13"},{"lineNumber":457,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"3.  BTBB displays new client.","lastModifiedDate":"2021-09-19"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"* 2a. Phone number entered already exists in the system.","lastModifiedDate":"2021-09-18"},{"lineNumber":464,"author":{"gitId":"sivayogasubramanian"},"content":"    * 2a1. BTBB informs Home Chef that client already exist.","lastModifiedDate":"2021-10-13"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"* 2b. BTBB detects an error in the entered data.","lastModifiedDate":"2021-09-19"},{"lineNumber":469,"author":{"gitId":"sivayogasubramanian"},"content":"    * 2b1. BTBB informs Home Chef why addition of client failed.","lastModifiedDate":"2021-10-13"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"      Use case ends.","lastModifiedDate":"2021-09-18"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"**Use case: UC02 Find a client**","lastModifiedDate":"2021-09-19"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":475,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-18"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":477,"author":{"gitId":"sivayogasubramanian"},"content":"1.  Home Chef wants to find a client by a field.","lastModifiedDate":"2021-10-13"},{"lineNumber":478,"author":{"gitId":"sivayogasubramanian"},"content":"2.  Home Chef enters search terms in required format.","lastModifiedDate":"2021-10-13"},{"lineNumber":479,"author":{"gitId":"sivayogasubramanian"},"content":"3.  BTBB displays all clients that match the terms.","lastModifiedDate":"2021-10-13"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-09-18"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":483,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-18"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":485,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"* 2a. BTBB detects an error in the entered data.","lastModifiedDate":"2021-09-19"},{"lineNumber":486,"author":{"gitId":"sivayogasubramanian"},"content":"    * 2a1. BTBB informs Home Chef why finding a client failed.","lastModifiedDate":"2021-10-13"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":488,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"      Use case ends.","lastModifiedDate":"2021-09-18"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":490,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"**Use case: UC03 Delete a client**","lastModifiedDate":"2021-09-19"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":492,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"**MSS**","lastModifiedDate":"2021-09-18"},{"lineNumber":493,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":494,"author":{"gitId":"sivayogasubramanian"},"content":"1.  Home Chef chooses to delete a client.","lastModifiedDate":"2021-10-13"},{"lineNumber":495,"author":{"gitId":"sivayogasubramanian"},"content":"2.  Home Chef enter details to delete a client.","lastModifiedDate":"2021-10-13"},{"lineNumber":496,"author":{"gitId":"sivayogasubramanian"},"content":"3.  BTBB informs Home Chef that client has been deleted.","lastModifiedDate":"2021-10-13"},{"lineNumber":497,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":498,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    Use case ends.","lastModifiedDate":"2021-09-18"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":500,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"**Extensions**","lastModifiedDate":"2021-09-18"},{"lineNumber":501,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":502,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"* 2a. BTBB detects an error in the entered data.","lastModifiedDate":"2021-09-19"},{"lineNumber":503,"author":{"gitId":"sivayogasubramanian"},"content":"    * 2a1. BTBB informs Home Chef why deletion of client failed.","lastModifiedDate":"2021-10-13"},{"lineNumber":504,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":505,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"      Use case ends.","lastModifiedDate":"2021-09-18"},{"lineNumber":506,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":507,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"**Use case: UC04 View all clients**","lastModifiedDate":"2021-09-19"},{"lineNumber":508,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":509,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"**MSS**","lastModifiedDate":"2021-09-18"},{"lineNumber":510,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":511,"author":{"gitId":"sivayogasubramanian"},"content":"1.  Home Chef chooses to view all clients.","lastModifiedDate":"2021-10-13"},{"lineNumber":512,"author":{"gitId":"sivayogasubramanian"},"content":"2.  Home Chef enters command to see all clients.","lastModifiedDate":"2021-10-13"},{"lineNumber":513,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"3.  BTBB displays all clients.","lastModifiedDate":"2021-09-19"},{"lineNumber":514,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":515,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    Use case ends.","lastModifiedDate":"2021-09-18"},{"lineNumber":516,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":517,"author":{"gitId":"sivayogasubramanian"},"content":"**Use case: UC05 Edit clients**","lastModifiedDate":"2021-10-13"},{"lineNumber":518,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":519,"author":{"gitId":"sivayogasubramanian"},"content":"**MSS**","lastModifiedDate":"2021-10-13"},{"lineNumber":520,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":521,"author":{"gitId":"sivayogasubramanian"},"content":"1.  Home chef chooses to edit a client’s details.","lastModifiedDate":"2021-10-13"},{"lineNumber":522,"author":{"gitId":"sivayogasubramanian"},"content":"2.  Home chef enters details in required format.","lastModifiedDate":"2021-10-13"},{"lineNumber":523,"author":{"gitId":"sivayogasubramanian"},"content":"3.  BTBB displays the edited client.","lastModifiedDate":"2021-10-13"},{"lineNumber":524,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":525,"author":{"gitId":"sivayogasubramanian"},"content":"    Use case ends.","lastModifiedDate":"2021-10-13"},{"lineNumber":526,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":527,"author":{"gitId":"sivayogasubramanian"},"content":"**Extensions**","lastModifiedDate":"2021-10-13"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":529,"author":{"gitId":"sivayogasubramanian"},"content":"* 2a. Phone number entered already exists in the system.","lastModifiedDate":"2021-10-13"},{"lineNumber":530,"author":{"gitId":"sivayogasubramanian"},"content":"    * 2a1. BTBB informs user that client already exist.","lastModifiedDate":"2021-10-13"},{"lineNumber":531,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":532,"author":{"gitId":"sivayogasubramanian"},"content":"      Use case ends.","lastModifiedDate":"2021-10-13"},{"lineNumber":533,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":534,"author":{"gitId":"sivayogasubramanian"},"content":"* 2b. BTBB detects an error in the entered data.","lastModifiedDate":"2021-10-13"},{"lineNumber":535,"author":{"gitId":"sivayogasubramanian"},"content":"    * 2a1. BTBB informs user why editing of client failed.","lastModifiedDate":"2021-10-13"},{"lineNumber":536,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":537,"author":{"gitId":"sivayogasubramanian"},"content":"      Use case ends.","lastModifiedDate":"2021-10-13"},{"lineNumber":538,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":539,"author":{"gitId":"sivayogasubramanian"},"content":"**Use case: UC06 Add ingredient**","lastModifiedDate":"2021-10-13"},{"lineNumber":540,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":541,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"**MSS**","lastModifiedDate":"2021-09-18"},{"lineNumber":542,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":543,"author":{"gitId":"sivayogasubramanian"},"content":"1.  Home chef chooses to add ingredient.","lastModifiedDate":"2021-10-13"},{"lineNumber":544,"author":{"gitId":"sivayogasubramanian"},"content":"2.  Home chef enters details in required format.","lastModifiedDate":"2021-10-13"},{"lineNumber":545,"author":{"gitId":"sivayogasubramanian"},"content":"3.  BTBB displays new ingredient.","lastModifiedDate":"2021-10-13"},{"lineNumber":546,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":547,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    Use case ends.","lastModifiedDate":"2021-09-18"},{"lineNumber":548,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":549,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"**Extensions**","lastModifiedDate":"2021-09-18"},{"lineNumber":550,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":551,"author":{"gitId":"sivayogasubramanian"},"content":"* 2a. Ingredient entered already exists in the system.","lastModifiedDate":"2021-10-13"},{"lineNumber":552,"author":{"gitId":"sivayogasubramanian"},"content":"    * 2a1. BTBB informs user that ingredient already exist.","lastModifiedDate":"2021-10-13"},{"lineNumber":553,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":554,"author":{"gitId":"sivayogasubramanian"},"content":"      Use case ends.","lastModifiedDate":"2021-10-13"},{"lineNumber":555,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":556,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"* 2a. BTBB detects an error in the entered data.","lastModifiedDate":"2021-09-19"},{"lineNumber":557,"author":{"gitId":"sivayogasubramanian"},"content":"    * 2a1. BTBB informs user why addition of ingredient failed.","lastModifiedDate":"2021-10-13"},{"lineNumber":558,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":559,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"      Use case ends.","lastModifiedDate":"2021-09-18"},{"lineNumber":560,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":561,"author":{"gitId":"sivayogasubramanian"},"content":"**Use case: UC07 Find Ingredient**","lastModifiedDate":"2021-10-13"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"**MSS**","lastModifiedDate":"2021-09-18"},{"lineNumber":564,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":565,"author":{"gitId":"sivayogasubramanian"},"content":"1.  Home chef wants to find an ingredient by a field.","lastModifiedDate":"2021-10-13"},{"lineNumber":566,"author":{"gitId":"sivayogasubramanian"},"content":"2.  Home chef enters search terms in required format.","lastModifiedDate":"2021-10-13"},{"lineNumber":567,"author":{"gitId":"sivayogasubramanian"},"content":"3.  BTBB displays all ingredient that match the format.","lastModifiedDate":"2021-10-13"},{"lineNumber":568,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":569,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    Use case ends.","lastModifiedDate":"2021-09-18"},{"lineNumber":570,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":571,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"**Extensions**","lastModifiedDate":"2021-09-18"},{"lineNumber":572,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":573,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"* 2a. BTBB detects an error in the entered data.","lastModifiedDate":"2021-09-19"},{"lineNumber":574,"author":{"gitId":"sivayogasubramanian"},"content":"    * 2a1. BTBB informs user why finding an ingredient failed.","lastModifiedDate":"2021-10-13"},{"lineNumber":575,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":576,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    Use case ends.","lastModifiedDate":"2021-09-18"},{"lineNumber":577,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":578,"author":{"gitId":"sivayogasubramanian"},"content":"**Use case: UC08 Delete an Ingredient**","lastModifiedDate":"2021-10-13"},{"lineNumber":579,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":580,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"**MSS**","lastModifiedDate":"2021-09-18"},{"lineNumber":581,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":582,"author":{"gitId":"sivayogasubramanian"},"content":"1.  Home chef chooses to delete a ingredient.","lastModifiedDate":"2021-10-13"},{"lineNumber":583,"author":{"gitId":"sivayogasubramanian"},"content":"2.  Home chef enters details in required format.","lastModifiedDate":"2021-10-13"},{"lineNumber":584,"author":{"gitId":"sivayogasubramanian"},"content":"3.  BTBB displays deleted ingredient.","lastModifiedDate":"2021-10-13"},{"lineNumber":585,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":586,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    Use case ends.","lastModifiedDate":"2021-09-18"},{"lineNumber":587,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":588,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"**Extensions**","lastModifiedDate":"2021-09-18"},{"lineNumber":589,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":590,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"* 2a. BTBB detects an error in the entered data.","lastModifiedDate":"2021-09-19"},{"lineNumber":591,"author":{"gitId":"sivayogasubramanian"},"content":"    * 2a1. BTBB informs user why deletion of ingredient failed.","lastModifiedDate":"2021-10-13"},{"lineNumber":592,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":593,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"      Use case ends.","lastModifiedDate":"2021-09-18"},{"lineNumber":594,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":595,"author":{"gitId":"sivayogasubramanian"},"content":"**Use case: UC09 View all ingredients**","lastModifiedDate":"2021-10-13"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"**MSS**","lastModifiedDate":"2021-09-18"},{"lineNumber":598,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":599,"author":{"gitId":"sivayogasubramanian"},"content":"1.  Home chef chooses to view all ingredients.","lastModifiedDate":"2021-10-13"},{"lineNumber":600,"author":{"gitId":"sivayogasubramanian"},"content":"2.  Home chef enters command to see all ingredients.","lastModifiedDate":"2021-10-13"},{"lineNumber":601,"author":{"gitId":"sivayogasubramanian"},"content":"3.  BTBB displays all ingredients.","lastModifiedDate":"2021-10-13"},{"lineNumber":602,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":603,"author":{"gitId":"sivayogasubramanian"},"content":"    Use case ends.","lastModifiedDate":"2021-10-13"},{"lineNumber":604,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":605,"author":{"gitId":"sivayogasubramanian"},"content":"**Use case: UC10 Edit Ingredient**","lastModifiedDate":"2021-10-13"},{"lineNumber":606,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":607,"author":{"gitId":"sivayogasubramanian"},"content":"**MSS**","lastModifiedDate":"2021-10-13"},{"lineNumber":608,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":609,"author":{"gitId":"sivayogasubramanian"},"content":"1. Home chef chooses to edit an ingredient.","lastModifiedDate":"2021-10-13"},{"lineNumber":610,"author":{"gitId":"sivayogasubramanian"},"content":"2. Home chef enters details in required format.","lastModifiedDate":"2021-10-13"},{"lineNumber":611,"author":{"gitId":"sivayogasubramanian"},"content":"3. BTBB displays the edited ingredient.","lastModifiedDate":"2021-10-13"},{"lineNumber":612,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":613,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    Use case ends.","lastModifiedDate":"2021-09-18"},{"lineNumber":614,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":615,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"**Extensions**","lastModifiedDate":"2021-09-18"},{"lineNumber":616,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":617,"author":{"gitId":"sivayogasubramanian"},"content":"* 2a. Ingredient entered already exists in the system.","lastModifiedDate":"2021-10-13"},{"lineNumber":618,"author":{"gitId":"sivayogasubramanian"},"content":"    * 2a1. BTBB informs user that ingredient already exist.","lastModifiedDate":"2021-10-13"},{"lineNumber":619,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":620,"author":{"gitId":"sivayogasubramanian"},"content":"      Use case ends.","lastModifiedDate":"2021-10-13"},{"lineNumber":621,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":622,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"* 2a. BTBB detects an error in the entered data.","lastModifiedDate":"2021-09-19"},{"lineNumber":623,"author":{"gitId":"sivayogasubramanian"},"content":"    * 2a1. BTBB informs user why editing of ingredient failed.","lastModifiedDate":"2021-10-13"},{"lineNumber":624,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":625,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"      Use case ends.","lastModifiedDate":"2021-09-18"},{"lineNumber":626,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":627,"author":{"gitId":"sivayogasubramanian"},"content":"**Use case: UC11 Add Order**","lastModifiedDate":"2021-10-13"},{"lineNumber":628,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":629,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"**MSS**","lastModifiedDate":"2021-09-18"},{"lineNumber":630,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":631,"author":{"gitId":"sivayogasubramanian"},"content":"1. Home chef chooses to add order.","lastModifiedDate":"2021-10-13"},{"lineNumber":632,"author":{"gitId":"sivayogasubramanian"},"content":"2. Home chef enters details in required format.","lastModifiedDate":"2021-10-13"},{"lineNumber":633,"author":{"gitId":"sivayogasubramanian"},"content":"3. BTBB displays new order.","lastModifiedDate":"2021-10-13"},{"lineNumber":634,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":635,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    Use case ends.","lastModifiedDate":"2021-09-18"},{"lineNumber":636,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":637,"author":{"gitId":"sivayogasubramanian"},"content":"**Extensions**","lastModifiedDate":"2021-10-13"},{"lineNumber":638,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":639,"author":{"gitId":"sivayogasubramanian"},"content":"* 2a. BTBB detects an error in the entered data.","lastModifiedDate":"2021-10-13"},{"lineNumber":640,"author":{"gitId":"sivayogasubramanian"},"content":"    * 2a1. BTBB informs user why addition of order failed.","lastModifiedDate":"2021-10-13"},{"lineNumber":641,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":642,"author":{"gitId":"sivayogasubramanian"},"content":"    Use case ends.","lastModifiedDate":"2021-10-13"},{"lineNumber":643,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":644,"author":{"gitId":"sivayogasubramanian"},"content":"**Use case: UC12 Delete Order**","lastModifiedDate":"2021-10-13"},{"lineNumber":645,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":646,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"**MSS**","lastModifiedDate":"2021-09-18"},{"lineNumber":647,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":648,"author":{"gitId":"sivayogasubramanian"},"content":"1. Home chef chooses to delete an order.","lastModifiedDate":"2021-10-13"},{"lineNumber":649,"author":{"gitId":"sivayogasubramanian"},"content":"2. Home chef enters details in required format.","lastModifiedDate":"2021-10-13"},{"lineNumber":650,"author":{"gitId":"sivayogasubramanian"},"content":"3. BTBB displays deleted order.","lastModifiedDate":"2021-10-13"},{"lineNumber":651,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":652,"author":{"gitId":"sivayogasubramanian"},"content":"   Use case ends.","lastModifiedDate":"2021-10-13"},{"lineNumber":653,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":654,"author":{"gitId":"sivayogasubramanian"},"content":"**Extensions**","lastModifiedDate":"2021-10-13"},{"lineNumber":655,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":656,"author":{"gitId":"sivayogasubramanian"},"content":"* 2a. BTBB detects an error in the entered data.","lastModifiedDate":"2021-10-13"},{"lineNumber":657,"author":{"gitId":"sivayogasubramanian"},"content":"    * 2a1. BTBB informs user why deletion of order failed.","lastModifiedDate":"2021-10-13"},{"lineNumber":658,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":659,"author":{"gitId":"sivayogasubramanian"},"content":"      Use case ends.","lastModifiedDate":"2021-10-13"},{"lineNumber":660,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":661,"author":{"gitId":"sivayogasubramanian"},"content":"**Use case: UC13 Find order**","lastModifiedDate":"2021-10-13"},{"lineNumber":662,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":663,"author":{"gitId":"sivayogasubramanian"},"content":"**MSS**","lastModifiedDate":"2021-10-13"},{"lineNumber":664,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":665,"author":{"gitId":"sivayogasubramanian"},"content":"1. Home chef chooses to find an order.","lastModifiedDate":"2021-10-13"},{"lineNumber":666,"author":{"gitId":"sivayogasubramanian"},"content":"2. Home chef enters details in required format.","lastModifiedDate":"2021-10-13"},{"lineNumber":667,"author":{"gitId":"sivayogasubramanian"},"content":"3. BTBB displays all orders that match the format.","lastModifiedDate":"2021-10-13"},{"lineNumber":668,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":669,"author":{"gitId":"sivayogasubramanian"},"content":"   Use case ends.","lastModifiedDate":"2021-10-13"},{"lineNumber":670,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":671,"author":{"gitId":"sivayogasubramanian"},"content":"**Extensions**","lastModifiedDate":"2021-10-13"},{"lineNumber":672,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":673,"author":{"gitId":"sivayogasubramanian"},"content":"* 2a. BTBB detects an error in the entered data.","lastModifiedDate":"2021-10-13"},{"lineNumber":674,"author":{"gitId":"sivayogasubramanian"},"content":"    * 2a1. BTBB informs user why finding an order failed.","lastModifiedDate":"2021-10-13"},{"lineNumber":675,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":676,"author":{"gitId":"sivayogasubramanian"},"content":"      Use case ends.","lastModifiedDate":"2021-10-13"},{"lineNumber":677,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":678,"author":{"gitId":"sivayogasubramanian"},"content":"**Use case: UC14 Mark order as done**","lastModifiedDate":"2021-10-13"},{"lineNumber":679,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":680,"author":{"gitId":"sivayogasubramanian"},"content":"**MSS**","lastModifiedDate":"2021-10-13"},{"lineNumber":681,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":682,"author":{"gitId":"sivayogasubramanian"},"content":"1. Home chef chooses to mark an order as done.","lastModifiedDate":"2021-10-13"},{"lineNumber":683,"author":{"gitId":"sivayogasubramanian"},"content":"2. BTBB displays order as done.","lastModifiedDate":"2021-10-13"},{"lineNumber":684,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":685,"author":{"gitId":"sivayogasubramanian"},"content":"   Use case ends.","lastModifiedDate":"2021-10-13"},{"lineNumber":686,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":687,"author":{"gitId":"sivayogasubramanian"},"content":"**Extensions**","lastModifiedDate":"2021-10-13"},{"lineNumber":688,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":689,"author":{"gitId":"sivayogasubramanian"},"content":"* 2a. BTBB detects an error in the entered data.","lastModifiedDate":"2021-10-13"},{"lineNumber":690,"author":{"gitId":"sivayogasubramanian"},"content":"    * 2a1. BTBB informs user why marking an order as done failed.","lastModifiedDate":"2021-10-13"},{"lineNumber":691,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":692,"author":{"gitId":"sivayogasubramanian"},"content":"      Use case ends.","lastModifiedDate":"2021-10-13"},{"lineNumber":693,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":694,"author":{"gitId":"sivayogasubramanian"},"content":"**Use case: UC15 Mark order as undone**","lastModifiedDate":"2021-10-13"},{"lineNumber":695,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":696,"author":{"gitId":"sivayogasubramanian"},"content":"**MSS**","lastModifiedDate":"2021-10-13"},{"lineNumber":697,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":698,"author":{"gitId":"sivayogasubramanian"},"content":"1. Home chef chooses to mark an order as undone.","lastModifiedDate":"2021-10-13"},{"lineNumber":699,"author":{"gitId":"sivayogasubramanian"},"content":"2. BTBB displays order as undone.","lastModifiedDate":"2021-10-13"},{"lineNumber":700,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":701,"author":{"gitId":"sivayogasubramanian"},"content":"   Use case ends.","lastModifiedDate":"2021-10-13"},{"lineNumber":702,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":703,"author":{"gitId":"sivayogasubramanian"},"content":"**Extensions**","lastModifiedDate":"2021-10-13"},{"lineNumber":704,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":705,"author":{"gitId":"sivayogasubramanian"},"content":"* 2a. BTBB detects an error in the entered data.","lastModifiedDate":"2021-10-13"},{"lineNumber":706,"author":{"gitId":"sivayogasubramanian"},"content":"    * 2a1. BTBB informs user why marking an order as undone failed.","lastModifiedDate":"2021-10-13"},{"lineNumber":707,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":708,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"      Use case ends.","lastModifiedDate":"2021-09-18"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"EuniceSim142"},"content":"1. Usability Requirements:","lastModifiedDate":"2021-09-18"},{"lineNumber":713,"author":{"gitId":"EuniceSim142"},"content":"    * Should work on systems with Java 11 and above.","lastModifiedDate":"2021-09-19"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"EuniceSim142"},"content":"2. Business/Domain Requirements:","lastModifiedDate":"2021-09-18"},{"lineNumber":716,"author":{"gitId":"sivayogasubramanian"},"content":"    * All quantities in the application are from 0 to 40000.","lastModifiedDate":"2021-10-13"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"EuniceSim142"},"content":"3. Data Requirements:","lastModifiedDate":"2021-09-18"},{"lineNumber":719,"author":{"gitId":"zognin"},"content":"    * Data of clients and orders should persist after the app closes.","lastModifiedDate":"2021-10-01"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"EuniceSim142"},"content":"* **BTBB**: BobTheBodyBuilder","lastModifiedDate":"2021-09-18"},{"lineNumber":726,"author":{"gitId":"EuniceSim142"},"content":"* **Client**: A member of the gym","lastModifiedDate":"2021-09-18"},{"lineNumber":727,"author":{"gitId":"EuniceSim142"},"content":"* **Booking**: A fixed time period (of 1 hour 30 minutes) that a client can use the gym’s facilities","lastModifiedDate":"2021-09-19"},{"lineNumber":728,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":729,"author":{"gitId":"EuniceSim142"},"content":"#### Prefix Glossary","lastModifiedDate":"2021-09-18"},{"lineNumber":730,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":731,"author":{"gitId":"EuniceSim142"},"content":"| Prefix | Parameter                | Associated with |","lastModifiedDate":"2021-09-18"},{"lineNumber":732,"author":{"gitId":"sivayogasubramanian"},"content":"|:------:|:------------------------:|:---------------:|","lastModifiedDate":"2021-10-13"},{"lineNumber":733,"author":{"gitId":"sivayogasubramanian"},"content":"| c/     | CLIENT_INDEX             | Client          |","lastModifiedDate":"2021-10-13"},{"lineNumber":734,"author":{"gitId":"sivayogasubramanian"},"content":"| ca/    | CLIENT_ADDRESS           | Client          |","lastModifiedDate":"2021-10-13"},{"lineNumber":735,"author":{"gitId":"sivayogasubramanian"},"content":"| ce/    | CLIENT_EMAIL             | Client          |","lastModifiedDate":"2021-10-13"},{"lineNumber":736,"author":{"gitId":"sivayogasubramanian"},"content":"| cn/    | CLIENT_NAME              | Client          |","lastModifiedDate":"2021-10-13"},{"lineNumber":737,"author":{"gitId":"sivayogasubramanian"},"content":"| cp/    | CLIENT_PHONE             | Client          |","lastModifiedDate":"2021-10-13"},{"lineNumber":738,"author":{"gitId":"sivayogasubramanian"},"content":"| i/     | INGREDIENT_INDEX         | Ingredient      |","lastModifiedDate":"2021-10-13"},{"lineNumber":739,"author":{"gitId":"sivayogasubramanian"},"content":"| in/    | INGREDIENT_NAME          | Ingredient      |","lastModifiedDate":"2021-10-13"},{"lineNumber":740,"author":{"gitId":"sivayogasubramanian"},"content":"| iq/    | INGREDIENT_QUANTITY      | Ingredient      |","lastModifiedDate":"2021-10-13"},{"lineNumber":741,"author":{"gitId":"sivayogasubramanian"},"content":"| iqf/   | INGREDIENT_QUANTITY_FROM | Ingredient      |","lastModifiedDate":"2021-10-13"},{"lineNumber":742,"author":{"gitId":"sivayogasubramanian"},"content":"| iqt/   | INGREDIENT_QUANTITY_TO   | Ingredient      |","lastModifiedDate":"2021-10-13"},{"lineNumber":743,"author":{"gitId":"sivayogasubramanian"},"content":"| iu/    | INGREDIENT_UNIT          | Ingredient      |","lastModifiedDate":"2021-10-13"},{"lineNumber":744,"author":{"gitId":"sivayogasubramanian"},"content":"| od/    | ORDER_DEADLINE           | Order           |","lastModifiedDate":"2021-10-13"},{"lineNumber":745,"author":{"gitId":"sivayogasubramanian"},"content":"| of/    | ORDER_FINISHED           | Order           |","lastModifiedDate":"2021-10-13"},{"lineNumber":746,"author":{"gitId":"sivayogasubramanian"},"content":"| op/    | ORDER_PRICE              | Order           |","lastModifiedDate":"2021-10-13"},{"lineNumber":747,"author":{"gitId":"sivayogasubramanian"},"content":"| oq/    | ORDER_QUANTITY           | Order           |","lastModifiedDate":"2021-10-13"},{"lineNumber":748,"author":{"gitId":"sivayogasubramanian"},"content":"| ri/    | RECIPE_INGREDIENT        | Recipe          |","lastModifiedDate":"2021-10-13"},{"lineNumber":749,"author":{"gitId":"sivayogasubramanian"},"content":"| rn/    | RECIPE_NAME              | Recipe          |","lastModifiedDate":"2021-10-13"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"EuniceSim142":10,"Imranr2":53,"zognin":124,"-":360,"Manoharan-Ajay-Anand":84,"sivayogasubramanian":171}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"   1. Run the `ay2122s1_cs2103t_w16_2.btbb.Main` and try a few commands.","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"-":54,"sivayogasubramanian":1}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"   e.g. `ay2122s1_cs2103t_w16_2.btbb.commons.StringUtilTest`","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"   e.g. `ay2122s1_cs2103t_w16_2.btbb.storage.StorageManagerTest`","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"   e.g. `ay2122s1_cs2103t_w16_2.btbb.logic.LogicManagerTest`","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"-":33,"sivayogasubramanian":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"## 1. Introduction","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Imranr2"},"content":"### 1.1 About BobTheBistroBoss","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"BobTheBodyBuilder (BTBB) is a **desktop application for private gym managers to manage clients and orders, optimized for use via a command line interface (CLI).**","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"Keeping track of information from memberships to order records for contact tracing can be a hassle if you are a one-man show.","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":"That\u0027s why, our application centralizes all data in one place, and even comes with a Graphical User Interface (GUI) to easily view and manoeuvre through client and order details.","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":"If you are looking to keep your physique, down to your finger muscles, in shape, give BTBB a try!","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":"## 2. Quick start","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"### 2.1 Installation","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Imranr2"},"content":"1. Download the jar file of the application.","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"1. Copy the file to an empty folder. This will be the _home folder_ for BTBB.","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"1. Double-click the file to start the application.","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"   * **`list client`** : Lists all clients.","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"### 2.2 Layout","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"The user interface of BobTheBistroBoss is divided into 2 tabs.","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"#### 2.2.1 Home Tab","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"Displays a list of all clients and orders, with the following information:","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"* Client: Name, Phone number, Email, Address","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"* Order: Client name, Phone number, Address, Recipe name, Recipe ingredients, Recipe price, Order deadline, Order quantity, Done status of Order.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"![layout1](images/layout1.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"#### 2.2.2 Ingredient Tab","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"Displays a list of all ingredients, with the following information:","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"* Ingredient: Name, Quantity, Qnit","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"![layout2](images/layout2.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Imranr2"},"content":"## 3. Features","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"Imranr2"},"content":"  e.g. in `add-o cn/CLIENT_NAME`, `CLIENT_NAME` is a parameter which can be used as `add-o cn/John Doe`.","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"Imranr2"},"content":"  e.g `cn/CLIENT_NAME [ri/RECIPE_INGREDIENTS]` can be used as `cn/John Doe ri/Garlic-1-whole` or as `cn/John Doe`.","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"Imranr2"},"content":"  e.g. if the command specifies `cn/CLIENT_NAME cp/CLIENT_PHONE`, `cp/CLIENT_PHONE cn/CLIENT_NAME` is also acceptable.","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"Imranr2"},"content":"  e.g. if you specify `cp/12341234 cp/56785678`, only `cp/56785678` will be taken.","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, and `list client`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":77,"author":{"gitId":"Imranr2"},"content":"* The format of all date fields is `dd-MM-yyyy`.","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"Imranr2"},"content":"  e.g. 21-10-1998 is 21 October 1998.","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"* The format of all time fields is `HHmm`.\u003cbr\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"  e.g. 1340 is 1.40p.m.","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"Imranr2"},"content":"### 3.1 View help : `help`","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Imranr2"},"content":"Displays all commands and their format.","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"Imranr2"},"content":"### 3.2 Switch Tabs: `tab`","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"Imranr2"},"content":"Switches to the specified tab.","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"Imranr2"},"content":"Format: `tab INDEX`","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Imranr2"},"content":"* Switches to the tab corresponding to the specified INDEX. INDEX must be 1 or 2.","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"Imranr2"},"content":"  * Index 1 corresponds to the Home tab.","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"Imranr2"},"content":"  * Index 2 corresponds to the Inventory tab.","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"Imranr2"},"content":"Example:","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"Imranr2"},"content":"* `tab 1` switches to the Home tab.","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"Imranr2"},"content":"### 3.3 Client","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"EuniceSim142"},"content":"#### 3.3.1 Adding a client: `add-c`","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"sivayogasubramanian"},"content":"Adds a client to the application.","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"EuniceSim142"},"content":"Format: `add-c cn/NAME cp/PHONE_NUMBER ce/EMAIL ca/ADDRESS`","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"**:bookmark: Note:**\u003cbr\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"EuniceSim142"},"content":"* \u003ccode\u003ecp/PHONE_NUMBER\u003c/code\u003e is unique to a client. Each phone number in the system must belong to exactly one client.","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"* Please refer to the examples below.","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"**Examples:**","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"EuniceSim142"},"content":"* `add-c cn/Alex Yeoh cp/89653101 ce/alexyeoh@gmail.com ca/Choa Chu Kang St 62 Blk 123 #12-34` Adds a client with the following attributes:","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"EuniceSim142"},"content":"  * Name: Alex Yeoh","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"EuniceSim142"},"content":"  * Phone number: 89653101","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"EuniceSim142"},"content":"  * Email: \u0027alexyeoh@gmail.com\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"EuniceSim142"},"content":"  * Address: \u0027Choa Chu Kang St 62 Blk 123 #12-34\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"EuniceSim142"},"content":"#### 3.3.2 Deleting a client: `delete-c`","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"sivayogasubramanian"},"content":"Deletes a client from the application.","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"EuniceSim142"},"content":"Format: `delete-c INDEX`","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"sivayogasubramanian"},"content":"**Examples:**","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"EuniceSim142"},"content":"* `delete-c 1` Deletes the client at index 1 in the client list currently shown.","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"EuniceSim142"},"content":"#### 3.3.3 Editing clients: `edit-c`","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"EuniceSim142"},"content":"Edits an existing client in the application.","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"EuniceSim142"},"content":"Format: `edit-c INDEX [cn/NAME] [cp/PHONE_NUMBER] [ce/EMAIL] [ca/ADDRESS]`","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"EuniceSim142"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"EuniceSim142"},"content":"**:bookmark: Note:**\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"EuniceSim142"},"content":"* `INDEX` allows you to choose which client to edit by specifying its position in the currently displayed client list.","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"EuniceSim142"},"content":"* `[cn/CLIENT_NAME], [cp/CLIENT_PHONE], [ce/EMAIL], [ca/CLIENT_ADDRESS]` allows you to specify the client information to update. None of","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"EuniceSim142"},"content":"  them are mandatory, but at least one must be specified.","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"EuniceSim142"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"EuniceSim142"},"content":"**Examples:**","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"EuniceSim142"},"content":"*  `edit-c 3 cn/Amy ce/Amy1234@gmail.com` Edits the third client in currently shown client list by changing the name to \u0027Amy\u0027 and the email to \u0027Amy1234@gmail.com\u0027.","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"EuniceSim142"},"content":"#### 3.3.4 Finding clients by keywords: `find-c`","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"EuniceSim142"},"content":"Finds client(s) whose attribute(s) match the keyword(s).","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"EuniceSim142"},"content":"Format: `find-c [cn/NAME] [cp/PHONE_NUMBER] [ce/EMAIL] [ca/ADDRESS]`","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"zognin"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":166,"author":{"gitId":"zognin"},"content":"**:bookmark: Note:**\u003cbr\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"sivayogasubramanian"},"content":"* The search is case-insensitive.","lastModifiedDate":"2021-09-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"zognin"},"content":"* There must be 1 or more search arguments.","lastModifiedDate":"2021-09-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"EuniceSim142"},"content":"* Multiple search keywords can be specified for each field. \u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"EuniceSim142"},"content":"  e.g. \u003ccode\u003efind-c cn/Alex Brian\u003c/code\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"zognin"},"content":"* Partial search will be allowed. \u003cbr\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":176,"author":{"gitId":"EuniceSim142"},"content":"  e.g. \u003ccode\u003efind-c cn/Al\u003c/code\u003e can show orders for clients with names like Alice and Alex.","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"EuniceSim142"},"content":"* It will find clients that match at least one keyword, for each prefix. \u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"EuniceSim142"},"content":"  e.g. \u003ccode\u003efind-c cn/Al Be cp/34 22312 \u003c/code\u003e can show all of these combinations of clients: \u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"EuniceSim142"},"content":"  * client names containing \u0027Al\u0027 with phone numbers containing \u002734\u0027.","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"EuniceSim142"},"content":"  * client names containing \u0027Al\u0027 with phone numbers containing \u002722312\u0027.","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"EuniceSim142"},"content":"  * client names containing \u0027Be\u0027 with phone numbers containing \u002734\u0027.","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"EuniceSim142"},"content":"  * client names containing \u0027Be\u0027 with phone numbers containing \u002722312\u0027.","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"EuniceSim142"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"EuniceSim142"},"content":"#### 3.3.5 Listing all clients: `list-c`","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"EuniceSim142"},"content":"Lists all clients in the application.","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"EuniceSim142"},"content":"Format: `list-c`","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"EuniceSim142"},"content":"### 3.4 Ingredient","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"EuniceSim142"},"content":"#### 3.4.1 Adding an ingredient: `add-i`","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"EuniceSim142"},"content":"Adds an ingredient to the application.","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"EuniceSim142"},"content":"Format: `add-i in/INGREDIENT_NAME iq/INGREDIENT_QUANTITY iu/INGREDIENT_UNIT`","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"EuniceSim142"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"EuniceSim142"},"content":"**:bookmark: Note:**\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"EuniceSim142"},"content":"* INGREDIENT_QUANTITY must be positive, and the largest possible input is 40000.","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":207,"author":{"gitId":"EuniceSim142"},"content":"* Please refer to the examples below.","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":209,"author":{"gitId":"zognin"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"sivayogasubramanian"},"content":"**Examples:**","lastModifiedDate":"2021-09-19"},{"lineNumber":212,"author":{"gitId":"EuniceSim142"},"content":"* `add-i in/White Rice iq/4000 iu/g` adds 4000g of White Rice to the Inventory.","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"EuniceSim142"},"content":"#### 3.4.2 Deleting an ingredient: `delete-i`","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"EuniceSim142"},"content":"Deletes an ingredient from the application.","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"EuniceSim142"},"content":"Format: `delete-i INDEX`","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"EuniceSim142"},"content":"**Examples:**","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"EuniceSim142"},"content":"* `delete-i 1` Deletes the ingredient at index 1 in the ingredient list currently shown.","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"EuniceSim142"},"content":"#### 3.4.3 Editing ingredients: `edit-i`","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"EuniceSim142"},"content":"Edits an existing ingredient in the application.","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"EuniceSim142"},"content":"Format: `edit-i INDEX [in/NAME] [iq/QUANTITY] [iu/UNIT]`","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"EuniceSim142"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"EuniceSim142"},"content":"**:bookmark: Note:**\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"EuniceSim142"},"content":"* `INDEX` allows you to choose which ingredient to edit by specifying its position in the currently displayed ingredient list.","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"EuniceSim142"},"content":"* `[in/NAME] [iq/QUANTITY] [iu/UNIT]` allows you to specify the ingredient information to update. None of","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"EuniceSim142"},"content":"  them are mandatory, but at least one must be specified.","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"EuniceSim142"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"EuniceSim142"},"content":"**Examples:**","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"EuniceSim142"},"content":"*  `edit-i 2 in/Apple iu/whole` Edits the second ingredient in currently shown ingredient list by changing the","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"EuniceSim142"},"content":"   name to \u0027Apple\u0027 and the unit to \u0027whole\u0027.","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"EuniceSim142"},"content":"#### 3.4.4 Finding ingredients by keywords: `find-i`","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"EuniceSim142"},"content":"Finds ingredient(s) whose attribute(s) match the keyword(s).","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"EuniceSim142"},"content":"Format: `find-i [in/NAME] [iq/QUANTITY] [iqf/QUANTITY_FROM] [iqt/QUANTITY_TO] [iu/UNIT]`","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"EuniceSim142"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"EuniceSim142"},"content":"**:bookmark: Note:**\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"EuniceSim142"},"content":"* The search is case-insensitive.","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"EuniceSim142"},"content":"* There must be 1 or more search arguments.","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"EuniceSim142"},"content":"* Multiple search keywords can be specified for each field. \u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"EuniceSim142"},"content":"  e.g. \u003ccode\u003efind-i in/Kiwi Chocolate\u003c/code\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"EuniceSim142"},"content":"* Partial search will be allowed. \u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"EuniceSim142"},"content":"  e.g. \u003ccode\u003efind-i in/Ap\u003c/code\u003e can show ingredients with names like Apple and Apricot.","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"EuniceSim142"},"content":"* Ingredient Quantity:","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"EuniceSim142"},"content":"  * keyword for QUANTITY finds ingredients with quantity that is equal to QUANTITY.","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"EuniceSim142"},"content":"  * keywords for QUANTITY_FROM and QUANTITY_TO finds ingredients with quantity in the range, inclusive of QUANTITY_FROM and QUANTITY_TO.","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"EuniceSim142"},"content":"  * If keywords are given for both Quantity and both Quantity_from and Quantity_to, then found ingredients must satisfy all 3 conditions.","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"EuniceSim142"},"content":"* It will find ingredients that match at least one keyword, for each prefix. \u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"EuniceSim142"},"content":"  e.g. \u003ccode\u003efind-i in/Ap Fl iu/p k\u003c/code\u003e can show all of these combinations of ingredients: \u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"EuniceSim142"},"content":"  * ingredient names containing \u0027Ap\u0027 with units containing \u0027p\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"EuniceSim142"},"content":"  * ingredient names containing \u0027Ap\u0027 with units containing \u0027k\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"EuniceSim142"},"content":"  * ingredient names containing \u0027Fl\u0027 with units containing \u0027p\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"EuniceSim142"},"content":"  * ingredient names containing \u0027Fl\u0027 with units containing \u0027k\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"EuniceSim142"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"EuniceSim142"},"content":"#### 3.4.5 Listing all ingredients: `list-i`","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"EuniceSim142"},"content":"Lists all ingredients in the application.","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"EuniceSim142"},"content":"Format: `list-i`","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"EuniceSim142"},"content":"### 3.5 Order","lastModifiedDate":"2021-10-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":281,"author":{"gitId":"EuniceSim142"},"content":"#### 3.5.1 Adding an order: `add-o`","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":283,"author":{"gitId":"Imranr2"},"content":"Adds an order to the application.","lastModifiedDate":"2021-10-10"},{"lineNumber":284,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":285,"author":{"gitId":"Imranr2"},"content":"Format: `add-o c/CLIENT_INDEX cn/CLIENT_NAME cp/CLIENT_PHONE ca/CLIENT_ADDRESS rn/RECIPE_NAME","lastModifiedDate":"2021-10-10"},{"lineNumber":286,"author":{"gitId":"Imranr2"},"content":"[ri/RECIPE_INGREDIENTS] rp/RECIPE_PRICE od/DEADLINE [oq/ORDER_QUANTITY]`","lastModifiedDate":"2021-10-10"},{"lineNumber":287,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":288,"author":{"gitId":"sivayogasubramanian"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":289,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":290,"author":{"gitId":"sivayogasubramanian"},"content":"**:bookmark: Note:**\u003cbr\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":291,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":292,"author":{"gitId":"Imranr2"},"content":"* `c/CLIENT_INDEX` will copy over the details of the client at the given index into the order.","lastModifiedDate":"2021-10-10"},{"lineNumber":293,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":294,"author":{"gitId":"Imranr2"},"content":"* `cn/CLIENT_NAME`, `cp/CLIENT_PHONE` and `ca/CLIENT_ADDRESS` will override any details copied over by","lastModifiedDate":"2021-10-10"},{"lineNumber":295,"author":{"gitId":"Imranr2"},"content":"  `c/CLIENT_INDEX`.","lastModifiedDate":"2021-10-10"},{"lineNumber":296,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":297,"author":{"gitId":"Imranr2"},"content":"* If `c/CLIENT_INDEX` is not specified all of `cn/CLIENT_NAME`, `cp/CLIENT_PHONE`, `ca/CLIENT_ADDRESS` must be","lastModifiedDate":"2021-10-10"},{"lineNumber":298,"author":{"gitId":"Imranr2"},"content":"  specified.","lastModifiedDate":"2021-10-10"},{"lineNumber":299,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":300,"author":{"gitId":"Imranr2"},"content":"* If `cn/CLIENT_NAME`, `cp/CLIENT_PHONE`, `ca/CLIENT_ADDRESS` are all specified, `c/CLIENT_INDEX` does not need to","lastModifiedDate":"2021-10-10"},{"lineNumber":301,"author":{"gitId":"Imranr2"},"content":"  be specified.","lastModifiedDate":"2021-10-10"},{"lineNumber":302,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":303,"author":{"gitId":"Imranr2"},"content":"* Order quantity and recipe ingredients are optional. Order quantity will be set to 1 if not specified.","lastModifiedDate":"2021-10-10"},{"lineNumber":304,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":305,"author":{"gitId":"Imranr2"},"content":"* Quantity of ingredients in the inventory will decrease by the amount specified after `ri/` if it exists in the","lastModifiedDate":"2021-10-10"},{"lineNumber":306,"author":{"gitId":"Imranr2"},"content":"  inventory.","lastModifiedDate":"2021-10-10"},{"lineNumber":307,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":308,"author":{"gitId":"Imranr2"},"content":"* All orders will be uncompleted upon addition.","lastModifiedDate":"2021-10-10"},{"lineNumber":309,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":310,"author":{"gitId":"Imranr2"},"content":"* `od/DEADLINE` represents the order deadline date and time. They must follow the format specified [above](#features).","lastModifiedDate":"2021-10-10"},{"lineNumber":311,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":312,"author":{"gitId":"Imranr2"},"content":"* The format for ingredients `ri/` is `NAME-QTY-UNIT`. \u003cbr\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":313,"author":{"gitId":"Imranr2"},"content":"  e.g. Garlic-1-whole.","lastModifiedDate":"2021-10-10"},{"lineNumber":314,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":315,"author":{"gitId":"sivayogasubramanian"},"content":"* Please refer to the examples below.","lastModifiedDate":"2021-09-18"},{"lineNumber":316,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":317,"author":{"gitId":"sivayogasubramanian"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":318,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":319,"author":{"gitId":"sivayogasubramanian"},"content":"**Examples:**","lastModifiedDate":"2021-09-19"},{"lineNumber":320,"author":{"gitId":"Imranr2"},"content":"Suppose the first client in the list has the following details:","lastModifiedDate":"2021-10-10"},{"lineNumber":321,"author":{"gitId":"Imranr2"},"content":"* Name: John Doe","lastModifiedDate":"2021-10-10"},{"lineNumber":322,"author":{"gitId":"Imranr2"},"content":"* Phone: 98765432","lastModifiedDate":"2021-10-10"},{"lineNumber":323,"author":{"gitId":"Imranr2"},"content":"* Address: Happy Funland Street 12","lastModifiedDate":"2021-10-10"},{"lineNumber":324,"author":{"gitId":"Imranr2"},"content":"* Email: johndoe12@gmail.com","lastModifiedDate":"2021-10-10"},{"lineNumber":325,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":326,"author":{"gitId":"Imranr2"},"content":"* `add-o c/1 rn/Chicken Rice ri/Chicken-1-whole Rice-200-grams rp/3 od/15-11-2021 1830 oq/1` Adds an order to the","lastModifiedDate":"2021-10-10"},{"lineNumber":327,"author":{"gitId":"Imranr2"},"content":"  application where the client\u0027s name, phone and address matches the first client in the list shown above. The","lastModifiedDate":"2021-10-10"},{"lineNumber":328,"author":{"gitId":"Imranr2"},"content":"  order\u0027s recipe name and price will be chicken rice and $3 respectively. The quantity of chicken and rice will","lastModifiedDate":"2021-10-10"},{"lineNumber":329,"author":{"gitId":"Imranr2"},"content":"  decrease by 1 whole and 200 grams respectively if it exists in the inventory. The order of 1 chicken rice will be","lastModifiedDate":"2021-10-10"},{"lineNumber":330,"author":{"gitId":"Imranr2"},"content":"  scheduled to be delivered by 15 November 2021 at 1830 hrs.","lastModifiedDate":"2021-10-10"},{"lineNumber":331,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":332,"author":{"gitId":"Imranr2"},"content":"* `add-o cn/Alex cp/98765432 ca/Hogwarts Blk 68 rn/Chicken Rice ri/Chicken-1-whole Rice-200-grams rp/3 od/15-12-2021","lastModifiedDate":"2021-10-10"},{"lineNumber":333,"author":{"gitId":"Imranr2"},"content":"  1630 oq/1` Adds an order to the","lastModifiedDate":"2021-10-10"},{"lineNumber":334,"author":{"gitId":"Imranr2"},"content":"  application where the client\u0027s name, phone and address are Alex, 98765432 and Hogwarts Blk 68 respectively. The","lastModifiedDate":"2021-10-10"},{"lineNumber":335,"author":{"gitId":"Imranr2"},"content":"  order\u0027s recipe name and price will be chicken rice and $3 respectively. The quantity of chicken and rice will","lastModifiedDate":"2021-10-10"},{"lineNumber":336,"author":{"gitId":"Imranr2"},"content":"  decrease by 1 whole and 200 grams respectively if it exists in the inventory. The order of 1 chicken rice will be","lastModifiedDate":"2021-10-10"},{"lineNumber":337,"author":{"gitId":"Imranr2"},"content":"  scheduled to be delivered by 15 December 2021 at 1630 hrs.","lastModifiedDate":"2021-10-10"},{"lineNumber":338,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":339,"author":{"gitId":"EuniceSim142"},"content":"#### 3.5.2 Editing an order: `edit-o`","lastModifiedDate":"2021-10-12"},{"lineNumber":340,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":341,"author":{"gitId":"Imranr2"},"content":"Edits an order in the application.","lastModifiedDate":"2021-10-10"},{"lineNumber":342,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":343,"author":{"gitId":"Imranr2"},"content":"Format: `edit-o INDEX [c/INDEX] [cn/CLIENT_NAME] [cp/CLIENT_PHONE] [ca/CLIENT_ADDRESS] [rn/RECIPE_NAME]","lastModifiedDate":"2021-10-10"},{"lineNumber":344,"author":{"gitId":"Imranr2"},"content":"[rp/RECIPE_PRICE] [od/DEADLINE] [oq/QUANTITY]`","lastModifiedDate":"2021-10-10"},{"lineNumber":345,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":346,"author":{"gitId":"Imranr2"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":347,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":348,"author":{"gitId":"Imranr2"},"content":"**:bookmark: Note:**\u003cbr\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":349,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":350,"author":{"gitId":"Imranr2"},"content":"* `INDEX` allows you to choose which order to edit by specifying its position in the currently displayed order list.","lastModifiedDate":"2021-10-10"},{"lineNumber":351,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":352,"author":{"gitId":"Imranr2"},"content":"* `[c/INDEX], [cn/CLIENT_NAME], [cp/CLIENT_PHONE], [ca/CLIENT_ADDRESS], [rn/RECIPE_NAME],","lastModifiedDate":"2021-10-10"},{"lineNumber":353,"author":{"gitId":"Imranr2"},"content":"  [rp/RECIPE_PRICE], [od/DEADLINE], [oq/QUANTITY]` allows you to specify the order information to update. None of","lastModifiedDate":"2021-10-10"},{"lineNumber":354,"author":{"gitId":"Imranr2"},"content":"  them are mandatory, but at least one must be specified.","lastModifiedDate":"2021-10-10"},{"lineNumber":355,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":356,"author":{"gitId":"Imranr2"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":357,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":358,"author":{"gitId":"sivayogasubramanian"},"content":"**Examples:**","lastModifiedDate":"2021-09-19"},{"lineNumber":359,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":360,"author":{"gitId":"Imranr2"},"content":"* `edit-o 1 cn/David` Edits the first order in the list currently shown by changing the client\u0027s name to David.","lastModifiedDate":"2021-10-10"},{"lineNumber":361,"author":{"gitId":"Imranr2"},"content":"* `edit-o 2 cn/Carol cp/98765432` Edits the second order in the list currently shown by changing the client\u0027s name","lastModifiedDate":"2021-10-10"},{"lineNumber":362,"author":{"gitId":"Imranr2"},"content":"  to Carol and the client\u0027s phone number to 98765432.","lastModifiedDate":"2021-10-10"},{"lineNumber":363,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":364,"author":{"gitId":"EuniceSim142"},"content":"#### 3.5.3 Deleting an order: `delete-o`","lastModifiedDate":"2021-10-12"},{"lineNumber":365,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":366,"author":{"gitId":"Imranr2"},"content":"Deletes an order from the application.","lastModifiedDate":"2021-10-10"},{"lineNumber":367,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":368,"author":{"gitId":"Imranr2"},"content":"Format: `delete-o INDEX`","lastModifiedDate":"2021-10-10"},{"lineNumber":369,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":370,"author":{"gitId":"Imranr2"},"content":"**Examples:**","lastModifiedDate":"2021-10-10"},{"lineNumber":371,"author":{"gitId":"Imranr2"},"content":"* `delete-o 1` Deletes the order at index 1 in the order list currently shown.","lastModifiedDate":"2021-10-10"},{"lineNumber":372,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":373,"author":{"gitId":"EuniceSim142"},"content":"#### 3.5.4 Finding orders by keywords: `find-o`","lastModifiedDate":"2021-10-12"},{"lineNumber":374,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":375,"author":{"gitId":"Imranr2"},"content":"Find order(s) with attribute(s) that contains the keyword(s).","lastModifiedDate":"2021-10-10"},{"lineNumber":376,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":377,"author":{"gitId":"Imranr2"},"content":"Format: `find-o [cn/CLIENT_NAME] [cp/CLIENT_PHONE] [ca/CLIENT_ADDRESS] [rn/RECIPE_NAME] [od/DEADLINE] [of/YES_OR_NO]`","lastModifiedDate":"2021-10-10"},{"lineNumber":378,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":379,"author":{"gitId":"sivayogasubramanian"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":380,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":381,"author":{"gitId":"sivayogasubramanian"},"content":"**:bookmark: Note:**\u003cbr\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":382,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":383,"author":{"gitId":"sivayogasubramanian"},"content":"* The search is case-insensitive.","lastModifiedDate":"2021-09-19"},{"lineNumber":384,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":385,"author":{"gitId":"sivayogasubramanian"},"content":"* There must be 1 or more search arguments.","lastModifiedDate":"2021-09-18"},{"lineNumber":386,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":387,"author":{"gitId":"Imranr2"},"content":"* Multiple search keywords can be specified for each field. \u003cbr\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":388,"author":{"gitId":"Imranr2"},"content":"  e.g. \u003ccode\u003efind-o cn/Alex Brian\u003c/code\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":389,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":390,"author":{"gitId":"Imranr2"},"content":"* Partial search will be allowed. \u003cbr\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":391,"author":{"gitId":"Imranr2"},"content":"  e.g. \u003ccode\u003efind-o cn/Al\u003c/code\u003e can show orders for clients with names like Alice and Alex.","lastModifiedDate":"2021-10-10"},{"lineNumber":392,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":393,"author":{"gitId":"Imranr2"},"content":"* It will find orders that match at least one keyword, for each prefix.","lastModifiedDate":"2021-10-10"},{"lineNumber":394,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":395,"author":{"gitId":"Imranr2"},"content":"* `od/DEADLINE` represents the order date and time. They must follow the format specified [above](#features).","lastModifiedDate":"2021-10-10"},{"lineNumber":396,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":397,"author":{"gitId":"Imranr2"},"content":"* `of/YES_OR_NO` represents whether the order is completed.","lastModifiedDate":"2021-10-10"},{"lineNumber":398,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":399,"author":{"gitId":"sivayogasubramanian"},"content":"* Please refer to the examples below.","lastModifiedDate":"2021-09-19"},{"lineNumber":400,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":401,"author":{"gitId":"sivayogasubramanian"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":402,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":403,"author":{"gitId":"sivayogasubramanian"},"content":"**Examples:**","lastModifiedDate":"2021-09-19"},{"lineNumber":404,"author":{"gitId":"Imranr2"},"content":"* `find-o cn/al` Find orders for clients with names containing \u0027al\u0027. E.g. Alex, Alice, Al.","lastModifiedDate":"2021-10-10"},{"lineNumber":405,"author":{"gitId":"Imranr2"},"content":"* `find-o cp/91234567` Find orders for clients with 91234567 as their phone number.","lastModifiedDate":"2021-10-10"},{"lineNumber":406,"author":{"gitId":"Imranr2"},"content":"* `find-o cn/Alex David cp/9123 9231` Find orders for clients whose name and phone contains at least 1 of the","lastModifiedDate":"2021-10-10"},{"lineNumber":407,"author":{"gitId":"Imranr2"},"content":"  keywords for each prefix. Any orders with the following client details will be matched:","lastModifiedDate":"2021-10-10"},{"lineNumber":408,"author":{"gitId":"Imranr2"},"content":"  * Alex 91231100","lastModifiedDate":"2021-10-10"},{"lineNumber":409,"author":{"gitId":"Imranr2"},"content":"  * David 91234567","lastModifiedDate":"2021-10-10"},{"lineNumber":410,"author":{"gitId":"Imranr2"},"content":"  * Alex 92315697","lastModifiedDate":"2021-10-10"},{"lineNumber":411,"author":{"gitId":"Imranr2"},"content":"  * David 92316612","lastModifiedDate":"2021-10-10"},{"lineNumber":412,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":413,"author":{"gitId":"EuniceSim142"},"content":"#### 3.5.5 Listing all orders: `list-o`","lastModifiedDate":"2021-10-12"},{"lineNumber":414,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":415,"author":{"gitId":"zognin"},"content":"Lists all orders in the application.","lastModifiedDate":"2021-10-01"},{"lineNumber":416,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":417,"author":{"gitId":"Imranr2"},"content":"Format: `list-o`","lastModifiedDate":"2021-10-10"},{"lineNumber":418,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":419,"author":{"gitId":"EuniceSim142"},"content":"#### 3.5.6 Mark order as done: `done-o`","lastModifiedDate":"2021-10-12"},{"lineNumber":420,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":421,"author":{"gitId":"Imranr2"},"content":"Mark order as done once it has been delivered to the client.","lastModifiedDate":"2021-10-10"},{"lineNumber":422,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":423,"author":{"gitId":"Imranr2"},"content":"Format: `done-o INDEX`","lastModifiedDate":"2021-10-10"},{"lineNumber":424,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":425,"author":{"gitId":"Imranr2"},"content":"**Examples:**","lastModifiedDate":"2021-10-10"},{"lineNumber":426,"author":{"gitId":"Imranr2"},"content":"* `done-o 1` Marks the order at index 1 in the order list currently shown as done.","lastModifiedDate":"2021-10-10"},{"lineNumber":427,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":428,"author":{"gitId":"EuniceSim142"},"content":"#### 3.5.7 Mark order as undone: `undone-o`","lastModifiedDate":"2021-10-12"},{"lineNumber":429,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":430,"author":{"gitId":"Imranr2"},"content":"Mark order as undone.","lastModifiedDate":"2021-10-10"},{"lineNumber":431,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":432,"author":{"gitId":"Imranr2"},"content":"Format: `undone-o INDEX`","lastModifiedDate":"2021-10-10"},{"lineNumber":433,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":434,"author":{"gitId":"sivayogasubramanian"},"content":"**Examples:**","lastModifiedDate":"2021-09-19"},{"lineNumber":435,"author":{"gitId":"Imranr2"},"content":"* `undone-o 1` Marks the order at index 1 in the order list currently shown as undone.","lastModifiedDate":"2021-10-10"},{"lineNumber":436,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":437,"author":{"gitId":"EuniceSim142"},"content":"### 3.6 Exiting the program: `exit`","lastModifiedDate":"2021-10-12"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2021-10-10"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2021-10-10"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"EuniceSim142"},"content":"### 3.7 Saving the data","lastModifiedDate":"2021-10-12"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"zognin"},"content":"BTBB data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-18"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"EuniceSim142"},"content":"### 3.8 Editing the data file","lastModifiedDate":"2021-10-12"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":449,"author":{"gitId":"zognin"},"content":"BTBB data are saved as a JSON file. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-18"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":451,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":452,"author":{"gitId":"zognin"},"content":"If your changes to the data file makes its format invalid, BTBB will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-18"},{"lineNumber":453,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":455,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"Imranr2"},"content":"## 4. FAQ","lastModifiedDate":"2021-10-10"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"sivayogasubramanian"},"content":"**A**: Install the application in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous BTBB home folder.","lastModifiedDate":"2021-09-18"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"Imranr2"},"content":"## 5. Command summary","lastModifiedDate":"2021-10-10"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"sivayogasubramanian"},"content":"Action                   | Format and Examples","lastModifiedDate":"2021-09-19"},{"lineNumber":467,"author":{"gitId":"sivayogasubramanian"},"content":"-------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-19"},{"lineNumber":468,"author":{"gitId":"EuniceSim142"},"content":"**Add client**           | `add-c cn/NAME cp/PHONE_NUMBER ce/EMAIL ca/ADDRESS`","lastModifiedDate":"2021-10-12"},{"lineNumber":469,"author":{"gitId":"EuniceSim142"},"content":"**Delete client**        | `delete-c INDEX`","lastModifiedDate":"2021-10-12"},{"lineNumber":470,"author":{"gitId":"EuniceSim142"},"content":"**Edit client**          | `edit-c INDEX [cn/NAME] [cp/PHONE_NUMBER] [ce/EMAIL] [ca/ADDRESS]`","lastModifiedDate":"2021-10-12"},{"lineNumber":471,"author":{"gitId":"EuniceSim142"},"content":"**Find client**          | `find-c [cn/NAME] [cp/PHONE_NUMBER] [ce/EMAIL] [ca/ADDRESS]`","lastModifiedDate":"2021-10-12"},{"lineNumber":472,"author":{"gitId":"EuniceSim142"},"content":"**List client**          | `list-c`","lastModifiedDate":"2021-10-12"},{"lineNumber":473,"author":{"gitId":"EuniceSim142"},"content":"**Add ingredient**       | `add-i in/RECIPE_NAME iq/RECIPE_QUANTITY iu/RECIPE_UNIT`","lastModifiedDate":"2021-10-12"},{"lineNumber":474,"author":{"gitId":"EuniceSim142"},"content":"**Delete ingredient**    | `delete-i INDEX`","lastModifiedDate":"2021-10-12"},{"lineNumber":475,"author":{"gitId":"EuniceSim142"},"content":"**Edit ingredient**      | `edit-i INDEX [in/NAME] [iq/QUANTITY] [iu/UNIT]`","lastModifiedDate":"2021-10-12"},{"lineNumber":476,"author":{"gitId":"EuniceSim142"},"content":"**Find ingredient**      | `find-i [in/NAME] [iq/QUANTITY] [iqf/QUANTITY_FROM] [iqt/QUANTITY_TO] [iu/UNIT]`","lastModifiedDate":"2021-10-12"},{"lineNumber":477,"author":{"gitId":"EuniceSim142"},"content":"**List ingredient**      | `list-i`","lastModifiedDate":"2021-10-12"},{"lineNumber":478,"author":{"gitId":"Imranr2"},"content":"**Add order**            | `add-o c/CLIENT_INDEX cn/CLIENT_NAME cp/CLIENT_PHONE ca/CLIENT_ADDRESS rn/RECIPE_NAME [ri/RECIPE_INGREDIENTS] rp/RECIPE_PRICE od/DEADLINE [oq/ORDER_QUANTITY]`","lastModifiedDate":"2021-10-10"},{"lineNumber":479,"author":{"gitId":"Imranr2"},"content":"**Edit order**           | `edit-o INDEX [c/INDEX] [cn/CLIENT_NAME] [cp/CLIENT_PHONE] [ca/CLIENT_ADDRESS] [rn/RECIPE_NAME] [rp/RECIPE_PRICE] [od/DEADLINE] [oq/QUANTITY]`","lastModifiedDate":"2021-10-10"},{"lineNumber":480,"author":{"gitId":"Imranr2"},"content":"**Delete order**         | `delete-o INDEX`","lastModifiedDate":"2021-10-10"},{"lineNumber":481,"author":{"gitId":"Imranr2"},"content":"**Find order**           | `find-o [cn/CLIENT_NAME] [cp/CLIENT_PHONE] [ca/CLIENT_ADDRESS] [rn/RECIPE_NAME] [od/DEADLINE] [of/YES_OR_NO]`","lastModifiedDate":"2021-10-10"},{"lineNumber":482,"author":{"gitId":"Imranr2"},"content":"**List order**           | `list-o`","lastModifiedDate":"2021-10-10"},{"lineNumber":483,"author":{"gitId":"Imranr2"},"content":"**Mark order as done**   | `done-o INDEX`","lastModifiedDate":"2021-10-10"},{"lineNumber":484,"author":{"gitId":"Imranr2"},"content":"**Mark order as undone** | `undone-o INDEX`","lastModifiedDate":"2021-10-10"},{"lineNumber":485,"author":{"gitId":"-"},"content":"**Help**                 | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"Imranr2"},"content":"**Tab**                  | `tab INDEX`","lastModifiedDate":"2021-10-10"},{"lineNumber":487,"author":{"gitId":"Imranr2"},"content":"**Exit**                 | `exit`","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"EuniceSim142":151,"Imranr2":138,"zognin":19,"-":111,"sivayogasubramanian":68}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"title: BobTheBistroBoss","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W16-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W16-2/tp/actions)","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W16-2/tp/branch/master/graph/badge.svg?token\u003dPQVA8CSXQ8)](https://codecov.io/gh/AY2122S1-CS2103T-W16-2/tp)","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"BobTheBistroBoss (BTBB) is a **desktop application for home chefs to manage their orders and inventory,","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Imranr2"},"content":"optimized for use via a command line interface (CLI)**.","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"* If you are interested in using BBTB, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"* If you are interested about developing BBTB, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Imranr2":6,"zognin":2,"-":13}},{"path":"docs/team/eunicesim142.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"title: Eunice\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"### Project: BobTheBodyBuilder","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"BobTheBodyBuilder (BTBB) is a **desktop application for private gym managers to manage clients and orders, optimized for use via a command line interface (CLI).**","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"It has a GUI (Graphical User Interface) created with JavaFX. It is written in Java, and has about ?? kLoC.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    * What it does:","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    * Justification:","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"    * Highlights:","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    * Credits:","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"* **Project management**:","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    * User Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"* **Community**:","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"* **Tools**:","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"EuniceSim142":35,"zognin":1}},{"path":"docs/team/imranr2.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"title: Imran\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"### Project: BobTheBodyBuilder","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"BobTheBodyBuilder (BTBB) is a **desktop application for private gym managers to manage clients and orders, optimized for use via a command line interface (CLI).**","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"It has a GUI (Graphical User Interface) created with JavaFX. It is written in Java, and has about ?? kLoC.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    * What it does:","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    * Justification:","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"    * Highlights:","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    * Credits:","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"* **Project management**:","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    * User Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"* **Community**:","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"* **Tools**:","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"EuniceSim142":35,"zognin":1}},{"path":"docs/team/manoharan-ajay-anand.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"title: Ajay\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"### Project: BobTheBodyBuilder","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"BobTheBodyBuilder (BTBB) is a **desktop application for private gym managers to manage clients and orders, optimized for use via a command line interface (CLI).**","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"It has a GUI (Graphical User Interface) created with JavaFX. It is written in Java, and has about ?? kLoC.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    * What it does:","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    * Justification:","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"    * Highlights:","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    * Credits:","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"* **Project management**:","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    * User Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"* **Community**:","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"* **Tools**:","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"EuniceSim142":35,"zognin":1}},{"path":"docs/team/sivayogasubramanian.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"title: Sivayogasubramanian\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"### Project: BobTheBodyBuilder","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"BobTheBodyBuilder (BTBB) is a **desktop application for private gym managers to manage clients and orders, optimized for use via a command line interface (CLI).**","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"It has a GUI (Graphical User Interface) created with JavaFX. It is written in Java, and has about ?? kLoC.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    * What it does:","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    * Justification:","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"    * Highlights:","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    * Credits:","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"* **Project management**:","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    * User Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"* **Community**:","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"* **Tools**:","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"EuniceSim142":35,"zognin":1}},{"path":"docs/team/zognin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"title: Geng Ning\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"### Project: BobTheBodyBuilder","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"BobTheBodyBuilder (BTBB) is a **desktop application for private gym managers to manage clients and orders, optimized for use via a command line interface (CLI).**","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"It has a GUI (Graphical User Interface) created with JavaFX. It is written in Java, and has about ?? kLoC.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    * What it does:","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    * Justification:","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"    * Highlights:","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    * Credits:","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"* **Project management**:","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    * User Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"* **Community**:","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"* **Tools**:","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"EuniceSim142":35,"zognin":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.LogsCenter;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.util.FileUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":61,"sivayogasubramanian":3}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"-":24,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Config;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.LogsCenter;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Version;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.util.ConfigUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.util.StringUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.DataConversionException;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.Logic;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.LogicManager;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.util.SampleDataUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.storage.AddressBookStorage;","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.storage.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.storage.StorageManager;","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.storage.UserPrefsStorage;","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiManager;","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":157,"sivayogasubramanian":25}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.core;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":60,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.core;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":77,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.core;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":111,"sivayogasubramanian":2}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.core;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX \u003d \"The client index provided is invalid\";","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"    public static final String MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX \u003d \"The ingredient index provided is invalid\";","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String MESSAGE_INVALID_ORDER_DISPLAYED_INDEX \u003d \"The order index provided is invalid\";","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_CLIENTS_LISTED_OVERVIEW \u003d \"%1$d clients listed!\";","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    public static final String MESSAGE_INGREDIENTS_LISTED_OVERVIEW \u003d \"%1$d ingredients listed!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"    public static final String MESSAGE_ORDERS_LISTED_OVERVIEW \u003d \"%1$d orders listed!\";","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EuniceSim142":2,"Imranr2":2,"zognin":1,"-":8,"sivayogasubramanian":2}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.core;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":113,"sivayogasubramanian":3}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.core.index;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.MainApp;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":39,"sivayogasubramanian":2}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":33,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Config;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.DataConversionException;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":18,"sivayogasubramanian":3}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String, String...)},","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":79,"Manoharan-Ajay-Anand":1,"sivayogasubramanian":3}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.LogsCenter;","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.DataConversionException;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":136,"sivayogasubramanian":7}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":65,"sivayogasubramanian":4}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/exception/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.exception;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":16,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/exception/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.exception;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":9,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/exception/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.exception;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/exception/NotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.exception;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"public class NotFoundException extends Exception {","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String NOT_FOUND_EXCEPTION_MESSAGE_FORMAT \u003d \"The specified %s cannot be found.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"    public NotFoundException(String notFoundItem) {","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"        super(String.format(NOT_FOUND_EXCEPTION_MESSAGE_FORMAT, notFoundItem));","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"zognin":5,"sivayogasubramanian":4}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/exception/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.exception;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":13,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.GuiSettings;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"     * @see ay2122s1_cs2103t_w16_2.btbb.model.Model#getAddressBook()","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"    /** Returns an unmodifiable view of the filtered list of clients */","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"    /** Returns an unmodifiable view of the filtered list of ingredients */","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    ObservableList\u003cIngredient\u003e getFilteredIngredientList();","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    /** Returns an unmodifiable view of the filtered list of orders */","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"EuniceSim142":2,"zognin":8,"-":40,"sivayogasubramanian":9}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.GuiSettings;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.LogsCenter;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.AddressBookParser;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.storage.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"        return model.getFilteredClientList();","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"    public ObservableList\u003cIngredient\u003e getFilteredIngredientList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"        return model.getFilteredIngredientList();","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"        return model.getFilteredOrderList();","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"EuniceSim142":2,"zognin":10,"-":69,"sivayogasubramanian":12}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":15,"sivayogasubramanian":3}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    /** Sets tab to switch to if there is one. */","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    private UiTab tabToSwitchTo;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"     * a tab to switch to,","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"     * @param feedbackToUser Feedback to show to user.","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"     * @param tabToSwitchTo Tab to switch to.","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"    public CommandResult(String feedbackToUser, UiTab tabToSwitchTo) {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"        this.tabToSwitchTo \u003d tabToSwitchTo;","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"     * Determines whether the command requires a tab switch.","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"     * @return True if there is a need to switch tab, false otherwise.","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"    public boolean isSwitchTab() {","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"        return tabToSwitchTo !\u003d null;","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"     * Gets the selected tab to switch to.","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"     * @return {@code UiTab}.","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"    public UiTab getTabToSwitchTo() {","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"        return tabToSwitchTo;","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"        boolean isSameTabToSwitchTo \u003d (tabToSwitchTo \u003d\u003d null || otherCommandResult.tabToSwitchTo \u003d\u003d null)","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"                ? tabToSwitchTo \u003d\u003d otherCommandResult.tabToSwitchTo","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"                : tabToSwitchTo.equals(otherCommandResult.tabToSwitchTo);","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"                \u0026\u0026 isSameTabToSwitchTo;","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, tabToSwitchTo);","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zognin":43,"-":66,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/client/AddClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.ClientDescriptor;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":" * Adds a client to the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"public class AddClientCommand extends Command {","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    public static final String COMMAND_WORD \u003d \"add-c\";","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client to the address book. \"","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"            + PREFIX_CLIENT_NAME + \"NAME \"","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"            + PREFIX_CLIENT_PHONE + \"PHONE \"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"            + PREFIX_CLIENT_EMAIL + \"EMAIL \"","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"            + PREFIX_CLIENT_ADDRESS + \"ADDRESS\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"            + PREFIX_CLIENT_NAME + \"John Doe \"","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"            + PREFIX_CLIENT_PHONE + \"98765432 \"","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"            + PREFIX_CLIENT_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"            + PREFIX_CLIENT_ADDRESS + \"311, Clementi Ave 2, #02-25.\";","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New client added: %1$s\";","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the address book\";","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"    private final ClientDescriptor clientDescriptor;","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"     * Creates an AddClientCommand to add the specified {@code Client}","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"    public AddClientCommand(ClientDescriptor clientDescriptor) {","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(clientDescriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"        this.clientDescriptor \u003d clientDescriptor;","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"        Client client \u003d clientDescriptor.toModelType();","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"        if (model.hasClient(client)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"        model.addClient(client);","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, client), UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"                || (other instanceof AddClientCommand // instanceof handles nulls","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 clientDescriptor.equals(((AddClientCommand) other).clientDescriptor));","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EuniceSim142":16,"zognin":15,"-":29,"sivayogasubramanian":7}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/client/DeleteClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":" * Deletes a client identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"public class DeleteClientCommand extends Command {","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    public static final String COMMAND_WORD \u003d \"delete-c\";","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"            + \": Deletes the client identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_DELETE_CLIENT_SUCCESS \u003d \"Deleted Client: %1$s\";","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"    public DeleteClientCommand(Index targetIndex) {","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"        Client clientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"            model.deleteClient(clientToDelete);","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete), UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"                || (other instanceof DeleteClientCommand // instanceof handles nulls","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteClientCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EuniceSim142":12,"zognin":8,"-":33,"sivayogasubramanian":9}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/client/EditClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.ClientDescriptor;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":" * Edits the details of an existing client in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"public class EditClientCommand extends Command {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    public static final String COMMAND_WORD \u003d \"edit-c\";","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the client identified \"","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"            + \"[\" + PREFIX_CLIENT_NAME + \"NAME] \"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"            + \"[\" + PREFIX_CLIENT_PHONE + \"PHONE] \"","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"            + \"[\" + PREFIX_CLIENT_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"            + \"[\" + PREFIX_CLIENT_ADDRESS + \"ADDRESS]\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"            + PREFIX_CLIENT_PHONE + \"91234567 \"","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"            + PREFIX_CLIENT_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_EDIT_CLIENT_SUCCESS \u003d \"Edited Client: %1$s\";","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the address book.\";","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"    private final ClientDescriptor editClientDescriptor;","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"     * @param index of the client in the filtered client list to edit","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"     * @param editClientDescriptor details to edit the client with","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"    public EditClientCommand(Index index, ClientDescriptor editClientDescriptor) {","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(editClientDescriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"        this.editClientDescriptor \u003d new ClientDescriptor(editClientDescriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"        Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"        Client editedClient \u003d editClientDescriptor.toModelTypeFrom(clientToEdit);","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"        if (!clientToEdit.isSameClient(editedClient) \u0026\u0026 model.hasClient(editedClient)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"            model.setClient(clientToEdit, editedClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"EuniceSim142"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CLIENT_SUCCESS, editedClient), UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"        if (!(other instanceof EditClientCommand)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":99,"author":{"gitId":"EuniceSim142"},"content":"        EditClientCommand e \u003d (EditClientCommand) other;","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":101,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 editClientDescriptor.equals(e.editClientDescriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"EuniceSim142":24,"zognin":17,"-":51,"sivayogasubramanian":11}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/client/FindClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollection;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":" * Finds and lists all clients in the address book whose name, phone number,","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":" * email or address matches the provided parameters.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"public class FindClientCommand extends Command {","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    public static final String COMMAND_WORD \u003d \"find-c\";","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds clients by \"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + \"name, phone number, email or address fields. \\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + \"Parameters (at least one must be provided): \"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + \"[\" + PREFIX_CLIENT_NAME + \"NAME] \"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + \"[\" + PREFIX_CLIENT_PHONE + \"PHONE] \"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + \"[\" + PREFIX_CLIENT_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + \"[\" + PREFIX_CLIENT_ADDRESS + \"ADDRESS]\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_CLIENT_NAME + \"alice\";","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"Imranr2"},"content":"    private final PredicateCollection\u003cClient\u003e predicateCollection;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"Imranr2"},"content":"    public FindClientCommand(PredicateCollection\u003cClient\u003e predicateCollection) {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        this.predicateCollection \u003d predicateCollection;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        model.updateFilteredClientList(predicateCollection);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"                String.format(Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW, model.getFilteredClientList().size()),","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"                UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"                || (other instanceof FindClientCommand // instanceof handles nulls","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                \u0026\u0026 predicateCollection.equals(((FindClientCommand) other).predicateCollection)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"EuniceSim142":2,"Imranr2":3,"zognin":5,"-":22,"Manoharan-Ajay-Anand":17,"sivayogasubramanian":5}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/client/ListClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":" * Lists all clients in the address book to the user.","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"public class ListClientCommand extends Command {","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    public static final String COMMAND_WORD \u003d \"list-c\";","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all clients\";","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"        return new CommandResult(MESSAGE_SUCCESS, UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EuniceSim142":4,"zognin":3,"-":13,"sivayogasubramanian":5}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/general/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.general;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":15,"sivayogasubramanian":4}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/general/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.general;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":18,"sivayogasubramanian":4}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/general/TabCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.general;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":" * Switches to tab identified by its index.","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"public class TabCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    public static final String COMMAND_WORD \u003d \"tab\";","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"            + \": Switches to the tab identified by the index number.\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"            + \"Parameters: INDEX (must be either 1 or 2)\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    public static final String MESSAGE_CHANGE_TAB_SUCCESS \u003d \"Changed tab to: %1$s tab\";","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    public static final String MESSAGE_INVALID_TAB_INDEX \u003d \"The tab index provided is invalid. \"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"            + \"The index can only be 1 or 2.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     * Constructs a {@code TabCommand}.","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     * @param targetIndex Target index identifying the tab to switch to.","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    public TabCommand(Index targetIndex) {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        UiTab[] tabList \u003d UiTab.values();","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d tabList.length) {","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"            throw new CommandException(MESSAGE_INVALID_TAB_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        UiTab tabToSwitchTo \u003d tabList[targetIndex.getZeroBased()];","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        return new CommandResult(String.format(MESSAGE_CHANGE_TAB_SUCCESS, tabToSwitchTo.toString()), tabToSwitchTo);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"                || (other instanceof TabCommand // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"                \u0026\u0026 targetIndex.equals(((TabCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"zognin":59}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/ingredient/AddIngredientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_NAME;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_UNIT;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.IngredientDescriptor;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":" * Adds an ingredient to the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"public class AddIngredientCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    public static final String COMMAND_WORD \u003d \"add-i\";","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an ingredient to the address book. \"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"            + PREFIX_INGREDIENT_NAME + \"NAME \"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"            + PREFIX_INGREDIENT_QUANTITY + \"QUANTITY \"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"            + PREFIX_INGREDIENT_UNIT + \"UNIT\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"            + PREFIX_INGREDIENT_NAME + \"Rice \"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"            + PREFIX_INGREDIENT_QUANTITY + \"400 \"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"            + PREFIX_INGREDIENT_UNIT + \"g\";","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New ingredient added: %1$s\";","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_DUPLICATE_INGREDIENT \u003d \"This ingredient already exists in your inventory.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"    private final IngredientDescriptor ingredientDescriptor;","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"     * Creates an AddIngredientCommand to add the specified {@code Ingredient}.","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"     * @param ingredientDescriptor given ingredient descriptor.","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"    public AddIngredientCommand(IngredientDescriptor ingredientDescriptor) {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(ingredientDescriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"        this.ingredientDescriptor \u003d ingredientDescriptor;","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"     * Executes this AddIngredientCommand and returns a CommandResult object.","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"        Ingredient ingredient \u003d ingredientDescriptor.toModelType();","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"        if (model.hasIngredient(ingredient)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INGREDIENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"        model.addIngredient(ingredient);","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, ingredient), UiTab.INVENTORY);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"                || (other instanceof AddIngredientCommand // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 ingredientDescriptor.equals(((AddIngredientCommand) other).ingredientDescriptor));","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"EuniceSim142":71,"zognin":2}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/ingredient/DeleteIngredientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":" * Deletes an ingredient identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"public class DeleteIngredientCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public static final String COMMAND_WORD \u003d \"delete-i\";","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + \": Deletes the ingredient identified by the index number used in the displayed ingredient list.\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public static final String MESSAGE_DELETE_INGREDIENT_SUCCESS \u003d \"Deleted Ingredient: %1$s\";","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public DeleteIngredientCommand(Index targetIndex) {","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        List\u003cIngredient\u003e lastShownList \u003d model.getFilteredIngredientList();","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Ingredient ingredientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            model.deleteIngredient(ingredientToDelete);","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_INGREDIENT_SUCCESS, ingredientToDelete), UiTab.INVENTORY);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                || (other instanceof DeleteIngredientCommand // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteIngredientCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Manoharan-Ajay-Anand":62}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/ingredient/EditIngredientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_NAME;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_UNIT;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.Model.PREDICATE_SHOW_ALL_INGREDIENTS;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.IngredientDescriptor;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"public class EditIngredientCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public static final String COMMAND_WORD \u003d \"edit-i\";","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the ingredient identified \"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + \"by the index number used in the displayed ingredient list.\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + \"\\t   Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + \"[\" + PREFIX_INGREDIENT_NAME + \"NAME] \"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + \"[\" + PREFIX_INGREDIENT_QUANTITY + \"QUANTITY] \"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + \"[\" + PREFIX_INGREDIENT_UNIT + \"UNIT]\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + PREFIX_INGREDIENT_NAME + \"Almonds \"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + PREFIX_INGREDIENT_QUANTITY + \"10 \";","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public static final String MESSAGE_EDIT_INGREDIENT_SUCCESS \u003d \"Edited Ingredient: %1$s\";","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public static final String MESSAGE_DUPLICATE_INGREDIENT \u003d \"This ingredient already exists in the address book.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    private final Index index;","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    private final IngredientDescriptor editIngredientDescriptor;","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @param index of the ingredient in the filtered ingredient list.","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @param editIngredientDescriptor details to edit the ingredient with.","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public EditIngredientCommand(Index index, IngredientDescriptor editIngredientDescriptor) {","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        requireAllNonNull(index, editIngredientDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        this.editIngredientDescriptor \u003d new IngredientDescriptor(editIngredientDescriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        List\u003cIngredient\u003e lastShownList \u003d model.getFilteredIngredientList();","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Ingredient ingredientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Ingredient editedIngredient \u003d editIngredientDescriptor.toModelTypeFrom(ingredientToEdit);","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        if (!ingredientToEdit.isSameIngredient(editedIngredient) \u0026\u0026 model.hasIngredient(editedIngredient)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INGREDIENT);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            model.setIngredient(ingredientToEdit, editedIngredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        model.updateFilteredIngredientList(PREDICATE_SHOW_ALL_INGREDIENTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_INGREDIENT_SUCCESS, editedIngredient), UiTab.INVENTORY);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        if (!(other instanceof EditIngredientCommand)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        EditIngredientCommand e \u003d (EditIngredientCommand) other;","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                \u0026\u0026 editIngredientDescriptor.equals(e.editIngredientDescriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Manoharan-Ajay-Anand":98}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/ingredient/FindIngredientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_NAME;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY_FROM;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY_TO;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_UNIT;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollection;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":" * Finds and lists all ingredients in the address book whose name, quantity or unit","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":" * matches the provided parameters.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"public class FindIngredientCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    public static final String COMMAND_WORD \u003d \"find-i\";","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds ingredients by \"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"            + \"name, quantity or unit fields. \\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"            + \"Parameters (at least one must be provided): \"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"            + \"[\" + PREFIX_INGREDIENT_NAME + \"NAME] \"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"            + \"[\" + PREFIX_INGREDIENT_QUANTITY + \"QUANTITY] \"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"            + \"[\" + PREFIX_INGREDIENT_QUANTITY_FROM + \"QUANTITY_FROM] \"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"            + \"[\" + PREFIX_INGREDIENT_QUANTITY_TO + \"QUANTITY_TO] \"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"            + \"[\" + PREFIX_INGREDIENT_UNIT + \"UNIT]\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"            + \"Additional Info: For \" + PREFIX_INGREDIENT_QUANTITY","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"            + \", multiple space separated quantities can be provided.\"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"            + \" If both \" + PREFIX_INGREDIENT_QUANTITY","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"            + \" and (\" + PREFIX_INGREDIENT_QUANTITY_FROM","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"            + \" or \" + PREFIX_INGREDIENT_QUANTITY_TO + \") are provided,\"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"            + \" the found ingredients must fulfill all 3 conditions.\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_INGREDIENT_NAME + \"corn\"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"            + \" \" + PREFIX_INGREDIENT_QUANTITY + \"30 20 15\";","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    private final PredicateCollection\u003cIngredient\u003e predicateCollection;","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    public FindIngredientCommand(PredicateCollection\u003cIngredient\u003e predicateCollection) {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        this.predicateCollection \u003d predicateCollection;","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"        model.updateFilteredIngredientList(predicateCollection);","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"                String.format(Messages.MESSAGE_INGREDIENTS_LISTED_OVERVIEW, model.getFilteredIngredientList().size()),","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"                UiTab.INVENTORY);","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"                || (other instanceof FindIngredientCommand // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"                \u0026\u0026 predicateCollection.equals(((FindIngredientCommand) other).predicateCollection)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"zognin":63}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/ingredient/ListIngredientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.Model.PREDICATE_SHOW_ALL_INGREDIENTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":" * Lists all ingredients in btbb to the user.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"public class ListIngredientCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    public static final String COMMAND_WORD \u003d \"list-i\";","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all ingredients\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        model.updateFilteredIngredientList(PREDICATE_SHOW_ALL_INGREDIENTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"        return new CommandResult(MESSAGE_SUCCESS, UiTab.INVENTORY);","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"zognin":25}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/AddOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_INDEX;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_DEADLINE;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_PRICE;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_QUANTITY;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_RECIPE_INGREDIENT;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_RECIPE_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.OrderDescriptor;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":" * Adds an order to the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"public class AddOrderCommand extends Command {","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    public static final String COMMAND_WORD \u003d \"add-o\";","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an order to the address book.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"            + \"[\" + PREFIX_CLIENT_INDEX + \"CLIENT_INDEX (must be a positive integer)] \"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Imranr2"},"content":"            + \"[\" + PREFIX_CLIENT_NAME + \"CLIENT_NAME] \"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Imranr2"},"content":"            + \"[\" + PREFIX_CLIENT_PHONE + \"CLIENT_PHONE] \"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"[\" + PREFIX_CLIENT_ADDRESS + \"CLIENT_ADDRESS]\\n\\t\\t\" + \"      \"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"            + PREFIX_RECIPE_NAME + \"RECIPE_NAME \"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"[\" + PREFIX_RECIPE_INGREDIENT + \"INGREDIENT_NAME-QUANTITY-UNIT, ...] \"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"            + PREFIX_ORDER_PRICE + \"ORDER_PRICE \"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"            + PREFIX_ORDER_DEADLINE + \"ORDER_DEADLINE \"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"[\" + PREFIX_ORDER_QUANTITY + \"ORDER_QUANTITY]\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"            + \"Additional Info: If CLIENT_INDEX is not present, CLIENT_NAME, CLIENT_PHONE and CLIENT_ADDRESS must be\"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"            + \" present.\" + \"\\n\\t\\t\\t\" + \"   \"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"If ORDER_QUANTITY is not present, it will be set to 1 by default.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New order added: %1$s\";","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"This order already exists in the address book\";","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"    private final OrderDescriptor orderDescriptor;","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"     * Creates an AddCommand to add the specified {@code Order}","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"    public AddOrderCommand(OrderDescriptor orderDescriptor) {","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"        requireNonNull(orderDescriptor);","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        this.orderDescriptor \u003d orderDescriptor;","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"Imranr2"},"content":"        Order order \u003d orderDescriptor.toModelType(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"        if (model.hasOrder(order)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"        order.getRecipeIngredients().getIngredients().forEach(ingredient -\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"            model.minusIngredientQuantity(ingredient, order.getQuantity());","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"        });","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        model.addOrder(order);","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, order), UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"                || (other instanceof AddOrderCommand // instanceof handles nulls","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"                \u0026\u0026 orderDescriptor.equals(((AddOrderCommand) other).orderDescriptor));","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"Imranr2":9,"zognin":53,"sivayogasubramanian":17}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/AddOrderIngredientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.AddOrderCommand.MESSAGE_DUPLICATE_ORDER;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.util.CommandUtil.makeOrderWithEditedIngredients;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_UNIT;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.IngredientDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.RecipeIngredientList;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":" * Adds an ingredient to an existing order in btbb.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"public class AddOrderIngredientCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    public static final String COMMAND_WORD \u003d \"add-oi\";","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an ingredient to the order identified \"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"            + \"by the index number used in the displayed order list.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"            + PREFIX_INGREDIENT_NAME + \"NAME \"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"            + PREFIX_INGREDIENT_QUANTITY + \"QUANTITY \"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"            + PREFIX_INGREDIENT_UNIT + \"UNIT\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"            + PREFIX_INGREDIENT_NAME + \"Rice \"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"            + PREFIX_INGREDIENT_QUANTITY + \"400 \"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"            + PREFIX_INGREDIENT_UNIT + \"g\";","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    public static final String MESSAGE_ADD_ORDER_INGREDIENT_SUCCESS \u003d \"Added Order Ingredient: %1$s\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"            + \"Edited Order: %2$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER_INGREDIENT \u003d \"This ingredient already exists in the order\";","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"    private final Index index;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"    private final IngredientDescriptor ingredientDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"     * Creates an AddOrderIngredientCommand to add the specified {@code Ingredient}.","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"     * @param index of the order in the filtered order list.","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"     * @param ingredientDescriptor of ingredient to add to the order.","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"    public AddOrderIngredientCommand(Index index, IngredientDescriptor ingredientDescriptor) {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        requireAllNonNull(index, ingredientDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"        this.ingredientDescriptor \u003d ingredientDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"        Ingredient ingredientToAdd \u003d ingredientDescriptor.toModelType();","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"        Order orderToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"        RecipeIngredientList editedIngredientList \u003d makeEditedIngredientList(ingredientToAdd, orderToEdit);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"        Order editedOrder \u003d makeOrderWithEditedIngredients(model, editedIngredientList, orderToEdit);","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"        if (!orderToEdit.isSameOrder(editedOrder) \u0026\u0026 model.hasOrder(editedOrder)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"        model.minusIngredientQuantity(ingredientToAdd, editedOrder.getQuantity());","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"            model.setOrder(orderToEdit, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"                String.format(MESSAGE_ADD_ORDER_INGREDIENT_SUCCESS, ingredientToAdd, editedOrder), UiTab.HOME);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"    private RecipeIngredientList makeEditedIngredientList(Ingredient ingredientToAdd, Order orderToEdit)","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"        RecipeIngredientList originalRecipeIngredientList \u003d orderToEdit.getRecipeIngredients();","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"        if (originalRecipeIngredientList.contains(ingredientToAdd)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ORDER_INGREDIENT);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"        List\u003cIngredient\u003e newIngredients \u003d new ArrayList\u003c\u003e(originalRecipeIngredientList.getIngredients());","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"        newIngredients.add(ingredientToAdd);","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"        return new RecipeIngredientList(newIngredients);","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"        if (!(other instanceof AddOrderIngredientCommand)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"        // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"zognin"},"content":"        AddOrderIngredientCommand e \u003d (AddOrderIngredientCommand) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"zognin"},"content":"                \u0026\u0026 ingredientDescriptor.equals(e.ingredientDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"zognin":123}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/DeleteOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Imranr2"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Imranr2"},"content":" * Deletes an order identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"public class DeleteOrderCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":"    public static final String COMMAND_WORD \u003d \"delete-o\";","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Imranr2"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Imranr2"},"content":"            + \": Deletes the order identified by the index number used in the displayed order list.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Imranr2"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"    public static final String MESSAGE_DELETE_ORDER_SUCCESS \u003d \"Deleted Order: %1$s\";","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Imranr2"},"content":"    public DeleteOrderCommand(Index targetIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Imranr2"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Imranr2"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Imranr2"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Imranr2"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Imranr2"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Imranr2"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Imranr2"},"content":"        Order orderToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"        if (!orderToDelete.getCompletionStatus().getIsFinished()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Imranr2"},"content":"            orderToDelete.getRecipeIngredients().getIngredients().forEach(ingredient -\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Imranr2"},"content":"                model.addIngredientQuantity(ingredient, orderToDelete.getQuantity());","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Imranr2"},"content":"            });","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Imranr2"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Imranr2"},"content":"            model.deleteOrder(orderToDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Imranr2"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Imranr2"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"Imranr2"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ORDER_SUCCESS, orderToDelete), UiTab.HOME);","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"Imranr2"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"Imranr2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"Imranr2"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"Imranr2"},"content":"                || (other instanceof DeleteOrderCommand // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"Imranr2"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteOrderCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"Imranr2"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Imranr2":68}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/DeleteOrderIngredientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.AddOrderCommand.MESSAGE_DUPLICATE_ORDER;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.util.CommandUtil.makeOrderWithEditedIngredients;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_INDEX;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.RecipeIngredientList;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":" * Deletes an ingredient from an existing order in btbb.","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"public class DeleteOrderIngredientCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    public static final String COMMAND_WORD \u003d \"delete-oi\";","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"            + \": Deletes the ingredient identified by the index number in an order identified by an index number.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"            + \"Parameters: ORDER_INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"            + PREFIX_INGREDIENT_INDEX + \"INGREDIENT_INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"            + PREFIX_INGREDIENT_INDEX + \"2\";","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    public static final String MESSAGE_DELETE_ORDER_INGREDIENT_SUCCESS \u003d \"Deleted Order Ingredient: %1$s\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"            + \"Edited Order: %2$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    private final Index targetIngredientIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    private final Index targetOrderIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"     * Creates an DeleteOrderIngredientCommand to delete the specified ingredient,","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     * identified by its index in the order ingredient list.","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"     * @param targetIngredientIndex Index of ingredient in the order ingredient list.","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"     * @param targetOrderIndex Index of the order in the displayed list.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    public DeleteOrderIngredientCommand(Index targetIngredientIndex, Index targetOrderIndex) {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"        requireAllNonNull(targetIngredientIndex, targetOrderIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        this.targetIngredientIndex \u003d targetIngredientIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        this.targetOrderIndex \u003d targetOrderIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        List\u003cOrder\u003e lastShownOrderList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"        if (targetOrderIndex.getZeroBased() \u003e\u003d lastShownOrderList.size()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"        Order orderToEdit \u003d lastShownOrderList.get(targetOrderIndex.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"        Ingredient ingredientToDelete \u003d getIngredientToDelete(orderToEdit);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        RecipeIngredientList editedIngredientList \u003d makeEditedIngredientList(orderToEdit);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"        Order editedOrder \u003d makeOrderWithEditedIngredients(model, editedIngredientList, orderToEdit);","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"        if (!orderToEdit.isSameOrder(editedOrder) \u0026\u0026 model.hasOrder(editedOrder)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"        model.addIngredientQuantity(ingredientToDelete, editedOrder.getQuantity());","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"            model.setOrder(orderToEdit, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"                String.format(MESSAGE_DELETE_ORDER_INGREDIENT_SUCCESS, ingredientToDelete, editedOrder), UiTab.HOME);","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"    private Ingredient getIngredientToDelete(Order orderToEdit) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"        RecipeIngredientList originalRecipeIngredientList \u003d orderToEdit.getRecipeIngredients();","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"        if (targetIngredientIndex.getZeroBased() \u003e\u003d originalRecipeIngredientList.getIngredients().size()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"        return originalRecipeIngredientList.getIngredients().get(targetIngredientIndex.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"    private RecipeIngredientList makeEditedIngredientList(Order orderToEdit) {","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"        RecipeIngredientList originalRecipeIngredientList \u003d orderToEdit.getRecipeIngredients();","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"        List\u003cIngredient\u003e newIngredients \u003d new ArrayList\u003c\u003e(originalRecipeIngredientList.getIngredients());","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"        newIngredients.remove(targetIngredientIndex.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"        return new RecipeIngredientList(newIngredients);","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"        if (!(other instanceof DeleteOrderIngredientCommand)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"        // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"zognin"},"content":"        DeleteOrderIngredientCommand e \u003d (DeleteOrderIngredientCommand) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"        return targetIngredientIndex.equals(e.targetIngredientIndex)","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"zognin"},"content":"                \u0026\u0026 targetOrderIndex.equals(e.targetOrderIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"zognin":123}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/DoneOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.CompletionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":" * Marks an order as done in address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"public class DoneOrderCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    public static final String COMMAND_WORD \u003d \"done-o\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"            + \": Marks the order identified by the index number as used in the displayed order list as done.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"            + \"Example: \" + COMMAND_WORD + \"1\";","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_DONE_ORDER_SUCCESS \u003d \"Order marked as done.\\nOrder details: %1$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"     * Creates a DoneOrderCommand to mark the specified {@code Order} as done.","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"     * @param targetIndex Index of Order in currently displayed list to mark as done.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"    public DoneOrderCommand(Index targetIndex) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"     * Executes this DoneOrderCommand.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"     * @return Command Result of executing the Done Order Command.","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"     * @throws CommandException If unable to mark this order as done.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"        Order orderToMarkDone \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"        Order markedOrder \u003d new Order(orderToMarkDone.getClientName(), orderToMarkDone.getClientPhone(),","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"                orderToMarkDone.getClientAddress(), orderToMarkDone.getRecipeName(),","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"                orderToMarkDone.getRecipeIngredients(), orderToMarkDone.getPrice(),","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"                orderToMarkDone.getDeadline(), orderToMarkDone.getQuantity(), new CompletionStatus(true));","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"            model.setOrder(orderToMarkDone, markedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"        return new CommandResult(String.format(MESSAGE_DONE_ORDER_SUCCESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"                orderToMarkDone.toStringWithoutCompletionStatus()), UiTab.HOME);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"                || (other instanceof DoneOrderCommand // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 targetIndex.equals(((DoneOrderCommand) other).targetIndex));","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EuniceSim142":81}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/EditOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_INDEX;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_DEADLINE;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_PRICE;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_QUANTITY;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_RECIPE_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.OrderDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":" * Edits the details of an existing order in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"public class EditOrderCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String COMMAND_WORD \u003d \"edit-o\";","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the order identified \"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"by the index number used in the displayed order list.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"\\t    Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"[\" + PREFIX_CLIENT_INDEX + \"CLIENT_INDEX (must be a positive integer)] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"[\" + PREFIX_CLIENT_NAME + \"CLIENT_NAME] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"[\" + PREFIX_CLIENT_PHONE + \"CLIENT_PHONE] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"[\" + PREFIX_CLIENT_ADDRESS + \"CLIENT_ADDRESS]\\n\\t\\t\" + \"      \"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"[\" + PREFIX_RECIPE_NAME + \"RECIPE_NAME] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"[\" + PREFIX_ORDER_PRICE + \"ORDER_PRICE] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"[\" + PREFIX_ORDER_DEADLINE + \"ORDER_DEADLINE] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"[\" + PREFIX_ORDER_QUANTITY + \"ORDER_QUANTITY]\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"            + PREFIX_CLIENT_INDEX + \"1 \"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"            + PREFIX_RECIPE_NAME + \"Chicken Rice \"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"            + PREFIX_ORDER_PRICE + \"4.50\";","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String MESSAGE_EDIT_ORDER_SUCCESS \u003d \"Edited Order: %1$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"This order already exists in the address book.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"    private final Index index;","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"    private final OrderDescriptor editOrderDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"     * Constructs a EditOrderCommand object.","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param index The index of the order in the filtered order list.","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param editOrderDescriptor Contains details to edit the order with.","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"    public EditOrderCommand(Index index, OrderDescriptor editOrderDescriptor) {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"        requireAllNonNull(index, editOrderDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"        this.editOrderDescriptor \u003d new OrderDescriptor(editOrderDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"        Order orderToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"        Order editedOrder \u003d editOrderDescriptor.toModelTypeFrom(model, orderToEdit);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"        if (!orderToEdit.isSameOrder(editedOrder) \u0026\u0026 model.hasOrder(editedOrder)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"        int compareQuantityResult \u003d editedOrder.getQuantity().compareTo(orderToEdit.getQuantity());","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"        if (compareQuantityResult \u003c 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"            // editedOrder has quantity \u003c orderToEdit","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"            orderToEdit.getRecipeIngredients().getIngredients().forEach(ingredient -\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"                model.addIngredientQuantity(ingredient,","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"sivayogasubramanian"},"content":"                        orderToEdit.getQuantity().minusQuantityBy(editedOrder.getQuantity(), new Quantity(\"1\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"sivayogasubramanian"},"content":"            });","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"sivayogasubramanian"},"content":"        } else if (compareQuantityResult \u003e 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"            // editedOrder has quantity \u003e orderToEdit","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"sivayogasubramanian"},"content":"            orderToEdit.getRecipeIngredients().getIngredients().forEach(ingredient -\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"sivayogasubramanian"},"content":"                model.minusIngredientQuantity(ingredient,","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"                        editedOrder.getQuantity().minusQuantityBy(orderToEdit.getQuantity(), new Quantity(\"1\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"sivayogasubramanian"},"content":"            });","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"sivayogasubramanian"},"content":"            model.setOrder(orderToEdit, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"sivayogasubramanian"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"sivayogasubramanian"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_ORDER_SUCCESS, editedOrder), UiTab.HOME);","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"sivayogasubramanian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"sivayogasubramanian"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"sivayogasubramanian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"        if (!(other instanceof EditOrderCommand)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"sivayogasubramanian"},"content":"        // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"sivayogasubramanian"},"content":"        EditOrderCommand e \u003d (EditOrderCommand) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"sivayogasubramanian"},"content":"        return index.equals(e.index) \u0026\u0026 editOrderDescriptor.equals(e.editOrderDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"sivayogasubramanian":129}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/FindOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Imranr2"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_COMPLETION_STATUS;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_DEADLINE;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_RECIPE_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollection;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":" * Finds and lists all orders in the address book whose client name, client phone number,","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":" * or client address matches the provided parameters.","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Imranr2"},"content":"public class FindOrderCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Imranr2"},"content":"    public static final String COMMAND_WORD \u003d \"find-o\";","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds orders by \"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Imranr2"},"content":"            + \"client name, client phone number, client address, recipe name, order date and order status fields. \\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"            + \"Parameters (at least one must be provided): \"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Imranr2"},"content":"            + \"[\" + PREFIX_CLIENT_NAME + \"CLIENT_NAME] \"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"            + \"[\" + PREFIX_CLIENT_PHONE + \"CLIENT_PHONE] \"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"            + \"[\" + PREFIX_CLIENT_ADDRESS + \"CLIENT_ADDRESS] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Imranr2"},"content":"            + \"[\" + PREFIX_RECIPE_NAME + \"RECIPE_NAME]\"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Imranr2"},"content":"            + \"[\" + PREFIX_ORDER_DEADLINE + \"ORDER_DATE]\" // Note that only deadline date is used","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"            + \"[\" + PREFIX_ORDER_COMPLETION_STATUS + \"YES_OR_NO]\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Imranr2"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_CLIENT_NAME + \"alice\";","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Imranr2"},"content":"    private PredicateCollection\u003cOrder\u003e predicateCollection;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"    public FindOrderCommand(PredicateCollection\u003cOrder\u003e predicateCollection) {","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Imranr2"},"content":"        this.predicateCollection \u003d predicateCollection;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Imranr2"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Imranr2"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"        model.updateFilteredOrderList(predicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Imranr2"},"content":"                String.format(Messages.MESSAGE_ORDERS_LISTED_OVERVIEW, model.getFilteredOrderList().size()),","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"Imranr2"},"content":"                UiTab.HOME);","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Imranr2"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Imranr2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"Imranr2"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Imranr2"},"content":"                || (other instanceof FindOrderCommand)","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Imranr2"},"content":"                \u0026\u0026 predicateCollection.equals(((FindOrderCommand) other).predicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Imranr2"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"EuniceSim142":3,"Imranr2":54,"zognin":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/ListOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Imranr2"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"Imranr2"},"content":" * Lists all orders in the address book to the user.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"public class ListOrderCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"    public static final String COMMAND_WORD \u003d \"list-o\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all orders\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":"        model.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"        return new CommandResult(MESSAGE_SUCCESS, UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Imranr2"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Imranr2":23,"zognin":2}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/UndoneOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.CompletionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":" * Marks an order as undone in address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"public class UndoneOrderCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    public static final String COMMAND_WORD \u003d \"undone-o\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"            + \": Marks the order identified by the index number as used in the displayed order list as undone.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"            + \"Example: \" + COMMAND_WORD + \"1\";","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_UNDONE_ORDER_SUCCESS \u003d \"Order marked as undone.\\nOrder details: %1$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"     * Creates a UndoneOrderCommand to mark the specified {@code Order} as undone.","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"     * @param targetIndex Index of Order in currently displayed list to mark as undone.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"    public UndoneOrderCommand(Index targetIndex) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"     * Executes this UndoneOrderCommand.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"     * @return Command Result of executing the Undone Order Command.","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"     * @throws CommandException If unable to mark this order as undone.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"        Order orderToMarkUndone \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"        Order markedOrder \u003d new Order(orderToMarkUndone.getClientName(), orderToMarkUndone.getClientPhone(),","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"                orderToMarkUndone.getClientAddress(), orderToMarkUndone.getRecipeName(),","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"                orderToMarkUndone.getRecipeIngredients(), orderToMarkUndone.getPrice(),","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"                orderToMarkUndone.getDeadline(), orderToMarkUndone.getQuantity(), new CompletionStatus(false));","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"            model.setOrder(orderToMarkUndone, markedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"        return new CommandResult(String.format(MESSAGE_UNDONE_ORDER_SUCCESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"                orderToMarkUndone.toStringWithoutCompletionStatus()), UiTab.HOME);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"                || (other instanceof UndoneOrderCommand // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 targetIndex.equals(((UndoneOrderCommand) other).targetIndex));","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EuniceSim142":81}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/util/CommandUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.util;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.OrderDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.RecipeIngredientList;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":" * Contains utility methods used for commands in the various *Command classes.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"public class CommandUtil {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"     * Makes a new order with edited ingredients.","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"     * @param editedIngredientList Edited ingredient list.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"     * @param orderToEdit Original order to edit.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     * @return A new order with edited ingredients while other order fields are the same as the original order.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    public static Order makeOrderWithEditedIngredients(","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"            Model model, RecipeIngredientList editedIngredientList, Order orderToEdit) throws CommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        OrderDescriptor orderDescriptor \u003d new OrderDescriptor();","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"        orderDescriptor.setRecipeIngredients(editedIngredientList);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        return orderDescriptor.toModelTypeFrom(model, orderToEdit);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"zognin":26}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/descriptors/ClientDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.descriptors;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Email;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":" * Stores the details to relevant to a client.","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":" * Some details have to be converted to their model representations before converting to a Client model type.","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"public class ClientDescriptor {","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    private GenericString name;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    private Phone phone;","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    private Email email;","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    private Address address;","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    public ClientDescriptor() {}","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"     * Copy constructor.","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    public ClientDescriptor(ClientDescriptor toCopy) {","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        setName(toCopy.name);","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        setPhone(toCopy.phone);","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"        setEmail(toCopy.email);","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"        setAddress(toCopy.address);","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        return CollectionUtil.isAnyNonNull(name, phone, email, address);","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"    public void setName(GenericString name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"    public Optional\u003cGenericString\u003e getName() {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        return Optional.ofNullable(name);","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"    public void setPhone(Phone phone) {","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"    public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"        return Optional.ofNullable(phone);","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"    public void setEmail(Email email) {","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"    public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"        return Optional.ofNullable(email);","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"    public void setAddress(Address address) {","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"    public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"        return Optional.ofNullable(address);","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"     * Converts a Client Descriptor to a Client model type.","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"     * All non null fields must be present before conversion.","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"     * @return {@code Client}.","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"EuniceSim142"},"content":"    public Client toModelType() {","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"        requireAllNonNull(name, phone, email, address);","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"EuniceSim142"},"content":"        return new Client(name, phone, email, address);","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"     * Converts a Client Descriptor to a Client model type.","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"EuniceSim142"},"content":"     * Missing fields are filled with an existing client.","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"EuniceSim142"},"content":"     * @param existingClient An existing Client that is not null.","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"     * @return {@code Client}.","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"    public Client toModelTypeFrom(Client existingClient) {","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"        assert existingClient !\u003d null;","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"EuniceSim142"},"content":"        GenericString updatedName \u003d getName().orElse(existingClient.getName());","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"EuniceSim142"},"content":"        Phone updatedPhone \u003d getPhone().orElse(existingClient.getPhone());","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"EuniceSim142"},"content":"        Email updatedEmail \u003d getEmail().orElse(existingClient.getEmail());","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"EuniceSim142"},"content":"        Address updatedAddress \u003d getAddress().orElse(existingClient.getAddress());","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"EuniceSim142"},"content":"        return new Client(updatedName, updatedPhone, updatedEmail, updatedAddress);","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"        // short circuit if same object","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-21"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"            return true;","lastModifiedDate":"2021-09-21"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"EuniceSim142"},"content":"        if (!(other instanceof ClientDescriptor)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"            return false;","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":"        // state check","lastModifiedDate":"2021-09-21"},{"lineNumber":118,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor e \u003d (ClientDescriptor) other;","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"        return getName().equals(e.getName())","lastModifiedDate":"2021-09-21"},{"lineNumber":121,"author":{"gitId":"zognin"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2021-09-21"},{"lineNumber":122,"author":{"gitId":"zognin"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"zognin"},"content":"                \u0026\u0026 getAddress().equals(e.getAddress());","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"EuniceSim142":26,"zognin":92,"sivayogasubramanian":7}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/descriptors/IngredientDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.descriptors;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":" * Stores the details to relevant to a ingredient.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":" * Some details have to be converted to their model representations before converting to a Ingredient model type.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"public class IngredientDescriptor {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"    private GenericString name;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    private Quantity quantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    private GenericString unit;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"    public IngredientDescriptor() {}","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"     * Copy constructor.","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    public IngredientDescriptor(IngredientDescriptor toCopy) {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"        setName(toCopy.name);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"        setQuantity(toCopy.quantity);","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        setUnit(toCopy.unit);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        return CollectionUtil.isAnyNonNull(name, quantity, unit);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the name of this ingredient descriptor.","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"     * @param name to change to.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"    public void setName(GenericString name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"     * Gets the name of this ingredient descriptor.","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"     * @return name of ingredient, if it is not null.","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"    public Optional\u003cGenericString\u003e getName() {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"        return Optional.ofNullable(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the quantity of this ingredient descriptor.","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"     * @param quantity to change to.","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"    public void setQuantity(Quantity quantity) {","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"     * Gets the quantity of this ingredient descriptor.","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"     * @return quantity of ingredient, if it is not null.","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"    public Optional\u003cQuantity\u003e getQuantity() {","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"        return Optional.ofNullable(quantity);","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the unit of this ingredient descriptor.","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"     * @param unit to change to.","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"    public void setUnit(GenericString unit) {","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"        this.unit \u003d unit;","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"EuniceSim142"},"content":"     * Gets the unit of this ingredient descriptor.","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"EuniceSim142"},"content":"     * @return unit of ingredient, if it is not null.","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"EuniceSim142"},"content":"    public Optional\u003cGenericString\u003e getUnit() {","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"EuniceSim142"},"content":"        return Optional.ofNullable(unit);","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"     * Converts a Ingredient Descriptor to a Ingredient model type.","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"     * All non null fields must be present before conversion.","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"EuniceSim142"},"content":"     * @return {@code Ingredient}.","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"EuniceSim142"},"content":"    public Ingredient toModelType() {","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"EuniceSim142"},"content":"        requireAllNonNull(name, quantity, unit);","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"EuniceSim142"},"content":"        return new Ingredient(name, quantity, unit);","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Converts a Ingredient Descriptor to a Ingredient model type.","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Missing fields are filled with an existing ingredient.","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @param existingIngredient An existing Ingredient that is not null.","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @return {@code Ingredient}.","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public Ingredient toModelTypeFrom(Ingredient existingIngredient) {","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assert existingIngredient !\u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        GenericString updatedName \u003d getName().orElse(existingIngredient.getName());","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Quantity updatedQuantity \u003d getQuantity().orElse(existingIngredient.getQuantity());","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        GenericString updatedUnit \u003d getUnit().orElse(existingIngredient.getUnit());","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        return new Ingredient(updatedName, updatedQuantity, updatedUnit);","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"EuniceSim142"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"EuniceSim142"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"EuniceSim142"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"EuniceSim142"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"EuniceSim142"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"EuniceSim142"},"content":"        if (!(other instanceof IngredientDescriptor)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"EuniceSim142"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"EuniceSim142"},"content":"        // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"EuniceSim142"},"content":"        IngredientDescriptor e \u003d (IngredientDescriptor) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"EuniceSim142"},"content":"        return getName().equals(e.getName())","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 getQuantity().equals(e.getQuantity())","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 getUnit().equals(e.getUnit());","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"EuniceSim142":114,"Manoharan-Ajay-Anand":25,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/descriptors/OrderDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.descriptors;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.CompletionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Deadline;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Price;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.RecipeIngredientList;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":" * Stores the details relevant to an order.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":" * Some details have to be converted to their model representations before converting to a Order model type.","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"public class OrderDescriptor {","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"    public static final String MESSAGE_MISSING_CLIENT_DETAILS \u003d \"Both client and client details cannot be found\";","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"    private Index clientIndex;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"    private GenericString clientName;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"Imranr2"},"content":"    private Phone clientPhone;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Imranr2"},"content":"    private Address clientAddress;","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"    private GenericString recipeName;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"    private RecipeIngredientList recipeIngredients;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"    private Price price;","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"    private Deadline deadline;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"    private Quantity quantity;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"    private CompletionStatus completionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    public OrderDescriptor() {};","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Imranr2"},"content":"     * Constructs an {@code OrderDescriptor} using the details of an existing {@code OrderDescriptor}.","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"     * @param toCopy Existing {@code OrderDescriptor}.","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"    public OrderDescriptor(OrderDescriptor toCopy) {","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"Imranr2"},"content":"        setClientIndex(toCopy.clientIndex);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Imranr2"},"content":"        setClientName(toCopy.clientName);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Imranr2"},"content":"        setClientPhone(toCopy.clientPhone);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Imranr2"},"content":"        setClientAddress(toCopy.clientAddress);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"        setRecipeName(toCopy.recipeName);","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"        setRecipeIngredients(toCopy.recipeIngredients);","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"        setPrice(toCopy.price);","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"        setDeadline(toCopy.deadline);","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"        setQuantity(toCopy.quantity);","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"        setCompletionStatus(toCopy.completionStatus);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"        return CollectionUtil.isAnyNonNull(clientIndex, clientName, clientPhone, clientAddress, recipeName,","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"                recipeIngredients, price, deadline, quantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Imranr2"},"content":"    public void setClientIndex(Index clientIndex) {","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"Imranr2"},"content":"        this.clientIndex \u003d clientIndex;","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"Imranr2"},"content":"    public Optional\u003cIndex\u003e getClientIndex() {","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"Imranr2"},"content":"        return Optional.ofNullable(clientIndex);","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"    public void setClientName(GenericString clientName) {","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"Imranr2"},"content":"        this.clientName \u003d clientName;","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"    public Optional\u003cGenericString\u003e getClientName() {","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"Imranr2"},"content":"        return Optional.ofNullable(clientName);","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"Imranr2"},"content":"    public void setClientPhone(Phone clientPhone) {","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"Imranr2"},"content":"        this.clientPhone \u003d clientPhone;","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"Imranr2"},"content":"    public Optional\u003cPhone\u003e getClientPhone() {","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"Imranr2"},"content":"        return Optional.ofNullable(clientPhone);","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"Imranr2"},"content":"    public void setClientAddress(Address clientAddress) {","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"Imranr2"},"content":"        this.clientAddress \u003d clientAddress;","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"Imranr2"},"content":"    public Optional\u003cAddress\u003e getClientAddress() {","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"Imranr2"},"content":"        return Optional.ofNullable(clientAddress);","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setRecipeName(GenericString recipeName) {","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"sivayogasubramanian"},"content":"        this.recipeName \u003d recipeName;","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"sivayogasubramanian"},"content":"    public Optional\u003cGenericString\u003e getRecipeName() {","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"sivayogasubramanian"},"content":"        return Optional.ofNullable(recipeName);","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setRecipeIngredients(RecipeIngredientList recipeIngredients) {","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"        this.recipeIngredients \u003d recipeIngredients;","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"sivayogasubramanian"},"content":"    public Optional\u003cRecipeIngredientList\u003e getRecipeIngredients() {","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"sivayogasubramanian"},"content":"        return Optional.ofNullable(recipeIngredients);","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setPrice(Price price) {","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"    public Optional\u003cPrice\u003e getPrice() {","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"        return Optional.ofNullable(price);","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setDeadline(Deadline deadline) {","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"sivayogasubramanian"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"sivayogasubramanian"},"content":"    public Optional\u003cDeadline\u003e getDeadline() {","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"sivayogasubramanian"},"content":"        return Optional.ofNullable(deadline);","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setQuantity(Quantity quantity) {","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"sivayogasubramanian"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"sivayogasubramanian"},"content":"    public Optional\u003cQuantity\u003e getQuantity() {","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"sivayogasubramanian"},"content":"        return Optional.ofNullable(quantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"EuniceSim142"},"content":"    public void setCompletionStatus(CompletionStatus completionStatus) {","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"EuniceSim142"},"content":"        this.completionStatus \u003d completionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"EuniceSim142"},"content":"    public Optional\u003cCompletionStatus\u003e getCompletionStatus() {","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"EuniceSim142"},"content":"        return Optional.ofNullable(completionStatus);","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":150,"author":{"gitId":"zognin"},"content":"     * Converts an Order Descriptor to an Order model type.","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"Imranr2"},"content":"     * @param model To get the client list.","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"Imranr2"},"content":"     * @return {@code Order}","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"Imranr2"},"content":"     * @throws CommandException if both the client and its details are missing.","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"Imranr2"},"content":"    public Order toModelType(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"Imranr2"},"content":"        Optional\u003cClient\u003e client \u003d getClientFromModel(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"Imranr2"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"EuniceSim142"},"content":"            GenericString clientName \u003d getClientName().orElseGet(() -\u003e client.get().getName());","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"Imranr2"},"content":"            Phone clientPhone \u003d getClientPhone().orElseGet(() -\u003e client.get().getPhone());","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"Imranr2"},"content":"            Address clientAddress \u003d getClientAddress().orElseGet(() -\u003e client.get().getAddress());","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"sivayogasubramanian"},"content":"            return new Order(clientName, clientPhone, clientAddress,","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"EuniceSim142"},"content":"                    recipeName, recipeIngredients, price, deadline, quantity, completionStatus);","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"Imranr2"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"Imranr2"},"content":"            throw new CommandException(MESSAGE_MISSING_CLIENT_DETAILS);","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":170,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":171,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"sivayogasubramanian"},"content":"     * Converts an Order Descriptor to an Order model type.","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"sivayogasubramanian"},"content":"     * Missing fields are filled with an existing order.","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param model To get the client list.","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param existingOrder An existing order that is not null.","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return {@code Order}.","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"sivayogasubramanian"},"content":"     * @throws CommandException If the client index provided is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"sivayogasubramanian"},"content":"    public Order toModelTypeFrom(Model model, Order existingOrder) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"sivayogasubramanian"},"content":"        assert existingOrder !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"sivayogasubramanian"},"content":"        Optional\u003cClient\u003e client \u003d getClientFromModel(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"sivayogasubramanian"},"content":"        boolean isClientPresent \u003d client.isPresent();","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"sivayogasubramanian"},"content":"        GenericString updatedClientName \u003d getClientName().orElse(isClientPresent","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"sivayogasubramanian"},"content":"                ? client.get().getName() : existingOrder.getClientName());","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"sivayogasubramanian"},"content":"        Phone updatedClientPhone \u003d getClientPhone().orElse(isClientPresent","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"sivayogasubramanian"},"content":"                ? client.get().getPhone() : existingOrder.getClientPhone());","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"sivayogasubramanian"},"content":"        Address updatedClientAddress \u003d getClientAddress().orElse(isClientPresent","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"sivayogasubramanian"},"content":"                ? client.get().getAddress() : existingOrder.getClientAddress());","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"sivayogasubramanian"},"content":"        GenericString updatedRecipeName \u003d getRecipeName().orElse(existingOrder.getRecipeName());","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"sivayogasubramanian"},"content":"        RecipeIngredientList updatedRecipeIngredientList \u003d getRecipeIngredients()","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"sivayogasubramanian"},"content":"                .orElse(existingOrder.getRecipeIngredients());","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"sivayogasubramanian"},"content":"        Price updatedPrice \u003d getPrice().orElse(existingOrder.getPrice());","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"sivayogasubramanian"},"content":"        Deadline updatedDeadline \u003d getDeadline().orElse(existingOrder.getDeadline());","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"sivayogasubramanian"},"content":"        Quantity updatedQuantity \u003d getQuantity().orElse(existingOrder.getQuantity());","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"EuniceSim142"},"content":"        CompletionStatus updatedCompletionStatus \u003d getCompletionStatus().orElse(existingOrder.getCompletionStatus());","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"sivayogasubramanian"},"content":"        return new Order(updatedClientName, updatedClientPhone, updatedClientAddress, updatedRecipeName,","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"EuniceSim142"},"content":"                updatedRecipeIngredientList, updatedPrice, updatedDeadline, updatedQuantity, updatedCompletionStatus);","lastModifiedDate":"2021-10-13"},{"lineNumber":202,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"Imranr2"},"content":"    public Optional\u003cClient\u003e getClientFromModel(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"Imranr2"},"content":"        List\u003cClient\u003e lastShownClientList \u003d model.getFilteredClientList();","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"Imranr2"},"content":"        if (getClientIndex().isPresent() \u0026\u0026 getClientIndex().get().getZeroBased() \u003e\u003d lastShownClientList.size()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"Imranr2"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"Imranr2"},"content":"        Optional\u003cClient\u003e client \u003d getClientIndex().isPresent()","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"Imranr2"},"content":"                ? Optional.of(lastShownClientList.get(clientIndex.getZeroBased()))","lastModifiedDate":"2021-10-07"},{"lineNumber":213,"author":{"gitId":"Imranr2"},"content":"                : Optional.empty();","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"Imranr2"},"content":"        return client;","lastModifiedDate":"2021-10-07"},{"lineNumber":215,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":217,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":218,"author":{"gitId":"zognin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":219,"author":{"gitId":"zognin"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-01"},{"lineNumber":220,"author":{"gitId":"zognin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-01"},{"lineNumber":221,"author":{"gitId":"zognin"},"content":"            return true;","lastModifiedDate":"2021-10-01"},{"lineNumber":222,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":223,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":224,"author":{"gitId":"zognin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-01"},{"lineNumber":225,"author":{"gitId":"zognin"},"content":"        if (!(other instanceof OrderDescriptor)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":226,"author":{"gitId":"zognin"},"content":"            return false;","lastModifiedDate":"2021-10-01"},{"lineNumber":227,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":228,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":229,"author":{"gitId":"zognin"},"content":"        // state check","lastModifiedDate":"2021-10-01"},{"lineNumber":230,"author":{"gitId":"zognin"},"content":"        OrderDescriptor otherOrderDescriptor \u003d (OrderDescriptor) other;","lastModifiedDate":"2021-10-01"},{"lineNumber":231,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":232,"author":{"gitId":"Imranr2"},"content":"        return getClientIndex().equals(otherOrderDescriptor.getClientIndex())","lastModifiedDate":"2021-10-06"},{"lineNumber":233,"author":{"gitId":"Imranr2"},"content":"                \u0026\u0026 getClientName().equals(otherOrderDescriptor.getClientName())","lastModifiedDate":"2021-10-07"},{"lineNumber":234,"author":{"gitId":"Imranr2"},"content":"                \u0026\u0026 getClientPhone().equals(otherOrderDescriptor.getClientPhone())","lastModifiedDate":"2021-10-06"},{"lineNumber":235,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 getClientAddress().equals(otherOrderDescriptor.getClientAddress())","lastModifiedDate":"2021-10-09"},{"lineNumber":236,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 getRecipeName().equals(otherOrderDescriptor.getRecipeName())","lastModifiedDate":"2021-10-09"},{"lineNumber":237,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 getRecipeIngredients().equals(otherOrderDescriptor.getRecipeIngredients())","lastModifiedDate":"2021-10-10"},{"lineNumber":238,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 getPrice().equals(otherOrderDescriptor.getPrice())","lastModifiedDate":"2021-10-09"},{"lineNumber":239,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 getDeadline().equals(otherOrderDescriptor.getDeadline())","lastModifiedDate":"2021-10-09"},{"lineNumber":240,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 getQuantity().equals(otherOrderDescriptor.getQuantity())","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 getCompletionStatus().equals(otherOrderDescriptor.getCompletionStatus());","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":243,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"EuniceSim142":22,"Imranr2":78,"zognin":39,"sivayogasubramanian":104}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.AddClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.DeleteClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.EditClientCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.FindClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.ListClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.general.ExitCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.general.HelpCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.general.TabCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.AddIngredientCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.DeleteIngredientCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.EditIngredientCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.FindIngredientCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.ListIngredientCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.AddOrderIngredientCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.DeleteOrderCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.DeleteOrderIngredientCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.DoneOrderCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.EditOrderCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.FindOrderCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.ListOrderCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.UndoneOrderCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.client.AddClientCommandParser;","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.client.DeleteClientCommandParser;","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.client.EditClientCommandParser;","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.client.FindClientCommandParser;","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.general.TabCommandParser;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.ingredient.AddIngredientCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.ingredient.DeleteIngredientCommandParser;","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.ingredient.EditIngredientCommandParser;","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.ingredient.FindIngredientCommandParser;","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.order.AddOrderCommandParser;","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.order.AddOrderIngredientCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.order.DeleteOrderCommandParser;","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.order.DeleteOrderIngredientCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.order.DoneOrderCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.order.EditOrderCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.order.FindOrderCommandParser;","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.order.UndoneOrderCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"        case AddClientCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"            return new AddClientCommandParser().parse(arguments);","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"        case AddIngredientCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"            return new AddIngredientCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"        case AddOrderCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"            return new AddOrderCommandParser().parse(arguments);","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"        case AddOrderIngredientCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"            return new AddOrderIngredientCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"EuniceSim142"},"content":"        case DeleteClientCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"EuniceSim142"},"content":"            return new DeleteClientCommandParser().parse(arguments);","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        case DeleteIngredientCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            return new DeleteIngredientCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"Imranr2"},"content":"        case DeleteOrderCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"Imranr2"},"content":"            return new DeleteOrderCommandParser().parse(arguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"        case DeleteOrderIngredientCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"            return new DeleteOrderIngredientCommandParser().parse(arguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"EuniceSim142"},"content":"        case DoneOrderCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"EuniceSim142"},"content":"            return new DoneOrderCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"        case EditClientCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"            return new EditClientCommandParser().parse(arguments);","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        case EditIngredientCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            return new EditIngredientCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"        case EditOrderCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"            return new EditOrderCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"EuniceSim142"},"content":"        case FindClientCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"EuniceSim142"},"content":"            return new FindClientCommandParser().parse(arguments);","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"zognin"},"content":"        case FindIngredientCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":"            return new FindIngredientCommandParser().parse(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"Imranr2"},"content":"        case FindOrderCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"Imranr2"},"content":"            return new FindOrderCommandParser().parse(arguments);","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"EuniceSim142"},"content":"        case ListClientCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"EuniceSim142"},"content":"            return new ListClientCommand();","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"zognin"},"content":"        case ListIngredientCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"zognin"},"content":"            return new ListIngredientCommand();","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"Imranr2"},"content":"        case ListOrderCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"Imranr2"},"content":"            return new ListOrderCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"EuniceSim142"},"content":"        case UndoneOrderCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"EuniceSim142"},"content":"            return new UndoneOrderCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":140,"author":{"gitId":"zognin"},"content":"        case TabCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"zognin"},"content":"            return new TabCommandParser().parse(arguments);","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EuniceSim142":21,"Imranr2":14,"zognin":37,"-":46,"Manoharan-Ajay-Anand":10,"sivayogasubramanian":19}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":12,"sivayogasubramanian":4}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/ParserFunction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":" * Functional interface for parser functions.","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" *","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":" * @param \u003cS\u003e Type of output after applying the parser function.","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"@FunctionalInterface","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"public interface ParserFunction\u003cS\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     * Applies a parser function.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"     * @param input Input to parse.","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"     * @return Output after parsing.","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"     * @throws ParseException if {@code input} does not conform the expected format.","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    S apply(String input) throws ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"zognin":20}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/client/AddClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.AddClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.ClientDescriptor;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.Parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentMultimap;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentTokenizer;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":" * Parses input arguments and creates a new AddClientCommand object.","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"public class AddClientCommandParser implements Parser\u003cAddClientCommand\u003e {","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"     * Parses the given {@code String} of arguments in the context of the AddClientCommand","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"     * and returns an AddClientCommand object for execution.","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"    public AddClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"                PREFIX_CLIENT_NAME, PREFIX_CLIENT_PHONE, PREFIX_CLIENT_EMAIL, PREFIX_CLIENT_ADDRESS);","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        if (!ParserUtil.areAllPrefixesPresent(argMultimap,","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"                PREFIX_CLIENT_NAME, PREFIX_CLIENT_ADDRESS, PREFIX_CLIENT_PHONE, PREFIX_CLIENT_EMAIL)","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor clientDescriptor \u003d new ClientDescriptor();","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"        clientDescriptor.setName(ParserUtil.parseGenericString(argMultimap.getValue(PREFIX_CLIENT_NAME).get(), \"Name\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        clientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_CLIENT_PHONE).get()));","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        clientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_CLIENT_EMAIL).get()));","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        clientDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_CLIENT_ADDRESS).get()));","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"        return new AddClientCommand(clientDescriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"EuniceSim142":10,"zognin":11,"-":14,"sivayogasubramanian":11}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/client/DeleteClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.DeleteClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.Parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":" * Parses input arguments and creates a new DeleteClientCommand object","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"public class DeleteClientCommandParser implements Parser\u003cDeleteClientCommand\u003e {","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteClientCommand","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"     * and returns a DeleteClientCommand object for execution.","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"    public DeleteClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"            return new DeleteClientCommand(index);","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteClientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"EuniceSim142":7,"-":15,"sivayogasubramanian":8}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/client/EditClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.EditClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.ClientDescriptor;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.Parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentMultimap;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentTokenizer;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":" * Parses input arguments and creates a new EditClientCommand object","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"public class EditClientCommandParser implements Parser\u003cEditClientCommand\u003e {","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"     * Parses the given {@code String} of arguments in the context of the EditClientCommand","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"     * and returns an EditClientCommand object for execution.","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    public EditClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"                PREFIX_CLIENT_NAME, PREFIX_CLIENT_PHONE, PREFIX_CLIENT_EMAIL, PREFIX_CLIENT_ADDRESS);","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditClientCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"                    pe);","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor editClientDescriptor \u003d new ClientDescriptor();","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        fillClientDescriptor(argMultimap, editClientDescriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"        if (!editClientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"            throw new ParseException(EditClientCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"        return new EditClientCommand(index, editClientDescriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    private void fillClientDescriptor(ArgumentMultimap argMultimap,","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                                      ClientDescriptor clientDescriptor) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        if (argMultimap.getValue(PREFIX_CLIENT_NAME).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            clientDescriptor.setName(ParserUtil.parseGenericString(argMultimap.getValue(PREFIX_CLIENT_NAME).get(),","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                    \"Name\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        if (argMultimap.getValue(PREFIX_CLIENT_PHONE).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            clientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_CLIENT_PHONE).get()));","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        if (argMultimap.getValue(PREFIX_CLIENT_EMAIL).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            clientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_CLIENT_EMAIL).get()));","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        if (argMultimap.getValue(PREFIX_CLIENT_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            clientDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_CLIENT_ADDRESS).get()));","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"EuniceSim142":10,"zognin":6,"-":23,"Manoharan-Ajay-Anand":19,"sivayogasubramanian":11}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/client/FindClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.FindClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.Parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentMultimap;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentTokenizer;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollection;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":" * Parses input arguments and creates a new FindClientCommand object","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"public class FindClientCommandParser implements Parser\u003cFindClientCommand\u003e {","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"     * Parses the given {@code String} of arguments in the context of the FindClientCommand","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"     * and returns a FindClientCommand object for execution.","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    public FindClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        requireAllNonNull(args);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                PREFIX_CLIENT_NAME, PREFIX_CLIENT_PHONE, PREFIX_CLIENT_EMAIL, PREFIX_CLIENT_ADDRESS);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cClient\u003e predicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addStringContainsKeywordsPredicate(","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Imranr2"},"content":"                PREFIX_CLIENT_NAME, argMultimap, Client::getName","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addStringContainsKeywordsPredicate(","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Imranr2"},"content":"                PREFIX_CLIENT_ADDRESS, argMultimap, Client::getAddress","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addStringContainsKeywordsPredicate(","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Imranr2"},"content":"                PREFIX_CLIENT_PHONE, argMultimap, Client::getPhone","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addStringContainsKeywordsPredicate(","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Imranr2"},"content":"                PREFIX_CLIENT_EMAIL, argMultimap, Client::getEmail","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"        if (predicateCollection.hasNoPredicates() || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"Imranr2"},"content":"        return new FindClientCommand(predicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"EuniceSim142":5,"Imranr2":16,"zognin":1,"-":12,"Manoharan-Ajay-Anand":14,"sivayogasubramanian":5}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/general/TabCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.general;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.general.TabCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.Parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":" * Parses input arguments and creates a new TabCommand object","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"public class TabCommandParser implements Parser\u003cTabCommand\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"     * Parses the given {@code String} of arguments in the context of the TabCommand","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"     * and returns a TabCommand object for execution.","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     * @param args String args to parse.","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     * @return {@code TabCommand}.","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    public TabCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"            return new TabCommand(index);","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, TabCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"zognin":33}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/ingredient/AddIngredientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.ingredient;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_NAME;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_UNIT;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.AddIngredientCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.IngredientDescriptor;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.Parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentMultimap;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentTokenizer;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":" * Parses input arguments and creates a new AddIngredientCommand object.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"public class AddIngredientCommandParser implements Parser\u003cAddIngredientCommand\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"     * Parses the given {@code String} of arguments in the context of the AddIngredientCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"     * and returns an AddIngredientCommand object for execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"     * @param args String input.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"     * @return AddIngredientCommand object.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    public AddIngredientCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INGREDIENT_NAME,","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"                PREFIX_INGREDIENT_QUANTITY, PREFIX_INGREDIENT_UNIT);","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"        if (!ParserUtil.areAllPrefixesPresent(argMultimap,","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"                PREFIX_INGREDIENT_NAME, PREFIX_INGREDIENT_QUANTITY, PREFIX_INGREDIENT_UNIT)","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"        IngredientDescriptor ingredientDescriptor \u003d new IngredientDescriptor();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"        ingredientDescriptor.setName(ParserUtil.parseGenericString(","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"                argMultimap.getValue(PREFIX_INGREDIENT_NAME).get(), \"Name\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"        ingredientDescriptor.setQuantity(ParserUtil.parseQuantity(","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"                argMultimap.getValue(PREFIX_INGREDIENT_QUANTITY).get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"        ingredientDescriptor.setUnit(ParserUtil.parseGenericString(argMultimap.getValue(PREFIX_INGREDIENT_UNIT).get(),","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"                \"Unit\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"        return new AddIngredientCommand(ingredientDescriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"EuniceSim142":49}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/ingredient/DeleteIngredientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.ingredient;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.DeleteIngredientCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.Parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":" * Parses the input arguments and returns a new DeleteIngredientCommand object.","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"public class DeleteIngredientCommandParser implements Parser\u003cDeleteIngredientCommand\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteIngredientCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * and returns a DeleteIngredientCommand object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public DeleteIngredientCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            return new DeleteIngredientCommand(index);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteIngredientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Manoharan-Ajay-Anand":31}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/ingredient/EditIngredientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_NAME;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_UNIT;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.EditIngredientCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.IngredientDescriptor;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.Parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentMultimap;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentTokenizer;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":" * Parses input arguments and creates a new EditIngredientCommand object","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"public class EditIngredientCommandParser implements Parser\u003cEditIngredientCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Parses the given {@code String} of arguments in the context of the EditIngredientCommand","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * and returns an EditIngredientCommand object for execution.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public EditIngredientCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INGREDIENT_NAME,","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                PREFIX_INGREDIENT_QUANTITY, PREFIX_INGREDIENT_UNIT);","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Index index;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditIngredientCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                    pe);","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        IngredientDescriptor editIngredientDescriptor \u003d new IngredientDescriptor();","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        fillIngredientDescriptor(argMultimap, editIngredientDescriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        if (!editIngredientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            throw new ParseException(EditIngredientCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        return new EditIngredientCommand(index, editIngredientDescriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    private void fillIngredientDescriptor(ArgumentMultimap argMultimap,","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                                          IngredientDescriptor ingredientDescriptor) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        if (argMultimap.getValue(PREFIX_INGREDIENT_NAME).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            ingredientDescriptor.setName(","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                    ParserUtil.parseGenericString(argMultimap.getValue(PREFIX_INGREDIENT_NAME).get(), \"Name\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        if (argMultimap.getValue(PREFIX_INGREDIENT_QUANTITY).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            ingredientDescriptor.setQuantity(","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"                    ParserUtil.parseInternalQuantity(argMultimap.getValue(PREFIX_INGREDIENT_QUANTITY).get()));","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        if (argMultimap.getValue(PREFIX_INGREDIENT_UNIT).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            ingredientDescriptor.setUnit(","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                    ParserUtil.parseGenericString(argMultimap.getValue(PREFIX_INGREDIENT_UNIT).get(), \"Unit\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Manoharan-Ajay-Anand":67,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/ingredient/FindIngredientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_NAME;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY_FROM;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY_TO;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_UNIT;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity.DEFAULT_MAX_QUANTITY_STRING;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity.DEFAULT_MIN_QUANTITY_STRING;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.FindIngredientCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.Parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentMultimap;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentTokenizer;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollection;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":" * Parses input arguments and creates a new FindIngredientCommand object","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"public class FindIngredientCommandParser implements Parser\u003cFindIngredientCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"     * Parses the given {@code String} of arguments in the context of the FindIngredientCommand","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"     * and returns a FindIngredientCommand object for execution.","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     * @param args Arguments to parse.","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     * @return {@code FindIngredientCommand}.","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    public FindIngredientCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        requireAllNonNull(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"                PREFIX_INGREDIENT_NAME, PREFIX_INGREDIENT_QUANTITY,","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"                PREFIX_INGREDIENT_QUANTITY_FROM, PREFIX_INGREDIENT_QUANTITY_TO,","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"                PREFIX_INGREDIENT_UNIT);","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        PredicateCollection\u003cIngredient\u003e predicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        predicateCollection.addStringContainsKeywordsPredicate(","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"                PREFIX_INGREDIENT_NAME, argMultimap, Ingredient::getName","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        predicateCollection.addValueInListPredicate(","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"                PREFIX_INGREDIENT_QUANTITY, argMultimap, Ingredient::getQuantity, ParserUtil::parseQuantities","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        predicateCollection.addValueWithinRangePredicate(","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"                PREFIX_INGREDIENT_QUANTITY_FROM, PREFIX_INGREDIENT_QUANTITY_TO,","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"                DEFAULT_MIN_QUANTITY_STRING, DEFAULT_MAX_QUANTITY_STRING,","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"                argMultimap, ParserUtil::parseInternalQuantity, Ingredient::getQuantity","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        predicateCollection.addStringContainsKeywordsPredicate(","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"                PREFIX_INGREDIENT_UNIT, argMultimap, Ingredient::getUnit","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"        if (predicateCollection.hasNoPredicates() || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"        return new FindIngredientCommand(predicateCollection);","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"zognin":64}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/order/AddOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.order;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.AddOrderCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_INDEX;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_DEADLINE;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_PRICE;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_QUANTITY;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_RECIPE_INGREDIENT;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_RECIPE_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.OrderDescriptor;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.Parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentMultimap;","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentTokenizer;","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.CompletionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.RecipeIngredientList;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":" * Parses input arguments and creates a new AddOrderCommand object.","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"public class AddOrderCommandParser implements Parser\u003cAddOrderCommand\u003e {","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    public AddOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"Imranr2"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CLIENT_INDEX, PREFIX_CLIENT_NAME,","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"                PREFIX_CLIENT_PHONE, PREFIX_CLIENT_ADDRESS, PREFIX_RECIPE_NAME, PREFIX_RECIPE_INGREDIENT,","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"                PREFIX_ORDER_PRICE, PREFIX_ORDER_DEADLINE, PREFIX_ORDER_QUANTITY);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"Imranr2"},"content":"        if (!areArgumentsValid(argMultimap)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Imranr2"},"content":"        OrderDescriptor orderDescriptor \u003d new OrderDescriptor();","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"        fillOrderDescriptorClientFields(orderDescriptor, argMultimap);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"        fillOrderDescriptorOrderDetailFields(orderDescriptor, argMultimap);","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"        fillOrderDescriptorRecipeFields(orderDescriptor, argMultimap);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"        return new AddOrderCommand(orderDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Imranr2"},"content":"    private boolean areArgumentsValid(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Imranr2"},"content":"        boolean isClientIndexPresent \u003d ParserUtil.areAllPrefixesPresent(argMultimap, PREFIX_CLIENT_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Imranr2"},"content":"        boolean areClientFieldsPresent \u003d ParserUtil.areAllPrefixesPresent(argMultimap,","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Imranr2"},"content":"                PREFIX_CLIENT_NAME, PREFIX_CLIENT_PHONE, PREFIX_CLIENT_ADDRESS);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"        boolean areCompulsoryRecipeFieldsPresent \u003d ParserUtil.areAllPrefixesPresent(argMultimap, PREFIX_RECIPE_NAME);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"        boolean areCompulsoryOrderDetailsPresent \u003d ParserUtil.areAllPrefixesPresent(argMultimap, PREFIX_ORDER_PRICE,","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"                PREFIX_ORDER_DEADLINE);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Imranr2"},"content":"        boolean isPreambleEmpty \u003d argMultimap.getPreamble().isEmpty();","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"        return (isClientIndexPresent || areClientFieldsPresent)","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 areCompulsoryRecipeFieldsPresent","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 areCompulsoryOrderDetailsPresent","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 isPreambleEmpty;","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"Imranr2"},"content":"    private void fillOrderDescriptorClientFields(OrderDescriptor orderDescriptor, ArgumentMultimap argMultimap)","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"Imranr2"},"content":"            throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Imranr2"},"content":"        if (argMultimap.getValue(PREFIX_CLIENT_INDEX).isPresent()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Imranr2"},"content":"            orderDescriptor.setClientIndex(ParserUtil.parseIndex(argMultimap.getValue(PREFIX_CLIENT_INDEX).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"Imranr2"},"content":"        if (argMultimap.getValue(PREFIX_CLIENT_NAME).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"            orderDescriptor.setClientName(ParserUtil","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"                    .parseGenericString(argMultimap.getValue(PREFIX_CLIENT_NAME).get(), \"Name\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"Imranr2"},"content":"        if (argMultimap.getValue(PREFIX_CLIENT_PHONE).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"Imranr2"},"content":"            orderDescriptor.setClientPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_CLIENT_PHONE).get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"Imranr2"},"content":"        if (argMultimap.getValue(PREFIX_CLIENT_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"Imranr2"},"content":"            orderDescriptor","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"Imranr2"},"content":"                    .setClientAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_CLIENT_ADDRESS).get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"    private void fillOrderDescriptorOrderDetailFields(OrderDescriptor orderDescriptor, ArgumentMultimap argMultimap)","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"            throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"        orderDescriptor.setPrice(ParserUtil.parsePrice(argMultimap.getValue(PREFIX_ORDER_PRICE).get()));","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"        orderDescriptor.setDeadline(ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_ORDER_DEADLINE).get()));","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"        if (argMultimap.getValue(PREFIX_ORDER_QUANTITY).isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"            // If the user does not provide the order quantity, it will be set to a default value of 1","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"            orderDescriptor.setQuantity(new Quantity(\"1\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"            orderDescriptor.setQuantity(ParserUtil.parseQuantity(argMultimap.getValue(PREFIX_ORDER_QUANTITY).get()));","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"        // When a new Order is added, completionStatus is set to false by default","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"        orderDescriptor.setCompletionStatus(new CompletionStatus(false));","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"sivayogasubramanian"},"content":"    private void fillOrderDescriptorRecipeFields(OrderDescriptor orderDescriptor, ArgumentMultimap argMultimap)","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"sivayogasubramanian"},"content":"            throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"        orderDescriptor.setRecipeName(ParserUtil","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"sivayogasubramanian"},"content":"                .parseGenericString(argMultimap.getValue(PREFIX_RECIPE_NAME).get(), \"Recipe Name\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"sivayogasubramanian"},"content":"        if (argMultimap.getValue(PREFIX_RECIPE_INGREDIENT).isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"            // If the user does not provide recipe ingredients, it will be set to an empty list","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"sivayogasubramanian"},"content":"            orderDescriptor.setRecipeIngredients(new RecipeIngredientList(new ArrayList\u003c\u003e()));","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"sivayogasubramanian"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"sivayogasubramanian"},"content":"            orderDescriptor.setRecipeIngredients(ParserUtil","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"sivayogasubramanian"},"content":"                    .parseRecipeIngredients(argMultimap.getValue(PREFIX_RECIPE_INGREDIENT).get()));","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"EuniceSim142":8,"Imranr2":34,"zognin":7,"sivayogasubramanian":61}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/order/AddOrderIngredientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_UNIT;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.AddOrderIngredientCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.IngredientDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.Parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentMultimap;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentTokenizer;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":" * Parses input arguments and creates a new AddOrderIngredientCommand object.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"public class AddOrderIngredientCommandParser implements Parser\u003cAddOrderIngredientCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * Parses the given {@code String} of arguments in the context of the AddOrderIngredientCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     * and returns an AddOrderIngredientCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"     * @param args User input to parse.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"     * @return Command.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    public AddOrderIngredientCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"                PREFIX_INGREDIENT_NAME, PREFIX_INGREDIENT_QUANTITY, PREFIX_INGREDIENT_UNIT);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        if (!ParserUtil.areAllPrefixesPresent(argMultimap,","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"                PREFIX_INGREDIENT_NAME, PREFIX_INGREDIENT_QUANTITY, PREFIX_INGREDIENT_UNIT)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"                    AddOrderIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        IngredientDescriptor ingredientDescriptor \u003d new IngredientDescriptor();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"        ingredientDescriptor.setName(ParserUtil.parseGenericString(","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"                argMultimap.getValue(PREFIX_INGREDIENT_NAME).get(), \"Name\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        ingredientDescriptor.setQuantity(ParserUtil.parseQuantity(","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"                argMultimap.getValue(PREFIX_INGREDIENT_QUANTITY).get()));","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        ingredientDescriptor.setUnit(ParserUtil.parseGenericString(argMultimap.getValue(PREFIX_INGREDIENT_UNIT).get(),","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"                \"Unit\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        Index index;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderIngredientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        return new AddOrderIngredientCommand(index, ingredientDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"zognin":60}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/order/DeleteOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Imranr2"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.order;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.DeleteOrderCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.Parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Imranr2"},"content":" * Parses input arguments and creates a new DeleteOrderCommand object","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"public class DeleteOrderCommandParser implements Parser\u003cDeleteOrderCommand\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteOrderCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":"     * and returns a DeleteOrderCommand object for execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":"    public DeleteOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Imranr2"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Imranr2"},"content":"            return new DeleteOrderCommand(index);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Imranr2"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Imranr2"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteOrderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Imranr2":30}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/order/DeleteOrderIngredientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_INDEX;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.DeleteOrderIngredientCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.Parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentMultimap;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentTokenizer;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":" * Parses input arguments and creates a new DeleteOrderIngredientCommand object","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"public class DeleteOrderIngredientCommandParser implements Parser\u003cDeleteOrderIngredientCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteOrderIngredientCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * and returns a DeleteOrderIngredientCommand object for execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * @param args User input to parse.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     * @return Command.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    public DeleteOrderIngredientCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INGREDIENT_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        if (!ParserUtil.areAllPrefixesPresent(argMultimap, PREFIX_INGREDIENT_INDEX)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"                    DeleteOrderIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        Index ingredientIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INGREDIENT_INDEX).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        Index orderIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"            orderIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteOrderIngredientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        return new DeleteOrderIngredientCommand(ingredientIndex, orderIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"zognin":49}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/order/DoneOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.DoneOrderCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.Parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":" * Parses input arguments and creates a new DoneOrderCommand object.","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"public class DoneOrderCommandParser implements Parser\u003cDoneOrderCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"     * Parses the given {@code String} of arguments in the context of the DoneOrderCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"     * and returns an DoneOrderCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"    public DoneOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"            return new DoneOrderCommand(index);","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneOrderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EuniceSim142":29}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/order/EditOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_INDEX;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_DEADLINE;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_PRICE;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_QUANTITY;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_RECIPE_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.EditOrderCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.OrderDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.Parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentMultimap;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentTokenizer;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":" * Parses input arguments and creates a new EditOrderCommand object","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"public class EditOrderCommandParser implements Parser\u003cEditOrderCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"     * Parses the given {@code String} of arguments in the context of the EditOrderCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"     * and returns an EditOrderCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"    public EditOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CLIENT_INDEX,","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"                PREFIX_CLIENT_NAME, PREFIX_CLIENT_PHONE, PREFIX_CLIENT_ADDRESS, PREFIX_RECIPE_NAME, PREFIX_ORDER_PRICE,","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"                PREFIX_ORDER_DEADLINE, PREFIX_ORDER_QUANTITY);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"        Index index;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditOrderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor editOrderDescriptor \u003d new OrderDescriptor();","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"        fillOrderDescriptor(argMultimap, editOrderDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"        if (!editOrderDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new ParseException(EditOrderCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"        return new EditOrderCommand(index, editOrderDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"    private void fillOrderDescriptor(ArgumentMultimap argMultimap, OrderDescriptor orderDescriptor)","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"            throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"        if (argMultimap.getValue(PREFIX_CLIENT_INDEX).isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"            orderDescriptor.setClientIndex(ParserUtil.parseIndex(argMultimap.getValue(PREFIX_CLIENT_INDEX).get()));","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"        if (argMultimap.getValue(PREFIX_CLIENT_NAME).isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"            orderDescriptor.setClientName(","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"                    ParserUtil.parseGenericString(argMultimap.getValue(PREFIX_CLIENT_NAME).get(), \"Name\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"        if (argMultimap.getValue(PREFIX_CLIENT_PHONE).isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"            orderDescriptor.setClientPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_CLIENT_PHONE).get()));","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"        if (argMultimap.getValue(PREFIX_CLIENT_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"            orderDescriptor.setClientAddress(","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"                    ParserUtil.parseAddress(argMultimap.getValue(PREFIX_CLIENT_ADDRESS).get()));","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"        if (argMultimap.getValue(PREFIX_RECIPE_NAME).isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"            orderDescriptor.setRecipeName(","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"                    ParserUtil.parseGenericString(argMultimap.getValue(PREFIX_RECIPE_NAME).get(),","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"                            \"Recipe Name\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"        if (argMultimap.getValue(PREFIX_ORDER_PRICE).isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"            orderDescriptor.setPrice(","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"                    ParserUtil.parsePrice(argMultimap.getValue(PREFIX_ORDER_PRICE).get()));","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"        if (argMultimap.getValue(PREFIX_ORDER_DEADLINE).isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"            orderDescriptor.setDeadline(","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"                    ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_ORDER_DEADLINE).get()));","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"        if (argMultimap.getValue(PREFIX_ORDER_QUANTITY).isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"            orderDescriptor.setQuantity(","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"                    ParserUtil.parseQuantity(argMultimap.getValue(PREFIX_ORDER_QUANTITY).get()));","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"sivayogasubramanian":92}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/order/FindOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Imranr2"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.order;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_COMPLETION_STATUS;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_DEADLINE;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_RECIPE_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.FindOrderCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.Parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentMultimap;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentTokenizer;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollection;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":" * Parses input arguments and creates a new FindOrderCommand object.","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Imranr2"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Imranr2"},"content":"public class FindOrderCommandParser implements Parser\u003cFindOrderCommand\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"     * Parses the given {@code String} of arguments in the context of the FindOrderCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Imranr2"},"content":"     * and returns a FindOrderCommand object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Imranr2"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Imranr2"},"content":"    public FindOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Imranr2"},"content":"        requireAllNonNull(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Imranr2"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CLIENT_NAME, PREFIX_CLIENT_PHONE, PREFIX_CLIENT_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Imranr2"},"content":"                        PREFIX_RECIPE_NAME, PREFIX_ORDER_DEADLINE, PREFIX_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cOrder\u003e predicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addStringContainsKeywordsPredicate(","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"                PREFIX_CLIENT_NAME, argMultimap, Order::getClientName","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addStringContainsKeywordsPredicate(","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Imranr2"},"content":"                PREFIX_CLIENT_PHONE, argMultimap, Order::getClientPhone","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addStringContainsKeywordsPredicate(","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Imranr2"},"content":"                PREFIX_CLIENT_ADDRESS, argMultimap, Order::getClientAddress","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addStringContainsKeywordsPredicate(","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Imranr2"},"content":"                PREFIX_RECIPE_NAME, argMultimap, Order::getRecipeName","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"        predicateCollection.addStringContainsKeywordsPredicate(","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"                PREFIX_ORDER_COMPLETION_STATUS, argMultimap, Order::getCompletionStatus","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"        );","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addValueInListPredicate(","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Imranr2"},"content":"                PREFIX_ORDER_DEADLINE, argMultimap, Order::getDeadlineDate, ParserUtil::parseDates","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"Imranr2"},"content":"        if (predicateCollection.hasNoPredicates() || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"Imranr2"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Imranr2"},"content":"        return new FindOrderCommand(predicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Imranr2"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"EuniceSim142":5,"Imranr2":57,"zognin":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/order/UndoneOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.UndoneOrderCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.Parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":" * Parses input arguments and creates a new UndoneOrderCommand object.","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"public class UndoneOrderCommandParser implements Parser\u003cUndoneOrderCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"     * Parses the given {@code String} of arguments in the context of the UndoneOrderCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"     * and returns an UndoneOrderCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"    public UndoneOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"            return new UndoneOrderCommand(index);","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UndoneOrderCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"                    pe);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EuniceSim142":30}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/util/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments **/","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":58,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/util/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":145,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/util/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"    public static final Prefix PREFIX_CLIENT_INDEX \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    public static final Prefix PREFIX_CLIENT_NAME \u003d new Prefix(\"cn/\");","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    public static final Prefix PREFIX_CLIENT_PHONE \u003d new Prefix(\"cp/\");","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"    public static final Prefix PREFIX_CLIENT_EMAIL \u003d new Prefix(\"ce/\");","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    public static final Prefix PREFIX_CLIENT_ADDRESS \u003d new Prefix(\"ca/\");","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    public static final Prefix PREFIX_INGREDIENT_INDEX \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    public static final Prefix PREFIX_INGREDIENT_NAME \u003d new Prefix(\"in/\");","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    public static final Prefix PREFIX_INGREDIENT_QUANTITY \u003d new Prefix(\"iq/\");","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    public static final Prefix PREFIX_INGREDIENT_QUANTITY_FROM \u003d new Prefix(\"iqf/\");","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    public static final Prefix PREFIX_INGREDIENT_QUANTITY_TO \u003d new Prefix(\"iqt/\");","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    public static final Prefix PREFIX_INGREDIENT_UNIT \u003d new Prefix(\"iu/\");","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final Prefix PREFIX_ORDER_DEADLINE \u003d new Prefix(\"od/\");","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    public static final Prefix PREFIX_ORDER_COMPLETION_STATUS \u003d new Prefix(\"of/\");","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final Prefix PREFIX_ORDER_PRICE \u003d new Prefix(\"op/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final Prefix PREFIX_ORDER_QUANTITY \u003d new Prefix(\"oq/\");","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final Prefix PREFIX_RECIPE_INGREDIENT \u003d new Prefix(\"ri/\");","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final Prefix PREFIX_RECIPE_NAME \u003d new Prefix(\"rn/\");","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"EuniceSim142":4,"Imranr2":1,"zognin":7,"-":7,"sivayogasubramanian":6}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/util/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.util.StringUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Email;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.CompletionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Deadline;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Price;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.RecipeIngredientList;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"Imranr2"},"content":"    public static final String MESSAGE_INVALID_KEYWORD \u003d \"Keywords for all provided prefixes should not be empty.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Imranr2"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"Date should be a valid date in dd-mm-yyyy format\";","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"    // Client-level parsers:","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"    // Order-level parsers:","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"Imranr2"},"content":"     * Parses a {@code String date} into a {@code LocalDate}.","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"Imranr2"},"content":"     * @param date String input to be parsed into a {@code LocalDate} object.","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"Imranr2"},"content":"     * @return LocalDate object.","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"Imranr2"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"Imranr2"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"Imranr2"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu\")","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"Imranr2"},"content":"                .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"Imranr2"},"content":"        LocalDate localDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"Imranr2"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"Imranr2"},"content":"            localDate \u003d LocalDate.parse(date, dateTimeFormatter);","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"Imranr2"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"Imranr2"},"content":"            throw new ParseException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"Imranr2"},"content":"        return localDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"Imranr2"},"content":"     * Parses a {@code String dates} into a {@code List\u003cLocalDate\u003e}.","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"Imranr2"},"content":"     * @param dates String input to be parsed into a list of dates.","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"Imranr2"},"content":"     * @return List of dates.","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"Imranr2"},"content":"     * @throws ParseException if the given {@code dates} is invalid.","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"Imranr2"},"content":"    public static List\u003cLocalDate\u003e parseDates(String dates) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"Imranr2"},"content":"        List\u003cLocalDate\u003e dateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"Imranr2"},"content":"        for (String stringKeyword : parseKeywords(dates)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"Imranr2"},"content":"            dateList.add(parseDate(stringKeyword));","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"Imranr2"},"content":"        return dateList;","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"Imranr2"},"content":"     * Parses a {@code String deadline} into a {@code Deadline}.","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"Imranr2"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"Imranr2"},"content":"     * @param deadline String input to parse.","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"Imranr2"},"content":"     * @return Deadline object.","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"Imranr2"},"content":"     * @throws ParseException If the given {@code deadline} is invalid.","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"Imranr2"},"content":"    public static Deadline parseDeadline(String deadline) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"Imranr2"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"Imranr2"},"content":"        String trimmedDeadline \u003d deadline.trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"Imranr2"},"content":"        if (!Deadline.isValidDeadline(trimmedDeadline)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"Imranr2"},"content":"            throw new ParseException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"Imranr2"},"content":"        return new Deadline(trimmedDeadline);","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"EuniceSim142"},"content":"     * Parses a {@code String completionStatus} into a {@code CompletionStatus}.","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"EuniceSim142"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"EuniceSim142"},"content":"     * @param completionStatus String input to parse.","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"EuniceSim142"},"content":"     * @return CompletionStatus object.","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"EuniceSim142"},"content":"     * @throws ParseException If the given {@code completionStatus} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"EuniceSim142"},"content":"    public static CompletionStatus parseCompletionStatus(String completionStatus) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(completionStatus);","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"EuniceSim142"},"content":"        String trimmedCompletionStatus \u003d completionStatus.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"EuniceSim142"},"content":"        if (!CompletionStatus.isValidCompletionStatus(trimmedCompletionStatus)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"EuniceSim142"},"content":"            throw new ParseException(CompletionStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"EuniceSim142"},"content":"        return new CompletionStatus(trimmedCompletionStatus);","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"sivayogasubramanian"},"content":"     * Parses a {@code String price} into a {@code Price}.","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"sivayogasubramanian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param price String input to parse.","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return Price object.","lastModifiedDate":"2021-10-09"},{"lineNumber":172,"author":{"gitId":"sivayogasubramanian"},"content":"     * @throws ParseException If the given {@code price} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":173,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":174,"author":{"gitId":"sivayogasubramanian"},"content":"    public static Price parsePrice(String price) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":175,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(price);","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"sivayogasubramanian"},"content":"        String trimmedPrice \u003d price.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":177,"author":{"gitId":"sivayogasubramanian"},"content":"        if (!Price.isValidPrice(trimmedPrice)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":178,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new ParseException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":179,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":180,"author":{"gitId":"sivayogasubramanian"},"content":"        return new Price(trimmedPrice);","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"EuniceSim142"},"content":"    // Recipe-level parsers:","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"sivayogasubramanian"},"content":"     * Parses a {@code String recipeIngredients} into a {@code RecipeIngredientList}.","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"sivayogasubramanian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param recipeIngredients String input to parse.","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return RecipeIngredientList object.","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"sivayogasubramanian"},"content":"     * @throws ParseException If the given {@code recipeIngredients} is invalid.","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"sivayogasubramanian"},"content":"    public static RecipeIngredientList parseRecipeIngredients(String recipeIngredients) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(recipeIngredients);","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"sivayogasubramanian"},"content":"        String trimmedRecipeIngredients \u003d recipeIngredients.trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"sivayogasubramanian"},"content":"        List\u003cIngredient\u003e ingredients \u003d parseRecipeIngredientsToList(trimmedRecipeIngredients);","lastModifiedDate":"2021-10-11"},{"lineNumber":197,"author":{"gitId":"sivayogasubramanian"},"content":"        if (!RecipeIngredientList.isValidRecipeIngredientList(ingredients)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":198,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new ParseException(RecipeIngredientList.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"sivayogasubramanian"},"content":"        return new RecipeIngredientList(ingredients);","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":202,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":203,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"sivayogasubramanian"},"content":"     * Parses the ingredient list to a {@code List\u003cIngredient\u003e}.","lastModifiedDate":"2021-10-10"},{"lineNumber":205,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param ingredientList The ingredient list to parse.","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return A list of ingredients.","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"sivayogasubramanian"},"content":"    private static List\u003cIngredient\u003e parseRecipeIngredientsToList(String ingredientList) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(ingredientList);","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"sivayogasubramanian"},"content":"        List\u003cIngredient\u003e listOfIngredients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"sivayogasubramanian"},"content":"        String[] ingredientListArray \u003d ingredientList.split(\",\");","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"sivayogasubramanian"},"content":"        for (String individualIngredient : ingredientListArray) {","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"sivayogasubramanian"},"content":"            Ingredient ingredient \u003d parseRecipeIngredient(individualIngredient.trim());","lastModifiedDate":"2021-10-11"},{"lineNumber":216,"author":{"gitId":"sivayogasubramanian"},"content":"            listOfIngredients.add(ingredient);","lastModifiedDate":"2021-10-11"},{"lineNumber":217,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"sivayogasubramanian"},"content":"        return listOfIngredients;","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":223,"author":{"gitId":"sivayogasubramanian"},"content":"     * Parses the individual ingredient to a {@code Ingredient}.","lastModifiedDate":"2021-10-10"},{"lineNumber":224,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param individualIngredient The ingredient to parse.","lastModifiedDate":"2021-10-10"},{"lineNumber":226,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return An {@code Optional\u003cIngredient\u003e} object.","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"sivayogasubramanian"},"content":"    private static Ingredient parseRecipeIngredient(String individualIngredient) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":229,"author":{"gitId":"sivayogasubramanian"},"content":"        String[] individualIngredientArray \u003d individualIngredient.split(\"-\", 3);","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":231,"author":{"gitId":"sivayogasubramanian"},"content":"        if (individualIngredientArray.length !\u003d 3) {","lastModifiedDate":"2021-10-10"},{"lineNumber":232,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new ParseException(RecipeIngredientList.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":233,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":234,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":235,"author":{"gitId":"sivayogasubramanian"},"content":"        String recipeName \u003d individualIngredientArray[0];","lastModifiedDate":"2021-10-10"},{"lineNumber":236,"author":{"gitId":"sivayogasubramanian"},"content":"        String quantity \u003d individualIngredientArray[1];","lastModifiedDate":"2021-10-10"},{"lineNumber":237,"author":{"gitId":"sivayogasubramanian"},"content":"        String unit \u003d individualIngredientArray[2];","lastModifiedDate":"2021-10-10"},{"lineNumber":238,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":239,"author":{"gitId":"sivayogasubramanian"},"content":"        if (!Ingredient.isValidIngredient(recipeName, quantity, unit)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":240,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new ParseException(RecipeIngredientList.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":241,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":242,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":243,"author":{"gitId":"sivayogasubramanian"},"content":"        return new Ingredient(new GenericString(recipeName), new Quantity(quantity), new GenericString(unit));","lastModifiedDate":"2021-10-11"},{"lineNumber":244,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":245,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":246,"author":{"gitId":"EuniceSim142"},"content":"    // Shared-level parsers:","lastModifiedDate":"2021-10-08"},{"lineNumber":247,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":248,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":249,"author":{"gitId":"EuniceSim142"},"content":"     * Parses a {@code String genericString} into a {@code GenericString}.","lastModifiedDate":"2021-10-08"},{"lineNumber":250,"author":{"gitId":"EuniceSim142"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-06"},{"lineNumber":251,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":252,"author":{"gitId":"EuniceSim142"},"content":"     * @param genericString String input to parse.","lastModifiedDate":"2021-10-08"},{"lineNumber":253,"author":{"gitId":"EuniceSim142"},"content":"     * @param attributeName name of attribute that the generic String represents (Unit, Name).","lastModifiedDate":"2021-10-08"},{"lineNumber":254,"author":{"gitId":"EuniceSim142"},"content":"     * @return GenericString object.","lastModifiedDate":"2021-10-08"},{"lineNumber":255,"author":{"gitId":"EuniceSim142"},"content":"     * @throws ParseException if the given {@code genericString} is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":256,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":257,"author":{"gitId":"EuniceSim142"},"content":"    public static GenericString parseGenericString(String genericString, String attributeName) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":258,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(genericString);","lastModifiedDate":"2021-10-08"},{"lineNumber":259,"author":{"gitId":"EuniceSim142"},"content":"        String trimmedGenericString \u003d genericString.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":260,"author":{"gitId":"EuniceSim142"},"content":"        if (!GenericString.isValidGenericString(trimmedGenericString)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":261,"author":{"gitId":"EuniceSim142"},"content":"            throw new ParseException(GenericString.getMessageConstraints(attributeName));","lastModifiedDate":"2021-10-08"},{"lineNumber":262,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":263,"author":{"gitId":"EuniceSim142"},"content":"        return new GenericString(trimmedGenericString);","lastModifiedDate":"2021-10-08"},{"lineNumber":264,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":265,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":266,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":267,"author":{"gitId":"zognin"},"content":"     * Parses a {code String keywords} into a {@code List\u003cString\u003e}.","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"sivayogasubramanian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":269,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":270,"author":{"gitId":"zognin"},"content":"     * @param keywords Keywords to be parsed.","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"zognin"},"content":"     * @return List of strings containing all the keywords.","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"zognin"},"content":"     * @throws ParseException if the given {@code keywords} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"zognin"},"content":"    public static List\u003cString\u003e parseKeywords(String keywords) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"zognin"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"zognin"},"content":"        String trimmedKeywords \u003d keywords.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"zognin"},"content":"        if (trimmedKeywords.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"zognin"},"content":"            throw new ParseException(MESSAGE_INVALID_KEYWORD);","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":280,"author":{"gitId":"zognin"},"content":"        return List.of(trimmedKeywords.split(\"\\\\s+\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"zognin"},"content":"     * Parses a {@code String quantity} into a {@code Quantity}.","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"zognin"},"content":"     * For internal use there is a wider definition of a valid quantity.","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":287,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param quantity String input to parse.","lastModifiedDate":"2021-10-09"},{"lineNumber":288,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return Quantity object.","lastModifiedDate":"2021-10-09"},{"lineNumber":289,"author":{"gitId":"sivayogasubramanian"},"content":"     * @throws ParseException if the given {@code quantity} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":290,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":291,"author":{"gitId":"zognin"},"content":"    public static Quantity parseInternalQuantity(String quantity) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(quantity);","lastModifiedDate":"2021-10-09"},{"lineNumber":293,"author":{"gitId":"sivayogasubramanian"},"content":"        String trimmedQuantity \u003d quantity.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":294,"author":{"gitId":"zognin"},"content":"        if (!Quantity.isValidInternalQuantity(trimmedQuantity)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"zognin"},"content":"            throw new ParseException(Quantity.MESSAGE_INTERNAL_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":297,"author":{"gitId":"sivayogasubramanian"},"content":"        return new Quantity(trimmedQuantity);","lastModifiedDate":"2021-10-09"},{"lineNumber":298,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":299,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":300,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":301,"author":{"gitId":"zognin"},"content":"     * Parses a {@code String quantity} into a {@code Quantity}.","lastModifiedDate":"2021-10-12"},{"lineNumber":302,"author":{"gitId":"Imranr2"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-10"},{"lineNumber":303,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":304,"author":{"gitId":"zognin"},"content":"     * @param quantity String input to parse.","lastModifiedDate":"2021-10-12"},{"lineNumber":305,"author":{"gitId":"zognin"},"content":"     * @return Quantity object.","lastModifiedDate":"2021-10-12"},{"lineNumber":306,"author":{"gitId":"zognin"},"content":"     * @throws ParseException if the given {@code quantity} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":307,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":308,"author":{"gitId":"zognin"},"content":"    public static Quantity parseQuantity(String quantity) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":309,"author":{"gitId":"zognin"},"content":"        requireNonNull(quantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":310,"author":{"gitId":"zognin"},"content":"        String trimmedQuantity \u003d quantity.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":311,"author":{"gitId":"zognin"},"content":"        if (!Quantity.isValidQuantity(trimmedQuantity)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":312,"author":{"gitId":"zognin"},"content":"            throw new ParseException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":313,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":314,"author":{"gitId":"zognin"},"content":"        return new Quantity(trimmedQuantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":315,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":316,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":317,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":318,"author":{"gitId":"zognin"},"content":"     * Parses a {@code String quantities} into a {@code List\u003cQuantity\u003e}.","lastModifiedDate":"2021-10-11"},{"lineNumber":319,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":320,"author":{"gitId":"Imranr2"},"content":"     * @param quantities String input to be parsed into a list of quantities.","lastModifiedDate":"2021-10-13"},{"lineNumber":321,"author":{"gitId":"zognin"},"content":"     * @return List of quantities.","lastModifiedDate":"2021-10-11"},{"lineNumber":322,"author":{"gitId":"zognin"},"content":"     * @throws ParseException if the given {@code quantities} is invalid.","lastModifiedDate":"2021-10-11"},{"lineNumber":323,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":324,"author":{"gitId":"zognin"},"content":"    public static List\u003cQuantity\u003e parseQuantities(String quantities) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":325,"author":{"gitId":"zognin"},"content":"        ArrayList\u003cQuantity\u003e quantityList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":326,"author":{"gitId":"zognin"},"content":"        for (String stringKeyword : parseKeywords(quantities)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":327,"author":{"gitId":"zognin"},"content":"            quantityList.add(parseInternalQuantity(stringKeyword));","lastModifiedDate":"2021-10-11"},{"lineNumber":328,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":329,"author":{"gitId":"zognin"},"content":"        return quantityList;","lastModifiedDate":"2021-10-11"},{"lineNumber":330,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":331,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":332,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":333,"author":{"gitId":"zognin"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-09-21"},{"lineNumber":334,"author":{"gitId":"zognin"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-09-21"},{"lineNumber":335,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":336,"author":{"gitId":"zognin"},"content":"    public static boolean areAllPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-09-22"},{"lineNumber":337,"author":{"gitId":"zognin"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-09-21"},{"lineNumber":338,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"EuniceSim142":52,"Imranr2":60,"zognin":55,"-":69,"sivayogasubramanian":103}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/util/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":38,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.UniqueClientList;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.UniqueIngredientList;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.UniqueOrderList;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":" * Duplicates are not allowed (by .isSameClient and .isSameIngredient comparisons)","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    private final UniqueClientList clients;","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    private final UniqueIngredientList ingredients;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    private final UniqueOrderList orders;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        clients \u003d new UniqueClientList();","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"        ingredients \u003d new UniqueIngredientList();","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"        orders \u003d new UniqueOrderList();","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"     * Creates an AddressBook using the Clients, Orders and Ingredients in the {@code toBeCopied}","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"     * Replaces the contents of the client list with {@code clients}.","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"        this.clients.setClients(clients);","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"     * Replaces the contents of the ingredients list with {@code ingredients}","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"     * {@code ingredients} must not contain duplicate orders.","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"     * @param ingredients Ingredients to replace the list with.","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"    public void setIngredients(List\u003cIngredient\u003e ingredients) {","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"        this.ingredients.setIngredients(ingredients);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"     * Replaces the contents of the orders list with {@code orders}","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"     * {@code orders} must not contain duplicate orders.","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"     * @param orders Orders to replace the list with.","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"        this.orders.setOrders(orders);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"        setClients(newData.getClientList());","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"EuniceSim142"},"content":"        setIngredients(newData.getIngredientList());","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"        setOrders(newData.getOrderList());","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"EuniceSim142"},"content":"    //// client-level operations","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"EuniceSim142"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(client);","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"EuniceSim142"},"content":"        return clients.contains(client);","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"EuniceSim142"},"content":"     * Adds a client to the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"EuniceSim142"},"content":"     * The client must not already exist in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"EuniceSim142"},"content":"    public void addClient(Client c) {","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"EuniceSim142"},"content":"        clients.add(c);","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"EuniceSim142"},"content":"     * Replaces the given client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"EuniceSim142"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"EuniceSim142"},"content":"    public void setClient(Client target, Client editedClient) throws NotFoundException {","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(editedClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"EuniceSim142"},"content":"        clients.setClient(target, editedClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"EuniceSim142"},"content":"    public void removeClient(Client key) throws NotFoundException {","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"EuniceSim142"},"content":"        clients.remove(key);","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"EuniceSim142"},"content":"    //// ingredient-level operations","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"EuniceSim142"},"content":"     * Adds an ingredient to the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"EuniceSim142"},"content":"     * The ingredient must not already exist in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"EuniceSim142"},"content":"     * @param ingredient Ingredient to be added.","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"EuniceSim142"},"content":"    public void addIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"EuniceSim142"},"content":"        ingredients.add(ingredient);","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"EuniceSim142"},"content":"     * Returns true if an ingredient with the same identity as {@code ingredient} exists in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"EuniceSim142"},"content":"     * @param ingredient to check.","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"EuniceSim142"},"content":"    public boolean hasIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"EuniceSim142"},"content":"        return ingredients.contains(ingredient);","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"zognin"},"content":"     * Replaces the similar ingredient that is in the address book with a new ingredient whose quantity is increased","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"zognin"},"content":"     * by the quantity in {@code target} if it exists.","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"zognin"},"content":"     * @param target The target ingredient.","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"zognin"},"content":"     * @param multiplier The multiplier.","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"zognin"},"content":"    public void addIngredientQuantity(Ingredient target, Quantity multiplier) {","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"zognin"},"content":"        requireAllNonNull(target, multiplier);","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"zognin"},"content":"        ingredients.addIngredientQuantity(target, multiplier);","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"sivayogasubramanian"},"content":"     * Replaces the similar ingredient that is in the address book with a new ingredient whose quantity is reduced","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"sivayogasubramanian"},"content":"     * by the quantity in {@code target} if it exists.","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param target The target ingredient.","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param multiplier The multiplier.","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"sivayogasubramanian"},"content":"    public void minusIngredientQuantity(Ingredient target, Quantity multiplier) {","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"sivayogasubramanian"},"content":"        requireAllNonNull(target, multiplier);","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"sivayogasubramanian"},"content":"        ingredients.minusIngredientQuantity(target, multiplier);","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":174,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Removes the given ingredient from the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":175,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * The given ingredient must exist in the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":177,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @param ingredientToRemove The ingredient to remove from the ingredients list.","lastModifiedDate":"2021-10-09"},{"lineNumber":178,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @throws NotFoundException when the given ingredient does not exist in the ingredients list.","lastModifiedDate":"2021-10-09"},{"lineNumber":179,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":180,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void removeIngredient(Ingredient ingredientToRemove) throws NotFoundException {","lastModifiedDate":"2021-10-09"},{"lineNumber":181,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        requireNonNull(ingredientToRemove);","lastModifiedDate":"2021-10-09"},{"lineNumber":182,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        ingredients.remove(ingredientToRemove);","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Replaces the existing target Ingredient in the address book with an edited Ingredient.","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @param target The target ingredient to replace.","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @param editedIngredient The edited ingredient to replace with.","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @throws NotFoundException if the target ingredient does not exist in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void setIngredient(Ingredient target, Ingredient editedIngredient) throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        requireAllNonNull(target, editedIngredient);","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        ingredients.setIngredient(target, editedIngredient);","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"EuniceSim142"},"content":"    //// order-level operations","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"EuniceSim142"},"content":"     * Adds an order to the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"EuniceSim142"},"content":"     * The order must not already exist in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"EuniceSim142"},"content":"     * @param order Order to be added.","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"EuniceSim142"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"EuniceSim142"},"content":"        orders.add(order);","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":208,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":209,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":210,"author":{"gitId":"EuniceSim142"},"content":"     * Returns true if an order with the same identity as {@code order} exists in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":211,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":212,"author":{"gitId":"EuniceSim142"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2021-10-08"},{"lineNumber":213,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(order);","lastModifiedDate":"2021-10-08"},{"lineNumber":214,"author":{"gitId":"EuniceSim142"},"content":"        return orders.contains(order);","lastModifiedDate":"2021-10-08"},{"lineNumber":215,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":216,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"Imranr2"},"content":"     * Deletes the given order.","lastModifiedDate":"2021-10-13"},{"lineNumber":219,"author":{"gitId":"Imranr2"},"content":"     * The order must exist in the address book.","lastModifiedDate":"2021-10-13"},{"lineNumber":220,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":221,"author":{"gitId":"Imranr2"},"content":"     * @param orderToRemove The order to remove from the orders list.","lastModifiedDate":"2021-10-13"},{"lineNumber":222,"author":{"gitId":"Imranr2"},"content":"     * @throws NotFoundException when the given order does not exist in the orders list.","lastModifiedDate":"2021-10-13"},{"lineNumber":223,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":224,"author":{"gitId":"Imranr2"},"content":"    public void removeOrder(Order orderToRemove) throws NotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":225,"author":{"gitId":"Imranr2"},"content":"        requireNonNull(orderToRemove);","lastModifiedDate":"2021-10-13"},{"lineNumber":226,"author":{"gitId":"Imranr2"},"content":"        orders.remove(orderToRemove);","lastModifiedDate":"2021-10-13"},{"lineNumber":227,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":229,"author":{"gitId":"EuniceSim142"},"content":"    /** Replaces the existing target Order in the address book with an edited Order.","lastModifiedDate":"2021-10-13"},{"lineNumber":230,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param target The target Order to replace.","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"zognin"},"content":"     * @param editedOrder The edited order to replace with.","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"sivayogasubramanian"},"content":"     * @throws NotFoundException If the target order does not exist in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"zognin"},"content":"    public void setOrder(Order target, Order editedOrder) throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"zognin"},"content":"        requireAllNonNull(target, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"zognin"},"content":"        orders.setOrder(target, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"EuniceSim142"},"content":"        return clients.asUnmodifiableObservableList().size() + \" clients\";","lastModifiedDate":"2021-09-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"zognin"},"content":"    public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":250,"author":{"gitId":"zognin"},"content":"        return clients.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-01"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":253,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":254,"author":{"gitId":"zognin"},"content":"    public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":255,"author":{"gitId":"zognin"},"content":"        return orders.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-01"},{"lineNumber":256,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":257,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":258,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":259,"author":{"gitId":"EuniceSim142"},"content":"    public ObservableList\u003cIngredient\u003e getIngredientList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":260,"author":{"gitId":"EuniceSim142"},"content":"        return ingredients.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-06"},{"lineNumber":261,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":262,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":267,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 clients.equals(((AddressBook) other).clients));","lastModifiedDate":"2021-09-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":272,"author":{"gitId":"EuniceSim142"},"content":"        return clients.hashCode();","lastModifiedDate":"2021-09-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"EuniceSim142":97,"Imranr2":10,"zognin":42,"-":81,"Manoharan-Ajay-Anand":30,"sivayogasubramanian":14}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.GuiSettings;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    Predicate\u003cClient\u003e PREDICATE_SHOW_ALL_CLIENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    Predicate\u003cIngredient\u003e PREDICATE_SHOW_ALL_INGREDIENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"    Predicate\u003cOrder\u003e PREDICATE_SHOW_ALL_ORDERS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPref \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Client \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"    boolean hasClient(Client client);","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"     * Deletes the given client.","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"     * The client must exist in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"    void deleteClient(Client target) throws NotFoundException;","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"     * Adds the given client.","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"     * {@code client} must not already exist in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"EuniceSim142"},"content":"    void addClient(Client client);","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"EuniceSim142"},"content":"     * Replaces the given client {@code target} with {@code editedClient}.","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"EuniceSim142"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"EuniceSim142"},"content":"    void setClient(Client target, Client editedClient) throws NotFoundException;","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"EuniceSim142"},"content":"    /** Returns an unmodifiable view of the filtered client list */","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"     * Updates the filter of the filtered client list to filter by the given {@code predicate}.","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"EuniceSim142"},"content":"    void updateFilteredClientList(Predicate\u003cClient\u003e predicate);","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"EuniceSim142"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Ingredient \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"EuniceSim142"},"content":"     * Adds the given ingredient.","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"EuniceSim142"},"content":"     * {@code ingredient} must not already exist in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"EuniceSim142"},"content":"     * @param ingredient to add.","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"EuniceSim142"},"content":"    void addIngredient(Ingredient ingredient);","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"EuniceSim142"},"content":"     * Returns true if an ingredient with the same identity as {@code ingredient} exists in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"EuniceSim142"},"content":"     * @param ingredient to check.","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"EuniceSim142"},"content":"    boolean hasIngredient(Ingredient ingredient);","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Deletes the given ingredient.","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @param target The ingredient to delete.","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @throws NotFoundException when the ingredient does not exist in the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    void deleteIngredient(Ingredient target) throws NotFoundException;","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Replaces the existing target Ingredient in the address book with an edited Ingredient.","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @param target The target ingredient to replace.","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @param editedIngredient The edited ingredient to replace with.","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @throws NotFoundException if the target ingredient does not exist in the address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    void setIngredient(Ingredient target, Ingredient editedIngredient) throws NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"EuniceSim142"},"content":"    /** Returns an unmodifiable view of the filtered ingredient list */","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"EuniceSim142"},"content":"    ObservableList\u003cIngredient\u003e getFilteredIngredientList();","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"sivayogasubramanian"},"content":"     * Adds the quantity of the ingredient that is the same as the {@code target} ingredient if it exists.","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param target The target ingredient.","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param multiplier The multiplier.","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"sivayogasubramanian"},"content":"    void addIngredientQuantity(Ingredient target, Quantity multiplier);","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"sivayogasubramanian"},"content":"     * Reduces the quantity of the ingredient that is the same as the {@code target} ingredient if it exists.","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param target The target ingredient.","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param multiplier The multiplier.","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"sivayogasubramanian"},"content":"    void minusIngredientQuantity(Ingredient target, Quantity multiplier);","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"EuniceSim142"},"content":"     * Updates the filter of the filtered ingredient list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"EuniceSim142"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"EuniceSim142"},"content":"    void updateFilteredIngredientList(Predicate\u003cIngredient\u003e predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"zognin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Order \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":163,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":164,"author":{"gitId":"zognin"},"content":"     * Adds the given order.","lastModifiedDate":"2021-10-01"},{"lineNumber":165,"author":{"gitId":"zognin"},"content":"     * {@code order} must not already exist in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":166,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":167,"author":{"gitId":"zognin"},"content":"    void addOrder(Order order);","lastModifiedDate":"2021-10-01"},{"lineNumber":168,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":169,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":170,"author":{"gitId":"zognin"},"content":"     * Returns true if an order with the same identity as {@code order} exists in the address book.","lastModifiedDate":"2021-10-02"},{"lineNumber":171,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":172,"author":{"gitId":"zognin"},"content":"    boolean hasOrder(Order order);","lastModifiedDate":"2021-10-02"},{"lineNumber":173,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":174,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"Imranr2"},"content":"     * Deletes the given order.","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"Imranr2"},"content":"     * The order must exist in the address book.","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":178,"author":{"gitId":"Imranr2"},"content":"     * @param target The order to remove from the orders list.","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"Imranr2"},"content":"     * @throws NotFoundException when the given order does not exist in the orders list.","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"Imranr2"},"content":"    void deleteOrder(Order target) throws NotFoundException;","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"EuniceSim142"},"content":"     * Replaces the given order {@code target} with {@code editedOrder}.","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"EuniceSim142"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"EuniceSim142"},"content":"     * The order identity of {@code editedOrder} must not be the same as another existing order in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"EuniceSim142"},"content":"     * @param target Order being replaced.","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"EuniceSim142"},"content":"     * @param editedOrder Order to replace with.","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"EuniceSim142"},"content":"     * @throws NotFoundException If target does not exist in currently shown order list.","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"EuniceSim142"},"content":"    void setOrder(Order target, Order editedOrder) throws NotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"zognin"},"content":"    /** Returns an unmodifiable view of the filtered order list */","lastModifiedDate":"2021-10-05"},{"lineNumber":195,"author":{"gitId":"zognin"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2021-10-05"},{"lineNumber":196,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":197,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":198,"author":{"gitId":"zognin"},"content":"     * Updates the filter of the filtered order list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-01"},{"lineNumber":199,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":200,"author":{"gitId":"zognin"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-01"},{"lineNumber":201,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":202,"author":{"gitId":"zognin"},"content":"    void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":203,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":204,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"EuniceSim142":58,"Imranr2":9,"zognin":31,"-":68,"Manoharan-Ajay-Anand":17,"sivayogasubramanian":22}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.GuiSettings;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.LogsCenter;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    private final FilteredList\u003cClient\u003e filteredClients;","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    private final FilteredList\u003cIngredient\u003e filteredIngredients;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    private final FilteredList\u003cOrder\u003e filteredOrders;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        filteredClients \u003d new FilteredList\u003c\u003e(this.addressBook.getClientList());","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"        filteredIngredients \u003d new FilteredList\u003c\u003e(this.addressBook.getIngredientList());","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"        filteredOrders \u003d new FilteredList\u003c\u003e(this.addressBook.getOrderList());","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Client \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"EuniceSim142"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(client);","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"EuniceSim142"},"content":"        return addressBook.hasClient(client);","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"EuniceSim142"},"content":"    public void deleteClient(Client target) throws NotFoundException {","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"EuniceSim142"},"content":"        addressBook.removeClient(target);","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"EuniceSim142"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"EuniceSim142"},"content":"        addressBook.addClient(client);","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"EuniceSim142"},"content":"        updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"EuniceSim142"},"content":"    public void setClient(Client target, Client editedClient) throws NotFoundException {","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"EuniceSim142"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"EuniceSim142"},"content":"        addressBook.setClient(target, editedClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":125,"author":{"gitId":"EuniceSim142"},"content":"     * Returns an unmodifiable view of the list of {@code Client} backed by the internal list of","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"EuniceSim142"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"EuniceSim142"},"content":"        return filteredClients;","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"EuniceSim142"},"content":"    public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2021-09-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":136,"author":{"gitId":"EuniceSim142"},"content":"        filteredClients.setPredicate(predicate);","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"EuniceSim142"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Ingredient \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"EuniceSim142"},"content":"     * Implements addIngredient method.","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"EuniceSim142"},"content":"     * {@code ingredient} must not already exist in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"EuniceSim142"},"content":"     * @param ingredient to add.","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"EuniceSim142"},"content":"    public void addIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"EuniceSim142"},"content":"        addressBook.addIngredient(ingredient);","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"EuniceSim142"},"content":"        updateFilteredIngredientList(PREDICATE_SHOW_ALL_INGREDIENTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":153,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"EuniceSim142"},"content":"     * Implements hasIngredient method.","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"EuniceSim142"},"content":"     * Returns true if an ingredient with the same identity as {@code ingredient} exists in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"EuniceSim142"},"content":"     * @param ingredient to check.","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":160,"author":{"gitId":"EuniceSim142"},"content":"    public boolean hasIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"EuniceSim142"},"content":"        return addressBook.hasIngredient(ingredient);","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":164,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":165,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Implements deleteIngredient method.","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Deletes the given ingredient from the address book. The given ingredient","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * must exist in the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @param target The ingredient to delete.","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @throws NotFoundException when the ingredient given does not exist in the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":172,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":173,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":174,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void deleteIngredient(Ingredient target) throws NotFoundException {","lastModifiedDate":"2021-10-09"},{"lineNumber":175,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        addressBook.removeIngredient(target);","lastModifiedDate":"2021-10-09"},{"lineNumber":177,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":178,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":179,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Implements setIngredient method.","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Replaces the existing Ingredient in the address book with an edited Ingredient.","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @param target The target ingredient to replace.","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @param editedIngredient The edited ingredient to replace with.","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @throws NotFoundException if the target ingredient was not found in the address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void setIngredient(Ingredient target, Ingredient editedIngredient) throws NotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        requireAllNonNull(target, editedIngredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        addressBook.setIngredient(target, editedIngredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":194,"author":{"gitId":"EuniceSim142"},"content":"     * Returns an unmodifiable view of the list of {@code Ingredient} backed by the internal list of","lastModifiedDate":"2021-10-08"},{"lineNumber":195,"author":{"gitId":"EuniceSim142"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-08"},{"lineNumber":196,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":197,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":198,"author":{"gitId":"EuniceSim142"},"content":"    public ObservableList\u003cIngredient\u003e getFilteredIngredientList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"EuniceSim142"},"content":"        return filteredIngredients;","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":201,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":202,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"sivayogasubramanian"},"content":"     * Implements addIngredientQuantity method.","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param target The target ingredient.","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param multiplier The multiplier.","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"sivayogasubramanian"},"content":"    public void addIngredientQuantity(Ingredient target, Quantity multiplier) {","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"sivayogasubramanian"},"content":"        requireAllNonNull(target, multiplier);","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"sivayogasubramanian"},"content":"        addressBook.addIngredientQuantity(target, multiplier);","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"sivayogasubramanian"},"content":"     * Implements minusIngredientQuantity method.","lastModifiedDate":"2021-10-10"},{"lineNumber":216,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param target The target ingredient.","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param multiplier The multiplier.","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"sivayogasubramanian"},"content":"    public void minusIngredientQuantity(Ingredient target, Quantity multiplier) {","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"sivayogasubramanian"},"content":"        requireAllNonNull(target, multiplier);","lastModifiedDate":"2021-10-10"},{"lineNumber":223,"author":{"gitId":"sivayogasubramanian"},"content":"        addressBook.minusIngredientQuantity(target, multiplier);","lastModifiedDate":"2021-10-10"},{"lineNumber":224,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":226,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":227,"author":{"gitId":"EuniceSim142"},"content":"     * Updates the filter of the filtered ingredient list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-08"},{"lineNumber":228,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":229,"author":{"gitId":"EuniceSim142"},"content":"     * @param predicate given filter to filter list by.","lastModifiedDate":"2021-10-08"},{"lineNumber":230,"author":{"gitId":"EuniceSim142"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-08"},{"lineNumber":231,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":232,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":233,"author":{"gitId":"EuniceSim142"},"content":"    public void updateFilteredIngredientList(Predicate\u003cIngredient\u003e predicate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":234,"author":{"gitId":"zognin"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":235,"author":{"gitId":"EuniceSim142"},"content":"        filteredIngredients.setPredicate(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":236,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":237,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":238,"author":{"gitId":"EuniceSim142"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Order \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":239,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":240,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":241,"author":{"gitId":"EuniceSim142"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2021-10-08"},{"lineNumber":242,"author":{"gitId":"EuniceSim142"},"content":"        addressBook.addOrder(order);","lastModifiedDate":"2021-10-08"},{"lineNumber":243,"author":{"gitId":"EuniceSim142"},"content":"        updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-10-08"},{"lineNumber":244,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":245,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":246,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":247,"author":{"gitId":"EuniceSim142"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2021-10-08"},{"lineNumber":248,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(order);","lastModifiedDate":"2021-10-08"},{"lineNumber":249,"author":{"gitId":"EuniceSim142"},"content":"        return addressBook.hasOrder(order);","lastModifiedDate":"2021-10-08"},{"lineNumber":250,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":251,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":252,"author":{"gitId":"Imranr2"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":253,"author":{"gitId":"Imranr2"},"content":"    public void deleteOrder(Order target) throws NotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":254,"author":{"gitId":"Imranr2"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-10-13"},{"lineNumber":255,"author":{"gitId":"Imranr2"},"content":"        addressBook.removeOrder(target);","lastModifiedDate":"2021-10-13"},{"lineNumber":256,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":257,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":258,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"EuniceSim142"},"content":"     * Replaces the given order {@code target} with {@code editedOrder}.","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"EuniceSim142"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"EuniceSim142"},"content":"     * The order identity of {@code editedOrder} must not be the same as another existing order in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"EuniceSim142"},"content":"     * @param target Order being replaced.","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"EuniceSim142"},"content":"     * @param editedOrder Order to replace with.","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"EuniceSim142"},"content":"     * @throws NotFoundException If target does not exist in currently shown order list.","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"EuniceSim142"},"content":"    public void setOrder(Order target, Order editedOrder) throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"sivayogasubramanian"},"content":"        requireAllNonNull(target, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"EuniceSim142"},"content":"        addressBook.setOrder(target, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":274,"author":{"gitId":"EuniceSim142"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":275,"author":{"gitId":"EuniceSim142"},"content":"        return filteredOrders;","lastModifiedDate":"2021-10-08"},{"lineNumber":276,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":277,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":278,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":279,"author":{"gitId":"EuniceSim142"},"content":"    public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":280,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":281,"author":{"gitId":"EuniceSim142"},"content":"        filteredOrders.setPredicate(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":282,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":283,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":300,"author":{"gitId":"zognin"},"content":"                \u0026\u0026 filteredClients.equals(other.filteredClients)","lastModifiedDate":"2021-10-01"},{"lineNumber":301,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 filteredOrders.equals(other.filteredOrders)","lastModifiedDate":"2021-10-06"},{"lineNumber":302,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 filteredIngredients.equals(other.filteredIngredients);","lastModifiedDate":"2021-10-06"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"EuniceSim142":95,"Imranr2":6,"zognin":21,"-":122,"Manoharan-Ajay-Anand":28,"sivayogasubramanian":32}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"     * Returns an unmodifiable view of the clients list.","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"     * This list will not contain any duplicate clients.","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"     * @return Observable view of clients list.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    ObservableList\u003cClient\u003e getClientList();","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"     * Returns an unmodifiable view of the ingredients list.","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"     * This list will not contain any duplicate ingredients.","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"     * @return Observable view of ingredients list.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    ObservableList\u003cIngredient\u003e getIngredientList();","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"     * Returns an unmodifiable view of the orders list.","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"     * This list will not contain any duplicate orders.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"     * @return Observable view of orders list.","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"    ObservableList\u003cOrder\u003e getOrderList();","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"EuniceSim142":18,"zognin":7,"-":8,"sivayogasubramanian":2}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.GuiSettings;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":12,"sivayogasubramanian":2}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.GuiSettings;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\", \"btbb.json\");","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":82,"sivayogasubramanian":3}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/client/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":" * Represents a Client\u0027s address in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"    private final String address;","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"        return address;","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 address.equals(((Address) other).address)); // state check","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"        return address.hashCode();","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EuniceSim142":1,"-":46,"sivayogasubramanian":8}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/client/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":" * Represents a Client in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"public class Client {","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    private final GenericString name;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    public Client(GenericString name, Phone phone, Email email, Address address) {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        requireAllNonNull(name, phone, email, address);","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"    public GenericString getName() {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"     * Returns true if both clients have the same phone.","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"     * This defines a weaker notion of equality between two clients.","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"    public boolean isSameClient(Client otherClient) {","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"        if (otherClient \u003d\u003d this) {","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"        return otherClient !\u003d null","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 otherClient.getPhone().equals(getPhone());","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"     * Returns true if both clients have the same identity and data fields.","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"     * This defines a stronger notion of equality between two clients.","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"        if (!(other instanceof Client)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"        Client otherClient \u003d (Client) other;","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"        return otherClient.getName().equals(getName())","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 otherClient.getPhone().equals(getPhone())","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 otherClient.getEmail().equals(getEmail())","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 otherClient.getAddress().equals(getAddress());","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"        return Objects.hash(name, phone, email, address);","lastModifiedDate":"2021-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EuniceSim142":21,"zognin":2,"-":77,"sivayogasubramanian":2}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/client/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":" * Represents a Client\u0027s email in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"    private final String email;","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"        return email;","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 email.equals(((Email) other).email)); // state check","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"        return email.hashCode();","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EuniceSim142":1,"-":60,"sivayogasubramanian":8}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/client/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":" * Represents a Client\u0027s phone number in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"    private final String phoneNumber;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"        phoneNumber \u003d phone;","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"        return phoneNumber;","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 phoneNumber.equals(((Phone) other).phoneNumber)); // state check","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"        return phoneNumber.hashCode();","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EuniceSim142":1,"-":41,"sivayogasubramanian":8}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/client/UniqueClientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import java.util.List;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":" * A list of clients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":" * A client is considered unique by comparing using {@code Client#isSameClient(Client)}. As such, adding and updating of","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":" * clients uses Client#isSameClient(Client) for equality so as to ensure that the client being added or updated is","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":" * unique in terms of identity in the UniqueClientList. However, the removal of a client uses Client#equals(Object) so","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":" * as to ensure that the client with exactly the same fields will be removed.","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":" *","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":" *","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":" * @see Client#isSameClient(Client)","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"public class UniqueClientList implements Iterable\u003cClient\u003e {","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    private final ObservableList\u003cClient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    private final ObservableList\u003cClient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"     * Returns true if the list contains an equivalent client as the given argument.","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"    public boolean contains(Client toCheck) {","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"        return internalList.stream().anyMatch(toCheck::isSameClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"     * Adds a client to the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"     * The client must not already exist in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"    public void add(Client toAdd) {","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"     * Replaces the client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    public void setClient(Client target, Client editedClient) throws NotFoundException {","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"            throw new NotFoundException(Client.class.getName());","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"        internalList.set(index, editedClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"     * Removes the equivalent client from the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"     * The client must exist in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"    public void remove(Client toRemove) throws NotFoundException {","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"            throw new NotFoundException(Client.class.getName());","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"    public void setClients(UniqueClientList replacement) {","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"     * Replaces the contents of this list with {@code clients}.","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"EuniceSim142"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"EuniceSim142"},"content":"        requireAllNonNull(clients);","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"EuniceSim142"},"content":"        internalList.setAll(clients);","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"EuniceSim142"},"content":"    public ObservableList\u003cClient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"EuniceSim142"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"    public Iterator\u003cClient\u003e iterator() {","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"EuniceSim142"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"EuniceSim142"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"EuniceSim142"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"EuniceSim142"},"content":"                || (other instanceof UniqueClientList // instanceof handles nulls","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 internalList.equals(((UniqueClientList) other).internalList));","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"EuniceSim142"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"EuniceSim142"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"EuniceSim142":107,"sivayogasubramanian":3}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/ingredient/Ingredient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.ingredient;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":" * Represents an Ingredient in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"public class Ingredient {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    private GenericString name;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    private Quantity quantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"    private GenericString unit;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"     * Constructs a {@code Ingredient}.","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"     * @param name of ingredient.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"     * @param quantity of ingredient.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"     * @param unit that quantity is measured in.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"    public Ingredient(GenericString name, Quantity quantity, GenericString unit) {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"        requireAllNonNull(name, quantity, unit);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"        this.unit \u003d unit;","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"     * Returns true if the given strings can be used to create a valid ingredients.","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param name The name of the ingredient.","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param quantity The quantity of the ingredient.","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param unit The unit of the ingredient.","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return True if it is a valid ingredient. False otherwise.","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"    public static boolean isValidIngredient(String name, String quantity, String unit) {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"        return GenericString.isValidGenericString(name)","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 Quantity.isValidQuantity(quantity)","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 GenericString.isValidGenericString(unit);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"     * Gets name of this ingredient.","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"     * @return name of this ingredient.","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"    public GenericString getName() {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"        return name;","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"     * Gets quantity for ingredient.","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"     * @return quantity of this ingredient.","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"    public Quantity getQuantity() {","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"        return quantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"     * Gets the unit for ingredient.","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"     * @return unit of this ingredient.","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"    public GenericString getUnit() {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"        return unit;","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"     * Returns true if both ingredients have the same ingredient name and units.","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"     * This defines a weaker notion of equality between two ingredients.","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"     * @param otherIngredient to compare this ingredient to.","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"     * @return boolean of whether the two ingredients match.","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"EuniceSim142"},"content":"    public boolean isSameIngredient(Ingredient otherIngredient) {","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"EuniceSim142"},"content":"        if (otherIngredient \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"EuniceSim142"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"EuniceSim142"},"content":"        return otherIngredient !\u003d null","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 otherIngredient.getName().equals(getName())","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 otherIngredient.getUnit().equals(getUnit());","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"     * Returns true if both ingredients have the same ingredient name, unit and quantity.","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"     * This defines a stronger notion of equality between two ingredients.","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"EuniceSim142"},"content":"     * @param other object to compare this ingredient to.","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"EuniceSim142"},"content":"     * @return boolean of whether ingredient and other object match.","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"EuniceSim142"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"EuniceSim142"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"EuniceSim142"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"EuniceSim142"},"content":"        if (!(other instanceof Ingredient)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"EuniceSim142"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"EuniceSim142"},"content":"        Ingredient otherIngredient \u003d (Ingredient) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"EuniceSim142"},"content":"        return otherIngredient.getName().equals(getName())","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 otherIngredient.getQuantity().equals(getQuantity())","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 otherIngredient.getUnit().equals(getUnit());","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"EuniceSim142"},"content":"     * Implements hashcode for ingredients.","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"EuniceSim142"},"content":"     * @return hashcode of ingredient.","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"EuniceSim142"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"EuniceSim142"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"EuniceSim142"},"content":"        return Objects.hash(name, quantity, unit);","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"EuniceSim142"},"content":"     * Converts ingredient object into its String representation.","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"EuniceSim142"},"content":"     * @return String representation of ingredient.","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"EuniceSim142"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"EuniceSim142"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"EuniceSim142"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"sivayogasubramanian"},"content":"                .append(\" x \")","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"EuniceSim142"},"content":"                .append(getQuantity())","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"sivayogasubramanian"},"content":"                .append(\" \")","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"EuniceSim142"},"content":"                .append(getUnit());","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"EuniceSim142"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"EuniceSim142":125,"sivayogasubramanian":17}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/ingredient/UniqueIngredientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.ingredient;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":" * A list of ingrdients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":" * An ingredient is considered unique by comparing using {@code Ingredient#isSameIngredient(Ingredient)}.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":" * As such, adding and updating of ingredients uses Ingredient#isSameIngredient(Ingredient) for equality so as to","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":" * ensure that the ingredient being added or updated is unique in terms of identity in the UniqueIngredientList.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":" * However, the removal of an ingredent uses Ingredient#equals(Object) so as to ensure that the ingredient with exactly","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":" * the same fields will be removed.","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":" *","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":" *","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":" * @see Ingredient#isSameIngredient(Ingredient)","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"public class UniqueIngredientList implements Iterable\u003cIngredient\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"    private final ObservableList\u003cIngredient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    private final ObservableList\u003cIngredient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"     * Returns true if the list contains an equivalent ingredient as the given argument.","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"     * @param toCheck Ingredient.","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"     * @return true if ingredient is already in the internalList, false otherwise.","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"    public boolean contains(Ingredient toCheck) {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"        return internalList.stream().anyMatch(toCheck::isSameIngredient);","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"     * Adds an ingredient to the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"     * The ingredient must not already exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"     * @param toAdd Ingredient to add to internalList.","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"    public void add(Ingredient toAdd) {","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"     * Replaces the contents of this list with {@code ingredients}.","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"     * {@code ingredients} must not contain duplicate ingredients.","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"     * @param replacement another ingredient list to copy from.","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"    public void setIngredients(UniqueIngredientList replacement) {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"     * Replaces the contents of this list with {@code ingredients}.","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"     * {@code ingredients} must not contain duplicate ingredients.","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"     * @param ingredients another ingredient list to copy from.","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"    public void setIngredients(List\u003cIngredient\u003e ingredients) {","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"        requireAllNonNull(ingredients);","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"        internalList.setAll(ingredients);","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"     * Replaces the similar ingredient that is in the address book with a new ingredient whose quantity is increased","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"     * by the quantity in {@code target} times the multiplier if it exists.","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param target The target ingredient.","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param multiplier The multiplier.","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"    public void addIngredientQuantity(Ingredient target, Quantity multiplier) {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"        requireAllNonNull(target, multiplier);","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient currentIngredient \u003d internalList.stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"                .filter(target::isSameIngredient).findFirst().orElse(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"        if (currentIngredient !\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"            Ingredient ingredientWithNewQuantity \u003d new Ingredient(","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"                    currentIngredient.getName(),","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"                    currentIngredient.getQuantity().addQuantityBy(target.getQuantity(), multiplier),","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"                    currentIngredient.getUnit());","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"sivayogasubramanian"},"content":"            int index \u003d internalList.indexOf(currentIngredient);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"sivayogasubramanian"},"content":"            internalList.set(index, ingredientWithNewQuantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"sivayogasubramanian"},"content":"     * Replaces the similar ingredient that is in the address book with a new ingredient whose quantity is reduced","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"sivayogasubramanian"},"content":"     * by the quantity in {@code target} times the multiplier if it exists.","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param target The target ingredient.","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param multiplier The multiplier.","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"sivayogasubramanian"},"content":"    public void minusIngredientQuantity(Ingredient target, Quantity multiplier) {","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"sivayogasubramanian"},"content":"        requireAllNonNull(target, multiplier);","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient currentIngredient \u003d internalList.stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"                .filter(target::isSameIngredient).findFirst().orElse(null);","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"sivayogasubramanian"},"content":"        if (currentIngredient !\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"sivayogasubramanian"},"content":"            Ingredient ingredientWithNewQuantity \u003d new Ingredient(","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"sivayogasubramanian"},"content":"                    currentIngredient.getName(),","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"sivayogasubramanian"},"content":"                    currentIngredient.getQuantity().minusQuantityBy(target.getQuantity(), multiplier),","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"sivayogasubramanian"},"content":"                    currentIngredient.getUnit());","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"            int index \u003d internalList.indexOf(currentIngredient);","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"            internalList.set(index, ingredientWithNewQuantity);","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Removes the equivalent ingredient from the list of ingredients.","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * The ingredient must exist in the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @param toRemove The ingredient to remove from the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @throws NotFoundException when there is no equivalent ingredient found in the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void remove(Ingredient toRemove) throws NotFoundException {","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            throw new NotFoundException(Ingredient.class.getName());","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Replaces the existing target Ingredient in the list with an edited Ingredient.","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @param target The target ingredient to replace.","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @param editedIngredient The edited ingredient to replace with.","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * @throws NotFoundException if the target Ingredient does not exist in the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void setIngredient(Ingredient target, Ingredient editedIngredient) throws NotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        requireAllNonNull(target, editedIngredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new NotFoundException(Ingredient.class.getName());","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        internalList.set(index, editedIngredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"EuniceSim142"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"EuniceSim142"},"content":"     * @return unmodifiable ingredient list.","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"EuniceSim142"},"content":"    public ObservableList\u003cIngredient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"EuniceSim142"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"EuniceSim142"},"content":"    public Iterator\u003cIngredient\u003e iterator() {","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"EuniceSim142"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":169,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":170,"author":{"gitId":"EuniceSim142"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"EuniceSim142"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"EuniceSim142"},"content":"                || (other instanceof UniqueIngredientList // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 internalList.equals(((UniqueIngredientList) other).internalList));","lastModifiedDate":"2021-10-06"},{"lineNumber":174,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"EuniceSim142"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"EuniceSim142"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"EuniceSim142":98,"Manoharan-Ajay-Anand":32,"sivayogasubramanian":50}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/order/CompletionStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":" * Represents the completion status of an order in BTBB.","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"public class CompletionStatus {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Completion Status should only be either \u0027yes\u0027 or \u0027no\u0027.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"    private final boolean isFinished;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"     * Constructs a {@code CompletionStatus} object.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"     * @param isFinished A valid completionStatus input, either \u0027yes\u0027 or \u0027no\u0027.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    public CompletionStatus(String isFinished) {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(isFinished);","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"        checkArgument(isValidCompletionStatus(isFinished), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"        this.isFinished \u003d isFinished.equals(\"yes\") ? true : false;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"     * Constructs a {@code CompletionStatus} object.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"     * For internal use, does not execute check if input is valid.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"     * @param isFinished Order is finished (true) or not (false).","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"    public CompletionStatus(boolean isFinished) {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(isFinished);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"        this.isFinished \u003d isFinished;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"     * Returns true if a given string is a valid completionStatus.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"     * @param test String input to check.","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"     * @return boolean of whether completionStatus is valid.","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"    public static boolean isValidCompletionStatus(String test) {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"        return test.toLowerCase().equals(\"yes\") || test.toLowerCase().equals(\"no\");","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"     * Converts completionStatus object into its String representation.","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"     * @return String representation of completionStatus.","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"    public String toString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"        if (isFinished) {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"            return \"yes\";","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"        return \"no\";","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"    public String getDisplayMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"        if (isFinished) {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"            return \"Finished\";","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"        return \"Not Finished\";","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Imranr2"},"content":"    public boolean getIsFinished() {","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"        return isFinished;","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"     * Returns true if object and this completionStatus are the same.","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"     * @param other object to compare this completionStatus to.","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"     * @return boolean of whether completionStatus and other object match.","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"                || (other instanceof CompletionStatus // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 isFinished \u003d\u003d ((CompletionStatus) other).isFinished); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"EuniceSim142"},"content":"     * Implements hashcode for completionStatus objects.","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"EuniceSim142"},"content":"     * @return hashcode of completionStatus.","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"EuniceSim142"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"EuniceSim142"},"content":"        return Boolean.hashCode(isFinished);","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EuniceSim142":91,"Imranr2":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/order/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.order;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":" * Represents the deadline of an order in BTBB.","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"public class Deadline {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Deadline should be in dd-mm-yyyy hhmm format\";","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String INPUT_FORMAT \u003d \"dd-MM-uuuu HHmm\";","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final DateTimeFormatter INPUT_DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(INPUT_FORMAT)","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String OUTPUT_FORMAT \u003d \"MMM d uuuu h:mm a\";","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final DateTimeFormatter OUTPUT_DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(OUTPUT_FORMAT)","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"     * Constructs a {@code Deadline}.","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param deadline A valid deadline.","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"    public Deadline(String deadline) {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"        checkArgument(isValidDeadline(deadline), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, INPUT_DATETIME_FORMATTER);","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"     * Returns true if a given string is a valid deadline.","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param test String input to check.","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return True if the deadline is valid. False otherwise.","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"    public static boolean isValidDeadline(String test) {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"            return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"            LocalDateTime.parse(test, INPUT_DATETIME_FORMATTER);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Imranr2"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Imranr2"},"content":"        return deadline;","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"     * Converts a Deadline object into its String representation.","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return String representation of a deadline object.","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"        return deadline.format(OUTPUT_DATETIME_FORMATTER);","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"     * Converts a Deadline object into its JSON storage String representation.","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return JSON String representation of a deadline object.","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"    public String toJsonStorageString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"        return deadline.format(INPUT_DATETIME_FORMATTER);","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"     * Returns true if object and this deadline are the same.","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param other An object to compare this deadline to.","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return True if they are the same. False otherwise.","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"                || (other instanceof Deadline // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 deadline.equals(((Deadline) other).deadline)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"sivayogasubramanian"},"content":"     * Implements hashcode for deadline objects.","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return The hashcode for the deadline object.","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"sivayogasubramanian"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"        return deadline.hashCode();","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Imranr2":4,"zognin":2,"sivayogasubramanian":95}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/order/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.order;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":" * Represents an Order in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"public class Order {","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    private final GenericString clientName;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":"    private final Phone clientPhone;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"    private final Address clientAddress;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"    private final GenericString recipeName;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    private final RecipeIngredientList recipeIngredients;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"    private final Price price;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    private final Deadline deadline;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"    private final Quantity quantity;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    private final CompletionStatus completionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"     * Constructs an order object.","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param clientName The client\u0027s name.","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param clientPhone The client\u0027s phone number.","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param clientAddress The client\u0027s address.","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param recipeName The name of the recipe chosen.","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param recipeIngredients The list of ingredients used the for recipe in the order.","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param price The price of the order.","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param deadline The deadline for this order.","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param quantity The quantity of this order.","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"    public Order(GenericString clientName, Phone clientPhone, Address clientAddress,","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"                 GenericString recipeName, RecipeIngredientList recipeIngredients, Price price,","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"                 Deadline deadline, Quantity quantity, CompletionStatus completionStatus) {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"        requireAllNonNull(clientName, clientPhone, clientAddress,","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"                recipeName, recipeIngredients, recipeName, deadline, quantity, completionStatus);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Imranr2"},"content":"        this.clientName \u003d clientName;","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"        this.clientPhone \u003d clientPhone;","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"        this.clientAddress \u003d clientAddress;","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"        this.recipeName \u003d recipeName;","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"        this.recipeIngredients \u003d recipeIngredients;","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"        this.completionStatus \u003d completionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"    public GenericString getClientName() {","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"Imranr2"},"content":"        return clientName;","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"Imranr2"},"content":"    public Phone getClientPhone() {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"Imranr2"},"content":"        return clientPhone;","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"Imranr2"},"content":"    public Address getClientAddress() {","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"Imranr2"},"content":"        return clientAddress;","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"    public GenericString getRecipeName() {","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"        return recipeName;","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"    public RecipeIngredientList getRecipeIngredients() {","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"        return recipeIngredients;","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"    public Price getPrice() {","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"        return price;","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"        return deadline;","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"Imranr2"},"content":"    public LocalDate getDeadlineDate() {","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"Imranr2"},"content":"        return deadline.getDeadline().toLocalDate();","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"    public Quantity getQuantity() {","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"        return quantity;","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"    public CompletionStatus getCompletionStatus() {","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"        return completionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"     * Returns true if both orders have the same client fields, recipe fields, deadline and finished status.","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"     * This defines a weaker notion of equality between two orders.","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"    public boolean isSameOrder(Order otherOrder) {","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"        if (otherOrder \u003d\u003d this) {","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"        return otherOrder !\u003d null","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"Imranr2"},"content":"                \u0026\u0026 otherOrder.getClientName().equals(getClientName())","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"Imranr2"},"content":"                \u0026\u0026 otherOrder.getClientPhone().equals(getClientPhone())","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 otherOrder.getClientAddress().equals(getClientAddress())","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 otherOrder.getRecipeName().equals(getRecipeName())","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 otherOrder.getRecipeIngredients().equals(getRecipeIngredients())","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 otherOrder.getPrice().equals(getPrice())","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 otherOrder.getDeadline().equals(getDeadline());","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"zognin"},"content":"     * Returns true if both orders have the same identity and data fields.","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":"     * This defines a stronger notion of equality between two orders.","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"zognin"},"content":"     * @param other Other object to compare to.","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"     * @return True if both orders have the same identity and data fields, false otherwise.","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"zognin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"zognin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"zognin"},"content":"            return true;","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"zognin"},"content":"        if (!(other instanceof Order)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"zognin"},"content":"            return false;","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"zognin"},"content":"        Order otherOrder \u003d (Order) other;","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"Imranr2"},"content":"        return otherOrder.getClientName().equals(getClientName())","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"Imranr2"},"content":"                \u0026\u0026 otherOrder.getClientPhone().equals(getClientPhone())","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 otherOrder.getClientAddress().equals(getClientAddress())","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 otherOrder.getRecipeName().equals(getRecipeName())","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 otherOrder.getRecipeIngredients().equals(getRecipeIngredients())","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 otherOrder.getPrice().equals(getPrice())","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 otherOrder.getDeadline().equals(getDeadline())","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 otherOrder.getQuantity().equals(getQuantity())","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 otherOrder.getCompletionStatus().equals(getCompletionStatus());","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"zognin"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"zognin"},"content":"        return Objects.hash(clientPhone);","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":150,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"EuniceSim142"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"EuniceSim142"},"content":"        builder.append(\"Client Name: \")","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"EuniceSim142"},"content":"                .append(getClientName())","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"EuniceSim142"},"content":"                .append(\"; Client Phone: \")","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"EuniceSim142"},"content":"                .append(getClientPhone())","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"EuniceSim142"},"content":"                .append(\"; Client Address: \")","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"EuniceSim142"},"content":"                .append(getClientAddress())","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"EuniceSim142"},"content":"                .append(\"\\n\")","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"EuniceSim142"},"content":"                .append(\"Recipe Name: \")","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"EuniceSim142"},"content":"                .append(getRecipeName())","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"EuniceSim142"},"content":"                .append(\"; Recipe Ingredients: \")","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"EuniceSim142"},"content":"                .append(getRecipeIngredients())","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"EuniceSim142"},"content":"                .append(\"\\n\")","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"EuniceSim142"},"content":"                .append(\"Order Price: \")","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"EuniceSim142"},"content":"                .append(getPrice())","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"EuniceSim142"},"content":"                .append(\"; Order Deadline: \")","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"EuniceSim142"},"content":"                .append(getDeadline())","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"EuniceSim142"},"content":"                .append(\"; Order Quantity: \")","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"EuniceSim142"},"content":"                .append(getQuantity())","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"EuniceSim142"},"content":"                .append(\"; Order Status: \")","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"EuniceSim142"},"content":"                .append(getCompletionStatus().getDisplayMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"EuniceSim142"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"EuniceSim142"},"content":"     * Gets the string representation of an Order object, without CompletionStatus attribute.","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"EuniceSim142"},"content":"     * For use in Done and Undone commands only.","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"EuniceSim142"},"content":"     * @return String representation of Order object, without CompletionStatus attribute.","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"EuniceSim142"},"content":"    public String toStringWithoutCompletionStatus() {","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"zognin"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-01"},{"lineNumber":185,"author":{"gitId":"Imranr2"},"content":"        builder.append(\"Client Name: \")","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"Imranr2"},"content":"                .append(getClientName())","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"Imranr2"},"content":"                .append(\"; Client Phone: \")","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"Imranr2"},"content":"                .append(getClientPhone())","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"Imranr2"},"content":"                .append(\"; Client Address: \")","lastModifiedDate":"2021-10-07"},{"lineNumber":190,"author":{"gitId":"sivayogasubramanian"},"content":"                .append(getClientAddress())","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"sivayogasubramanian"},"content":"                .append(\"\\n\")","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"sivayogasubramanian"},"content":"                .append(\"Recipe Name: \")","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"sivayogasubramanian"},"content":"                .append(getRecipeName())","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"sivayogasubramanian"},"content":"                .append(\"; Recipe Ingredients: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"sivayogasubramanian"},"content":"                .append(getRecipeIngredients())","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"sivayogasubramanian"},"content":"                .append(\"\\n\")","lastModifiedDate":"2021-10-11"},{"lineNumber":197,"author":{"gitId":"sivayogasubramanian"},"content":"                .append(\"Order Price: \")","lastModifiedDate":"2021-10-11"},{"lineNumber":198,"author":{"gitId":"sivayogasubramanian"},"content":"                .append(getPrice())","lastModifiedDate":"2021-10-09"},{"lineNumber":199,"author":{"gitId":"sivayogasubramanian"},"content":"                .append(\"; Order Deadline: \")","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"sivayogasubramanian"},"content":"                .append(getDeadline())","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"sivayogasubramanian"},"content":"                .append(\"; Order Quantity: \")","lastModifiedDate":"2021-10-09"},{"lineNumber":202,"author":{"gitId":"sivayogasubramanian"},"content":"                .append(getQuantity());","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":204,"author":{"gitId":"zognin"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-01"},{"lineNumber":205,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":206,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"EuniceSim142":45,"Imranr2":32,"zognin":63,"sivayogasubramanian":66}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/order/Price.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.order;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":" * Represents the price of a recipe in BTBB.","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"public class Price implements Comparable\u003cPrice\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"            \"Price should only contain positive numbers up to 8 digits, with an optional 2 decimal places.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{1,8}(\\\\.\\\\d{2})?$\";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"    private final BigDecimal price;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"     * Constructs a {@code Price}.","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param price A valid price.","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"    public Price(String price) {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(price);","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"        checkArgument(isValidPrice(price), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"        this.price \u003d new BigDecimal(price);","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"     * Returns true if a given string is a valid price.","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param test String input to check.","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return True if the price is valid. False otherwise.","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"    public static boolean isValidPrice(String test) {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"        return test !\u003d null \u0026\u0026 test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"    public int compareTo(Price other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"        return price.compareTo(other.price);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"     * Converts a Price object into its String representation.","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return String representation of a price object.","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"        return String.format(\"%.2f\", price);","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"     * Returns true if object and this price are the same.","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param other An object to compare this price to.","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return True if they are the same. False otherwise.","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"                || (other instanceof Price // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 (price.compareTo(((Price) other).price) \u003d\u003d 0)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"     * Implements hashcode for price objects.","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return The hashcode for the price object.","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"        return price.hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"sivayogasubramanian":76}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/order/RecipeIngredientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.order;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_RECIPE_INGREDIENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"public class RecipeIngredientList {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"The ingredient list should contain at least one ingredient if \"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"            + PREFIX_RECIPE_INGREDIENT + \" is provided.\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"All ingredients should have the format NAME-QUANTITY-UNIT and should be comma separated.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"Example: ri/Chicken Eggs-1-whole, Corn-1-whole\";","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String MESSAGE_INTERNAL_CONSTRAINTS \u003d \"All ingredients in the ingredient list \"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"            + \" should have the format NAME-QUANTITY-UNIT and should be comma separated. The internal ingredient list \"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"can be empty.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"    private final List\u003cIngredient\u003e ingredients;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"     * Constructs a {@code RecipeIngredientList}.","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param ingredients A valid ingredient list.","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"    public RecipeIngredientList(List\u003cIngredient\u003e ingredients) {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(ingredients);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"        checkArgument(isValidInternalRecipeIngredientList(ingredients), MESSAGE_INTERNAL_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"        this.ingredients \u003d ingredients;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     * Returns true if the list contains an equivalent ingredient as the given argument.","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"     * @param toCheck Ingredient.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"     * @return true if ingredient is already in the ingredients list, false otherwise.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"    public boolean contains(Ingredient toCheck) {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        return ingredients.stream().anyMatch(toCheck::isSameIngredient);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"    public List\u003cIngredient\u003e getIngredients() {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"        return ingredients;","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"     * Returns true if a given string is a valid recipe ingredient list.","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param test List to check.","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return True if the recipe ingredient list is valid. False otherwise.","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"    public static boolean isValidRecipeIngredientList(List\u003cIngredient\u003e test) {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"        return test !\u003d null \u0026\u0026 test.size() \u003e 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"     * Returns true if a given string is a valid recipe ingredient list.","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"     * For internal use where there is a wider definition of a valid recipe ingredient list.","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param test List to check.","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return True if the recipe ingredient list is valid. False otherwise.","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"    public static boolean isValidInternalRecipeIngredientList(List\u003cIngredient\u003e test) {","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"        return test !\u003d null;","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"     * Converts a RecipeIngredientList object into its String representation.","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return String representation of a RecipeIngredientList object.","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"        if (ingredients.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"            return \"This order\u0027s ingredient list is empty.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"        return ingredients.stream().map(Ingredient::toString).collect(Collectors.joining(\", \"));","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"     * Converts a RecipeIngredientList object into its String representation that will be used in the UI.","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return UI String representation of a RecipeIngredientList object.","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"    public String toDisplayString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"        if (ingredients.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"            return \"This order\u0027s ingredient list is empty.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"sivayogasubramanian"},"content":"        for (int i \u003d 0; i \u003c ingredients.size(); i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"sivayogasubramanian"},"content":"            stringBuilder","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"sivayogasubramanian"},"content":"                    .append(i + 1)","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"                    .append(\". \")","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"sivayogasubramanian"},"content":"                    .append(ingredients.get(i))","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"sivayogasubramanian"},"content":"                    .append(i \u003c ingredients.size() - 1 ? \"\\n\" : \"\");","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"sivayogasubramanian"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"sivayogasubramanian"},"content":"     * Returns true if object and this RecipeIngredientList are the same.","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param other An object to compare this RecipeIngredientList to.","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return True if they are the same. False otherwise.","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"sivayogasubramanian"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"sivayogasubramanian"},"content":"        if (!(other instanceof RecipeIngredientList)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"sivayogasubramanian"},"content":"            return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"        RecipeIngredientList otherRecipeIngredientList \u003d (RecipeIngredientList) other;","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"        return ingredients.containsAll(otherRecipeIngredientList.ingredients)","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"                \u0026\u0026 otherRecipeIngredientList.ingredients.containsAll(ingredients);","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"sivayogasubramanian"},"content":"     * Implements hashcode for RecipeIngredientList objects.","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return The hashcode for the RecipeIngredientList object.","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"sivayogasubramanian"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"sivayogasubramanian"},"content":"        return ingredients.hashCode();","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"zognin":11,"sivayogasubramanian":122}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/order/UniqueOrderList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.order;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"public class UniqueOrderList implements Iterable\u003cOrder\u003e {","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    private final ObservableList\u003cOrder\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    private final ObservableList\u003cOrder\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     * Adds an order to the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * @param toAdd Order to be added to the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    public void add(Order toAdd) {","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     * Returns true if the list contains an equivalent order as the given argument.","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    public boolean contains(Order toCheck) {","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"        return internalList.stream().anyMatch(toCheck::isSameOrder);","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Imranr2"},"content":"     * Removes the equivalent order from the list of orders.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Imranr2"},"content":"     * The order must exist in the list.","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Imranr2"},"content":"     * @param toRemove The order to remove from the list.","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Imranr2"},"content":"     * @throws NotFoundException when there is no equivalent order found in the list.","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"    public void remove(Order toRemove) throws NotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Imranr2"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Imranr2"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"            throw new NotFoundException(Order.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"     * Replaces the existing target Order in the list with an edited Order.","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"     * @param target The target order to replace.","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"     * @param editedOrder The edited order to replace with.","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"     * @throws NotFoundException If the target order does not exist in the list.","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"    public void setOrder(Order target, Order editedOrder) throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        requireAllNonNull(target, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"            throw new NotFoundException(Order.class.getName());","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        internalList.set(index, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"     * Replaces the contents of this list with {@code orders}.","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"     * @param orders Orders of the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"        requireAllNonNull(orders);","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"        internalList.setAll(orders);","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"     * Returns the backing list as an unmodifiable Observable List.","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"     * @return The full backing order list.","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"    public ObservableList\u003cOrder\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"    public Iterator\u003cOrder\u003e iterator() {","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"                || (other instanceof UniqueOrderList // instanceof handles nulls","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"                \u0026\u0026 internalList.equals(((UniqueOrderList) other).internalList));","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"Imranr2":14,"zognin":86,"sivayogasubramanian":2}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/predicate/PredicateCollection.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.ParserFunction;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ArgumentMultimap;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.Prefix;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":" * Tests that all given predicates match.","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":" *","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Imranr2"},"content":" * @param \u003cT\u003e Type of the predicate.","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"public class PredicateCollection\u003cT\u003e implements Predicate\u003cT\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":"    private final List\u003cPredicate\u003cT\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Imranr2"},"content":"    private boolean hasSamePredicates(List\u003cPredicate\u003cT\u003e\u003e otherPredicates) {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Imranr2"},"content":"        return predicates.containsAll(otherPredicates) \u0026\u0026 otherPredicates.containsAll(predicates);","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"     * Adds a predicate to the list of predicates to test against.","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"     * @param predicate The Predicate to add to the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Imranr2"},"content":"    public void addPredicate(Predicate\u003cT\u003e predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Imranr2"},"content":"        predicates.add(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"     * Adds a {@code StringContainsKeywordsPredicate} to the list of predicates.","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"     * @param prefix Prefix of keyword.","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"     * @param argMultimap ArgumentMultimap to get the value associated with a prefix.","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"     * @param getter Function to get the string to be tested.","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"     * @throws ParseException if the given keywords is invalid.","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    public void addStringContainsKeywordsPredicate(Prefix prefix, ArgumentMultimap argMultimap,","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"            Function\u003cT, ?\u003e getter) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"        if (argMultimap.getValue(prefix).isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"            addPredicate(new StringContainsKeywordsPredicate\u003c\u003e(getter,","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"                    ParserUtil.parseKeywords(argMultimap.getValue(prefix).get())));","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"     * Adds a {@code ValueInListPredicate} to the list of predicates.","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"     * @param prefix Prefix of keyword.","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"     * @param argMultimap ArgumentMultimap to get the value associated with a prefix.","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"     * @param getter Function to get the quantity to be tested.","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"     * @param parser ParserFunction to parse the input to a list of values.","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"     * @param \u003cS\u003e Type of the values in the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"     * @throws ParseException if the given input is invalid.","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"    public \u003cS\u003e void addValueInListPredicate(Prefix prefix, ArgumentMultimap argMultimap,","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"            Function\u003cT, S\u003e getter, ParserFunction\u003cList\u003cS\u003e\u003e parser) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        if (argMultimap.getValue(prefix).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"            addPredicate(new ValueInListPredicate\u003c\u003e(getter, parser.apply(argMultimap.getValue(prefix).get())));","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"     * Adds a {@code ValueWithinRangePredicate} to the list of predicates.","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"     * It adds the predicate as long as either the lower or upper bound of the range is provided,","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"     * and fills any unprovided bounds with a default value.","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"     * @param fromPrefix Prefix for the lower bound of the range.","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"     * @param toPrefix Prefix for the upper bound of the range.","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"     * @param defaultMin Default lower bound of the range.","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"     * @param defaultMax Default upper bound of the range.","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"     * @param argMultimap ArgumentMultimap to get the value associated with a prefix.","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"     * @param parser ParserFunction to parse the inputs.","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"     * @param getter Function to get the value to be tested.","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"     * @param \u003cS\u003e Type of the values.","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"     * @throws ParseException if the given input is invalid.","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"    public \u003cS extends Comparable\u003cS\u003e\u003e void addValueWithinRangePredicate(Prefix fromPrefix, Prefix toPrefix,","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"            String defaultMin, String defaultMax, ArgumentMultimap argMultimap, ParserFunction\u003cS\u003e parser,","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"            Function\u003cT, S\u003e getter) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"        Optional\u003cString\u003e optionalMinValue \u003d argMultimap.getValue(fromPrefix);","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"        Optional\u003cString\u003e optionalMaxValue \u003d argMultimap.getValue(toPrefix);","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"        if (optionalMinValue.isEmpty() \u0026\u0026 optionalMaxValue.isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"            return;","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"        String minQuantity \u003d optionalMinValue.orElse(defaultMin);","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"        String maxQuantity \u003d optionalMaxValue.orElse(defaultMax);","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"        addPredicate(new ValueWithinRangePredicate\u003c\u003e(getter,","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"                parser.apply(minQuantity), parser.apply(maxQuantity)));","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"Imranr2"},"content":"     * Checks if there are no predicates to test against.","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"Imranr2"},"content":"     * @return True if there are no predicates to test against. False otherwise.","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"Imranr2"},"content":"    public boolean hasNoPredicates() {","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"Imranr2"},"content":"        return predicates.isEmpty();","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"Imranr2"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"Imranr2"},"content":"    public boolean test(T object) {","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"Imranr2"},"content":"        return predicates.stream()","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"Imranr2"},"content":"                .map(predicate -\u003e predicate.test(object))","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"Imranr2"},"content":"                .reduce(Boolean.TRUE, Boolean::logicalAnd);","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"Imranr2"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"Imranr2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"Imranr2"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"Imranr2"},"content":"                || (other instanceof PredicateCollection // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"Imranr2"},"content":"                \u0026\u0026 hasSamePredicates(((PredicateCollection\u003cT\u003e) other).predicates)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"Imranr2"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Imranr2":55,"zognin":68}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/predicate/StringContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":" * Tests that a string field matches any of the keywords given.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":" *","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":" * @param \u003cT\u003e Type of the predicate.","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Imranr2"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":"public class StringContainsKeywordsPredicate\u003cT\u003e implements Predicate\u003cT\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"    private final Function\u003cT, ?\u003e getter;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Imranr2"},"content":"     * Constructs a {@code StringContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"     * @param getter Function to get the string to be tested.","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":"     * @param keywords List of keywords to be checked against.","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Imranr2"},"content":"    public StringContainsKeywordsPredicate(Function\u003cT, ?\u003e getter, List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"Imranr2"},"content":"        this.getter \u003d getter;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Imranr2"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Imranr2"},"content":"    public boolean test(T t) {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"        String toTest \u003d getter.apply(t).toString().toLowerCase(Locale.ROOT);","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Imranr2"},"content":"        return keywords.stream().anyMatch(keyword -\u003e toTest.contains(keyword.toLowerCase(Locale.ROOT)));","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Imranr2"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Imranr2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Imranr2"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Imranr2"},"content":"                || (other instanceof StringContainsKeywordsPredicate) // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Imranr2"},"content":"                \u0026\u0026 keywords.equals(((StringContainsKeywordsPredicate\u003c?\u003e) other).keywords); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Imranr2"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Imranr2":39,"zognin":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/predicate/ValueInListPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":" * Tests if a value is in a list of values.","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":" *","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":" * @param \u003cT\u003e Type of the predicate.","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":" * @param \u003cS\u003e Type of the values to be tested.","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"public class ValueInListPredicate\u003cT, S\u003e implements Predicate\u003cT\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    private final Function\u003cT, S\u003e getter;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    private final List\u003cS\u003e values;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     * Constructs a {@code ValueInListPredicate}.","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     * @param getter Function to get the value to be tested.","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * @param values List of values to be checked against.","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    public ValueInListPredicate(Function\u003cT, S\u003e getter, List\u003cS\u003e values) {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        this.getter \u003d getter;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        this.values \u003d values;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    public boolean test(T t) {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        return values.contains(getter.apply(t));","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"                || (other instanceof ValueInListPredicate) // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"                \u0026\u0026 values.equals(((ValueInListPredicate\u003c?, ?\u003e) other).values); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"zognin":39}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/predicate/ValueWithinRangePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" * Tests that a value is within a range.","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":" * The value must implement the comparable interface.","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":" *","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":" * @param \u003cT\u003e Type of the predicate.","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":" * @param \u003cS\u003e Type of the values to be tested.","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"public class ValueWithinRangePredicate\u003cT, S extends Comparable\u003cS\u003e\u003e implements Predicate\u003cT\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    private final Function\u003cT, S\u003e getter;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    private final S minValue;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    private final S maxValue;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     * Constructs a {@code ValueWithinRangePredicate}.","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * @param getter Function to get the value to be tested.","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     * @param minValue Min value to form the lower bound of the range.","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * @param maxValue Max value to form the upper bound of the range.","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    public ValueWithinRangePredicate(Function\u003cT, S\u003e getter, S minValue, S maxValue) {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        this.getter \u003d getter;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        this.minValue \u003d minValue;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        this.maxValue \u003d maxValue;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    public boolean test(T t) {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"        S toTest \u003d getter.apply(t);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"        return toTest.compareTo(minValue) \u003e\u003d 0 \u0026\u0026 toTest.compareTo(maxValue) \u003c\u003d 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"        if (!(other instanceof ValueWithinRangePredicate)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        ValueWithinRangePredicate\u003c?, ?\u003e otherPredicate \u003d (ValueWithinRangePredicate\u003c?, ?\u003e) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        return otherPredicate.minValue.equals(minValue)","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"                \u0026\u0026 otherPredicate.maxValue.equals(maxValue);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"zognin":51}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/shared/GenericString.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.shared;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":" * Represents a Generic String in the address book, that is reusable.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGenericString(String)}","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"public class GenericString {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"    private static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"            \" should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    /*","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"    */","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    private static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    private final String genericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"     * Constructs a {@code GenericString}.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"     * @param genericString A valid generic string.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"    public GenericString(String genericString) {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(genericString);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        checkArgument(isValidGenericString(genericString), getMessageConstraints(\"Generic String\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"        this.genericString \u003d genericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"     * Returns true if a given string is a valid Generic String.","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"     * @param test String input to test.","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"     * @return true if test is valid.","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"    public static boolean isValidGenericString(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"     * Returns the Message Constraints for different classes that extend GenericString.","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"     * @param attributeName name of class that extends Generic String.","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"     * @return Message Constraint.","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"    public static String getMessageConstraints(String attributeName) {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"        return attributeName + MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"        return genericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"Imranr2"},"content":"                || (other instanceof GenericString // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 genericString.equals(((GenericString) other).genericString)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"        return genericString.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"EuniceSim142":68,"Imranr2":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/shared/Quantity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.shared;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":" * Represents the quantity of an Ingredient in btbb.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"public class Quantity implements Comparable\u003cQuantity\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final int DEFAULT_MIN_QUANTITY \u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final int DEFAULT_MAX_QUANTITY \u003d 40000;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String DEFAULT_MIN_QUANTITY_STRING \u003d String.valueOf(DEFAULT_MIN_QUANTITY);","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String DEFAULT_MAX_QUANTITY_STRING \u003d String.valueOf(DEFAULT_MAX_QUANTITY);","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"            \"Quantity should only contain numbers, it should be positive \"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"                    + \"and the largest acceptable quantity is 40000.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String MESSAGE_INTERNAL_CONSTRAINTS \u003d \"Quantity should only contain numbers, \"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"it should be non-negative and the largest acceptable quantity is 40000.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    private final int quantity;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"     * Constructs a {@code Quantity}.","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"     * @param quantity A valid quantity number.","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    public Quantity(String quantity) {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(quantity);","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"        checkArgument(isValidInternalQuantity(quantity), MESSAGE_INTERNAL_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"        this.quantity \u003d Integer.parseInt(quantity);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"     * Returns true if a given string is a valid quantity.","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"     * @param test String input to check.","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"     * @return boolean of whether quantity is valid.","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"    public static boolean isValidQuantity(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"            int quantity \u003d Integer.parseInt(test);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"            return quantity \u003e DEFAULT_MIN_QUANTITY \u0026\u0026 quantity \u003c\u003d DEFAULT_MAX_QUANTITY;","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"     * Returns true if a given string is a valid internal quantity.","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"     * For internal use there is a wider definition of a valid quantity.","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"     * @param test String input to check.","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"     * @return boolean of whether quantity is valid.","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"    public static boolean isValidInternalQuantity(String test) {","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"            int quantity \u003d Integer.parseInt(test);","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"            return quantity \u003e\u003d DEFAULT_MIN_QUANTITY \u0026\u0026 quantity \u003c\u003d DEFAULT_MAX_QUANTITY;","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"            return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"     * Returns a new {@code Quantity} object with its quantity increased by amount * multiplier.","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"     * @param amount The amount to increase.","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"     * @param multiplier The multiplier.","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"     * @return A new {@code Quantity} object.","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"    public Quantity addQuantityBy(Quantity amount, Quantity multiplier) {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"        return new Quantity(Integer.toString(","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"                Math.min(quantity + amount.quantity * multiplier.quantity, DEFAULT_MAX_QUANTITY)));","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"     * Returns a new {@code Quantity} object with its quantity reduced by amount * multiplier.","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param amount The amount to decrease.","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param multiplier The multiplier.","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return A new {@code Quantity} object.","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"    public Quantity minusQuantityBy(Quantity amount, Quantity multiplier) {","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"        return new Quantity(Integer.toString(","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"                Math.max(quantity - amount.quantity * multiplier.quantity, DEFAULT_MIN_QUANTITY)));","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"EuniceSim142"},"content":"     * Converts Quantity object into its String representation.","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"     * @return String representation of quantity.","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"EuniceSim142"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"EuniceSim142"},"content":"        return Integer.toString(quantity);","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"EuniceSim142"},"content":"     * Returns true if object and this quantity are the same.","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"EuniceSim142"},"content":"     * @param other object to compare this quantity to.","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"EuniceSim142"},"content":"     * @return boolean of whether quantity and other object match.","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"EuniceSim142"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"EuniceSim142"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"EuniceSim142"},"content":"                || (other instanceof Quantity // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 quantity \u003d\u003d ((Quantity) other).quantity); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"EuniceSim142"},"content":"     * Implements hashcode for quantity objects.","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"EuniceSim142"},"content":"     * @return hashcode of quantity.","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"EuniceSim142"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"EuniceSim142"},"content":"        return quantity;","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"zognin"},"content":"    public int compareTo(Quantity otherQuantity) {","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"zognin"},"content":"        return this.quantity - otherQuantity.quantity;","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"EuniceSim142":69,"Imranr2":1,"zognin":35,"sivayogasubramanian":22}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.Random;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Email;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.CompletionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Deadline;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Price;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.RecipeIngredientList;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    public static Client[] getSampleClients() {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"        return new Client[] {","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"            new Client(new GenericString(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\")),","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"            new Client(new GenericString(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\")),","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"            new Client(new GenericString(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"                new Email(\"charlotte@example.com\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\")),","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"            new Client(new GenericString(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\")),","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"            new Client(new GenericString(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\")),","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"            new Client(new GenericString(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"))","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"    public static Ingredient[] getSampleIngredients() {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"        return new Ingredient[] {","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"            new Ingredient(new GenericString(\"Almond\"), new Quantity(\"3\"), new GenericString(\"bags\")),","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"            new Ingredient(new GenericString(\"Bamboo\"), new Quantity(\"17\"), new GenericString(\"shoots\")),","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"            new Ingredient(new GenericString(\"Corn\"), new Quantity(\"30\"), new GenericString(\"whole\")),","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"            new Ingredient(new GenericString(\"Duck Eggs\"), new Quantity(\"36\"), new GenericString(\"whole\")),","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"            new Ingredient(new GenericString(\"Edamame\"), new Quantity(\"1\"), new GenericString(\"bag\")),","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"            new Ingredient(new GenericString(\"Fig\"), new Quantity(\"20\"), new GenericString(\"whole\")),","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"            new Ingredient(new GenericString(\"Garlic\"), new Quantity(\"30\"), new GenericString(\"whole\")),","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"            new Ingredient(new GenericString(\"Ham\"), new Quantity(\"10\"), new GenericString(\"packs\"))","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"        };","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"    public static String[] getSampleRecipes() {","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"        return new String[] {","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"            \"Chicken Rice\",","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"            \"Nasi Lemak\",","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"            \"Prata\",","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"            \"Char kuay teow\",","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"            \"Hokkien prawn mee\",","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"            \"Laksa\",","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"            \"Kaya toast\",","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"            \"Satay\"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"        };","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"    public static List\u003cList\u003cIngredient\u003e\u003e getRecipeIngredientList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"        return List.of(","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"                List.of(new Ingredient(new GenericString(\"Almond\"), new Quantity(\"1\"), new GenericString(\"bags\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"                        new Ingredient(new GenericString(\"Corn\"), new Quantity(\"2\"), new GenericString(\"whole\"))),","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"                List.of(new Ingredient(","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"                        new GenericString(\"Chicken Eggs\"), new Quantity(\"2\"), new GenericString(\"whole\"))),","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"                List.of(new Ingredient(new GenericString(\"Garlic\"), new Quantity(\"1\"), new GenericString(\"whole\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"                        new Ingredient(new GenericString(\"Ham\"), new Quantity(\"1\"), new GenericString(\"packs\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"                        new Ingredient(new GenericString(\"Fig\"), new Quantity(\"5\"), new GenericString(\"whole\"))),","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"                List.of(new Ingredient(new GenericString(\"Bamboo\"), new Quantity(\"2\"), new GenericString(\"shoots\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"                        new Ingredient(new GenericString(\"Edamame\"), new Quantity(\"1\"), new GenericString(\"bag\"))),","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"                List.of(new Ingredient(new GenericString(\"Edamame\"), new Quantity(\"1\"), new GenericString(\"bag\"))),","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"                List.of(new Ingredient(new GenericString(\"Ducks Eggs\"), new Quantity(\"1\"), new GenericString(\"whole\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"                        new Ingredient(new GenericString(\"Ham\"), new Quantity(\"1\"), new GenericString(\"packs\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"                        new Ingredient(new GenericString(\"Fig\"), new Quantity(\"5\"), new GenericString(\"whole\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"                        new Ingredient(new GenericString(\"Garlic\"), new Quantity(\"1\"), new GenericString(\"whole\"))),","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"                List.of(new Ingredient(new GenericString(\"Corn\"), new Quantity(\"1\"), new GenericString(\"whole\"))),","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"                List.of(new Ingredient(new GenericString(\"Fig\"), new Quantity(\"1\"), new GenericString(\"whole\")))","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"        );","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"EuniceSim142"},"content":"    public static Order[] getSampleOrders() {","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"EuniceSim142"},"content":"        Client[] people \u003d getSampleClients();","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"        String[] recipes \u003d getSampleRecipes();","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"sivayogasubramanian"},"content":"        List\u003cList\u003cIngredient\u003e\u003e ingredients \u003d getRecipeIngredientList();","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"        Order[] orders \u003d new Order[people.length];","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"sivayogasubramanian"},"content":"        Random randomNumberGenerator \u003d new Random();","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"        int loopCount \u003d Math.min(orders.length, Math.min(recipes.length, ingredients.size()));","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"sivayogasubramanian"},"content":"        for (int i \u003d 0; i \u003c loopCount; i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"sivayogasubramanian"},"content":"            float randomPrice \u003d randomNumberGenerator.nextFloat();","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"            int randomQuantity \u003d randomNumberGenerator.nextInt(10) + 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"EuniceSim142"},"content":"            boolean completionstatus \u003d (i % 2 \u003d\u003d 0);","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"sivayogasubramanian"},"content":"            orders[i] \u003d new Order(people[i].getName(), people[i].getPhone(), people[i].getAddress(),","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"sivayogasubramanian"},"content":"                    new GenericString(recipes[i]), new RecipeIngredientList(ingredients.get(i)),","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"sivayogasubramanian"},"content":"                    new Price(String.format(\"%.2f\", randomPrice)),","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"sivayogasubramanian"},"content":"                    new Deadline(getSampleDateTimeString(i + 1)),","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"EuniceSim142"},"content":"                    new Quantity(Integer.toString(randomQuantity)),","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"EuniceSim142"},"content":"                    new CompletionStatus(completionstatus ? \"yes\" : \"no\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"EuniceSim142"},"content":"        return orders;","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":119,"author":{"gitId":"EuniceSim142"},"content":"        for (Client sampleClient : getSampleClients()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"EuniceSim142"},"content":"            sampleAb.addClient(sampleClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":122,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"zognin"},"content":"        for (Order sampleOrder : getSampleOrders()) {","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"zognin"},"content":"            sampleAb.addOrder(sampleOrder);","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":126,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"EuniceSim142"},"content":"        for (Ingredient sampleIngredient : getSampleIngredients()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"EuniceSim142"},"content":"            sampleAb.addIngredient(sampleIngredient);","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":133,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"sivayogasubramanian"},"content":"    private static String getSampleDateTimeString(int dayOffset) {","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"sivayogasubramanian"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"sivayogasubramanian"},"content":"        LocalDateTime dateTimeWithOffset \u003d currentDateTime.plusDays(dayOffset);","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"sivayogasubramanian"},"content":"        return dateTimeWithOffset.format(Deadline.INPUT_DATETIME_FORMATTER);","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"EuniceSim142":43,"zognin":12,"-":15,"sivayogasubramanian":69}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.DataConversionException;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":" * Represents a storage for {@link ay2122s1_cs2103t_w16_2.btbb.model.AddressBook}.","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":39,"sivayogasubramanian":6}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/storage/JsonAdaptedClient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.IllegalValueException;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Email;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":" * Jackson-friendly version of {@link Client}.","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"class JsonAdaptedClient {","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Client\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"     * Constructs a {@code JsonAdaptedClient} with the given client details.","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    public JsonAdaptedClient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address) {","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"     * Converts a given {@code Client} into this class for Jackson use.","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"    public JsonAdaptedClient(Client source) {","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"        name \u003d source.getName().toString();","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"        phone \u003d source.getPhone().toString();","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"        email \u003d source.getEmail().toString();","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"        address \u003d source.getAddress().toString();","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"     * Converts this Jackson-friendly adapted client object into the model\u0027s {@code Client} object.","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted client.","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    public Client toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"                    GenericString.class.getSimpleName()));","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"        if (!GenericString.isValidGenericString(name)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"            throw new IllegalValueException(GenericString.getMessageConstraints(\"Name\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"        final GenericString modelName \u003d new GenericString(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"EuniceSim142"},"content":"        return new Client(modelName, modelPhone, modelEmail, modelAddress);","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"EuniceSim142":17,"zognin":1,"-":59,"sivayogasubramanian":10}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/storage/JsonAdaptedIngredient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.IllegalValueException;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":" * Jackson-friendly version of {@link Ingredient}.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"public class JsonAdaptedIngredient {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Ingredient\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"    private final String name;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    private final String quantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    private final String unit;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"     * Constructs a {@code JsonAdaptedIngredient} with the given ingredient details.","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    public JsonAdaptedIngredient(@JsonProperty(\"ingredientName\") String name,","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"                                 @JsonProperty(\"quantity\") String quantity, @JsonProperty(\"unit\") String unit) {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        this.unit \u003d unit;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"     * Converts a given {@code Ingredient} into this class for Jackson use.","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"    public JsonAdaptedIngredient(Ingredient source) {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"        name \u003d source.getName().toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"        quantity \u003d source.getQuantity().toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"        unit \u003d source.getUnit().toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"     * Converts this Jackson-friendly adapted ingredient object into the model\u0027s {@code Ingredient} object.","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"     * @return Ingredient model type.","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"     * @throws IllegalValueException If there were any data constraints violated in the adapted ingredient.","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"    public Ingredient toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"        // Ingredient Name:","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"                    GenericString.class.getSimpleName()));","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"        if (!GenericString.isValidGenericString(name)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"            throw new IllegalValueException(GenericString.getMessageConstraints(\"Name\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"        final GenericString modelIngredientName \u003d new GenericString(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"        // Quantity:","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"        if (quantity \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"                    Quantity.class.getSimpleName()));","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"        if (!Quantity.isValidInternalQuantity(quantity)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new IllegalValueException(Quantity.MESSAGE_INTERNAL_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"        final Quantity modelQuantity \u003d new Quantity(quantity);","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"        // Unit:","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"        if (unit \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"                    GenericString.class.getSimpleName()));","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"        if (!GenericString.isValidGenericString(unit)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"            throw new IllegalValueException(GenericString.getMessageConstraints(\"Unit\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"        final GenericString modelUnit \u003d new GenericString(unit);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"        return new Ingredient(modelIngredientName, modelQuantity, modelUnit);","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"EuniceSim142":77,"sivayogasubramanian":3}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/storage/JsonAdaptedOrder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.IllegalValueException;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.CompletionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Deadline;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Price;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.RecipeIngredientList;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":" * Jackson-friendly version of {@link Order}.","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"public class JsonAdaptedOrder {","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Order\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"    private final String clientName;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Imranr2"},"content":"    private final String clientPhone;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"    private final String clientAddress;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"    private final String recipeName;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"    private final List\u003cJsonAdaptedIngredient\u003e recipeIngredients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"    private final String price;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"    private final String deadline;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"    private final String quantity;","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"    private final String isFinished;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"     * Constructs a {@code JsonAdaptedOrder} with the given order details.","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"Imranr2"},"content":"    public JsonAdaptedOrder(@JsonProperty(\"clientName\") String clientName,","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"                            @JsonProperty(\"clientPhone\") String clientPhone,","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"                            @JsonProperty(\"clientAddress\") String clientAddress,","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"                            @JsonProperty(\"recipeName\") String recipeName,","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"                            @JsonProperty(\"recipeIngredients\") List\u003cJsonAdaptedIngredient\u003e recipeIngredients,","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"                            @JsonProperty(\"price\") String price,","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"                            @JsonProperty(\"deadline\") String deadline,","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"                            @JsonProperty(\"quantity\") String quantity,","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"                            @JsonProperty(\"isFinished\") String isFinished) {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Imranr2"},"content":"        this.clientName \u003d clientName;","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"Imranr2"},"content":"        this.clientPhone \u003d clientPhone;","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Imranr2"},"content":"        this.clientAddress \u003d clientAddress;","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"        this.recipeName \u003d recipeName;","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"        this.isFinished \u003d isFinished;","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"        if (recipeIngredients !\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"            this.recipeIngredients.addAll(recipeIngredients);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"     * Converts a given {@code Order} into this class for Jackson use.","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"    public JsonAdaptedOrder(Order source) {","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"Imranr2"},"content":"        clientName \u003d source.getClientName().toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"Imranr2"},"content":"        clientPhone \u003d source.getClientPhone().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Imranr2"},"content":"        clientAddress \u003d source.getClientAddress().toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"        recipeName \u003d source.getRecipeName().toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"        recipeIngredients.addAll(source.getRecipeIngredients().getIngredients().stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"                .map(JsonAdaptedIngredient::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"        price \u003d source.getPrice().toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"        deadline \u003d source.getDeadline().toJsonStorageString();","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"        quantity \u003d source.getQuantity().toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"        isFinished \u003d source.getCompletionStatus().toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"     * Converts this Jackson-friendly adapted order object into the model\u0027s {@code Order} object.","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"     * @return Order model type.","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"     * @throws IllegalValueException If there were any data constraints violated in the adapted order.","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"    public Order toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"Imranr2"},"content":"        if (clientName \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"EuniceSim142"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"EuniceSim142"},"content":"                    GenericString.class.getSimpleName()));","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"        if (!GenericString.isValidGenericString(clientName)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"            throw new IllegalValueException(GenericString.getMessageConstraints(\"Name\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"        final GenericString modelClientName \u003d new GenericString(clientName);","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"Imranr2"},"content":"        if (clientPhone \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Imranr2"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"Imranr2"},"content":"        if (!Phone.isValidPhone(clientPhone)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"Imranr2"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"Imranr2"},"content":"        final Phone modelClientPhone \u003d new Phone(clientPhone);","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"Imranr2"},"content":"        if (clientAddress \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"Imranr2"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"Imranr2"},"content":"        if (!Address.isValidAddress(clientAddress)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"Imranr2"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"Imranr2"},"content":"        final Address modelClientAddress \u003d new Address(clientAddress);","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"sivayogasubramanian"},"content":"        if (recipeName \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"sivayogasubramanian"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, GenericString.getMessageConstraints(\"Recipe Name\")","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"sivayogasubramanian"},"content":"            ));","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"        if (!GenericString.isValidGenericString(recipeName)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new IllegalValueException(GenericString.getMessageConstraints(\"Recipe Name\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"        final GenericString modelRecipeName \u003d new GenericString(recipeName);","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"sivayogasubramanian"},"content":"        final List\u003cIngredient\u003e ingredients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"sivayogasubramanian"},"content":"        for (JsonAdaptedIngredient ingredient : recipeIngredients) {","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"sivayogasubramanian"},"content":"            Ingredient i \u003d ingredient.toModelType();","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"sivayogasubramanian"},"content":"            boolean hasValidQuantity \u003d Quantity.isValidQuantity(i.getQuantity().toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"sivayogasubramanian"},"content":"            if (!hasValidQuantity) {","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"sivayogasubramanian"},"content":"                throw new IllegalValueException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"sivayogasubramanian"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"sivayogasubramanian"},"content":"            ingredients.add(i);","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"sivayogasubramanian"},"content":"        final RecipeIngredientList modelRecipeIngredients \u003d new RecipeIngredientList(ingredients);","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"sivayogasubramanian"},"content":"        if (price \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"sivayogasubramanian"},"content":"        if (!Price.isValidPrice(price)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new IllegalValueException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"sivayogasubramanian"},"content":"        final Price modelPrice \u003d new Price(price);","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"sivayogasubramanian"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"sivayogasubramanian"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, Deadline.class.getSimpleName()","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"sivayogasubramanian"},"content":"            ));","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"sivayogasubramanian"},"content":"        if (!Deadline.isValidDeadline(deadline)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new IllegalValueException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"sivayogasubramanian"},"content":"        final Deadline modelDeadline \u003d new Deadline(deadline);","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"sivayogasubramanian"},"content":"        if (quantity \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"sivayogasubramanian"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, Quantity.class.getSimpleName()","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"sivayogasubramanian"},"content":"            ));","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"sivayogasubramanian"},"content":"        if (!Quantity.isValidQuantity(quantity)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new IllegalValueException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"sivayogasubramanian"},"content":"        final Quantity modelQuantity \u003d new Quantity(quantity);","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"EuniceSim142"},"content":"        if (isFinished \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"EuniceSim142"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"EuniceSim142"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, CompletionStatus.class.getSimpleName()","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"EuniceSim142"},"content":"            ));","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"EuniceSim142"},"content":"        if (!CompletionStatus.isValidCompletionStatus(isFinished)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"EuniceSim142"},"content":"            throw new IllegalValueException(CompletionStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"EuniceSim142"},"content":"        final CompletionStatus modelCompletionStatus \u003d new CompletionStatus(isFinished);","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"sivayogasubramanian"},"content":"        return new Order(modelClientName, modelClientPhone, modelClientAddress,","lastModifiedDate":"2021-10-09"},{"lineNumber":175,"author":{"gitId":"EuniceSim142"},"content":"                modelRecipeName, modelRecipeIngredients, modelPrice, modelDeadline, modelQuantity,","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"EuniceSim142"},"content":"                modelCompletionStatus);","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":178,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"EuniceSim142":24,"Imranr2":32,"zognin":37,"sivayogasubramanian":85}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.LogsCenter;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.util.FileUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.util.JsonUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.DataConversionException;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.IllegalValueException;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":71,"sivayogasubramanian":7}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.IllegalValueException;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"Clients list contains duplicate client(s).\";","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_DUPLICATE_INGREDIENT \u003d \"Ingredients list contains duplicate ingredient(s).\";","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"Orders list contains duplicate order(s).\";","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    private final List\u003cJsonAdaptedClient\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    private final List\u003cJsonAdaptedIngredient\u003e ingredients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    private final List\u003cJsonAdaptedOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given clients, orders and ingredients.","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"clients\") List\u003cJsonAdaptedClient\u003e clients,","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"                                       @JsonProperty(\"ingredients\") List\u003cJsonAdaptedIngredient\u003e ingredients,","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"                                       @JsonProperty(\"orders\") List\u003cJsonAdaptedOrder\u003e orders) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        this.clients.addAll(clients);","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"        this.ingredients.addAll(ingredients);","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"        this.orders.addAll(orders);","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        clients.addAll(source.getClientList().stream().map(JsonAdaptedClient::new).collect(Collectors.toList()));","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"        ingredients.addAll(source.getIngredientList().stream().map(JsonAdaptedIngredient::new)","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"        orders.addAll(source.getOrderList().stream().map(JsonAdaptedOrder::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"     * @return address book object.","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"        for (JsonAdaptedClient jsonAdaptedClient : clients) {","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"            Client client \u003d jsonAdaptedClient.toModelType();","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"            if (addressBook.hasClient(client)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"            addressBook.addClient(client);","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"        for (JsonAdaptedIngredient jsonAdaptedIngredient : ingredients) {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"            Ingredient ingredient \u003d jsonAdaptedIngredient.toModelType();","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"            if (addressBook.hasIngredient(ingredient)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_INGREDIENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"            addressBook.addIngredient(ingredient);","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"        for (JsonAdaptedOrder jsonAdaptedOrder : orders) {","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"            Order order \u003d jsonAdaptedOrder.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"EuniceSim142"},"content":"            if (addressBook.hasOrder(order)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"EuniceSim142"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"EuniceSim142"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"EuniceSim142"},"content":"            addressBook.addOrder(order);","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"EuniceSim142":36,"zognin":7,"-":42,"sivayogasubramanian":5}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.util.JsonUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.DataConversionException;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":40,"sivayogasubramanian":6}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.DataConversionException;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":25,"sivayogasubramanian":5}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.LogsCenter;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.DataConversionException;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":70,"sivayogasubramanian":6}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.DataConversionException;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":" * Represents a storage for {@link ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs}.","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"     * Saves the given {@link ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":28,"sivayogasubramanian":8}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"         * @see ay2122s1_cs2103t_w16_2.btbb.logic.Logic#execute(String)","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":77,"sivayogasubramanian":6}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.LogsCenter;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-w16-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":97,"sivayogasubramanian":5}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.GuiSettings;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.LogsCenter;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.Logic;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.tabcontent.HomeTabContent;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.tabcontent.StatTabContent;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import javafx.scene.control.SingleSelectionModel;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    private TabPane tabPane;","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"    private Tab homeTab;","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"    private Tab statTab;","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"    private StackPane clientListPanelPlaceholder;","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":121,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"zognin"},"content":"     * Initializes the tabs.","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"zognin"},"content":"    void initializeTabs() {","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"zognin"},"content":"        // Initialise tabs with content","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"zognin"},"content":"        HomeTabContent homeTabContent \u003d new HomeTabContent(logic.getFilteredClientList(), logic.getFilteredOrderList());","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"zognin"},"content":"        homeTab.setContent(homeTabContent.getRoot());","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"zognin"},"content":"        StatTabContent statTabContent \u003d new StatTabContent(logic.getFilteredIngredientList());","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"zognin"},"content":"        statTab.setContent(statTabContent.getRoot());","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"zognin"},"content":"        // Select default tab","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"zognin"},"content":"        SingleSelectionModel\u003cTab\u003e selectionModel \u003d tabPane.getSelectionModel();","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"zognin"},"content":"        selectionModel.select(homeTab);","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"zognin"},"content":"     * Switches tabs.","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"zognin"},"content":"     * @param tab Tab to switch to.","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"zognin"},"content":"    void switchTabs(UiTab tab) {","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"zognin"},"content":"        SingleSelectionModel\u003cTab\u003e selectionModel \u003d tabPane.getSelectionModel();","lastModifiedDate":"2021-10-06"},{"lineNumber":184,"author":{"gitId":"zognin"},"content":"        selectionModel.select(tab.getZeroBasedTabIndex());","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"sivayogasubramanian"},"content":"     * @see ay2122s1_cs2103t_w16_2.btbb.logic.Logic#execute(String)","lastModifiedDate":"2021-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"zognin"},"content":"            if (commandResult.isSwitchTab()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":207,"author":{"gitId":"zognin"},"content":"                switchTabs(commandResult.getTabToSwitchTo());","lastModifiedDate":"2021-10-08"},{"lineNumber":208,"author":{"gitId":"zognin"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":209,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"EuniceSim142":1,"zognin":36,"-":171,"sivayogasubramanian":9}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":25,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App). */","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":10,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.MainApp;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.LogsCenter;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.util.StringUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.Logic;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"            mainWindow.initializeTabs();","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zognin":1,"-":80,"sivayogasubramanian":6}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.MainApp;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":83,"sivayogasubramanian":6}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/ui/UiTab.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":" * Represents a Ui tab.","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"public enum UiTab {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    HOME(0, \"Home\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    INVENTORY(1, \"Inventory\");","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    private Index index;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    private String label;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"     * Constructs a UiTab.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"     * @param zeroBasedIndex The zero based index identifying the tab.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"     * @param label The string label of the tab, it should correspond to the view.","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    UiTab(int zeroBasedIndex, String label) {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        this.index \u003d Index.fromZeroBased(zeroBasedIndex);","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"        this.label \u003d label;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        return label;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     * Gets the zero based index that identifies the tab.","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     * @return An index number.","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"    public int getZeroBasedTabIndex() {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        return index.getZeroBased();","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"zognin":39}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/ui/client/ClientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui.client;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiPart;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":" * An UI component that displays information of a {@code Client}.","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"public class ClientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    private static final String FXML \u003d \"ClientListCard.fxml\";","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    private final Client client;","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"     * Creates a {@code ClientCode} with the given {@code Client} and index to display.","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"    public ClientCard(Client client, int displayedIndex) {","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"        this.client \u003d client;","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"        name.setText(client.getName().toString());","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"        phone.setText(client.getPhone().toString());","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"        address.setText(client.getAddress().toString());","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"        email.setText(client.getEmail().toString());","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"        if (!(other instanceof ClientCard)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"        ClientCard card \u003d (ClientCard) other;","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"                \u0026\u0026 client.equals(card.client);","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"EuniceSim142":14,"zognin":2,"-":52,"sivayogasubramanian":1}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/ui/client/ClientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui.client;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.LogsCenter;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiPart;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":" * Panel containing the list of clients.","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"public class ClientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    private static final String FXML \u003d \"ClientListPanel.fxml\";","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ClientListPanel.class);","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"    @FXML","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    private ListView\u003cClient\u003e clientListView;","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"     * Creates a {@code ClientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"    public ClientListPanel(ObservableList\u003cClient\u003e clientList) {","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"        super(FXML);","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        clientListView.setItems(clientList);","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"        clientListView.setCellFactory(listView -\u003e new ClientListViewCell());","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Client} using a {@code ClientCard}.","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"    class ClientListViewCell extends ListCell\u003cClient\u003e {","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"        @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"        protected void updateItem(Client client, boolean empty) {","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"            super.updateItem(client, empty);","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"            if (empty || client \u003d\u003d null) {","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"                setGraphic(null);","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"                setText(null);","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"            } else {","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"                setGraphic(new ClientCard(client, getIndex() + 1).getRoot());","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"EuniceSim142":45,"zognin":2,"sivayogasubramanian":2}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/ui/ingredient/IngredientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui.ingredient;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiPart;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":" * Encapsulates a UI component that displays information of a {@code Ingredient}.","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"public class IngredientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    private static final String FXML \u003d \"IngredientListCard.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    private final Ingredient ingredient;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    private Label id;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    private Label name;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    private Label quantity;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    private Label unit;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     * Creates a {@code IngredientCard} with the given {@code Ingredient} and index to display.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     * @param ingredient Ingredient to display.","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     * @param displayedIndex Index of the ingredient in the currently shown list.","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    public IngredientCard(Ingredient ingredient, int displayedIndex) {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        super(FXML);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        this.ingredient \u003d ingredient;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        name.setText(ingredient.getName().toString());","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        quantity.setText(\"x \" + ingredient.getQuantity().toString());","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        unit.setText(ingredient.getUnit().toString());","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"        if (!(other instanceof IngredientCard)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"        // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"        IngredientCard card \u003d (IngredientCard) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"                \u0026\u0026 ingredient.equals(card.ingredient);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"zognin":61}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/ui/ingredient/IngredientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui.ingredient;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiPart;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":" * Panel containing the list of ingredients.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"public class IngredientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    private static final String FXML \u003d \"IngredientListPanel.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    private ListView\u003cIngredient\u003e ingredientListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * Creates a {@code IngredientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * @param ingredientList Ingredient list to display.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    public IngredientListPanel(ObservableList\u003cIngredient\u003e ingredientList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        super(FXML);","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        ingredientListView.setItems(ingredientList);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        ingredientListView.setCellFactory(listView -\u003e new IngredientListViewCell());","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Ingredient} using a {@code IngredientCard}.","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    class IngredientListViewCell extends ListCell\u003cIngredient\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        protected void updateItem(Ingredient ingredient, boolean empty) {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"            super.updateItem(ingredient, empty);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"            if (empty || ingredient \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"                setText(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"            } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"                setGraphic(new IngredientCard(ingredient, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"zognin":47}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/ui/order/OrderCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui.order;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiPart;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":" * Encapsulates a UI component that displays information of a {@code Order}.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"public class OrderCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    private static final String FXML \u003d \"OrderListCard.fxml\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    private final Order order;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    private final Color completionColor \u003d Color.web(\"#03DAC5\");","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    private Label id;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"    private Label clientName;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Imranr2"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    private Label clientPhone;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Imranr2"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"    private Label clientAddress;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"    private Label recipeName;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"    private Label recipeIngredients;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"    private Label orderPrice;","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"    private Label orderDeadline;","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"    private Label orderQuantity;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"    private Circle orderIsFinished;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     * Creates a {@code OrderCard} with the given {@code Order} and index to display.","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"     * @param order Order to display.","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"     * @param displayedIndex Index of the order in the currently shown list.","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    public OrderCard(Order order, int displayedIndex) {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"        super(FXML);","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"        this.order \u003d order;","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Imranr2"},"content":"        clientName.setText(order.getClientName().toString());","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"        clientPhone.setText(order.getClientPhone().toString());","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Imranr2"},"content":"        clientAddress.setText(order.getClientAddress().toString());","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"        recipeName.setText(order.getRecipeName().toString());","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"        recipeIngredients.setText(order.getRecipeIngredients().toDisplayString());","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"        orderPrice.setText(\"(Price: $\" + order.getPrice().toString() + \")\");","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"        orderDeadline.setText(order.getDeadline().toString());","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"        orderQuantity.setText(\"x \" + order.getQuantity().toString());","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"Imranr2"},"content":"        orderIsFinished.setStroke(order.getCompletionStatus().getIsFinished() ? completionColor : Color.WHITE);","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"        if (!(other instanceof OrderCard)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"        // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"        OrderCard card \u003d (OrderCard) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"                \u0026\u0026 order.equals(card.order);","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"EuniceSim142":5,"Imranr2":7,"zognin":55,"sivayogasubramanian":15}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/ui/order/OrderListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui.order;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiPart;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":" * Panel containing the list of orders.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"public class OrderListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    private static final String FXML \u003d \"OrderListPanel.fxml\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(OrderListPanel.class);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    private ListView\u003cOrder\u003e orderListView;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     * Creates a {@code OrderListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"     * @param orderList Order list to display.","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    public OrderListPanel(ObservableList\u003cOrder\u003e orderList) {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        super(FXML);","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        orderListView.setItems(orderList);","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        orderListView.setCellFactory(listView -\u003e new OrderListPanel.OrderListViewCell());","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Order} using a {@code OrderCard}.","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    class OrderListViewCell extends ListCell\u003cOrder\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        protected void updateItem(Order order, boolean empty) {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"            super.updateItem(order, empty);","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"            if (empty || order \u003d\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"                setText(null);","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"            } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"                setGraphic(new OrderCard(order, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"zognin":51}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/ui/tabcontent/HomeTabContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui.tabcontent;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiPart;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.client.ClientListPanel;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.order.OrderListPanel;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":" * Encapsulates the home tab.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"public class HomeTabContent extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    private static final String FXML \u003d \"HomeTabContent.fxml\";","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    private StackPane clientListPanelPlaceholder;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    private StackPane orderListPanelPlaceholder;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"     * Constructs a {@code HomeTab}.","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"     * @param clientList List of clients to display in the tab.","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     * @param orderList List of orders to display in the tab.","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    public HomeTabContent(ObservableList\u003cClient\u003e clientList, ObservableList\u003cOrder\u003e orderList) {","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        super(FXML);","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"        ClientListPanel clientListPanel \u003d new ClientListPanel(clientList);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        clientListPanelPlaceholder.getChildren().add(clientListPanel.getRoot());","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        OrderListPanel orderListPanel \u003d new OrderListPanel(orderList);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        orderListPanelPlaceholder.getChildren().add(orderListPanel.getRoot());","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"zognin":40}},{"path":"src/main/java/ay2122s1_cs2103t_w16_2/btbb/ui/tabcontent/StatTabContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui.tabcontent;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiPart;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.ingredient.IngredientListPanel;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":" * Encapsulates the statistics tab.","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"public class StatTabContent extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    private static final String FXML \u003d \"StatTabContent.fxml\";","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    private StackPane ingredientListPanelPlaceholder;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * Constructs a {@code StatTab}.","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * @param ingredientList List of ingredients to display in the tab.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    public StatTabContent(ObservableList\u003cIngredient\u003e ingredientList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        super(FXML);","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        IngredientListPanel ingredientListPanel \u003d new IngredientListPanel(ingredientList);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        ingredientListPanelPlaceholder.getChildren().add(ingredientListPanel.getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"zognin":31}},{"path":"src/main/resources/view/ClientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"  \u003cListView fx:id\u003d\"clientListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"EuniceSim142":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":".root {","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"    -fx-font-family: \"Open Sans Regular\", \"Arial\";","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"    -fx-background: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    -fx-background-color: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    background-color: #121212; /* Used in the default.html file */","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"    -fx-background-color: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    -fx-effect: null;","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":".tab-pane:focused .tab-header-area .headers-region .tab:selected .focus-indicator {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":".tab {","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"    -fx-background-color: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":".tab-label {","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"    -fx-opacity: 50%;","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":".tab:selected .tab-label {","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"    -fx-opacity: 100%;","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"    -fx-base: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"    -fx-control-inner-background: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"    -fx-background-color: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":".list-header {","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"    -fx-padding: 0 0 0 10;","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"    -fx-background-color: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"    -fx-background-color: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":".list-cell:filled {","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"zognin"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"    -fx-padding: 10 10 10 0;","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"zognin"},"content":"    -fx-border-insets: 10 10 10 0;","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"zognin"},"content":"    -fx-background-insets: 10 10 10 0;","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"zognin"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"zognin"},"content":"    -fx-background-color: #222222;","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"zognin"},"content":"    -fx-border-color: #9870AB;","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"zognin"},"content":"    -fx-border-radius: 20;","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"zognin"},"content":"    -fx-text-fill: #BB86FC;","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"zognin"},"content":".cell_big_label_secondary {","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"zognin"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"zognin"},"content":".cell_small_label_header {","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"zognin"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"zognin"},"content":"    -fx-text-fill: #03DAC5;","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"zognin"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":156,"author":{"gitId":"zognin"},"content":"     -fx-background-color: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":160,"author":{"gitId":"zognin"},"content":"     -fx-background-color: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":164,"author":{"gitId":"zognin"},"content":".pane-with-border-secondary {","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"zognin"},"content":"    -fx-background-color: #3E3E3E;","lastModifiedDate":"2021-10-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"zognin"},"content":"    -fx-background-color: #2E2E2E;","lastModifiedDate":"2021-10-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"zognin"},"content":"    -fx-background-color: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":181,"author":{"gitId":"zognin"},"content":"    -fx-border-color: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":186,"author":{"gitId":"zognin"},"content":"    -fx-background-color: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"zognin"},"content":"    -fx-padding: 12 22 5 22;","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"zognin"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"zognin"},"content":"    -fx-background-color: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"zognin"},"content":"    -fx-background-insets: 0 0 0 0, 0, 0, 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"sivayogasubramanian"},"content":"  -fx-background-color: #696969;","lastModifiedDate":"2021-10-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"zognin"},"content":"    -fx-background-color: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"zognin"},"content":".corner {","lastModifiedDate":"2021-10-06"},{"lineNumber":230,"author":{"gitId":"zognin"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-06"},{"lineNumber":231,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-06"},{"lineNumber":232,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"zognin"},"content":"    -fx-background-color: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"zognin"},"content":"    -fx-background-color: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"zognin"},"content":"    -fx-background-color: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":259,"author":{"gitId":"zognin"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":262,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":263,"author":{"gitId":"zognin"},"content":"    -fx-background-color: derive(#121212, 50%);","lastModifiedDate":"2021-10-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"zognin"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2021-10-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":277,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":281,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":285,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"zognin"},"content":"    -fx-border-color: #121212;","lastModifiedDate":"2021-10-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":306,"author":{"gitId":"EuniceSim142"},"content":"#filterField, #clientListPanel, #clientWebpage {","lastModifiedDate":"2021-09-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":311,"author":{"gitId":"zognin"},"content":"    -fx-background-color: transparent, #2E2E2E, transparent, #2E2E2E;","lastModifiedDate":"2021-10-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"}],"authorContributionMap":{"EuniceSim142":1,"zognin":80,"-":231,"sivayogasubramanian":1}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":".background {","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"    -fx-background-color: #121212;","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"    background-color: #121212; /* Used in the default.html file */","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"#copyButton {","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"    -fx-background-color: #121212;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"    -fx-background-insets: 0 0 0 0, 0, 0, 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"#copyButton:hover {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"#copyButton:pressed, #copyButton:default:hover:pressed {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    -fx-background-color: #696969;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"#helpMessage {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"-":1,"sivayogasubramanian":29}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"      \u003cHBox alignment\u003d\"CENTER\" styleClass\u003d\"background\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"-":44,"sivayogasubramanian":1}},{"path":"src/main/resources/view/HomeTabContent.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"\u003cGridPane xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        \u003cVBox fx:id\u003d\"clientList\" styleClass\u003d\"pane-with-border\" GridPane.columnIndex\u003d\"0\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"            \u003cLabel text\u003d\"Client Bookmarks\" styleClass\u003d\"list-header\"/\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"            \u003cStackPane fx:id\u003d\"clientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"        \u003cVBox fx:id\u003d\"orderList\" styleClass\u003d\"pane-with-border\" GridPane.columnIndex\u003d\"1\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"            \u003cLabel text\u003d\"Orders\" styleClass\u003d\"list-header\"/\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"            \u003cStackPane fx:id\u003d\"orderListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10.0\" percentWidth\u003d\"40.0\"/\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10.0\" percentWidth\u003d\"60.0\"/\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"zognin":34}},{"path":"src/main/resources/view/IngredientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"        \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"            \u003cLabel fx:id\u003d\"quantity\" styleClass\u003d\"cell_big_label_secondary\" text\u003d\"\\$quantity\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"            \u003cLabel fx:id\u003d\"unit\" styleClass\u003d\"cell_big_label_secondary\" text\u003d\"\\$unit\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"zognin":30}},{"path":"src/main/resources/view/IngredientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"    \u003cListView fx:id\u003d\"ingredientListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"zognin":6}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"         title\u003d\"BobTheBistroBoss\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        \u003cAnchorPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"            \u003cTabPane fx:id\u003d\"tabPane\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"                     AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"                     AnchorPane.topAnchor\u003d\"0.0\"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"                     AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"                     AnchorPane.bottomAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"              \u003cTab fx:id\u003d\"homeTab\" text\u003d\"Home\" closable\u003d\"false\"/\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"              \u003cTab fx:id\u003d\"statTab\" text\u003d\"Inventory\" closable\u003d\"false\"/\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"            \u003c/TabPane\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"            \u003cButton text\u003d\"Help\" onAction\u003d\"#handleHelp\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"          \u003c/children\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border-secondary\"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"                   minHeight\u003d\"140\" prefHeight\u003d\"140\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border-secondary\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"zognin":24,"-":34}},{"path":"src/main/resources/view/OrderListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"15\" bottom\u003d\"10\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"            \u003cGridPane\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"                    \u003cHBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\" spacing\u003d\"4\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"                        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"                            \u003cminWidth\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"                                \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"                                \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"                            \u003c/minWidth\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"                        \u003cLabel fx:id\u003d\"recipeName\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$recipe name\"/\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"                        \u003cLabel fx:id\u003d\"orderQuantity\" styleClass\u003d\"cell_big_label\" text\u003d\"x $qty\"/\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"                        \u003cLabel fx:id\u003d\"orderPrice\" styleClass\u003d\"cell_big_label\" text\u003d\"- $price\"/\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"                    \u003c/HBox\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"                    \u003cHBox alignment\u003d\"CENTER_RIGHT\" GridPane.columnIndex\u003d\"1\" spacing\u003d\"4\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"                        \u003cLabel fx:id\u003d\"orderDeadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deadline\"/\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"                        \u003cCircle fx:id\u003d\"orderIsFinished\" id\u003d\"doneCircle\" radius\u003d\"8\" fill\u003d\"transparent\" strokeWidth\u003d\"2\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"                    \u003c/HBox\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"                \u003c/children\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"                \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"                    \u003cColumnConstraints hgrow\u003d\"ALWAYS\" percentWidth\u003d\"70.0\"/\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"                    \u003cColumnConstraints hgrow\u003d\"ALWAYS\" percentWidth\u003d\"30.0\"/\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"                \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"            \u003c/GridPane\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"            \u003cLabel text\u003d\"Ingredients\" styleClass\u003d\"cell_small_label_header\"/\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"            \u003cLabel fx:id\u003d\"recipeIngredients\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"            \u003cLabel text\u003d\"Client Details\" styleClass\u003d\"cell_small_label_header\"/\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"            \u003cLabel fx:id\u003d\"clientName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$client name\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"            \u003cLabel fx:id\u003d\"clientPhone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$client phone\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"            \u003cLabel fx:id\u003d\"clientAddress\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$client address\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"EuniceSim142":1,"zognin":49,"sivayogasubramanian":4}},{"path":"src/main/resources/view/OrderListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"    \u003cListView fx:id\u003d\"orderListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"zognin":6}},{"path":"src/main/resources/view/StatTabContent.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"\u003cGridPane xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"        \u003cVBox styleClass\u003d\"pane-with-border\" GridPane.columnIndex\u003d\"0\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"            \u003cLabel text\u003d\"Inventory\" styleClass\u003d\"list-header\"/\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"            \u003cStackPane fx:id\u003d\"ingredientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10.0\" percentWidth\u003d\"100.0\"/\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"zognin":23}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidClientAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"    \"name\": \"Valid Client\",","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"    \"name\": \"Client With Invalid Phone Field\",","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"  } ],","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"  \"ingredients\": [ {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredient name\": \"Chicken\",","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"15\",","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"whole\"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"  \"orders\" : [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    \"clientPhone\" : \"9482424\"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"    \"clientPhone\" : \"948asdf2424\"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"EuniceSim142":13,"-":10}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidIngredientAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"{","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"    \"name\": \"Average Client\",","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"    \"name\": \"Normal Client\",","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"    \"phone\": \"94822424\",","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"  } ],","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"  \"ingredients\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredient name\": \"Valid Ingredient\",","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"15\",","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"whole\"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredient name\": \"inValid Ingredient\",","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"15\",","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"whole@@\"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"  \"orders\" : [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    \"clientPhone\" : \"9482424\"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    \"clientPhone\" : \"94822424\"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"  } ]","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"EuniceSim142":27}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidClientAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"{","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"    \"name\": \"Client with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"  } ],","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"  \"ingredients\": [ {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredient name\": \"Chicken\",","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"15\",","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"whole\"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    \"clientPhone\": \"9482424\"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"  } ]","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"EuniceSim142":16}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidIngredientAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"{","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"    \"phone\": \"94822424\",","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"  } ],","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"  \"ingredients\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredient name\": \"Invalid Ingredient!@\",","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"15\",","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"whole\"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    \"clientPhone\": \"9482424\"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"  } ]","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"EuniceSim142":16}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateClientAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"  } ],","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"  \"ingredients\": [ {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredientName\": \"Chicken\",","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"15\",","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"whole\"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"  \"orders\": []","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"EuniceSim142":7,"zognin":2,"-":10}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateIngredientAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"{","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"  } ],","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"  \"ingredients\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredientName\": \"Chicken\",","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"15\",","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"whole\"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredientName\": \"Chicken\",","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"15\",","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"whole\"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"  \"orders\": []","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"EuniceSim142":18}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateOrderAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"  \"ingredients\": [],","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientPhone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientName\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientAddress\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeName\" : \"Chicken Rice\",","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"whole\",","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Chicken\"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"    }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"200\",","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"grams\",","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Rice\"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"    \"price\" : \"4.50\",","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    \"deadline\" : \"12-12-2021 1900\",","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"4\",","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"yes\"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"  }, {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientPhone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientName\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientAddress\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeName\" : \"Chicken Rice\",","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"whole\",","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Chicken\"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"    }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"200\",","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"grams\",","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Rice\"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"    } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"    \"price\" : \"4.50\",","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"    \"deadline\" : \"12-12-2021 1900\",","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"4\",","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"yes\"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"  } ]","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"EuniceSim142":4,"sivayogasubramanian":42}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidClientAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"  } ],","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"  \"ingredients\": [ {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredientName\": \"Chicken\",","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"15\",","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"whole\"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    \"clientPhone\": \"94351253\",","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    \"clientName\": \"Alice Pauline\",","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    \"clientAddress\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"    \"recipeName\" : \"Chicken Rice\",","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"      \"quantity\" : \"1\",","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"      \"unit\" : \"whole\",","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"      \"name\" : \"Chicken\"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    }, {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"      \"quantity\" : \"200\",","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"      \"unit\" : \"grams\",","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"      \"name\" : \"Rice\"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    } ],","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"    \"price\" : \"4.50\",","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    \"deadline\" : \"12-12-2021 1900\",","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"4\",","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"no\"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"  } ]","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"EuniceSim142":25,"zognin":1,"-":6}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidIngredientAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"{","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"    \"email\": \"muster@gmail.com\",","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"  } ],","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"  \"ingredients\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredientName\": \"Chi!ccken\",","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"30\",","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"whole\"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    \"clientPhone\": \"94351253\",","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    \"clientName\": \"Alice Pauline\",","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    \"clientAddress\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"    \"recipeName\" : \"Chicken Rice\",","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"      \"quantity\" : \"1\",","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"      \"unit\" : \"whole\",","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"      \"name\" : \"Chicken\"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    }, {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"      \"quantity\" : \"200\",","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"      \"unit\" : \"grams\",","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"      \"name\" : \"Rice\"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    } ],","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"    \"price\" : \"4.50\",","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    \"deadline\" : \"12-12-2021 1900\",","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"4\",","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"no\"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"  } ]","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"EuniceSim142":32}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidOrderAddressBook1.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"  \"ingredients\": [],","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientPhone\": \"9435$$1253\",","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientName\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientAddress\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeName\" : \"Chicken Rice\",","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"whole\",","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Chicken\"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"    }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"200\",","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"grams\",","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Rice\"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"    \"price\" : \"4.50\",","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    \"deadline\" : \"12-12-2021 1900\",","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"4\",","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"yes\"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"  } ]","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"EuniceSim142":2,"sivayogasubramanian":26}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidOrderAddressBook2.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"  \"ingredients\": [],","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientPhone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientName\": \"Alice!$Pauline\",","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientAddress\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeName\" : \"Chicken Rice\",","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"whole\",","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Chicken\"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"    }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"200\",","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"grams\",","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Rice\"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"    \"price\" : \"4.50\",","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    \"deadline\" : \"12-12-2021 1900\",","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"4\",","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"yes\"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"  } ]","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"EuniceSim142":2,"sivayogasubramanian":26}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidOrderAddressBook3.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"  \"ingredients\": [],","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientPhone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientName\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientAddress\": \"\",","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeName\" : \"Chicken Rice\",","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"whole\",","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Chicken\"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"    }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"200\",","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"grams\",","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Rice\"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"    \"price\" : \"4.50\",","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    \"deadline\" : \"12-12-2021 1900\",","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"4\",","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"yes\"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"  } ]","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"EuniceSim142":2,"sivayogasubramanian":26}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidOrderAddressBook4.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"  \"ingredients\": [],","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientPhone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientName\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientAddress\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeName\" : \"Chicken@@$$Rice\",","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"whole\",","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Chicken\"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"    }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"200\",","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"grams\",","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Rice\"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"    \"price\" : \"4.50\",","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    \"deadline\" : \"12-12-2021 1900\",","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"4\",","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"yes\"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"  } ]","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"EuniceSim142":2,"sivayogasubramanian":26}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidOrderAddressBook5.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"  \"ingredients\": [],","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientPhone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientName\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientAddress\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeName\" : \"Chicken Rice\",","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"1we\",","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"whole\",","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Chicken\"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"    }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"200\",","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"\",","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Rice\"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"    \"price\" : \"4.50\",","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    \"deadline\" : \"12-12-2021 1900\",","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"4\",","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"yes\"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"  } ]","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"EuniceSim142":2,"sivayogasubramanian":26}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidOrderAddressBook6.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"  \"ingredients\": [],","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientPhone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientName\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientAddress\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeName\" : \"Chicken Rice\",","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"whole\",","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Chicken\"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"    }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"200\",","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"grams\",","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Rice\"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"    \"price\" : \"$4.50\",","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    \"deadline\" : \"12-12-2021 1900\",","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"4\",","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"yes\"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"  } ]","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"EuniceSim142":2,"sivayogasubramanian":26}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidOrderAddressBook7.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"  \"ingredients\": [],","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"  \"orders\": [{","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientPhone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientName\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientAddress\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeName\" : \"Chicken Rice\",","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"whole\",","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Chicken\"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"    }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"200\",","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"grams\",","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Rice\"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"    \"price\" : \"4.50\",","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    \"deadline\" : \"2021-12-12 1900\",","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"4\",","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"yes\"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"  }]","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"EuniceSim142":2,"sivayogasubramanian":26}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidOrderAddressBook8.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"  \"ingredients\": [],","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"  \"orders\": [{","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientPhone\": \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientName\": \"Alice Pauline\",","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientAddress\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeName\" : \"Chicken Rice\",","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"whole\",","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Chicken\"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"    }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"200\",","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"grams\",","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Rice\"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"    \"price\" : \"4.50\",","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    \"deadline\" : \"12-12-2021 1900\",","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"-12\",","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"yes\"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"  }]","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"EuniceSim142":2,"sivayogasubramanian":26}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidOrderAddressBook9.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"{","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"  \"clients\": [ {","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"  } ],","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"  \"ingredients\": [],","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"  \"orders\": [{","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"    \"clientPhone\": \"94351253\",","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"    \"clientName\": \"Alice Pauline\",","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"    \"clientAddress\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"    \"recipeName\" : \"Chicken Rice\",","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"      \"quantity\" : \"1\",","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"      \"unit\" : \"whole\",","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"      \"name\" : \"Chicken\"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    }, {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"      \"quantity\" : \"200\",","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"      \"unit\" : \"grams\",","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"      \"name\" : \"Rice\"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    } ],","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    \"price\" : \"4.50\",","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    \"deadline\" : \"12-12-2021 1900\",","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"-12\",","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"y\"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"  }]","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EuniceSim142":28}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalClientsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"  \"_comment\": \"AddressBook save file which contains the same Client values as in TypicalClients#getTypicalAddressBook()\",","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"  \"clients\" : [ {","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\"","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    \"address\" : \"wall street\"","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    \"address\" : \"10th street\"","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    \"address\" : \"michegan ave\"","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    \"address\" : \"little tokyo\"","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    \"address\" : \"4th street\"","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"  } ],","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"  \"ingredients\": [ {","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredientName\": \"Avocado\",","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"5\",","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"whole\"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredientName\": \"Bread\",","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"1000\",","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"slice\"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredientName\": \"Butter\",","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"550\",","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"grams\"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredientName\": \"Chicken\",","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"10\",","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"whole\"","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredientName\": \"Dark Chocolate\",","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"300\",","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"grams\"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredientName\": \"Fish\",","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"20\",","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"whole\"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredientName\": \"Flour\",","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"4\",","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"    \"unit\": \"kg\"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredientName\": \"Ginger\",","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"8\",","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"whole\"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredientName\": \"Kaya\",","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"1000\",","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"grams\"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredientName\": \"Noodles\",","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"4000\",","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"grams\"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredientName\": \"Prawn\",","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"200\",","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"    \"unit\": \"whole\"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"EuniceSim142"},"content":"    \"ingredientName\": \"Rice\",","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\": \"5000\",","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"EuniceSim142"},"content":"    \"unit\": \"grams\"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"EuniceSim142"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"  \"orders\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"EuniceSim142"},"content":"    \"clientPhone\": \"94351253\",","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"EuniceSim142"},"content":"    \"clientName\": \"Alice Pauline\",","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientAddress\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeName\" : \"Chicken Rice\",","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"whole\",","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Chicken\"","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"sivayogasubramanian"},"content":"    }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"200\",","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"grams\",","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Rice\"","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"sivayogasubramanian"},"content":"    } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"sivayogasubramanian"},"content":"    \"price\" : \"4.50\",","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"    \"deadline\" : \"12-12-2021 1900\",","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"4\",","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"yes\"","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"EuniceSim142"},"content":"    \"clientPhone\": \"98765432\",","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"EuniceSim142"},"content":"    \"clientName\": \"Benson Meier\",","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientAddress\": \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeName\" : \"Nasi Lemak\",","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"whole\",","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Fish\"","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"sivayogasubramanian"},"content":"    }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"200\",","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"grams\",","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Rice\"","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"    } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"    \"price\" : \"5.50\",","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"    \"deadline\" : \"01-01-2019 1300\",","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"2\",","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"no\"","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"EuniceSim142"},"content":"    \"clientPhone\": \"95352563\",","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"EuniceSim142"},"content":"    \"clientName\": \"Carl Kurz\",","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientAddress\": \"wall street\",","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeName\" : \"Prata\",","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeIngredients\" : [],","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"sivayogasubramanian"},"content":"    \"price\" : \"6.50\",","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"sivayogasubramanian"},"content":"    \"deadline\" : \"29-02-2020 1600\",","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"1\",","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"yes\"","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"EuniceSim142"},"content":"    \"clientPhone\": \"87652533\",","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"EuniceSim142"},"content":"    \"clientName\": \"Daniel Meier\",","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientAddress\": \"10th street\",","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeName\" : \"Char kuay teow\",","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"200\",","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"grams\",","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Noodles\"","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"sivayogasubramanian"},"content":"    } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"sivayogasubramanian"},"content":"    \"price\" : \"7.00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"sivayogasubramanian"},"content":"    \"deadline\" : \"29-02-2024 1200\",","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"2\",","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"no\"","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"EuniceSim142"},"content":"    \"clientPhone\": \"9482224\",","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"EuniceSim142"},"content":"    \"clientName\": \"Elle Meyer\",","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientAddress\": \"michegan ave\",","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeName\" : \"Hokkien prawn mee\",","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"200\",","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"grams\",","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Noodles\"","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"sivayogasubramanian"},"content":"    }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"20\",","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"whole\",","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Prawn\"","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"sivayogasubramanian"},"content":"    } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"sivayogasubramanian"},"content":"    \"price\" : \"8.50\",","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"sivayogasubramanian"},"content":"    \"deadline\" : \"16-12-2021 1900\",","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"2\",","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"yes\"","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"EuniceSim142"},"content":"    \"clientPhone\": \"9482427\",","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"EuniceSim142"},"content":"    \"clientName\": \"Fiona Kunz\",","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientAddress\": \"little tokyo\",","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeName\" : \"Kaya toast\",","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"2\",","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"slice\",","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Bread\"","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"sivayogasubramanian"},"content":"    }, {","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"100\",","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"grams\",","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Kaya\"","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"sivayogasubramanian"},"content":"    } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"sivayogasubramanian"},"content":"    \"price\" : \"10\",","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"sivayogasubramanian"},"content":"    \"deadline\" : \"17-12-2021 2100\",","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"2\",","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"no\"","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"EuniceSim142"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"EuniceSim142"},"content":"    \"clientPhone\": \"9482442\",","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"EuniceSim142"},"content":"    \"clientName\": \"George Best\",","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"sivayogasubramanian"},"content":"    \"clientAddress\": \"4th street\",","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeName\" : \"Satay\",","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"sivayogasubramanian"},"content":"    \"recipeIngredients\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"sivayogasubramanian"},"content":"      \"quantity\" : \"1\",","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"sivayogasubramanian"},"content":"      \"unit\" : \"whole\",","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"sivayogasubramanian"},"content":"      \"name\" : \"Chicken\"","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"sivayogasubramanian"},"content":"    } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":194,"author":{"gitId":"sivayogasubramanian"},"content":"    \"price\" : \"10.00\",","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"sivayogasubramanian"},"content":"    \"deadline\" : \"18-12-2021 2359\",","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"EuniceSim142"},"content":"    \"quantity\" : \"2\",","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"EuniceSim142"},"content":"    \"isFinished\" : \"yes\"","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"EuniceSim142"},"content":"  } ]","lastModifiedDate":"2021-09-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"EuniceSim142":85,"zognin":8,"-":29,"sivayogasubramanian":77}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":56,"sivayogasubramanian":1}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.core;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":23,"sivayogasubramanian":1}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.core;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                                              int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":132,"sivayogasubramanian":2}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.core.index;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"        final Index fifthClientIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(fifthClientIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(fifthClientIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(fifthClientIndex.equals(fifthClientIndex));","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(fifthClientIndex.equals(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(fifthClientIndex.equals(5.0f));","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(fifthClientIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"EuniceSim142":7,"-":50,"sivayogasubramanian":2}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":33,"sivayogasubramanian":2}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"-":105,"sivayogasubramanian":3}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Config;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.DataConversionException;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":109,"sivayogasubramanian":4}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":19,"sivayogasubramanian":2}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.SerializableTestClass;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.TestUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":41,"sivayogasubramanian":3}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.commons.util;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":138,"sivayogasubramanian":2}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/exception/CommandExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.exception;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"class CommandExceptionTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String COMMAND_EXCEPTION_MESSAGE \u003d \"This is a CommandException.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    public void testCommandException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(CommandException.class, () -\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new CommandException(COMMAND_EXCEPTION_MESSAGE);","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"        });","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(CommandException.class, () -\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new CommandException(COMMAND_EXCEPTION_MESSAGE, new Throwable());","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"        });","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"sivayogasubramanian":20}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/exception/DataConversionExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.exception;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"class DataConversionExceptionTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"    public void testDataConversionException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(DataConversionException.class, () -\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new DataConversionException(new Exception());","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"        });","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"sivayogasubramanian":14}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/exception/IllegalValueExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.exception;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"class IllegalValueExceptionTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String ILLEGAL_VALUE_EXCEPTION_MESSAGE \u003d \"This is a IllegalValueException.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    public void testIllegalValueException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(CommandException.class, () -\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new CommandException(ILLEGAL_VALUE_EXCEPTION_MESSAGE);","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"        });","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(CommandException.class, () -\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new CommandException(ILLEGAL_VALUE_EXCEPTION_MESSAGE, new Throwable());","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"        });","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"sivayogasubramanian":20}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/exception/NotFoundExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.exception;","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException.NOT_FOUND_EXCEPTION_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"class NotFoundExceptionTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String NOT_FOUND_EXCEPTION_INPUT \u003d \"random input\";","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String EXPECTED_EXCEPTION_MESSAGE \u003d String.format(","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"            NOT_FOUND_EXCEPTION_MESSAGE_FORMAT, NOT_FOUND_EXCEPTION_INPUT","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"    );","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"    public void testNotFoundException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NotFoundException.class, () -\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new NotFoundException(NOT_FOUND_EXCEPTION_INPUT);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"        });","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new NotFoundException(NOT_FOUND_EXCEPTION_INPUT);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"        } catch (NotFoundException e) {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"            assertEquals(e.getMessage(), EXPECTED_EXCEPTION_MESSAGE);","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"sivayogasubramanian":28}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/exception/ParseExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.exception;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"class ParseExceptionTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String PARSE_EXCEPTION_MESSAGE \u003d \"This is a ParseException.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    public void testParseException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(ParseException.class, () -\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new ParseException(PARSE_EXCEPTION_MESSAGE);","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"        });","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(ParseException.class, () -\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new ParseException(PARSE_EXCEPTION_MESSAGE, new Throwable());","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"        });","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"sivayogasubramanian":20}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.AddClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.DeleteClientCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.ListClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.storage.StorageManager;","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.ClientBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"        String deleteCommand \u003d DeleteClientCommand.COMMAND_WORD + \" 9\";","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"        String listCommand \u003d ListClientCommand.COMMAND_WORD;","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"        assertCommandSuccess(listCommand, ListClientCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"EuniceSim142"},"content":"        String addCommand \u003d AddClientCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"EuniceSim142"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"EuniceSim142"},"content":"        expectedModel.addClient(expectedClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredClientList().remove(0));","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"    public void getFilteredOrderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredOrderList().remove(0));","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"EuniceSim142":8,"zognin":5,"-":131,"sivayogasubramanian":29}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"    public void isSwitchTab_hasTabToSwitchTo_true() {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        assertTrue(commandResult.isSwitchTab());","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    public void isSwitchTab_noTabToSwitchTo_false() {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        assertFalse(commandResult.isSwitchTab());","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    public void getTabToSwitchToTest() {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        CommandResult commandResultWithTabToSwitchTo \u003d new CommandResult(\"feedback\", UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        assertEquals(commandResultWithTabToSwitchTo.getTabToSwitchTo(), UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        CommandResult commandResultWithoutTabToSwitchTo \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        assertEquals(commandResultWithoutTabToSwitchTo.getTabToSwitchTo(), null);","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        CommandResult commandResultWithTabToSwitchTo \u003d new CommandResult(\"feedback\", UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        CommandResult otherCommandResultWithSameTabToSwitchTo \u003d new CommandResult(\"feedback\", UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"        assertTrue(commandResultWithTabToSwitchTo.equals(otherCommandResultWithSameTabToSwitchTo));","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"        // different tabToSwitchTo value -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        assertFalse(commandResult.equals(commandResultWithTabToSwitchTo));","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"        // different tab to switch to value -\u003e returns different hashcode","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", UiTab.HOME).hashCode());","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"zognin":32,"-":53,"sivayogasubramanian":1}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_INDEX;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_INDEX;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY_FROM;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY_TO;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_UNIT;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_COMPLETION_STATUS;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_DEADLINE;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_PRICE;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_QUANTITY;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_RECIPE_INGREDIENT;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_RECIPE_NAME;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.ClientDescriptor;","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.IngredientDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.OrderDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.StringContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.ClientDescriptorBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"    // Valid Client attributes","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String VALID_NAME_IMRAN \u003d \"Imran\";","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String VALID_PHONE_IMRAN \u003d \"95264521\";","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String VALID_EMAIL_IMRAN \u003d \"imran@example.com\";","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String VALID_ADDRESS_IMRAN \u003d \"Block 565, Imranny Street 2\";","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"    // Valid Ingredient attributes","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"    public static final String VALID_INGREDIENT_NAME_APPLE \u003d \"Apple\";","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"    public static final String VALID_INGREDIENT_NAME_BEEF \u003d \"Beef\";","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"    public static final String VALID_QUANTITY_APPLE \u003d \"10\";","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"    public static final String VALID_QUANTITY_BEEF \u003d \"30\";","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"    public static final String VALID_UNIT_APPLE \u003d \"whole\";","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"    public static final String VALID_UNIT_BEEF \u003d \"cuts\";","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"    // Valid Order attributes","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String VALID_RECIPE_NAME_CHICKEN_RICE \u003d \"Chicken Rice\";","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String VALID_RECIPE_NAME_LAKSA \u003d \"Laksa\";","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String VALID_RECIPE_INGREDIENT_LIST_1 \u003d VALID_INGREDIENT_NAME_APPLE + \"-\"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"            + VALID_QUANTITY_APPLE + \"-\" + VALID_UNIT_APPLE;","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String VALID_RECIPE_INGREDIENT_LIST_2 \u003d VALID_INGREDIENT_NAME_BEEF + \"-\"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"            + VALID_QUANTITY_BEEF + \"-\" + VALID_UNIT_BEEF;","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String VALID_PRICE_1 \u003d \"1\";","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String VALID_PRICE_2 \u003d \"2\";","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String VALID_DEADLINE_DECEMBER \u003d \"12-12-2021 1900\";","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String VALID_DEADLINE_MARCH \u003d \"03-03-2022 1500\";","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String VALID_ORDER_QUANTITY_1 \u003d \"1\";","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String VALID_ORDER_QUANTITY_2 \u003d \"2\";","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"EuniceSim142"},"content":"    public static final String VALID_ORDER_COMPLETION_STATUS_YES \u003d \"yes\";","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"    public static final String VALID_ORDER_COMPLETION_STATUS_NO \u003d \"no\";","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"    // Client (valid prefix + valid attributes)","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_CLIENT_NAME + VALID_NAME_AMY;","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_CLIENT_NAME + VALID_NAME_BOB;","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"    public static final String NAME_DESC_IMRAN \u003d \" \" + PREFIX_CLIENT_NAME + VALID_NAME_IMRAN;","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_CLIENT_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2021-10-02"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_CLIENT_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"    public static final String PHONE_DESC_IMRAN \u003d \" \" + PREFIX_CLIENT_PHONE + VALID_PHONE_IMRAN;","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_CLIENT_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_CLIENT_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_CLIENT_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_CLIENT_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"    public static final String ADDRESS_DESC_IMRAN \u003d \" \" + PREFIX_CLIENT_ADDRESS + VALID_ADDRESS_IMRAN;","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"Imranr2"},"content":"    public static final String INDEX_DESC_AMY \u003d \" \" + PREFIX_CLIENT_INDEX + INDEX_SECOND.getOneBased();","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"Imranr2"},"content":"    public static final String INDEX_DESC_BOB \u003d \" \" + PREFIX_CLIENT_INDEX + INDEX_FIRST.getOneBased();","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"sivayogasubramanian"},"content":"    // Ingredient (valid prefix + valid attributes)","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"    public static final String INGREDIENT_INDEX_DESC_FIRST \u003d \" \" + PREFIX_INGREDIENT_INDEX + \"1\";","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"EuniceSim142"},"content":"    public static final String INGREDIENT_NAME_DESC_APPLE \u003d \" \" + PREFIX_INGREDIENT_NAME + VALID_INGREDIENT_NAME_APPLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"EuniceSim142"},"content":"    public static final String INGREDIENT_NAME_DESC_BEEF \u003d \" \" + PREFIX_INGREDIENT_NAME + VALID_INGREDIENT_NAME_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"EuniceSim142"},"content":"    public static final String QUANTITY_DESC_APPLE \u003d \" \" + PREFIX_INGREDIENT_QUANTITY + VALID_QUANTITY_APPLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"EuniceSim142"},"content":"    public static final String QUANTITY_DESC_BEEF \u003d \" \" + PREFIX_INGREDIENT_QUANTITY + VALID_QUANTITY_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"EuniceSim142"},"content":"    public static final String UNIT_DESC_APPLE \u003d \" \" + PREFIX_INGREDIENT_UNIT + VALID_UNIT_APPLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"EuniceSim142"},"content":"    public static final String UNIT_DESC_BEEF \u003d \" \" + PREFIX_INGREDIENT_UNIT + VALID_UNIT_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"sivayogasubramanian"},"content":"    // Order (valid prefix + valid attributes)","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String RECIPE_NAME_DESC_CHICKEN_RICE \u003d \" \" + PREFIX_RECIPE_NAME","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"sivayogasubramanian"},"content":"            + VALID_RECIPE_NAME_CHICKEN_RICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String RECIPE_NAME_DESC_LAKSA \u003d \" \" + PREFIX_RECIPE_NAME + VALID_RECIPE_NAME_LAKSA;","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String RECIPE_INGREDIENT_LIST_DESC_1 \u003d \" \" + PREFIX_RECIPE_INGREDIENT","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"            + VALID_RECIPE_INGREDIENT_LIST_1;","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String RECIPE_INGREDIENT_LIST_DESC_2 \u003d \" \" + PREFIX_RECIPE_INGREDIENT","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"            + VALID_RECIPE_INGREDIENT_LIST_2;","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String ORDER_PRICE_DESC_1 \u003d \" \" + PREFIX_ORDER_PRICE + VALID_PRICE_1;","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String ORDER_PRICE_DESC_2 \u003d \" \" + PREFIX_ORDER_PRICE + VALID_PRICE_2;","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String ORDER_QUANTITY_DESC_1 \u003d \" \" + PREFIX_ORDER_QUANTITY + VALID_ORDER_QUANTITY_1;","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String ORDER_QUANTITY_DESC_2 \u003d \" \" + PREFIX_ORDER_QUANTITY + VALID_ORDER_QUANTITY_2;","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String DEADLINE_DESC_DECEMBER \u003d \" \" + PREFIX_ORDER_DEADLINE + VALID_DEADLINE_DECEMBER;","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String DEADLINE_DESC_MARCH \u003d \" \" + PREFIX_ORDER_DEADLINE + VALID_DEADLINE_MARCH;","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"EuniceSim142"},"content":"    public static final String ORDER_COMPLETION_STATUS_YES \u003d \" \" + PREFIX_ORDER_COMPLETION_STATUS","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"EuniceSim142"},"content":"            + VALID_ORDER_COMPLETION_STATUS_YES;","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"EuniceSim142"},"content":"    public static final String ORDER_COMPLETION_STATUS_NO \u003d \" \" + PREFIX_ORDER_COMPLETION_STATUS","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"EuniceSim142"},"content":"            + VALID_ORDER_COMPLETION_STATUS_NO;","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"sivayogasubramanian"},"content":"    // Client (valid prefix + invalid attributes)","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"Imranr2"},"content":"    public static final String INVALID_INDEX_DESC \u003d \" \" + PREFIX_CLIENT_INDEX + \"-1\";","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"zognin"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_CLIENT_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"zognin"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_CLIENT_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2021-10-02"},{"lineNumber":137,"author":{"gitId":"zognin"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_CLIENT_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2021-10-02"},{"lineNumber":138,"author":{"gitId":"zognin"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_CLIENT_ADDRESS; // no empty string for addresses","lastModifiedDate":"2021-10-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":140,"author":{"gitId":"sivayogasubramanian"},"content":"    // Ingredient (valid prefix + invalid attributes)","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"zognin"},"content":"    public static final String INVALID_INGREDIENT_INDEX_DESC_FIRST \u003d \" \" + PREFIX_INGREDIENT_INDEX + \"-1\";","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"EuniceSim142"},"content":"    public static final String INVALID_INGREDIENT_NAME_DESC \u003d \" \" + PREFIX_INGREDIENT_NAME + \"Rice\u0026\"; // \u0027\u0026\u0027 not allowed","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"zognin"},"content":"    public static final String INVALID_QUANTITY_DESC \u003d \" \" + PREFIX_INGREDIENT_QUANTITY + \"-30\";","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"zognin"},"content":"    public static final String INVALID_QUANTITY_FROM_DESC \u003d \" \" + PREFIX_INGREDIENT_QUANTITY_FROM + \"-30\";","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"zognin"},"content":"    public static final String INVALID_QUANTITY_TO_DESC \u003d \" \" + PREFIX_INGREDIENT_QUANTITY_TO + \"-30\";","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"EuniceSim142"},"content":"    public static final String INVALID_UNIT_DESC \u003d \" \" + PREFIX_INGREDIENT_UNIT; // no empty string for unit","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"sivayogasubramanian"},"content":"    // Order (valid prefix + invalid attributes)","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String INVALID_RECIPE_NAME_DESC \u003d \" \" + PREFIX_RECIPE_NAME","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"Chicken$\u0026Rice\"; // \u0027$\u0026\u0027 not allowed in names","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String INVALID_ORDER_PRICE_DESC \u003d \" \" + PREFIX_ORDER_PRICE","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"$1.50\"; // \u0027$\u0027 not allowed in prices","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String INVALID_RECIPE_INGREDIENT_LIST_DESC \u003d \" \" + PREFIX_RECIPE_INGREDIENT + \"almond-grams-1\";","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String INVALID_ORDER_QUANTITY_DESC \u003d \" \" + PREFIX_ORDER_QUANTITY + \"-20\";","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final String INVALID_DEADLINE_DESC \u003d \" \" + PREFIX_ORDER_DEADLINE","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"sivayogasubramanian"},"content":"            + \"2021-12-12 6.30am\"; // wrong format","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"EuniceSim142"},"content":"    public static final String INVALID_ORDER_COMPLETION_STATUS_DESC \u003d \" \" + PREFIX_ORDER_COMPLETION_STATUS + \"y\";","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"sivayogasubramanian"},"content":"    // Others","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"EuniceSim142"},"content":"    // Descriptors:","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"EuniceSim142"},"content":"    public static final ClientDescriptor DESC_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"EuniceSim142"},"content":"    public static final ClientDescriptor DESC_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":167,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final OrderDescriptor DESC_ORDER_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final OrderDescriptor DESC_ORDER_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":170,"author":{"gitId":"EuniceSim142"},"content":"    public static final IngredientDescriptor DESC_APPLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"EuniceSim142"},"content":"    public static final IngredientDescriptor DESC_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":174,"author":{"gitId":"EuniceSim142"},"content":"        // Client","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"EuniceSim142"},"content":"        DESC_AMY \u003d new ClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-09-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":177,"author":{"gitId":"zognin"},"content":"                .build();","lastModifiedDate":"2021-09-21"},{"lineNumber":178,"author":{"gitId":"EuniceSim142"},"content":"        DESC_BOB \u003d new ClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":180,"author":{"gitId":"zognin"},"content":"                .build();","lastModifiedDate":"2021-09-21"},{"lineNumber":181,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"EuniceSim142"},"content":"        // Order","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"Imranr2"},"content":"        DESC_ORDER_AMY \u003d new OrderDescriptorBuilder().withClientName(VALID_NAME_AMY).withClientPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"sivayogasubramanian"},"content":"                .withClientAddress(VALID_ADDRESS_AMY).withRecipeName(VALID_RECIPE_NAME_CHICKEN_RICE)","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"sivayogasubramanian"},"content":"                .withRecipeIngredients(List.of(new Ingredient(","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"sivayogasubramanian"},"content":"                                new GenericString(VALID_INGREDIENT_NAME_APPLE), new Quantity(VALID_QUANTITY_APPLE),","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"sivayogasubramanian"},"content":"                                new GenericString(VALID_UNIT_APPLE)))).withPrice(VALID_PRICE_1)","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"EuniceSim142"},"content":"                .withDeadline(VALID_DEADLINE_DECEMBER).withQuantity(VALID_ORDER_QUANTITY_1)","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"EuniceSim142"},"content":"                .withCompletionStatus(VALID_ORDER_COMPLETION_STATUS_NO).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"Imranr2"},"content":"        DESC_ORDER_BOB \u003d new OrderDescriptorBuilder().withClientName(VALID_NAME_BOB).withClientPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"sivayogasubramanian"},"content":"                .withClientAddress(VALID_ADDRESS_BOB).withRecipeName(VALID_RECIPE_NAME_LAKSA)","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"sivayogasubramanian"},"content":"                .withRecipeIngredients(List.of(new Ingredient(","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"sivayogasubramanian"},"content":"                        new GenericString(VALID_INGREDIENT_NAME_BEEF), new Quantity(VALID_QUANTITY_BEEF),","lastModifiedDate":"2021-10-11"},{"lineNumber":194,"author":{"gitId":"sivayogasubramanian"},"content":"                        new GenericString(VALID_UNIT_BEEF)))).withPrice(VALID_PRICE_2)","lastModifiedDate":"2021-10-11"},{"lineNumber":195,"author":{"gitId":"EuniceSim142"},"content":"                .withDeadline(VALID_DEADLINE_MARCH).withQuantity(VALID_ORDER_QUANTITY_2)","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"EuniceSim142"},"content":"                .withCompletionStatus(VALID_ORDER_COMPLETION_STATUS_NO).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"EuniceSim142"},"content":"        // Ingredient","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"EuniceSim142"},"content":"        DESC_APPLE \u003d new IngredientDescriptorBuilder().withIngredientName(VALID_INGREDIENT_NAME_APPLE)","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"EuniceSim142"},"content":"                .withQuantity(VALID_QUANTITY_APPLE).withUnit(VALID_UNIT_APPLE).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"EuniceSim142"},"content":"        DESC_BEEF \u003d new IngredientDescriptorBuilder().withIngredientName(VALID_INGREDIENT_NAME_BEEF)","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"EuniceSim142"},"content":"                .withQuantity(VALID_QUANTITY_BEEF).withUnit(VALID_UNIT_BEEF).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":232,"author":{"gitId":"zognin"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2021-10-06"},{"lineNumber":233,"author":{"gitId":"zognin"},"content":"     * that takes a string {@code expectedMessage}","lastModifiedDate":"2021-10-06"},{"lineNumber":234,"author":{"gitId":"zognin"},"content":"     * and a selected tab to change to.","lastModifiedDate":"2021-10-06"},{"lineNumber":235,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":236,"author":{"gitId":"zognin"},"content":"     * @param command Command to execute.","lastModifiedDate":"2021-10-06"},{"lineNumber":237,"author":{"gitId":"zognin"},"content":"     * @param actualModel Actual model after executing the command.","lastModifiedDate":"2021-10-06"},{"lineNumber":238,"author":{"gitId":"zognin"},"content":"     * @param expectedMessage Expected message after executing the command.","lastModifiedDate":"2021-10-06"},{"lineNumber":239,"author":{"gitId":"zognin"},"content":"     * @param expectedModel Expected model after executing the command.","lastModifiedDate":"2021-10-06"},{"lineNumber":240,"author":{"gitId":"zognin"},"content":"     * @param tabToSwitchTo Tab to switch to.","lastModifiedDate":"2021-10-08"},{"lineNumber":241,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":242,"author":{"gitId":"zognin"},"content":"    public static void assertCommandSuccessWithTabChange(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2021-10-06"},{"lineNumber":243,"author":{"gitId":"zognin"},"content":"            Model expectedModel, UiTab tabToSwitchTo) {","lastModifiedDate":"2021-10-08"},{"lineNumber":244,"author":{"gitId":"zognin"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, tabToSwitchTo);","lastModifiedDate":"2021-10-08"},{"lineNumber":245,"author":{"gitId":"zognin"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-06"},{"lineNumber":246,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":247,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":252,"author":{"gitId":"EuniceSim142"},"content":"     * - the address book, filtered client list and selected client in {@code actualModel} remain unchanged","lastModifiedDate":"2021-09-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":258,"author":{"gitId":"EuniceSim142"},"content":"        List\u003cClient\u003e expectedClientFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredClientList());","lastModifiedDate":"2021-10-07"},{"lineNumber":259,"author":{"gitId":"EuniceSim142"},"content":"        List\u003cIngredient\u003e expectedIngredientFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredIngredientList());","lastModifiedDate":"2021-10-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":263,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(expectedClientFilteredList, actualModel.getFilteredClientList());","lastModifiedDate":"2021-10-07"},{"lineNumber":264,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(expectedIngredientFilteredList, actualModel.getFilteredIngredientList());","lastModifiedDate":"2021-10-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":266,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":268,"author":{"gitId":"EuniceSim142"},"content":"     * Updates {@code model}\u0027s filtered list to show only the client at the given {@code targetIndex} in the","lastModifiedDate":"2021-09-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":271,"author":{"gitId":"EuniceSim142"},"content":"    public static void showClientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-09-23"},{"lineNumber":272,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredClientList().size());","lastModifiedDate":"2021-09-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":274,"author":{"gitId":"EuniceSim142"},"content":"        Client client \u003d model.getFilteredClientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-23"},{"lineNumber":275,"author":{"gitId":"EuniceSim142"},"content":"        final String[] splitName \u003d client.getName().toString().split(\"\\\\s+\");","lastModifiedDate":"2021-09-23"},{"lineNumber":276,"author":{"gitId":"Imranr2"},"content":"        model.updateFilteredClientList(","lastModifiedDate":"2021-10-10"},{"lineNumber":277,"author":{"gitId":"Imranr2"},"content":"                new StringContainsKeywordsPredicate\u003c\u003e(Client::getName, Arrays.asList(splitName[0]))","lastModifiedDate":"2021-10-10"},{"lineNumber":278,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":280,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(1, model.getFilteredClientList().size());","lastModifiedDate":"2021-09-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":282,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":283,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":284,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Updates {@code model}\u0027s filtered list to show only the ingredient at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-10"},{"lineNumber":285,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":286,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":287,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public static void showIngredientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-10"},{"lineNumber":288,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredIngredientList().size());","lastModifiedDate":"2021-10-10"},{"lineNumber":289,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":290,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Ingredient ingredientToShow \u003d model.getFilteredIngredientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":291,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        model.updateFilteredIngredientList(ingredient -\u003e ingredient.equals(ingredientToShow));","lastModifiedDate":"2021-10-10"},{"lineNumber":292,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":293,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertEquals(1, model.getFilteredIngredientList().size());","lastModifiedDate":"2021-10-10"},{"lineNumber":294,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":295,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":297,"author":{"gitId":"zognin"},"content":"     * Updates {@code model}\u0027s filtered list to show only the order at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-12"},{"lineNumber":298,"author":{"gitId":"zognin"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":300,"author":{"gitId":"zognin"},"content":"    public static void showOrderAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-12"},{"lineNumber":301,"author":{"gitId":"zognin"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredOrderList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":302,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":303,"author":{"gitId":"zognin"},"content":"        Order orderToShow \u003d model.getFilteredOrderList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":304,"author":{"gitId":"zognin"},"content":"        model.updateFilteredOrderList(order -\u003e order.equals(orderToShow));","lastModifiedDate":"2021-10-12"},{"lineNumber":305,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":306,"author":{"gitId":"zognin"},"content":"        assertEquals(1, model.getFilteredOrderList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":307,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"EuniceSim142":63,"Imranr2":11,"zognin":63,"-":78,"Manoharan-Ajay-Anand":14,"sivayogasubramanian":79}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/client/AddClientCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.client;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.ClientDescriptor;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.ClientBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.ClientDescriptorBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":" * Contains integration tests (interaction with the Model) for {@code AddClientCommand}.","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"public class AddClientCommandIntegrationTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    private Model model;","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    @BeforeEach","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    public void setUp() {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_newClient_success() {","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"        expectedModel.addClient(validClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor validClientDescriptor \u003d new ClientDescriptorBuilder(validClient).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(new AddClientCommand(validClientDescriptor), model,","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"                String.format(AddClientCommand.MESSAGE_SUCCESS, validClient), expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"        Client clientInList \u003d model.getAddressBook().getClientList().get(0);","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor clientInListDescriptor \u003d new ClientDescriptorBuilder(clientInList).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"        assertCommandFailure(new AddClientCommand(clientInListDescriptor), model,","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"                AddClientCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"EuniceSim142":34,"zognin":4,"sivayogasubramanian":11}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/client/AddClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.client;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.ClientDescriptor;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.ClientBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.ClientDescriptorBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.stubs.ModelStub;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.stubs.ModelStubAcceptingClientAdded;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.stubs.ModelStubWithClient;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"public class AddClientCommandTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    public void constructor_nullClient_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddClientCommand(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_clientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"        ModelStubAcceptingClientAdded modelStub \u003d new ModelStubAcceptingClientAdded();","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor validClientDescriptor \u003d new ClientDescriptorBuilder(validClient).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"        CommandResult commandResult \u003d new AddClientCommand(validClientDescriptor).execute(modelStub);","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(String.format(AddClientCommand.MESSAGE_SUCCESS, validClient), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(Arrays.asList(validClient), modelStub.getClientsAdded());","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor validClientDescriptor \u003d new ClientDescriptorBuilder(validClient).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"        AddClientCommand addClientCommand \u003d new AddClientCommand(validClientDescriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"        ModelStub modelStub \u003d new ModelStubWithClient(validClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"            AddClientCommand.MESSAGE_DUPLICATE_CLIENT, () -\u003e addClientCommand.execute(modelStub));","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor aliceDescriptor \u003d new ClientDescriptorBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor bobDescriptor \u003d new ClientDescriptorBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"        AddClientCommand addAliceCommand \u003d new AddClientCommand(aliceDescriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"        AddClientCommand addBobCommand \u003d new AddClientCommand(bobDescriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"        AddClientCommand addAliceCommandCopy \u003d new AddClientCommand(aliceDescriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"EuniceSim142":22,"-":40,"sivayogasubramanian":12}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/client/DeleteClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.client;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":" * {@code DeleteClientCommand}.","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"public class DeleteClientCommandTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_validIndexUnfilteredList_success() throws NotFoundException {","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d String.format(DeleteClientCommand.MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete);","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(deleteClientCommand, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(outOfBoundIndex);","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"        assertCommandFailure(deleteClientCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_validIndexFilteredList_success() throws NotFoundException {","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        showClientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d String.format(DeleteClientCommand.MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete);","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"        showNoClient(expectedModel);","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(deleteClientCommand, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        showClientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getClientList().size());","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(outOfBoundIndex);","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"        assertCommandFailure(deleteClientCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"    public void equals() {","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"        DeleteClientCommand deleteFirstCommand \u003d new DeleteClientCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"        DeleteClientCommand deleteSecondCommand \u003d new DeleteClientCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"EuniceSim142"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"        DeleteClientCommand deleteFirstCommandCopy \u003d new DeleteClientCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"EuniceSim142"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"EuniceSim142"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"EuniceSim142"},"content":"    private void showNoClient(Model model) {","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"EuniceSim142"},"content":"        model.updateFilteredClientList(p -\u003e false);","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(model.getFilteredClientList().isEmpty());","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"EuniceSim142":83,"zognin":16,"sivayogasubramanian":11}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/client/EditClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.client;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.ClientDescriptor;","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.ClientBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.ClientDescriptorBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditClientCommand.","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"public class EditClientCommandTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() throws NotFoundException {","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"        Client editedClient \u003d new ClientBuilder().build();","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor descriptor \u003d new ClientDescriptorBuilder(editedClient).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(editClientCommand, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() throws NotFoundException {","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"        Index indexLastClient \u003d Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"        Client lastClient \u003d model.getFilteredClientList().get(indexLastClient.getZeroBased());","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"        ClientBuilder clientInList \u003d new ClientBuilder(lastClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"        Client editedClient \u003d clientInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor descriptor \u003d new ClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(indexLastClient, descriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"        expectedModel.setClient(lastClient, editedClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(editClientCommand, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(INDEX_FIRST, new ClientDescriptor());","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"        Client editedClient \u003d model.getFilteredClientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(editClientCommand, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_filteredList_success() throws NotFoundException {","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"        showClientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"        Client clientInFilteredList \u003d model.getFilteredClientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"        Client editedClient \u003d new ClientBuilder(clientInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"EuniceSim142"},"content":"                new ClientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(editClientCommand, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_duplicateClientUnfilteredList_failure() {","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"        Client firstClient \u003d model.getFilteredClientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor descriptor \u003d new ClientDescriptorBuilder(firstClient).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"EuniceSim142"},"content":"        assertCommandFailure(editClientCommand, model, EditClientCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_duplicateClientFilteredList_failure() {","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"        showClientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"EuniceSim142"},"content":"        // edit client in filtered list into a duplicate in address book","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"        Client clientInList \u003d model.getAddressBook().getClientList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"EuniceSim142"},"content":"                new ClientDescriptorBuilder(clientInList).build());","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"EuniceSim142"},"content":"        assertCommandFailure(editClientCommand, model, EditClientCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_invalidClientIndexUnfilteredList_failure() {","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"EuniceSim142"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor descriptor \u003d new ClientDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"EuniceSim142"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"EuniceSim142"},"content":"        assertCommandFailure(editClientCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"EuniceSim142"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"EuniceSim142"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":135,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_invalidClientIndexFilteredList_failure() {","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"zognin"},"content":"        showClientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"zognin"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"EuniceSim142"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-09-23"},{"lineNumber":139,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getClientList().size());","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"EuniceSim142"},"content":"        EditClientCommand editClientCommand \u003d new EditClientCommand(outOfBoundIndex,","lastModifiedDate":"2021-09-23"},{"lineNumber":142,"author":{"gitId":"EuniceSim142"},"content":"                new ClientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-09-23"},{"lineNumber":143,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":144,"author":{"gitId":"EuniceSim142"},"content":"        assertCommandFailure(editClientCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-23"},{"lineNumber":145,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":146,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":147,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"EuniceSim142"},"content":"    public void equals() {","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"zognin"},"content":"        final EditClientCommand standardCommand \u003d new EditClientCommand(INDEX_FIRST, DESC_AMY);","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"EuniceSim142"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor copyDescriptor \u003d new ClientDescriptor(DESC_AMY);","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"zognin"},"content":"        EditClientCommand commandWithSameValues \u003d new EditClientCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"EuniceSim142"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":159,"author":{"gitId":"EuniceSim142"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":160,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":161,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":162,"author":{"gitId":"EuniceSim142"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(standardCommand.equals(new ListClientCommand()));","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"EuniceSim142"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"zognin"},"content":"        assertFalse(standardCommand.equals(new EditClientCommand(INDEX_SECOND, DESC_AMY)));","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":168,"author":{"gitId":"EuniceSim142"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"zognin"},"content":"        assertFalse(standardCommand.equals(new EditClientCommand(INDEX_FIRST, DESC_BOB)));","lastModifiedDate":"2021-10-06"},{"lineNumber":170,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":171,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"EuniceSim142":127,"zognin":25,"sivayogasubramanian":19}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/client/FindClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.client;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_ADDRESS_YISHUN_GEYLANG_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_EMAIL_ALICE_BOB_GMAIL_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_NAME_ALICE_BOB_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_PHONE_9427_3217_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.addPredicates;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.PredicateUtil.makeStringContainsKeywordsPredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.CARL;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.ELLE;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.FIONA;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollection;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":" * Contains integration tests (interaction with the Model) for {@code FindClientCommand}.","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"public class FindClientCommandTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cClient\u003e predicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Imranr2"},"content":"        addPredicates(predicateCollection, List.of(CLIENT_NAME_ALICE_BOB_PREDICATE,","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Imranr2"},"content":"                CLIENT_PHONE_9427_3217_PREDICATE,","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"                CLIENT_ADDRESS_YISHUN_GEYLANG_PREDICATE, CLIENT_EMAIL_ALICE_BOB_GMAIL_PREDICATE));","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cClient\u003e diffOrderPredicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"        addPredicates(diffOrderPredicateCollection, List.of(CLIENT_PHONE_9427_3217_PREDICATE,","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"                CLIENT_ADDRESS_YISHUN_GEYLANG_PREDICATE, CLIENT_NAME_ALICE_BOB_PREDICATE,","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Imranr2"},"content":"                CLIENT_EMAIL_ALICE_BOB_GMAIL_PREDICATE));","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cClient\u003e diffAmountPredicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Imranr2"},"content":"        addPredicates(diffOrderPredicateCollection, List.of(CLIENT_NAME_ALICE_BOB_PREDICATE,","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Imranr2"},"content":"                CLIENT_EMAIL_ALICE_BOB_GMAIL_PREDICATE));","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"Imranr2"},"content":"        FindClientCommand findCommand \u003d new FindClientCommand(predicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Imranr2"},"content":"        FindClientCommand diffOrderFindCommand \u003d new FindClientCommand(diffOrderPredicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Imranr2"},"content":"        FindClientCommand diffAmountFindCommand \u003d new FindClientCommand(diffAmountPredicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertTrue(findCommand.equals(findCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"Imranr2"},"content":"        FindClientCommand findCommandCopy \u003d new FindClientCommand(predicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertTrue(findCommand.equals(findCommandCopy));","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertFalse(findCommand.equals(1));","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertFalse(findCommand.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // different order of client predicates -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertTrue(findCommand.equals(diffOrderFindCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // different amount of client predicates -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertFalse(findCommand.equals(diffAmountFindCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_multipleKeywords_multipleClientsFound() {","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cClient\u003e predicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"Imranr2"},"content":"                makeStringContainsKeywordsPredicate(\"Kurz Elle Kunz\", Client::getName)","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        );","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"Imranr2"},"content":"                makeStringContainsKeywordsPredicate(\"9535 9482 2427\", Client::getPhone)","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        );","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"Imranr2"},"content":"                makeStringContainsKeywordsPredicate(\"wall michegan tokyo\", Client::getAddress)","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        );","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"Imranr2"},"content":"                makeStringContainsKeywordsPredicate(\"heinz werner lydia\", Client::getEmail)","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        );","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"Imranr2"},"content":"        FindClientCommand command \u003d new FindClientCommand(predicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"Imranr2"},"content":"        expectedModel.updateFilteredClientList(predicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(command, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredClientList());","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"EuniceSim142":5,"Imranr2":27,"zognin":9,"-":33,"Manoharan-Ajay-Anand":16,"sivayogasubramanian":9}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/client/ListClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.client;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListClientCommand.","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"public class ListClientCommandTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(new ListClientCommand(), model, ListClientCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"                expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        showClientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(new ListClientCommand(), model, ListClientCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"                expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"EuniceSim142":2,"zognin":9,"-":24,"sivayogasubramanian":6}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/general/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.general;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.general.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":15,"sivayogasubramanian":6}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/general/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.general;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.general.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":15,"sivayogasubramanian":6}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/general/TabCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.general;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"public class TabCommandTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        UiTab tabToChangeTo \u003d UiTab.values()[INDEX_FIRST.getZeroBased()];","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        TabCommand tabCommand \u003d new TabCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        String expectedMessage \u003d String.format(TabCommand.MESSAGE_CHANGE_TAB_SUCCESS, tabToChangeTo);","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(tabCommand, model, expectedMessage, expectedModel, tabToChangeTo);","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(UiTab.values().length + 1);","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        TabCommand tabCommand \u003d new TabCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        assertCommandFailure(tabCommand, model, TabCommand.MESSAGE_INVALID_TAB_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"    public void equals() {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"        TabCommand tabFirstCommand \u003d new TabCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        TabCommand tabSecondCommand \u003d new TabCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        assertTrue(tabFirstCommand.equals(tabFirstCommand));","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"        TabCommand tabFirstCommandCopy \u003d new TabCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"        assertTrue(tabFirstCommand.equals(tabFirstCommandCopy));","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"        assertFalse(tabFirstCommand.equals(1));","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        assertFalse(tabFirstCommand.equals(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        // different tab -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"        assertFalse(tabFirstCommand.equals(tabSecondCommand));","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"zognin":63}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/ingredient/AddIngredientCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.getTypicalAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.IngredientDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"public class AddIngredientCommandIntegrationTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    private Model model;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_newIngredient_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        Ingredient validIngredient \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"        expectedModel.addIngredient(validIngredient);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"        IngredientDescriptor validIngredientDescriptor \u003d new IngredientDescriptorBuilder(validIngredient).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(new AddIngredientCommand(validIngredientDescriptor), model,","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"                String.format(AddIngredientCommand.MESSAGE_SUCCESS, validIngredient), expectedModel, UiTab.INVENTORY);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_duplicateIngredient_throwsCommandException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"        Ingredient ingredientInList \u003d model.getAddressBook().getIngredientList().get(0);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"        IngredientDescriptor ingredientInListDescriptor \u003d new IngredientDescriptorBuilder(ingredientInList).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"        assertCommandFailure(new AddIngredientCommand(ingredientInListDescriptor), model,","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"                AddIngredientCommand.MESSAGE_DUPLICATE_INGREDIENT);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"EuniceSim142":42,"zognin":4}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/ingredient/AddIngredientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.IngredientDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.stubs.ModelStub;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.stubs.ModelStubAcceptingIngredientAdded;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.stubs.ModelStubWithIngredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"public class AddIngredientCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    public void constructor_nullIngredient_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddIngredientCommand(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_ingredientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"        ModelStubAcceptingIngredientAdded modelStub \u003d new ModelStubAcceptingIngredientAdded();","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"        Ingredient validIngredient \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"        IngredientDescriptor validIngredientDescriptor \u003d new IngredientDescriptorBuilder(validIngredient).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"        CommandResult commandResult \u003d new AddIngredientCommand(validIngredientDescriptor).execute(modelStub);","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(String.format(AddIngredientCommand.MESSAGE_SUCCESS, validIngredient),","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(Arrays.asList(validIngredient), modelStub.getIngredientsAdded());","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_duplicateIngredient_throwsCommandException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"        Ingredient validIngredient \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"        IngredientDescriptor validIngredientBuilder \u003d new IngredientDescriptorBuilder(validIngredient).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"        AddIngredientCommand addIngredientCommand \u003d new AddIngredientCommand(validIngredientBuilder);","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"        ModelStub modelStub \u003d new ModelStubWithIngredient(validIngredient);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"                AddIngredientCommand.MESSAGE_DUPLICATE_INGREDIENT, () -\u003e addIngredientCommand.execute(modelStub));","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"    public void equals() {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"        IngredientDescriptor appleDescriptor \u003d new IngredientDescriptorBuilder().withIngredientName(\"Apple\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"        IngredientDescriptor beefDescriptor \u003d new IngredientDescriptorBuilder().withIngredientName(\"Beef\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"        AddIngredientCommand addAppleCommand \u003d new AddIngredientCommand(appleDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"        AddIngredientCommand addBeefCommand \u003d new AddIngredientCommand(beefDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(addAppleCommand.equals(addAppleCommand));","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"        AddIngredientCommand addAppleCommandCopy \u003d new AddIngredientCommand(appleDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(addAppleCommand.equals(addAppleCommandCopy));","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(addAppleCommand.equals(1));","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(addAppleCommand.equals(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"        // different ingredient -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(addAppleCommand.equals(addBeefCommand));","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"EuniceSim142":76}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/ingredient/DeleteIngredientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.showIngredientAtIndex;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.getTypicalAddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"public class DeleteIngredientCommandTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        DeleteIngredientCommand deleteFirstCommand \u003d new DeleteIngredientCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        DeleteIngredientCommand deleteSecondCommand \u003d new DeleteIngredientCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        DeleteIngredientCommand deleteFirstCommandCopy \u003d new DeleteIngredientCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // different ingredient -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void execute_validIndexUnfilteredList_success() throws NotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Ingredient ingredientToDelete \u003d model.getFilteredIngredientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        DeleteIngredientCommand deleteIngredientCommand \u003d new DeleteIngredientCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                String.format(DeleteIngredientCommand.MESSAGE_DELETE_INGREDIENT_SUCCESS, ingredientToDelete);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        expectedModel.deleteIngredient(ingredientToDelete);","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertCommandSuccessWithTabChange(deleteIngredientCommand, model, expectedMessage, expectedModel,","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                UiTab.INVENTORY);","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredIngredientList().size() + 1);","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        DeleteIngredientCommand deleteIngredientCommand \u003d new DeleteIngredientCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertCommandFailure(deleteIngredientCommand, model, Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void execute_validIndexFilteredList_success() throws NotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        showIngredientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Ingredient ingredientToDelete \u003d model.getFilteredIngredientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        DeleteIngredientCommand deleteIngredientCommand \u003d new DeleteIngredientCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                String.format(DeleteIngredientCommand.MESSAGE_DELETE_INGREDIENT_SUCCESS, ingredientToDelete);","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        expectedModel.deleteIngredient(ingredientToDelete);","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        showNoIngredient(expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertCommandSuccessWithTabChange(deleteIngredientCommand, model, expectedMessage, expectedModel,","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                UiTab.INVENTORY);","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        showIngredientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getIngredientList().size());","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        DeleteIngredientCommand deleteIngredientCommand \u003d new DeleteIngredientCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertCommandFailure(deleteIngredientCommand, model, Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    private void showNoIngredient(Model model) {","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        model.updateFilteredIngredientList(p -\u003e false);","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertTrue(model.getFilteredIngredientList().isEmpty());","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Manoharan-Ajay-Anand":111}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/ingredient/EditIngredientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DESC_APPLE;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DESC_BEEF;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_INGREDIENT_NAME_BEEF;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_QUANTITY_BEEF;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.showIngredientAtIndex;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.getTypicalAddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.IngredientDescriptor;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientDescriptorBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"public class EditIngredientCommandTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() throws NotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Ingredient editedIngredient \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        IngredientDescriptor descriptor \u003d new IngredientDescriptorBuilder(editedIngredient).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        EditIngredientCommand editIngredientCommand \u003d new EditIngredientCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        String expectedMessage \u003d String.format(EditIngredientCommand.MESSAGE_EDIT_INGREDIENT_SUCCESS, editedIngredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        expectedModel.setIngredient(model.getFilteredIngredientList().get(0), editedIngredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertCommandSuccessWithTabChange(editIngredientCommand, model, expectedMessage, expectedModel,","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                UiTab.INVENTORY);","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() throws NotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Index indexLastIngredient \u003d Index.fromOneBased(model.getFilteredIngredientList().size());","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Ingredient lastIngredient \u003d model.getFilteredIngredientList().get(indexLastIngredient.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        IngredientBuilder ingredientInList \u003d new IngredientBuilder(lastIngredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Ingredient editedIngredient \u003d ingredientInList.withIngredientName(VALID_INGREDIENT_NAME_BEEF)","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                .withQuantity(VALID_QUANTITY_BEEF).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        IngredientDescriptor descriptor \u003d new IngredientDescriptorBuilder()","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                .withIngredientName(VALID_INGREDIENT_NAME_BEEF).withQuantity(VALID_QUANTITY_BEEF).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        EditIngredientCommand editIngredientCommand \u003d new EditIngredientCommand(indexLastIngredient, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        String expectedMessage \u003d String.format(EditIngredientCommand.MESSAGE_EDIT_INGREDIENT_SUCCESS, editedIngredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        expectedModel.setIngredient(lastIngredient, editedIngredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertCommandSuccessWithTabChange(editIngredientCommand, model, expectedMessage, expectedModel,","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                UiTab.INVENTORY);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        EditIngredientCommand editIngredientCommand \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                new EditIngredientCommand(INDEX_FIRST, new IngredientDescriptor());","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Ingredient editedIngredient \u003d model.getFilteredIngredientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        String expectedMessage \u003d String.format(EditIngredientCommand.MESSAGE_EDIT_INGREDIENT_SUCCESS, editedIngredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertCommandSuccessWithTabChange(editIngredientCommand, model, expectedMessage, expectedModel,","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                UiTab.INVENTORY);","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void execute_filteredList_success() throws NotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        showIngredientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Ingredient ingredientInFilteredList \u003d model.getFilteredIngredientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Ingredient editedIngredient \u003d new IngredientBuilder(ingredientInFilteredList)","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                .withIngredientName(VALID_INGREDIENT_NAME_BEEF).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        EditIngredientCommand editIngredientCommand \u003d new EditIngredientCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                new IngredientDescriptorBuilder().withIngredientName(VALID_INGREDIENT_NAME_BEEF).build());","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        String expectedMessage \u003d String.format(EditIngredientCommand.MESSAGE_EDIT_INGREDIENT_SUCCESS, editedIngredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        expectedModel.setIngredient(model.getFilteredIngredientList().get(0), editedIngredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertCommandSuccessWithTabChange(editIngredientCommand, model, expectedMessage, expectedModel,","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                UiTab.INVENTORY);","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void execute_duplicateIngredientUnfilteredList_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Ingredient firstIngredient \u003d model.getFilteredIngredientList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        IngredientDescriptor descriptor \u003d new IngredientDescriptorBuilder(firstIngredient).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        EditIngredientCommand editIngredientCommand \u003d new EditIngredientCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertCommandFailure(editIngredientCommand, model, EditIngredientCommand.MESSAGE_DUPLICATE_INGREDIENT);","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void execute_duplicateIngredientFilteredList_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        showIngredientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // edit ingredient in filtered list into a duplicate in address book","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Ingredient ingredientInList \u003d model.getAddressBook().getIngredientList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        EditIngredientCommand editIngredientCommand \u003d new EditIngredientCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                new IngredientDescriptorBuilder(ingredientInList).build());","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertCommandFailure(editIngredientCommand, model, EditIngredientCommand.MESSAGE_DUPLICATE_INGREDIENT);","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void execute_invalidIngredientIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredIngredientList().size() + 1);","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        IngredientDescriptor descriptor \u003d new IngredientDescriptorBuilder()","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                .withIngredientName(VALID_INGREDIENT_NAME_BEEF).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        EditIngredientCommand editIngredientCommand \u003d new EditIngredientCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertCommandFailure(editIngredientCommand, model, Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void execute_invalidIngredientIndexFilteredList_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        showIngredientAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getIngredientList().size());","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        EditIngredientCommand editIngredientCommand \u003d new EditIngredientCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                new IngredientDescriptorBuilder().withIngredientName(VALID_INGREDIENT_NAME_BEEF).build());","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertCommandFailure(editIngredientCommand, model, Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        final EditIngredientCommand standardCommand \u003d new EditIngredientCommand(INDEX_FIRST, DESC_BEEF);","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        IngredientDescriptor copyDescriptor \u003d new IngredientDescriptor(DESC_BEEF);","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        EditIngredientCommand commandWithSameValues \u003d new EditIngredientCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertFalse(standardCommand.equals(new ListIngredientCommand()));","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertFalse(standardCommand.equals(new EditIngredientCommand(INDEX_SECOND, DESC_BEEF)));","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertFalse(standardCommand.equals(new EditIngredientCommand(INDEX_FIRST, DESC_APPLE)));","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Manoharan-Ajay-Anand":176}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/ingredient/FindIngredientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INGREDIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.INGREDIENT_NAME_AVOCADO_BUTTER_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.INGREDIENT_QUANTITY_5_550_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.INGREDIENT_UNIT_WHOLE_GRAMS_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.addPredicates;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.PredicateUtil.makeQuantityInListPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.PredicateUtil.makeQuantityWithinRangePredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.PredicateUtil.makeSpaceSeparatedStringKeywords;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.PredicateUtil.makeStringContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.AVOCADO;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.BUTTER;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.CHICKEN;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollection;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":" * Contains integration tests (interaction with the Model) for {@code FindIngredientCommand}.","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"public class FindIngredientCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        PredicateCollection\u003cIngredient\u003e predicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"        addPredicates(predicateCollection, List.of(","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"                INGREDIENT_NAME_AVOCADO_BUTTER_PREDICATE,","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"                INGREDIENT_QUANTITY_5_550_PREDICATE,","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"                INGREDIENT_UNIT_WHOLE_GRAMS_PREDICATE));","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        PredicateCollection\u003cIngredient\u003e diffOrderPredicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        addPredicates(diffOrderPredicateCollection, List.of(","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"                INGREDIENT_QUANTITY_5_550_PREDICATE,","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"                INGREDIENT_NAME_AVOCADO_BUTTER_PREDICATE,","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"                INGREDIENT_UNIT_WHOLE_GRAMS_PREDICATE));","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        PredicateCollection\u003cIngredient\u003e diffAmountPredicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"        addPredicates(diffAmountPredicateCollection, List.of(INGREDIENT_QUANTITY_5_550_PREDICATE));","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"        FindIngredientCommand findCommand \u003d new FindIngredientCommand(predicateCollection);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        FindIngredientCommand diffOrderFindCommand \u003d new FindIngredientCommand(diffOrderPredicateCollection);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"        FindIngredientCommand diffAmountFindCommand \u003d new FindIngredientCommand(diffAmountPredicateCollection);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"        assertTrue(findCommand.equals(findCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"        FindIngredientCommand findCommandCopy \u003d new FindIngredientCommand(predicateCollection);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"        assertTrue(findCommand.equals(findCommandCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        assertFalse(findCommand.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"        assertFalse(findCommand.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"        // different order of ingredient predicates -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"        assertTrue(findCommand.equals(diffOrderFindCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"        // different amount of ingredient predicates -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"        assertFalse(findCommand.equals(diffAmountFindCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"    public void execute_multipleKeywords_multipleIngredientsFound() {","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INGREDIENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"        PredicateCollection\u003cIngredient\u003e predicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"        predicateCollection.addPredicate(","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"                makeStringContainsKeywordsPredicate(","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"                        makeSpaceSeparatedStringKeywords(AVOCADO.getName(), BUTTER.getName(), CHICKEN.getName()),","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"                        Ingredient::getName)","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"        predicateCollection.addPredicate(","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"                makeQuantityInListPredicate(makeSpaceSeparatedStringKeywords(AVOCADO.getQuantity(),","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"                        BUTTER.getQuantity(), CHICKEN.getQuantity()),","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"                        Ingredient::getQuantity)","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"        predicateCollection.addPredicate(","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"                makeQuantityWithinRangePredicate(","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"                        AVOCADO.getQuantity().toString(), BUTTER.getQuantity().toString(),","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"                        Ingredient::getQuantity)","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"        predicateCollection.addPredicate(","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"                makeStringContainsKeywordsPredicate(","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"                        makeSpaceSeparatedStringKeywords(AVOCADO.getUnit(), BUTTER.getUnit(), CHICKEN.getUnit()),","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"                        Ingredient::getUnit)","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"        );","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"        FindIngredientCommand command \u003d new FindIngredientCommand(predicateCollection);","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"        expectedModel.updateFilteredIngredientList(predicateCollection);","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(command, model, expectedMessage, expectedModel, UiTab.INVENTORY);","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"        assertEquals(Arrays.asList(AVOCADO, BUTTER, CHICKEN), model.getFilteredIngredientList());","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"zognin":110}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/ingredient/ListIngredientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListIngredientCommand.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"public class ListIngredientCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    private Model model;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(new ListIngredientCommand(), model, ListIngredientCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"                expectedModel, UiTab.INVENTORY);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        model.updateFilteredIngredientList(unused -\u003e false);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(new ListIngredientCommand(), model, ListIngredientCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"                expectedModel, UiTab.INVENTORY);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"zognin":39}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/AddOrderCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.OrderDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":" * Contains integration tests (interaction with the Model) for {@code AddOrderCommand}.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"public class AddOrderCommandIntegrationTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    private Model model;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"    public void execute_newOrder_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"        Order validOrder \u003d new OrderBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"        expectedModel.addOrder(validOrder);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor validOrderDescriptor \u003d new OrderDescriptorBuilder(validOrder).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(new AddOrderCommand(validOrderDescriptor), model,","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"                String.format(AddOrderCommand.MESSAGE_SUCCESS, validOrder), expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"zognin":4,"sivayogasubramanian":36}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/AddOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_ALICE;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.OrderDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Price;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.stubs.ModelStub;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.stubs.ModelStubAcceptingOrderAdded;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.stubs.ModelStubWithOrder;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"public class AddOrderCommandTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"    public void constructor_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddOrderCommand(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"    public void execute_orderAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"        ModelStubAcceptingOrderAdded modelStub \u003d new ModelStubAcceptingOrderAdded();","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"        Order validOrder \u003d new OrderBuilder(ORDER_FOR_ALICE).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor validOrderDescriptor \u003d new OrderDescriptorBuilder(validOrder).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"        CommandResult commandResult \u003d new AddOrderCommand(validOrderDescriptor).execute(modelStub);","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(String.format(AddOrderCommand.MESSAGE_SUCCESS, validOrder), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(Arrays.asList(validOrder), modelStub.getOrdersAdded());","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"    public void execute_duplicateOrder_throwsCommandException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"        Order validOrder \u003d new OrderBuilder().build();","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor validOrderDescriptor \u003d new OrderDescriptorBuilder(validOrder).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"        AddOrderCommand addOrderCommand \u003d new AddOrderCommand(validOrderDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"        ModelStub modelStub \u003d new ModelStubWithOrder(validOrder);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"        Assert.assertThrows(CommandException.class,","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"                AddOrderCommand.MESSAGE_DUPLICATE_ORDER, () -\u003e addOrderCommand.execute(modelStub));","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"        validOrder \u003d new OrderBuilder().withPrice(new Price(\"10\")).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"        Order withSamePriceValue \u003d new OrderBuilder().withPrice(new Price(\"10.00\")).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"        validOrderDescriptor \u003d new OrderDescriptorBuilder(withSamePriceValue).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"        AddOrderCommand addOrderCommand2 \u003d new AddOrderCommand(validOrderDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"        ModelStub modelStub2 \u003d new ModelStubWithOrder(validOrder);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"        Assert.assertThrows(CommandException.class,","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"                AddOrderCommand.MESSAGE_DUPLICATE_ORDER, () -\u003e addOrderCommand2.execute(modelStub2));","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"    public void execute_orderAcceptedByModel_reducesIngredientQuantity() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"        ModelStubAcceptingOrderAdded modelStub \u003d new ModelStubAcceptingOrderAdded();","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient chicken \u003d new Ingredient(","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"                new GenericString(\"Chicken\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"                new Quantity(\"100\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"                new GenericString(\"whole\")","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"        modelStub.addIngredient(chicken);","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"        // Order for Alice uses 1 chicken for each order. Alice made 4 orders.","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient expectedChicken \u003d new Ingredient(","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"                chicken.getName(),","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"                chicken.getQuantity().minusQuantityBy(new Quantity(\"1\"), new Quantity(\"4\")),","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"                chicken.getUnit()","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"        Order validOrder \u003d new OrderBuilder(ORDER_FOR_ALICE).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor validOrderDescriptor \u003d new OrderDescriptorBuilder(validOrder).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"sivayogasubramanian"},"content":"        CommandResult commandResult \u003d new AddOrderCommand(validOrderDescriptor).execute(modelStub);","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(String.format(AddOrderCommand.MESSAGE_SUCCESS, validOrder), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(Arrays.asList(validOrder), modelStub.getOrdersAdded());","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(Arrays.asList(expectedChicken), modelStub.getIngredientsAdded());","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"sivayogasubramanian"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"Imranr2"},"content":"        OrderDescriptor orderDescriptorForAmy \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"Imranr2"},"content":"                new OrderDescriptorBuilder().withClientName(VALID_NAME_AMY).withClientPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"Imranr2"},"content":"                        .withClientAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"Imranr2"},"content":"        OrderDescriptor orderDescriptorForBob \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"Imranr2"},"content":"                new OrderDescriptorBuilder().withClientName(VALID_NAME_BOB).withClientPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"Imranr2"},"content":"                        .withClientAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"sivayogasubramanian"},"content":"        AddOrderCommand addOrderForAmyCommand \u003d new AddOrderCommand(orderDescriptorForAmy);","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"sivayogasubramanian"},"content":"        AddOrderCommand addOrderForBobCommand \u003d new AddOrderCommand(orderDescriptorForBob);","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(addOrderForAmyCommand.equals(addOrderForAmyCommand));","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"sivayogasubramanian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"sivayogasubramanian"},"content":"        AddOrderCommand addOrderForAmyCommandCopy \u003d new AddOrderCommand(orderDescriptorForAmy);","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(addOrderForAmyCommand.equals(addOrderForAmyCommandCopy));","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(addOrderForAmyCommand.equals(1));","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(addOrderForAmyCommand.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"sivayogasubramanian"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(addOrderForAmyCommand.equals(addOrderForBobCommand));","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Imranr2":12,"sivayogasubramanian":115}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/AddOrderIngredientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DESC_APPLE;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DESC_BEEF;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.getTypicalAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.ListClientCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.IngredientDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.RecipeIngredientList;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientDescriptorBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AddOrderIngredientCommand.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"public class AddOrderIngredientCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"    public void constructor_nullArgs_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"                new AddOrderIngredientCommand(null, null));","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"                new AddOrderIngredientCommand(INDEX_FIRST, null));","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"                new AddOrderIngredientCommand(null, new IngredientDescriptor()));","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"    public void execute_validIngredientAndOrderIndex_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        Ingredient validIngredient \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"        IngredientDescriptor validIngredientDescriptor \u003d new IngredientDescriptorBuilder(validIngredient).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"        AddOrderIngredientCommand command \u003d new AddOrderIngredientCommand(INDEX_FIRST, validIngredientDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"        Order orderToEdit \u003d model.getFilteredOrderList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        RecipeIngredientList newRecipeIngredientList \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"                OrderUtil.addIngredientToIngredientList(orderToEdit, validIngredient);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        Order editedOrder \u003d new OrderBuilder(orderToEdit).withRecipeIngredients(newRecipeIngredientList).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"                AddOrderIngredientCommand.MESSAGE_ADD_ORDER_INGREDIENT_SUCCESS, validIngredient, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"        expectedModel.setOrder(orderToEdit, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(command, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"    public void execute_duplicateIngredient_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"        Order order \u003d model.getFilteredOrderList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"        Ingredient duplicateIngredient \u003d order.getRecipeIngredients().getIngredients().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"        IngredientDescriptor validIngredientDescriptor \u003d new IngredientDescriptorBuilder(duplicateIngredient).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"        AddOrderIngredientCommand command \u003d new AddOrderIngredientCommand(INDEX_FIRST, validIngredientDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"        assertCommandFailure(command, model, AddOrderIngredientCommand.MESSAGE_DUPLICATE_ORDER_INGREDIENT);","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"    public void execute_duplicateOrder_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"        Ingredient firstIngredient \u003d new IngredientBuilder().withIngredientName(\"Random name 1\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"        Ingredient secondIngredient \u003d new IngredientBuilder().withIngredientName(\"Random name 2\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"        IngredientDescriptor secondIngredientDescriptor \u003d new IngredientDescriptorBuilder(secondIngredient).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"        RecipeIngredientList firstIngredientList \u003d new RecipeIngredientList(List.of(firstIngredient));","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"        RecipeIngredientList secondIngredientList \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"                new RecipeIngredientList(List.of(firstIngredient, secondIngredient));","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"        Order firstOrder \u003d new OrderBuilder().withRecipeIngredients(firstIngredientList).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"        Order secondOrder \u003d new OrderBuilder().withRecipeIngredients(secondIngredientList).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"        model.addOrder(firstOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"        model.addOrder(secondOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"        Index indexOfOrderToEdit \u003d Index.fromZeroBased(model.getFilteredOrderList().indexOf(firstOrder));","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"        AddOrderIngredientCommand command \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"                new AddOrderIngredientCommand(indexOfOrderToEdit, secondIngredientDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"        assertCommandFailure(command, model, AddOrderCommand.MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"    public void execute_invalidOrderIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"        Ingredient validIngredient \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"        IngredientDescriptor validIngredientDescriptor \u003d new IngredientDescriptorBuilder(validIngredient).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"        AddOrderIngredientCommand command \u003d new AddOrderIngredientCommand(outOfBoundIndex, validIngredientDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"    public void execute_invalidOrderIndexFilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"        showOrderAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getOrderList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"zognin"},"content":"        Ingredient validIngredient \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":"        IngredientDescriptor validIngredientDescriptor \u003d new IngredientDescriptorBuilder(validIngredient).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"        AddOrderIngredientCommand command \u003d new AddOrderIngredientCommand(outOfBoundIndex, validIngredientDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"zognin"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"zognin"},"content":"        final AddOrderIngredientCommand standardCommand \u003d new AddOrderIngredientCommand(INDEX_FIRST, DESC_APPLE);","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"zognin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"zognin"},"content":"        IngredientDescriptor copyDescriptor \u003d new IngredientDescriptor(DESC_APPLE);","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"zognin"},"content":"        AddOrderIngredientCommand commandWithSameValues \u003d new AddOrderIngredientCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"zognin"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"zognin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"zognin"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"zognin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"zognin"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"zognin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"zognin"},"content":"        assertFalse(standardCommand.equals(new ListClientCommand()));","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"zognin"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"zognin"},"content":"        assertFalse(standardCommand.equals(new AddOrderIngredientCommand(INDEX_SECOND, DESC_APPLE)));","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"zognin"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"zognin"},"content":"        assertFalse(standardCommand.equals(new AddOrderIngredientCommand(INDEX_FIRST, DESC_BEEF)));","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"zognin":147}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/DeleteOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Imranr2"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_ALICE;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_BENSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.getTypicalAddressBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Imranr2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.stubs.ModelStubAcceptingOrderAdded;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Imranr2"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Imranr2"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Imranr2"},"content":" * {@code DeleteOrderCommand}.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Imranr2"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Imranr2"},"content":"public class DeleteOrderCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Imranr2"},"content":"    public void execute_deleteCompletedOrderSameIngredientQuantity_success() throws CommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"        ModelStubAcceptingOrderAdded modelStub \u003d new ModelStubAcceptingOrderAdded();","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Imranr2"},"content":"        modelStub.addOrder(ORDER_FOR_ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Imranr2"},"content":"        Ingredient chicken \u003d new Ingredient(new GenericString(\"Chicken\"), new Quantity(\"100\"), new GenericString(","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"                \"whole\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"        modelStub.addIngredient(chicken);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Imranr2"},"content":"        CommandResult commandResult \u003d new DeleteOrderCommand(INDEX_FIRST).execute(modelStub);","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Imranr2"},"content":"        assertEquals(String.format(DeleteOrderCommand.MESSAGE_DELETE_ORDER_SUCCESS, ORDER_FOR_ALICE),","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Imranr2"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Imranr2"},"content":"        assertEquals(List.of(chicken), modelStub.getIngredientsAdded());","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Imranr2"},"content":"    public void execute_deleteIncompleteOrderIngredientQuantityIncreases_success() throws CommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"Imranr2"},"content":"        ModelStubAcceptingOrderAdded modelStub \u003d new ModelStubAcceptingOrderAdded();","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"Imranr2"},"content":"        modelStub.addOrder(ORDER_FOR_BENSON);","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"Imranr2"},"content":"        Ingredient fish \u003d new Ingredient(new GenericString(\"Fish\"), new Quantity(\"100\"), new GenericString(","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"Imranr2"},"content":"                \"whole\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"Imranr2"},"content":"        modelStub.addIngredient(fish);","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"Imranr2"},"content":"        CommandResult commandResult \u003d new DeleteOrderCommand(INDEX_FIRST).execute(modelStub);","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"Imranr2"},"content":"        // Order for Benson is incomplete and uses 1 fish for each order. Quantity of fish in inventory has increased","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"Imranr2"},"content":"        // by 2.","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"Imranr2"},"content":"        Ingredient expectedFish \u003d new Ingredient(","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"Imranr2"},"content":"                fish.getName(),","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"Imranr2"},"content":"                fish.getQuantity().addQuantityBy(new Quantity(\"1\"), ORDER_FOR_BENSON.getQuantity()),","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"Imranr2"},"content":"                fish.getUnit()","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"Imranr2"},"content":"        assertEquals(String.format(DeleteOrderCommand.MESSAGE_DELETE_ORDER_SUCCESS, ORDER_FOR_BENSON),","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"Imranr2"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"Imranr2"},"content":"        assertEquals(List.of(expectedFish), modelStub.getIngredientsAdded());","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"Imranr2"},"content":"    public void execute_validIndexUnfilteredList_success() throws NotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"Imranr2"},"content":"        Order orderToDelete \u003d model.getFilteredOrderList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"Imranr2"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"Imranr2"},"content":"        String expectedMessage \u003d String.format(DeleteOrderCommand.MESSAGE_DELETE_ORDER_SUCCESS, orderToDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"Imranr2"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"Imranr2"},"content":"        expectedModel.deleteOrder(orderToDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"Imranr2"},"content":"        assertCommandSuccessWithTabChange(deleteOrderCommand, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"Imranr2"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"Imranr2"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"Imranr2"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"Imranr2"},"content":"        assertCommandFailure(deleteOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"Imranr2"},"content":"    public void execute_validIndexFilteredList_success() throws NotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"Imranr2"},"content":"        showOrderAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"Imranr2"},"content":"        Order orderToDelete \u003d model.getFilteredOrderList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"Imranr2"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"Imranr2"},"content":"        String expectedMessage \u003d String.format(DeleteOrderCommand.MESSAGE_DELETE_ORDER_SUCCESS, orderToDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"Imranr2"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"Imranr2"},"content":"        expectedModel.deleteOrder(orderToDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"Imranr2"},"content":"        showNoOrder(expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"Imranr2"},"content":"        assertCommandSuccessWithTabChange(deleteOrderCommand, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"Imranr2"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"Imranr2"},"content":"        showOrderAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"Imranr2"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"Imranr2"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"Imranr2"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getOrderList().size());","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"Imranr2"},"content":"        DeleteOrderCommand deleteOrderCommand \u003d new DeleteOrderCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"Imranr2"},"content":"        assertCommandFailure(deleteOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"Imranr2"},"content":"    public void equals() {","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"Imranr2"},"content":"        DeleteOrderCommand deleteFirstCommand \u003d new DeleteOrderCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"Imranr2"},"content":"        DeleteOrderCommand deleteSecondCommand \u003d new DeleteOrderCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"Imranr2"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"Imranr2"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"Imranr2"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"Imranr2"},"content":"        DeleteOrderCommand deleteFirstCommandCopy \u003d new DeleteOrderCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"Imranr2"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"Imranr2"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"Imranr2"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"Imranr2"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"Imranr2"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"Imranr2"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"Imranr2"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"Imranr2"},"content":"     * Updates {@code model}\u0027s filtered list to show no orders.","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"Imranr2"},"content":"    private void showNoOrder(Model model) {","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"Imranr2"},"content":"        model.updateFilteredOrderList(p -\u003e false);","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"Imranr2"},"content":"        assertTrue(model.getFilteredOrderList().isEmpty());","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"Imranr2"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Imranr2":159}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/DeleteOrderIngredientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.OrderUtil.removeIngredientFromIngredientList;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.getTypicalAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.ListClientCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.RecipeIngredientList;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":" * Contains integration tests (interaction with the Model) and unit tests for DeleteOrderIngredientCommand.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"public class DeleteOrderIngredientCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    public void constructor_nullArgs_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"                new DeleteOrderIngredientCommand(null, null));","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"                new DeleteOrderIngredientCommand(INDEX_FIRST, null));","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"                new DeleteOrderIngredientCommand(null, null));","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"    public void execute_validOrderIndex_success() throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"        Index editedOrderIndex \u003d Index.fromZeroBased(model.getFilteredOrderList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        RecipeIngredientList recipeIngredientList \u003d new RecipeIngredientList(List.of(new IngredientBuilder().build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        Order orderToEdit \u003d new OrderBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"                .withRecipeName(new GenericString(\"Random\"))","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"                .withRecipeIngredients(recipeIngredientList).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"        model.addOrder(orderToEdit);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        Ingredient ingredientToDelete \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        DeleteOrderIngredientCommand command \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"                new DeleteOrderIngredientCommand(INDEX_FIRST, editedOrderIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"        RecipeIngredientList editedIngredientList \u003d removeIngredientFromIngredientList(orderToEdit, ingredientToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"        Order editedOrder \u003d new OrderBuilder(orderToEdit).withRecipeIngredients(editedIngredientList).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"                DeleteOrderIngredientCommand.MESSAGE_DELETE_ORDER_INGREDIENT_SUCCESS, ingredientToDelete, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"        expectedModel.setOrder(orderToEdit, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(command, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"    public void execute_invalidOrderIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"        showOrderAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getOrderList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"        DeleteOrderIngredientCommand command \u003d new DeleteOrderIngredientCommand(INDEX_FIRST, outOfBoundIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"    public void execute_invalidOrderIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"        DeleteOrderIngredientCommand command \u003d new DeleteOrderIngredientCommand(INDEX_FIRST, outOfBoundIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"    public void execute_invalidIngredientIndex_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"        Index targetOrderIndex \u003d Index.fromZeroBased(model.getFilteredOrderList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"        RecipeIngredientList recipeIngredientList \u003d new RecipeIngredientList(List.of(new IngredientBuilder().build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"        Order orderToEdit \u003d new OrderBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"                .withRecipeName(new GenericString(\"Random\"))","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"                .withRecipeIngredients(recipeIngredientList).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"        model.addOrder(orderToEdit);","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(recipeIngredientList.getIngredients().size() + 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"        DeleteOrderIngredientCommand command \u003d new DeleteOrderIngredientCommand(outOfBoundIndex, targetOrderIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_INGREDIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"        final DeleteOrderIngredientCommand standardCommand \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"                new DeleteOrderIngredientCommand(INDEX_FIRST, INDEX_SECOND);","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"        DeleteOrderIngredientCommand commandWithSameValues \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"zognin"},"content":"                new DeleteOrderIngredientCommand(INDEX_FIRST, INDEX_SECOND);","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"zognin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"zognin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"zognin"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"zognin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"zognin"},"content":"        assertFalse(standardCommand.equals(new ListClientCommand()));","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"zognin"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"zognin"},"content":"        assertFalse(standardCommand.equals(new DeleteOrderIngredientCommand(INDEX_SECOND, INDEX_SECOND)));","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"zognin"},"content":"        assertFalse(standardCommand.equals(new DeleteOrderIngredientCommand(INDEX_FIRST, INDEX_FIRST)));","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"zognin":132}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/DoneOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.getTypicalAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.CompletionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"public class DoneOrderCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"        DoneOrderCommand doneFirstCommand \u003d new DoneOrderCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"        DoneOrderCommand doneSecondCommand \u003d new DoneOrderCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(doneFirstCommand.equals(doneFirstCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"        DoneOrderCommand doneFirstCommandCopy \u003d new DoneOrderCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(doneFirstCommand.equals(doneFirstCommandCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(doneFirstCommand.equals(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(doneFirstCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(doneFirstCommand.equals(doneSecondCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_validIndexUnfilteredList_success() throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"        Order orderToMarkDone \u003d model.getFilteredOrderList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"        Order expectedMarkedOrder \u003d new Order(orderToMarkDone.getClientName(), orderToMarkDone.getClientPhone(),","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"                orderToMarkDone.getClientAddress(), orderToMarkDone.getRecipeName(),","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"                orderToMarkDone.getRecipeIngredients(), orderToMarkDone.getPrice(),","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"                orderToMarkDone.getDeadline(), orderToMarkDone.getQuantity(), new CompletionStatus(true));","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"        DoneOrderCommand doneOrderCommand \u003d new DoneOrderCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"                String.format(DoneOrderCommand.MESSAGE_DONE_ORDER_SUCCESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"                        orderToMarkDone.toStringWithoutCompletionStatus());","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"        expectedModel.setOrder(orderToMarkDone, expectedMarkedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"        assertCommandSuccessWithTabChange(doneOrderCommand, model, expectedMessage, expectedModel,","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"                UiTab.HOME);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"        DoneOrderCommand doneOrderCommand \u003d new DoneOrderCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"        assertCommandFailure(doneOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_validIndexFilteredList_success() throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"        showOrderAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"EuniceSim142"},"content":"        Order orderInFilteredList \u003d model.getFilteredOrderList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"EuniceSim142"},"content":"        Order markedOrder \u003d new OrderBuilder(orderInFilteredList)","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"EuniceSim142"},"content":"                .withCompletionStatus(new CompletionStatus(true)).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"EuniceSim142"},"content":"        DoneOrderCommand doneOrderCommand \u003d new DoneOrderCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d String.format(DoneOrderCommand.MESSAGE_DONE_ORDER_SUCCESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"EuniceSim142"},"content":"                orderInFilteredList.toStringWithoutCompletionStatus());","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"EuniceSim142"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"        expectedModel.setOrder(model.getFilteredOrderList().get(0), markedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"        // Need to update as setOrder method does not update the filtered list of model,","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"        // but it does update for expectedModel","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"EuniceSim142"},"content":"        model.updateFilteredOrderList(Model.PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"EuniceSim142"},"content":"        assertCommandSuccessWithTabChange(doneOrderCommand, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"EuniceSim142"},"content":"        showOrderAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"EuniceSim142"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"EuniceSim142"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getOrderList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"EuniceSim142"},"content":"        DoneOrderCommand doneOrderCommand \u003d new DoneOrderCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"EuniceSim142"},"content":"        assertCommandFailure(doneOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"EuniceSim142"},"content":"     * Updates {@code model}\u0027s filtered list to show no orders.","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"EuniceSim142"},"content":"    private void showNoOrder(Model model) {","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"EuniceSim142"},"content":"        model.updateFilteredOrderList(p -\u003e false);","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(model.getFilteredOrderList().isEmpty());","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EuniceSim142":121}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/EditOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DESC_ORDER_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DESC_ORDER_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_ALICE;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.getTypicalAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.OrderDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderDescriptorBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.stubs.ModelStubAcceptingOrderAdded;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"class EditOrderCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"        Order editedOrder \u003d new OrderBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor descriptor \u003d new OrderDescriptorBuilder(editedOrder).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"        expectedModel.setOrder(model.getFilteredOrderList().get(0), editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"        assertCommandSuccessWithTabChange(editOrderCommand, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"    public void execute_editedOrderQuantityDecreased_addsIngredientQuantity() throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"        ModelStubAcceptingOrderAdded modelStub \u003d new ModelStubAcceptingOrderAdded();","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"        modelStub.addOrder(ORDER_FOR_ALICE);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient chicken \u003d new Ingredient(new GenericString(\"Chicken\"), new Quantity(\"100\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"                new GenericString(\"whole\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"        modelStub.addIngredient(chicken);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"        Order editedOrder \u003d new OrderBuilder(ORDER_FOR_ALICE).withQuantity(new Quantity(\"2\")).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor validOrderDescriptor \u003d new OrderDescriptorBuilder(editedOrder).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"        CommandResult commandResult \u003d new EditOrderCommand(INDEX_FIRST, validOrderDescriptor).execute(modelStub);","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"        // Order for Alice uses 1 chicken for each order. Alice\u0027s order has decreased by 2.","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient expectedChicken \u003d new Ingredient(","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"                chicken.getName(),","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"                chicken.getQuantity().addQuantityBy(new Quantity(\"1\"), new Quantity(\"2\")),","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"                chicken.getUnit()","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"        );","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder),","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(List.of(expectedChicken), modelStub.getIngredientsAdded());","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"    public void execute_editedOrderQuantityIncreased_reducesIngredientQuantity() throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"        ModelStubAcceptingOrderAdded modelStub \u003d new ModelStubAcceptingOrderAdded();","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"        modelStub.addOrder(ORDER_FOR_ALICE);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient chicken \u003d new Ingredient(new GenericString(\"Chicken\"), new Quantity(\"100\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"                new GenericString(\"whole\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"        modelStub.addIngredient(chicken);","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"        Order editedOrder \u003d new OrderBuilder(ORDER_FOR_ALICE).withQuantity(new Quantity(\"6\")).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor validOrderDescriptor \u003d new OrderDescriptorBuilder(editedOrder).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"sivayogasubramanian"},"content":"        CommandResult commandResult \u003d new EditOrderCommand(INDEX_FIRST, validOrderDescriptor).execute(modelStub);","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"sivayogasubramanian"},"content":"        // Order for Alice uses 1 chicken for each order. Alice\u0027s order has decreased by 2.","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient expectedChicken \u003d new Ingredient(","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"                chicken.getName(),","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"sivayogasubramanian"},"content":"                chicken.getQuantity().minusQuantityBy(new Quantity(\"1\"), new Quantity(\"2\")),","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"sivayogasubramanian"},"content":"                chicken.getUnit()","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"sivayogasubramanian"},"content":"        );","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder),","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"sivayogasubramanian"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(List.of(expectedChicken), modelStub.getIngredientsAdded());","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"    public void execute_editedOrderQuantitySame_sameIngredientQuantity() throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"        ModelStubAcceptingOrderAdded modelStub \u003d new ModelStubAcceptingOrderAdded();","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"sivayogasubramanian"},"content":"        modelStub.addOrder(ORDER_FOR_ALICE);","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient chicken \u003d new Ingredient(new GenericString(\"Chicken\"), new Quantity(\"100\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"sivayogasubramanian"},"content":"                new GenericString(\"whole\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"sivayogasubramanian"},"content":"        modelStub.addIngredient(chicken);","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"        Order editedOrder \u003d new OrderBuilder(ORDER_FOR_ALICE).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor validOrderDescriptor \u003d new OrderDescriptorBuilder(editedOrder).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"        CommandResult commandResult \u003d new EditOrderCommand(INDEX_FIRST, validOrderDescriptor).execute(modelStub);","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder),","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"sivayogasubramanian"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(List.of(chicken), modelStub.getIngredientsAdded());","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"sivayogasubramanian"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"sivayogasubramanian"},"content":"        Index indexLastOrder \u003d Index.fromOneBased(model.getFilteredOrderList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"sivayogasubramanian"},"content":"        Order lastOrder \u003d model.getFilteredOrderList().get(indexLastOrder.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderBuilder orderInList \u003d new OrderBuilder(lastOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"sivayogasubramanian"},"content":"        Order editedOrder \u003d orderInList.withClientName(new GenericString(VALID_NAME_BOB))","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"sivayogasubramanian"},"content":"                .withClientPhone(new Phone(VALID_PHONE_BOB)).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor descriptor \u003d new OrderDescriptorBuilder().withClientName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"sivayogasubramanian"},"content":"                .withClientPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"sivayogasubramanian"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(indexLastOrder, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"sivayogasubramanian"},"content":"        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"sivayogasubramanian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"sivayogasubramanian"},"content":"        expectedModel.setOrder(lastOrder, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"sivayogasubramanian"},"content":"        assertCommandSuccessWithTabChange(editOrderCommand, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"sivayogasubramanian"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"sivayogasubramanian"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_FIRST, new OrderDescriptor());","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"sivayogasubramanian"},"content":"        Order editedOrder \u003d model.getFilteredOrderList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"sivayogasubramanian"},"content":"        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"sivayogasubramanian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"sivayogasubramanian"},"content":"        assertCommandSuccessWithTabChange(editOrderCommand, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"sivayogasubramanian"},"content":"    public void execute_filteredList_success() throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"sivayogasubramanian"},"content":"        showOrderAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"sivayogasubramanian"},"content":"        Order orderInFilteredList \u003d model.getFilteredOrderList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"sivayogasubramanian"},"content":"        Order editedOrder \u003d new OrderBuilder(orderInFilteredList)","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"sivayogasubramanian"},"content":"                .withClientName(new GenericString(VALID_NAME_BOB)).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"sivayogasubramanian"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"sivayogasubramanian"},"content":"                new OrderDescriptorBuilder().withClientName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"sivayogasubramanian"},"content":"        String expectedMessage \u003d String.format(EditOrderCommand.MESSAGE_EDIT_ORDER_SUCCESS, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"sivayogasubramanian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"sivayogasubramanian"},"content":"        expectedModel.setOrder(model.getFilteredOrderList().get(0), editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"sivayogasubramanian"},"content":"        assertCommandSuccessWithTabChange(editOrderCommand, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"sivayogasubramanian"},"content":"    public void execute_duplicateOrderUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"sivayogasubramanian"},"content":"        Order firstOrder \u003d model.getFilteredOrderList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor descriptor \u003d new OrderDescriptorBuilder(firstOrder).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"sivayogasubramanian"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"sivayogasubramanian"},"content":"        assertCommandFailure(editOrderCommand, model, EditOrderCommand.MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"sivayogasubramanian"},"content":"    public void execute_duplicateOrderFilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"sivayogasubramanian"},"content":"        showOrderAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"sivayogasubramanian"},"content":"        // edit order in filtered list into a duplicate in address book","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"sivayogasubramanian"},"content":"        Order orderInList \u003d model.getAddressBook().getOrderList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"sivayogasubramanian"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"sivayogasubramanian"},"content":"                new OrderDescriptorBuilder(orderInList).build());","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"sivayogasubramanian"},"content":"        assertCommandFailure(editOrderCommand, model, EditOrderCommand.MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"sivayogasubramanian"},"content":"    public void execute_invalidOrderIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"sivayogasubramanian"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor descriptor \u003d new OrderDescriptorBuilder().withClientName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"sivayogasubramanian"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"sivayogasubramanian"},"content":"        assertCommandFailure(editOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"sivayogasubramanian"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"sivayogasubramanian"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"sivayogasubramanian"},"content":"    public void execute_invalidOrderIndexFilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"sivayogasubramanian"},"content":"        showOrderAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"sivayogasubramanian"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"sivayogasubramanian"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getOrderList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor descriptor \u003d new OrderDescriptorBuilder().withClientName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"sivayogasubramanian"},"content":"        EditOrderCommand editOrderCommand \u003d new EditOrderCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"sivayogasubramanian"},"content":"        assertCommandFailure(editOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"sivayogasubramanian"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"sivayogasubramanian"},"content":"        final EditOrderCommand standardCommand \u003d new EditOrderCommand(INDEX_FIRST, DESC_ORDER_AMY);","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"sivayogasubramanian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor copyDescriptor \u003d new OrderDescriptor(DESC_ORDER_AMY);","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"sivayogasubramanian"},"content":"        EditOrderCommand commandWithSameValues \u003d new EditOrderCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"sivayogasubramanian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"sivayogasubramanian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"sivayogasubramanian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(standardCommand.equals(new ListOrderCommand()));","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"sivayogasubramanian"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(standardCommand.equals(new EditOrderCommand(INDEX_SECOND, DESC_ORDER_AMY)));","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"sivayogasubramanian"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(standardCommand.equals(new EditOrderCommand(INDEX_FIRST, DESC_ORDER_BOB)));","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"sivayogasubramanian":249}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/FindOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Imranr2"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_ORDERS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_ADDRESS_EUNOS_BISHAN_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_NAME_CAROL_DAVID_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_PHONE_9110_3216_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.addPredicates;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.PredicateUtil.makeLocalDateInListPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.PredicateUtil.makeStringContainsKeywordsPredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_CARL;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_ELLE;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_FIONA;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollection;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Imranr2"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Imranr2"},"content":" * Contains integration tests (interaction with the Model) for {@code FindOrderCommand}.","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Imranr2"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Imranr2"},"content":"public class FindOrderCommandTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Imranr2"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Imranr2"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cOrder\u003e predicateCollection \u003d new PredicateCollection\u003cOrder\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Imranr2"},"content":"        addPredicates(predicateCollection, List.of(CLIENT_NAME_CAROL_DAVID_PREDICATE,","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Imranr2"},"content":"                CLIENT_PHONE_9110_3216_PREDICATE, CLIENT_ADDRESS_EUNOS_BISHAN_PREDICATE));","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cOrder\u003e diffOrderPredicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Imranr2"},"content":"        addPredicates(diffOrderPredicateCollection, List.of(CLIENT_PHONE_9110_3216_PREDICATE,","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"                CLIENT_NAME_CAROL_DAVID_PREDICATE, CLIENT_ADDRESS_EUNOS_BISHAN_PREDICATE));","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cOrder\u003e diffAmountPredicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Imranr2"},"content":"        addPredicates(diffAmountPredicateCollection, List.of(CLIENT_NAME_CAROL_DAVID_PREDICATE,","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Imranr2"},"content":"                CLIENT_PHONE_9110_3216_PREDICATE));","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Imranr2"},"content":"        FindOrderCommand findCommand \u003d new FindOrderCommand(predicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Imranr2"},"content":"        FindOrderCommand diffOrderFindCommand \u003d new FindOrderCommand(diffOrderPredicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Imranr2"},"content":"        FindOrderCommand diffAmountFindCommand \u003d new FindOrderCommand(diffAmountPredicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Imranr2"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Imranr2"},"content":"        assertTrue(findCommand.equals(findCommand));","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Imranr2"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Imranr2"},"content":"        FindOrderCommand findCommandCopy \u003d new FindOrderCommand(predicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"Imranr2"},"content":"        assertTrue(findCommand.equals(findCommandCopy));","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"Imranr2"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Imranr2"},"content":"        assertFalse(findCommand.equals(1));","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"Imranr2"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"Imranr2"},"content":"        assertFalse(findCommand.equals(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"Imranr2"},"content":"        // different order of predicates -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"Imranr2"},"content":"        assertTrue(findCommand.equals(diffOrderFindCommand));","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"Imranr2"},"content":"        // different amount of predicates -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"Imranr2"},"content":"        assertFalse(findCommand.equals(diffAmountFindCommand));","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"Imranr2"},"content":"    public void execute_multipleKeywords_multipleOrdersFound() {","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"Imranr2"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ORDERS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cOrder\u003e predicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"Imranr2"},"content":"                makeStringContainsKeywordsPredicate(\"Kurz Elle Kunz\", Order::getClientName)","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"Imranr2"},"content":"                makeStringContainsKeywordsPredicate(\"9535 9482 2427\", Order::getClientPhone)","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"Imranr2"},"content":"                makeStringContainsKeywordsPredicate(\"wall michegan tokyo\", Order::getClientAddress)","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"Imranr2"},"content":"                makeStringContainsKeywordsPredicate(\"prata hokkien kaya\", Order::getRecipeName)","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"Imranr2"},"content":"                makeLocalDateInListPredicate(\"14-12-2021 16-12-2021 17-12-2021\", Order::getDeadlineDate)","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"Imranr2"},"content":"                makeStringContainsKeywordsPredicate(\"yes no\", Order::getCompletionStatus)","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"Imranr2"},"content":"        FindOrderCommand command \u003d new FindOrderCommand(predicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"Imranr2"},"content":"        expectedModel.updateFilteredOrderList(predicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"Imranr2"},"content":"        assertCommandSuccessWithTabChange(command, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"Imranr2"},"content":"        assertEquals(Arrays.asList(ORDER_FOR_CARL, ORDER_FOR_ELLE, ORDER_FOR_FIONA), model.getFilteredOrderList());","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"Imranr2"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Imranr2":97,"zognin":5}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/ListOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Imranr2"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListOrderCommand.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":"public class ListOrderCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"Imranr2"},"content":"    private Model model;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Imranr2"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Imranr2"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(new ListOrderCommand(), model, ListOrderCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"                expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"Imranr2"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"Imranr2"},"content":"        model.updateFilteredOrderList(unused -\u003e false);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        assertCommandSuccessWithTabChange(new ListOrderCommand(), model, ListOrderCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"                expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Imranr2":32,"zognin":7}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/order/UndoneOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.assertCommandSuccessWithTabChange;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.showOrderAtIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.getTypicalAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.CompletionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.ui.UiTab;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"public class UndoneOrderCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"        UndoneOrderCommand undoneFirstCommand \u003d new UndoneOrderCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"        UndoneOrderCommand undoneSecondCommand \u003d new UndoneOrderCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(undoneFirstCommand.equals(undoneFirstCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"        UndoneOrderCommand undoneFirstCommandCopy \u003d new UndoneOrderCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(undoneFirstCommand.equals(undoneFirstCommandCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(undoneFirstCommand.equals(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(undoneFirstCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(undoneFirstCommand.equals(undoneSecondCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_validIndexUnfilteredList_success() throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"        Order orderToMarkUndone \u003d model.getFilteredOrderList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"        Order expectedMarkedOrder \u003d new Order(orderToMarkUndone.getClientName(), orderToMarkUndone.getClientPhone(),","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"                orderToMarkUndone.getClientAddress(), orderToMarkUndone.getRecipeName(),","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"                orderToMarkUndone.getRecipeIngredients(), orderToMarkUndone.getPrice(),","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"                orderToMarkUndone.getDeadline(), orderToMarkUndone.getQuantity(), new CompletionStatus(false));","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"        UndoneOrderCommand undoneOrderCommand \u003d new UndoneOrderCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"                String.format(UndoneOrderCommand.MESSAGE_UNDONE_ORDER_SUCCESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"                        orderToMarkUndone.toStringWithoutCompletionStatus());","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"        expectedModel.setOrder(orderToMarkUndone, expectedMarkedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"        assertCommandSuccessWithTabChange(undoneOrderCommand, model, expectedMessage, expectedModel,","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"                UiTab.HOME);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredOrderList().size() + 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"        UndoneOrderCommand undoneOrderCommand \u003d new UndoneOrderCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"        assertCommandFailure(undoneOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_validIndexFilteredList_success() throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"        showOrderAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"EuniceSim142"},"content":"        Order orderInFilteredList \u003d model.getFilteredOrderList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"EuniceSim142"},"content":"        Order markedOrder \u003d new OrderBuilder(orderInFilteredList)","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"EuniceSim142"},"content":"                .withCompletionStatus(new CompletionStatus(false)).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"EuniceSim142"},"content":"        UndoneOrderCommand undoneOrderCommand \u003d new UndoneOrderCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d String.format(UndoneOrderCommand.MESSAGE_UNDONE_ORDER_SUCCESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"EuniceSim142"},"content":"                orderInFilteredList.toStringWithoutCompletionStatus());","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"EuniceSim142"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"        expectedModel.setOrder(model.getFilteredOrderList().get(0), markedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"        // Need to update as setOrder method does not update the filtered list of model,","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"        // but it does update for expectedModel","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"EuniceSim142"},"content":"        model.updateFilteredOrderList(Model.PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"EuniceSim142"},"content":"        assertCommandSuccessWithTabChange(undoneOrderCommand, model, expectedMessage, expectedModel, UiTab.HOME);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"EuniceSim142"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"EuniceSim142"},"content":"        showOrderAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"EuniceSim142"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"EuniceSim142"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getOrderList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"EuniceSim142"},"content":"        UndoneOrderCommand undoneOrderCommand \u003d new UndoneOrderCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"EuniceSim142"},"content":"        assertCommandFailure(undoneOrderCommand, model, Messages.MESSAGE_INVALID_ORDER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"EuniceSim142"},"content":"     * Updates {@code model}\u0027s filtered list to show no orders.","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"EuniceSim142"},"content":"    private void showNoOrder(Model model) {","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"EuniceSim142"},"content":"        model.updateFilteredOrderList(p -\u003e false);","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(model.getFilteredOrderList().isEmpty());","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EuniceSim142":121}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/commands/util/CommandUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.commands.util;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.util.CommandUtil.makeOrderWithEditedIngredients;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.getTypicalAddressBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.RecipeIngredientList;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"public class CommandUtilTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    public void makeOrderWithEditedIngredientsTest() throws CommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"        RecipeIngredientList editedIngredients \u003d new RecipeIngredientList(List.of(new IngredientBuilder().build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        Order expectedOrder \u003d new OrderBuilder().withRecipeIngredients(editedIngredients).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        Order actualOrder \u003d makeOrderWithEditedIngredients(model, editedIngredients, new OrderBuilder().build());","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        assertEquals(expectedOrder, actualOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"zognin":30}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/descriptors/EditClientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.descriptors;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.ClientDescriptorBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"public class EditClientDescriptorTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor descriptorWithSameValues \u003d new ClientDescriptor(DESC_AMY);","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor editedAmy \u003d new ClientDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"        editedAmy \u003d new ClientDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"        editedAmy \u003d new ClientDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"        editedAmy \u003d new ClientDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"EuniceSim142":6,"-":37,"sivayogasubramanian":8}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/descriptors/IngredientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.descriptors;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DESC_APPLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DESC_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_INGREDIENT_NAME_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_QUANTITY_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_UNIT_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"public class IngredientDescriptorTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"    public void equals() {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"        IngredientDescriptor descriptorWithSameValues \u003d new IngredientDescriptor(DESC_APPLE);","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(DESC_APPLE.equals(descriptorWithSameValues));","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(DESC_APPLE.equals(DESC_APPLE));","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(DESC_APPLE.equals(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(DESC_APPLE.equals(5));","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(DESC_APPLE.equals(DESC_BEEF));","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"        // different ingredient name -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"        IngredientDescriptor editedIngredientDescriptor \u003d new IngredientDescriptorBuilder(DESC_APPLE)","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"                .withIngredientName(VALID_INGREDIENT_NAME_BEEF).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(DESC_APPLE.equals(editedIngredientDescriptor));","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"        // different quantity -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"        editedIngredientDescriptor \u003d new IngredientDescriptorBuilder(DESC_APPLE)","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"                .withQuantity(VALID_QUANTITY_BEEF).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(DESC_APPLE.equals(editedIngredientDescriptor));","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"        // different unit -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"        editedIngredientDescriptor \u003d new IngredientDescriptorBuilder(DESC_APPLE)","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"                .withUnit(VALID_UNIT_BEEF).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(DESC_APPLE.equals(editedIngredientDescriptor));","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"EuniceSim142":49}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/descriptors/OrderDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.descriptors;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DESC_ORDER_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DESC_ORDER_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ORDER_COMPLETION_STATUS_YES;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"class OrderDescriptorTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor descriptorWithSameValues \u003d new OrderDescriptor(DESC_ORDER_AMY);","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(DESC_ORDER_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(DESC_ORDER_AMY.equals(DESC_ORDER_AMY));","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(DESC_ORDER_AMY.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(DESC_ORDER_AMY.equals(5));","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(DESC_ORDER_AMY.equals(DESC_ORDER_BOB));","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor editedOrderDescriptor \u003d new OrderDescriptorBuilder(DESC_ORDER_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Imranr2"},"content":"                .withClientIndex(INDEX_SECOND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Imranr2"},"content":"        // different client index -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"        assertFalse(DESC_ORDER_AMY.equals(editedOrderDescriptor));","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Imranr2"},"content":"        // different client name -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Imranr2"},"content":"        editedOrderDescriptor \u003d new OrderDescriptorBuilder(DESC_ORDER_AMY).withClientName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"        assertFalse(DESC_ORDER_AMY.equals(editedOrderDescriptor));","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Imranr2"},"content":"        // different client phone -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"        editedOrderDescriptor \u003d new OrderDescriptorBuilder(DESC_ORDER_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"                .withClientPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(DESC_ORDER_AMY.equals(editedOrderDescriptor));","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Imranr2"},"content":"        // different client address -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Imranr2"},"content":"        editedOrderDescriptor \u003d new OrderDescriptorBuilder(DESC_ORDER_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Imranr2"},"content":"                .withClientAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Imranr2"},"content":"        assertFalse(DESC_ORDER_AMY.equals(editedOrderDescriptor));","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"        // different done status -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"        editedOrderDescriptor \u003d new OrderDescriptorBuilder(DESC_ORDER_AMY)","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"                .withCompletionStatus(VALID_ORDER_COMPLETION_STATUS_YES).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(DESC_ORDER_AMY.equals(editedOrderDescriptor));","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"EuniceSim142":6,"Imranr2":19,"sivayogasubramanian":35}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_INDEX;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY_FROM;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY_TO;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_UNIT;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_ADDRESS_EUNOS_BISHAN_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_ADDRESS_YISHUN_GEYLANG_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_EMAIL_ALICE_BOB_GMAIL_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_NAME_ALICE_BOB_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_NAME_CAROL_DAVID_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_PHONE_9110_3216_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_PHONE_9427_3217_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.INGREDIENT_NAME_AVOCADO_BUTTER_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.INGREDIENT_QUANTITY_5_550_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.INGREDIENT_QUANTITY_5_TO_600_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.INGREDIENT_UNIT_WHOLE_GRAMS_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.AddClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.DeleteClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.EditClientCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.FindClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.ListClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.general.ExitCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.general.HelpCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.general.TabCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.AddIngredientCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.DeleteIngredientCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.EditIngredientCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.FindIngredientCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.ListIngredientCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.AddOrderIngredientCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.DeleteOrderCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.DeleteOrderIngredientCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.DoneOrderCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.EditOrderCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.FindOrderCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.ListOrderCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.UndoneOrderCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.ClientDescriptor;","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.IngredientDescriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.OrderDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollection;","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.ClientBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.ClientDescriptorBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.ClientUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientDescriptorBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"Imranr2"},"content":"    public void parseCommand_addClient() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor clientDescriptor \u003d new ClientDescriptorBuilder(client).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"        AddClientCommand command \u003d (AddClientCommand) parser.parseCommand(ClientUtil.getAddCommand(client));","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(new AddClientCommand(clientDescriptor), command);","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"    public void parseCommand_addIngredient() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"        Ingredient ingredient \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"        IngredientDescriptor ingredientDescriptor \u003d new IngredientDescriptorBuilder(ingredient).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"        AddIngredientCommand command \u003d (AddIngredientCommand) parser","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"                .parseCommand(IngredientUtil.getAddCommand(ingredient));","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"        assertEquals(new AddIngredientCommand(ingredientDescriptor), command);","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"Imranr2"},"content":"    public void parseCommand_addOrder() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"Imranr2"},"content":"        Order order \u003d new OrderBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"Imranr2"},"content":"        OrderDescriptor orderDescriptor \u003d new OrderDescriptorBuilder(order).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"Imranr2"},"content":"        AddOrderCommand command \u003d (AddOrderCommand) parser.parseCommand(OrderUtil.getAddCommand(order));","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Imranr2"},"content":"        assertEquals(new AddOrderCommand(orderDescriptor), command);","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"    public void parseCommand_addOrderIngredient() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"        Ingredient ingredient \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"        IngredientDescriptor ingredientDescriptor \u003d new IngredientDescriptorBuilder(ingredient).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"        AddOrderIngredientCommand command \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"                (AddOrderIngredientCommand) parser.parseCommand(AddOrderIngredientCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"                        + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"                        + PREFIX_INGREDIENT_NAME + ingredient.getName().toString() + \" \"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"                        + PREFIX_INGREDIENT_QUANTITY + ingredient.getQuantity().toString() + \" \"","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"                        + PREFIX_INGREDIENT_UNIT + ingredient.getUnit().toString()","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"                );","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"        assertEquals(new AddOrderIngredientCommand(INDEX_FIRST, ingredientDescriptor), command);","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"Imranr2"},"content":"    public void parseCommand_deleteClient() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"EuniceSim142"},"content":"        DeleteClientCommand command \u003d (DeleteClientCommand) parser.parseCommand(","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"zognin"},"content":"                DeleteClientCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"        assertEquals(new DeleteClientCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void parseCommand_deleteIngredient() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        DeleteIngredientCommand command \u003d (DeleteIngredientCommand) parser.parseCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                DeleteIngredientCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertEquals(new DeleteIngredientCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"Imranr2"},"content":"    public void parseCommand_deleteOrder() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"Imranr2"},"content":"        DeleteOrderCommand command \u003d (DeleteOrderCommand) parser.parseCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"Imranr2"},"content":"                DeleteOrderCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"Imranr2"},"content":"        assertEquals(new DeleteOrderCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"zognin"},"content":"    public void parseCommand_deleteOrderIngredient() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"zognin"},"content":"        DeleteOrderIngredientCommand command \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"zognin"},"content":"                (DeleteOrderIngredientCommand) parser.parseCommand(DeleteOrderIngredientCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"zognin"},"content":"                        + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"zognin"},"content":"                        + PREFIX_INGREDIENT_INDEX + INDEX_FIRST.getOneBased()","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"zognin"},"content":"                );","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"zognin"},"content":"        assertEquals(new DeleteOrderIngredientCommand(INDEX_FIRST, INDEX_FIRST), command);","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"EuniceSim142"},"content":"    public void parseCommand_doneOrder() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"EuniceSim142"},"content":"        DoneOrderCommand command \u003d (DoneOrderCommand) parser.parseCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"EuniceSim142"},"content":"                DoneOrderCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(new DoneOrderCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":155,"author":{"gitId":"Imranr2"},"content":"    public void parseCommand_editClient() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"zognin"},"content":"        Client person \u003d new ClientBuilder().build();","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"zognin"},"content":"        ClientDescriptor descriptor \u003d new ClientDescriptorBuilder(person).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"zognin"},"content":"        EditClientCommand command \u003d (EditClientCommand) parser.parseCommand(EditClientCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"zognin"},"content":"                + INDEX_FIRST.getOneBased() + \" \" + ClientUtil.getEditClientDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"zognin"},"content":"        assertEquals(new EditClientCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":163,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void parseCommand_editIngredient() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Ingredient ingredient \u003d new IngredientBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        IngredientDescriptor descriptor \u003d new IngredientDescriptorBuilder(ingredient).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        EditIngredientCommand command \u003d (EditIngredientCommand) parser.parseCommand(EditIngredientCommand.COMMAND_WORD","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                + \" \" + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                + IngredientUtil.getEditIngredientDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertEquals(new EditIngredientCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parseCommand_editOrder() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"sivayogasubramanian"},"content":"        Order order \u003d new OrderBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"sivayogasubramanian"},"content":"        // It is not possible to edit the ingredient list using the EditOrderCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"EuniceSim142"},"content":"        OrderDescriptor descriptor \u003d new OrderDescriptorBuilder(order).withRecipeIngredients(null)","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"EuniceSim142"},"content":"                .withCompletionStatus(null).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"sivayogasubramanian"},"content":"        EditOrderCommand command \u003d (EditOrderCommand) parser.parseCommand(EditOrderCommand.COMMAND_WORD","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"sivayogasubramanian"},"content":"                + \" \" + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"sivayogasubramanian"},"content":"                + OrderUtil.getEditOrderDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(new EditOrderCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":195,"author":{"gitId":"Imranr2"},"content":"    public void parseCommand_findClient() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cClient\u003e predicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(CLIENT_NAME_ALICE_BOB_PREDICATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":198,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(CLIENT_ADDRESS_YISHUN_GEYLANG_PREDICATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":199,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(CLIENT_EMAIL_ALICE_BOB_GMAIL_PREDICATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(CLIENT_PHONE_9427_3217_PREDICATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        FindClientCommand command \u003d (FindClientCommand) parser.parseCommand(FindClientCommand.COMMAND_WORD","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                + \" \" + PREFIX_CLIENT_NAME + \"Alice Bob \" + PREFIX_CLIENT_ADDRESS + \"Yishun Geylang \"","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                + PREFIX_CLIENT_PHONE + \"9427 3217 \" + PREFIX_CLIENT_EMAIL + \"alice@gmail.com bob@gmail.com\");","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"Imranr2"},"content":"        assertEquals(new FindClientCommand(predicateCollection), command);","lastModifiedDate":"2021-10-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":207,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"zognin"},"content":"    public void parseCommand_findIngredient() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"zognin"},"content":"        PredicateCollection\u003cIngredient\u003e predicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"zognin"},"content":"        predicateCollection.addPredicate(INGREDIENT_NAME_AVOCADO_BUTTER_PREDICATE);","lastModifiedDate":"2021-10-11"},{"lineNumber":211,"author":{"gitId":"zognin"},"content":"        predicateCollection.addPredicate(INGREDIENT_QUANTITY_5_550_PREDICATE);","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"zognin"},"content":"        predicateCollection.addPredicate(INGREDIENT_QUANTITY_5_TO_600_PREDICATE);","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"zognin"},"content":"        predicateCollection.addPredicate(INGREDIENT_UNIT_WHOLE_GRAMS_PREDICATE);","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"zognin"},"content":"        FindIngredientCommand command \u003d (FindIngredientCommand) parser.parseCommand(FindIngredientCommand.COMMAND_WORD","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"zognin"},"content":"                + \" \"","lastModifiedDate":"2021-10-11"},{"lineNumber":216,"author":{"gitId":"zognin"},"content":"                + PREFIX_INGREDIENT_NAME + \"Avocado Butter \"","lastModifiedDate":"2021-10-11"},{"lineNumber":217,"author":{"gitId":"zognin"},"content":"                + PREFIX_INGREDIENT_QUANTITY + \"5 550 \"","lastModifiedDate":"2021-10-11"},{"lineNumber":218,"author":{"gitId":"zognin"},"content":"                + PREFIX_INGREDIENT_QUANTITY_FROM + \"5 \" + PREFIX_INGREDIENT_QUANTITY_TO + \"600 \"","lastModifiedDate":"2021-10-11"},{"lineNumber":219,"author":{"gitId":"zognin"},"content":"                + PREFIX_INGREDIENT_UNIT + \"whole grams\");","lastModifiedDate":"2021-10-11"},{"lineNumber":220,"author":{"gitId":"zognin"},"content":"        assertEquals(new FindIngredientCommand(predicateCollection), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":221,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":222,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":223,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":224,"author":{"gitId":"Imranr2"},"content":"    public void parseCommand_findOrder() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cOrder\u003e predicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":226,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(CLIENT_NAME_CAROL_DAVID_PREDICATE);","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(CLIENT_PHONE_9110_3216_PREDICATE);","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(CLIENT_ADDRESS_EUNOS_BISHAN_PREDICATE);","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"Imranr2"},"content":"        FindOrderCommand command \u003d (FindOrderCommand) parser.parseCommand(FindOrderCommand.COMMAND_WORD","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"Imranr2"},"content":"                + \" \" + PREFIX_CLIENT_NAME + \"Carol David \" + PREFIX_CLIENT_PHONE + \"9110 3216 \"","lastModifiedDate":"2021-10-10"},{"lineNumber":231,"author":{"gitId":"Imranr2"},"content":"                + PREFIX_CLIENT_ADDRESS + \"Eunos Bishan\");","lastModifiedDate":"2021-10-10"},{"lineNumber":232,"author":{"gitId":"Imranr2"},"content":"        assertEquals(new FindOrderCommand(predicateCollection), command);","lastModifiedDate":"2021-10-10"},{"lineNumber":233,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":234,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":242,"author":{"gitId":"Imranr2"},"content":"    public void parseCommand_listClient() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":243,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(parser.parseCommand(ListClientCommand.COMMAND_WORD) instanceof ListClientCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":244,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(parser.parseCommand(ListClientCommand.COMMAND_WORD + \" 3\") instanceof ListClientCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":245,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":246,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":247,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":248,"author":{"gitId":"zognin"},"content":"    public void parseCommand_listIngredient() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":249,"author":{"gitId":"zognin"},"content":"        assertTrue(parser.parseCommand(ListIngredientCommand.COMMAND_WORD) instanceof ListIngredientCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":250,"author":{"gitId":"zognin"},"content":"        assertTrue(parser.parseCommand(ListIngredientCommand.COMMAND_WORD + \" 3\") instanceof ListIngredientCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":253,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":254,"author":{"gitId":"Imranr2"},"content":"    public void parseCommand_listOrder() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":255,"author":{"gitId":"Imranr2"},"content":"        assertTrue(parser.parseCommand(ListOrderCommand.COMMAND_WORD) instanceof ListOrderCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":256,"author":{"gitId":"Imranr2"},"content":"        assertTrue(parser.parseCommand(ListOrderCommand.COMMAND_WORD + \" 3\") instanceof ListOrderCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":257,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":258,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":259,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":260,"author":{"gitId":"zognin"},"content":"    public void parseCommand_tab() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":261,"author":{"gitId":"zognin"},"content":"        TabCommand command \u003d (TabCommand) parser.parseCommand(","lastModifiedDate":"2021-10-06"},{"lineNumber":262,"author":{"gitId":"zognin"},"content":"                TabCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":263,"author":{"gitId":"zognin"},"content":"        assertEquals(new TabCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-10-06"},{"lineNumber":264,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":265,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":266,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"EuniceSim142"},"content":"    public void parseCommand_undoneOrder() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"EuniceSim142"},"content":"        UndoneOrderCommand command \u003d (UndoneOrderCommand) parser.parseCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"EuniceSim142"},"content":"                UndoneOrderCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(new UndoneOrderCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"EuniceSim142":31,"Imranr2":51,"zognin":98,"-":46,"Manoharan-Ajay-Anand":27,"sivayogasubramanian":30}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.Command;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":34,"sivayogasubramanian":3}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/client/AddClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.client;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.AddClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.ClientDescriptor;","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Email;","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.ClientDescriptorBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"public class AddClientCommandParserTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"    private AddClientCommandParser parser \u003d new AddClientCommandParser();","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor expectedClientDescriptor \u003d new ClientDescriptorBuilder(BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"                + ADDRESS_DESC_BOB, new AddClientCommand(expectedClientDescriptor));","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"                + ADDRESS_DESC_BOB, new AddClientCommand(expectedClientDescriptor));","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"                + ADDRESS_DESC_BOB, new AddClientCommand(expectedClientDescriptor));","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"                + ADDRESS_DESC_BOB, new AddClientCommand(expectedClientDescriptor));","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"                + ADDRESS_DESC_BOB, new AddClientCommand(expectedClientDescriptor));","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"                GenericString.getMessageConstraints(\"Name\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"EuniceSim142"},"content":"                GenericString.getMessageConstraints(\"Name\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"                PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"EuniceSim142"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"EuniceSim142":13,"zognin":9,"-":65,"sivayogasubramanian":29}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/client/DeleteClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.client;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.DeleteClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":" * outside of the DeleteClientCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":" * same path through the DeleteClientCommand, and therefore we test only one of them.","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"public class DeleteClientCommandParserTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    private DeleteClientCommandParser parser \u003d new DeleteClientCommandParser();","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    public void parse_validArgs_returnsDeleteClientCommand() {","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"        assertParseSuccess(parser, \"1\", new DeleteClientCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"                DeleteClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"EuniceSim142":7,"zognin":2,"-":18,"sivayogasubramanian":5}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/client/EditClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.client;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.EditClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.ClientDescriptor;","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Email;","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.ClientDescriptorBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"public class EditClientCommandParserTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditClientCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"    private EditClientCommandParser parser \u003d new EditClientCommandParser();","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"        assertParseFailure(parser, \"1\", EditClientCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC,","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"                GenericString.getMessageConstraints(\"Name\")); // invalid name","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"EuniceSim142"},"content":"                GenericString.getMessageConstraints(\"Name\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"                + ADDRESS_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor descriptor \u003d new ClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"EuniceSim142"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor descriptor \u003d new ClientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"EuniceSim142"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"zognin"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor descriptor \u003d new ClientDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"EuniceSim142"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"EuniceSim142"},"content":"        descriptor \u003d new ClientDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"EuniceSim142"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"EuniceSim142"},"content":"        descriptor \u003d new ClientDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":135,"author":{"gitId":"EuniceSim142"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"EuniceSim142"},"content":"        descriptor \u003d new ClientDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"EuniceSim142"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":147,"author":{"gitId":"zognin"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"zognin"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-09-21"},{"lineNumber":150,"author":{"gitId":"zognin"},"content":"                + EMAIL_DESC_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor descriptor \u003d new ClientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"zognin"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"EuniceSim142"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"zognin"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"EuniceSim142"},"content":"        ClientDescriptor descriptor \u003d new ClientDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"EuniceSim142"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"EuniceSim142"},"content":"        descriptor \u003d new ClientDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"EuniceSim142"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"EuniceSim142":26,"zognin":14,"-":107,"sivayogasubramanian":29}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/client/FindClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.client;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil.MESSAGE_INVALID_KEYWORD;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_ADDRESS_YISHUN_GEYLANG_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_EMAIL_ALICE_BOB_GMAIL_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_NAME_ALICE_BOB_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_PHONE_9427_3217_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.FindClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollection;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"public class FindClientCommandParserTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    private FindClientCommandParser parser \u003d new FindClientCommandParser();","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"                FindClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void parse_noKeywords_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseFailure(parser, \" \" + PREFIX_CLIENT_NAME + \" \" + PREFIX_CLIENT_ADDRESS","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"Imranr2"},"content":"                + \" \" + PREFIX_CLIENT_EMAIL + \" \" + PREFIX_CLIENT_PHONE, MESSAGE_INVALID_KEYWORD);","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"    public void parse_validArgs_returnsFindClientCommand() {","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cClient\u003e predicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(CLIENT_NAME_ALICE_BOB_PREDICATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(CLIENT_ADDRESS_YISHUN_GEYLANG_PREDICATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(CLIENT_EMAIL_ALICE_BOB_GMAIL_PREDICATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(CLIENT_PHONE_9427_3217_PREDICATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Imranr2"},"content":"        FindClientCommand expectedFindClientCommand \u003d new FindClientCommand(predicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_CLIENT_NAME + \"Alice Bob \"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                + PREFIX_CLIENT_ADDRESS + \"Yishun Geylang \" + PREFIX_CLIENT_PHONE + \"9427 3217 \"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                + PREFIX_CLIENT_EMAIL + \"alice@gmail.com bob@gmail.com\", expectedFindClientCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_CLIENT_NAME + \"Alice \\n \\t Bob \"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                + PREFIX_CLIENT_ADDRESS + \"Yishun  \\n \\t Geylang \" + PREFIX_CLIENT_PHONE + \"9427 \\n \\t 3217 \"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                + PREFIX_CLIENT_EMAIL + \"alice@gmail.com  \\n \\t bob@gmail.com\", expectedFindClientCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"EuniceSim142":20,"Imranr2":9,"zognin":5,"Manoharan-Ajay-Anand":16,"sivayogasubramanian":5}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/general/TabCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.general;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.general.TabCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"public class TabCommandParserTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    private TabCommandParser parser \u003d new TabCommandParser();","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    public void parse_validArgs_returnsTabCommand() {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"        assertParseSuccess(parser, \"1\", new TabCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"                TabCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    public void parse_negativeIndex_throwsParseException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, \"-1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"                TabCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"zognin":31}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/ingredient/AddIngredientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INGREDIENT_NAME_DESC_APPLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INGREDIENT_NAME_DESC_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_INGREDIENT_NAME_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_QUANTITY_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_UNIT_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.QUANTITY_DESC_APPLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.QUANTITY_DESC_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.UNIT_DESC_APPLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.UNIT_DESC_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_INGREDIENT_NAME_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_QUANTITY_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_UNIT_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.AddIngredientCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.IngredientDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"public class AddIngredientCommandParserTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"    private AddIngredientCommandParser parser \u003d new AddIngredientCommandParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"        IngredientDescriptor expectedIngredientDescriptor \u003d new IngredientDescriptorBuilder(BEEF).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + INGREDIENT_NAME_DESC_BEEF + QUANTITY_DESC_BEEF","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"                + UNIT_DESC_BEEF, new AddIngredientCommand(expectedIngredientDescriptor));","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"        // multiple ingredient names - last ingredient name accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"        assertParseSuccess(parser, INGREDIENT_NAME_DESC_APPLE + INGREDIENT_NAME_DESC_BEEF + QUANTITY_DESC_BEEF","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"                + UNIT_DESC_BEEF, new AddIngredientCommand(expectedIngredientDescriptor));","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"        // multiple quantities - last quantity accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"        assertParseSuccess(parser, INGREDIENT_NAME_DESC_BEEF + QUANTITY_DESC_APPLE + QUANTITY_DESC_BEEF","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"                + UNIT_DESC_BEEF, new AddIngredientCommand(expectedIngredientDescriptor));","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"        // multiple units - last unit accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"        assertParseSuccess(parser, INGREDIENT_NAME_DESC_BEEF + QUANTITY_DESC_BEEF + UNIT_DESC_APPLE","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"                + UNIT_DESC_BEEF, new AddIngredientCommand(expectedIngredientDescriptor));","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddIngredientCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"        // missing ingredient name prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"        assertParseFailure(parser, VALID_INGREDIENT_NAME_BEEF + QUANTITY_DESC_BEEF + UNIT_DESC_BEEF,","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"        // missing quantity prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"        assertParseFailure(parser, INGREDIENT_NAME_DESC_BEEF + VALID_QUANTITY_BEEF + UNIT_DESC_BEEF,","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"        // missing unit prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"        assertParseFailure(parser, INGREDIENT_NAME_DESC_BEEF + QUANTITY_DESC_BEEF + VALID_UNIT_BEEF,","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"        // all prefixes missing","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"        assertParseFailure(parser, VALID_INGREDIENT_NAME_BEEF + VALID_QUANTITY_BEEF + VALID_UNIT_BEEF,","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"        // invalid ingredient name","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"        assertParseFailure(parser, INVALID_INGREDIENT_NAME_DESC + QUANTITY_DESC_BEEF + UNIT_DESC_BEEF,","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"                GenericString.getMessageConstraints(\"Name\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"        // invalid quantity","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"EuniceSim142"},"content":"        assertParseFailure(parser, INGREDIENT_NAME_DESC_BEEF + INVALID_QUANTITY_DESC + UNIT_DESC_BEEF,","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"EuniceSim142"},"content":"                Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"EuniceSim142"},"content":"        // invalid unit","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"EuniceSim142"},"content":"        assertParseFailure(parser, INGREDIENT_NAME_DESC_BEEF + QUANTITY_DESC_BEEF + INVALID_UNIT_DESC,","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"EuniceSim142"},"content":"                GenericString.getMessageConstraints(\"Unit\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"EuniceSim142"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"EuniceSim142"},"content":"        assertParseFailure(parser, INVALID_INGREDIENT_NAME_DESC + INVALID_QUANTITY_DESC + UNIT_DESC_BEEF,","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"                GenericString.getMessageConstraints(\"Name\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"EuniceSim142"},"content":"                PREAMBLE_NON_EMPTY + INGREDIENT_NAME_DESC_BEEF + QUANTITY_DESC_BEEF + UNIT_DESC_BEEF,","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"EuniceSim142"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"EuniceSim142":98,"sivayogasubramanian":1}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/ingredient/DeleteIngredientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.DeleteIngredientCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":" * outside of the DeleteIngredientCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":" * same path through the DeleteIngredientCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"public class DeleteIngredientCommandParserTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    private DeleteIngredientCommandParser parser \u003d new DeleteIngredientCommandParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void parse_validArgs_returnsDeleteIngredientCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseSuccess(parser, \"1\", new DeleteIngredientCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                DeleteIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Manoharan-Ajay-Anand":32}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/ingredient/EditIngredientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INGREDIENT_NAME_DESC_APPLE;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INGREDIENT_NAME_DESC_BEEF;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_INGREDIENT_NAME_DESC;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_QUANTITY_DESC;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_UNIT_DESC;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.QUANTITY_DESC_APPLE;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.QUANTITY_DESC_BEEF;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.UNIT_DESC_APPLE;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.UNIT_DESC_BEEF;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_INGREDIENT_NAME_APPLE;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_INGREDIENT_NAME_BEEF;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_QUANTITY_APPLE;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_QUANTITY_BEEF;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_UNIT_APPLE;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_UNIT_BEEF;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.EditIngredientCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.IngredientDescriptor;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientDescriptorBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"public class EditIngredientCommandParserTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditIngredientCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    private EditIngredientCommandParser parser \u003d new EditIngredientCommandParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // no index specified","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseFailure(parser, VALID_INGREDIENT_NAME_BEEF, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // no field specified","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseFailure(parser, \"1\", EditIngredientCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // no index and no field specified","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // negative index","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseFailure(parser, \"-5\" + INGREDIENT_NAME_DESC_BEEF, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // zero index","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseFailure(parser, \"0\" + INGREDIENT_NAME_DESC_BEEF, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseFailure(parser, \"1\" + INVALID_INGREDIENT_NAME_DESC,","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                GenericString.getMessageConstraints(\"Name\")); // invalid name","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseFailure(parser, \"1\" + INVALID_QUANTITY_DESC,","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"                Quantity.MESSAGE_INTERNAL_CONSTRAINTS); // invalid quantity","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseFailure(parser, \"1\" + INVALID_UNIT_DESC,","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                GenericString.getMessageConstraints(\"Unit\")); // invalid unit","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // invalid quantity followed by valid unit","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_QUANTITY_DESC + UNIT_DESC_BEEF,","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"                Quantity.MESSAGE_INTERNAL_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // valid quantity followed by invalid quantity. The test case for invalid quantity followed by valid quantity","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"1\" + QUANTITY_DESC_BEEF + INVALID_QUANTITY_DESC,","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"                Quantity.MESSAGE_INTERNAL_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseFailure(parser, \"1\" + INVALID_INGREDIENT_NAME_DESC + INVALID_QUANTITY_DESC + UNIT_DESC_BEEF,","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                GenericString.getMessageConstraints(\"Name\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        String userInput \u003d targetIndex.getOneBased() + INGREDIENT_NAME_DESC_BEEF + QUANTITY_DESC_BEEF + UNIT_DESC_BEEF;","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        IngredientDescriptor descriptor \u003d new IngredientDescriptorBuilder()","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                .withIngredientName(VALID_INGREDIENT_NAME_BEEF).withQuantity(VALID_QUANTITY_BEEF)","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                .withUnit(VALID_UNIT_BEEF).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        EditIngredientCommand expectedCommand \u003d new EditIngredientCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        String userInput \u003d targetIndex.getOneBased() + QUANTITY_DESC_BEEF + UNIT_DESC_BEEF;","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        IngredientDescriptor descriptor \u003d new IngredientDescriptorBuilder().withQuantity(VALID_QUANTITY_BEEF)","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                .withUnit(VALID_UNIT_BEEF).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        EditIngredientCommand expectedCommand \u003d new EditIngredientCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // name","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        String userInput \u003d targetIndex.getOneBased() + INGREDIENT_NAME_DESC_BEEF;","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        IngredientDescriptor descriptor \u003d new IngredientDescriptorBuilder()","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                .withIngredientName(VALID_INGREDIENT_NAME_BEEF).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        EditIngredientCommand expectedCommand \u003d new EditIngredientCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // quantity","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        userInput \u003d targetIndex.getOneBased() + QUANTITY_DESC_BEEF;","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        descriptor \u003d new IngredientDescriptorBuilder().withQuantity(VALID_QUANTITY_BEEF).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        expectedCommand \u003d new EditIngredientCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // unit","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        userInput \u003d targetIndex.getOneBased() + UNIT_DESC_BEEF;","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        descriptor \u003d new IngredientDescriptorBuilder().withUnit(VALID_UNIT_BEEF).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        expectedCommand \u003d new EditIngredientCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        String userInput \u003d targetIndex.getOneBased() + INGREDIENT_NAME_DESC_BEEF + QUANTITY_DESC_BEEF + UNIT_DESC_BEEF","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                + INGREDIENT_NAME_DESC_APPLE + QUANTITY_DESC_APPLE + UNIT_DESC_APPLE;","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        IngredientDescriptor descriptor \u003d new IngredientDescriptorBuilder()","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                .withIngredientName(VALID_INGREDIENT_NAME_APPLE).withQuantity(VALID_QUANTITY_APPLE)","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                .withUnit(VALID_UNIT_APPLE).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        EditIngredientCommand expectedCommand \u003d new EditIngredientCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // no other valid values specified","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_QUANTITY_DESC + QUANTITY_DESC_BEEF;","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        IngredientDescriptor descriptor \u003d new IngredientDescriptorBuilder().withQuantity(VALID_QUANTITY_BEEF).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        EditIngredientCommand expectedCommand \u003d new EditIngredientCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        // other valid values specified","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        userInput \u003d targetIndex.getOneBased() + INGREDIENT_NAME_DESC_BEEF + INVALID_QUANTITY_DESC + UNIT_DESC_BEEF","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"            + QUANTITY_DESC_BEEF;","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        descriptor \u003d new IngredientDescriptorBuilder().withIngredientName(VALID_INGREDIENT_NAME_BEEF)","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                .withQuantity(VALID_QUANTITY_BEEF).withUnit(VALID_UNIT_BEEF).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        expectedCommand \u003d new EditIngredientCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Manoharan-Ajay-Anand":164,"sivayogasubramanian":5}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/ingredient/FindIngredientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.ingredient;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INGREDIENT_NAME_DESC_BEEF;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_QUANTITY_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_QUANTITY_FROM_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_QUANTITY_TO_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.QUANTITY_DESC_BEEF;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.UNIT_DESC_BEEF;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY_FROM;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY_TO;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_UNIT;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil.MESSAGE_INVALID_KEYWORD;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.INGREDIENT_NAME_AVOCADO_BUTTER_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.INGREDIENT_QUANTITY_5_550_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.INGREDIENT_QUANTITY_5_TO_600_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.INGREDIENT_UNIT_WHOLE_GRAMS_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.FindIngredientCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollection;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"public class FindIngredientCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    private FindIngredientCommandParser parser \u003d new FindIngredientCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"                FindIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    public void parse_noKeywords_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        // no keywords at all","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"        // prefixes with no keyword","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, \" \" + PREFIX_INGREDIENT_NAME + \" \" + PREFIX_INGREDIENT_QUANTITY","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"                + \" \" + PREFIX_INGREDIENT_UNIT, MESSAGE_INVALID_KEYWORD);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"    public void parse_validArgs_returnsFindIngredientCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        PredicateCollection\u003cIngredient\u003e predicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        predicateCollection.addPredicate(INGREDIENT_NAME_AVOCADO_BUTTER_PREDICATE);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"        predicateCollection.addPredicate(INGREDIENT_QUANTITY_5_550_PREDICATE);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"        predicateCollection.addPredicate(INGREDIENT_QUANTITY_5_TO_600_PREDICATE);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"        predicateCollection.addPredicate(INGREDIENT_UNIT_WHOLE_GRAMS_PREDICATE);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        FindIngredientCommand expectedFindIngredientCommand \u003d new FindIngredientCommand(predicateCollection);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        assertParseSuccess(parser, \" \"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"                + PREFIX_INGREDIENT_NAME + \"Avocado Butter \"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"                + PREFIX_INGREDIENT_QUANTITY + \"5 550 \"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"                + PREFIX_INGREDIENT_QUANTITY_FROM + \"5 \" + PREFIX_INGREDIENT_QUANTITY_TO + \"600 \"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"                + PREFIX_INGREDIENT_UNIT + \"whole grams\", expectedFindIngredientCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"    public void parse_invalidArgs_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        // invalid quantity","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, INVALID_QUANTITY_DESC, Quantity.MESSAGE_INTERNAL_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, INVALID_QUANTITY_FROM_DESC, Quantity.MESSAGE_INTERNAL_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, INVALID_QUANTITY_TO_DESC, Quantity.MESSAGE_INTERNAL_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, INVALID_QUANTITY_DESC + PREFIX_INGREDIENT_UNIT,","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"                Quantity.MESSAGE_INTERNAL_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"                PREAMBLE_NON_EMPTY + INGREDIENT_NAME_DESC_BEEF + QUANTITY_DESC_BEEF + UNIT_DESC_BEEF,","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"zognin":83}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/order/AddOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.order;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.ADDRESS_DESC_IMRAN;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DEADLINE_DESC_DECEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DEADLINE_DESC_MARCH;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INDEX_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INDEX_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_DEADLINE_DESC;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_INDEX_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_ORDER_PRICE_DESC;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_ORDER_QUANTITY_DESC;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_RECIPE_INGREDIENT_LIST_DESC;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_RECIPE_NAME_DESC;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.NAME_DESC_IMRAN;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.ORDER_PRICE_DESC_1;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.ORDER_PRICE_DESC_2;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.ORDER_QUANTITY_DESC_1;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.ORDER_QUANTITY_DESC_2;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.PHONE_DESC_IMRAN;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.RECIPE_INGREDIENT_LIST_DESC_1;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.RECIPE_INGREDIENT_LIST_DESC_2;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.RECIPE_NAME_DESC_CHICKEN_RICE;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.RECIPE_NAME_DESC_LAKSA;","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ORDER_QUANTITY_1;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_IMRAN;","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.OrderDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Deadline;","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Price;","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.RecipeIngredientList;","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"class AddOrderCommandParserTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"    private AddOrderCommandParser parser \u003d new AddOrderCommandParser();","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"Imranr2"},"content":"        OrderDescriptor expectedOrderDescriptorWithoutClientIndex \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Imranr2"},"content":"                new OrderDescriptorBuilder(ORDER_FOR_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor expectedOrderDescriptorWithoutClientIndexAndIngredientList \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"                new OrderDescriptorBuilder(ORDER_FOR_AMY).withRecipeIngredients(new ArrayList\u003c\u003e()).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor expectedOrderDescriptorWithoutClientIndexAndOrderQuantity \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"                new OrderDescriptorBuilder(ORDER_FOR_IMRAN).withQuantity(VALID_ORDER_QUANTITY_1).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"Imranr2"},"content":"        OrderDescriptor expectedOrderDescriptorWithClientIndexAndParams \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Imranr2"},"content":"                new OrderDescriptorBuilder(ORDER_FOR_BOB).withClientIndex(INDEX_FIRST).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"Imranr2"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Without Client Index \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + PHONE_DESC_BOB + NAME_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"Imranr2"},"content":"                new AddOrderCommand(expectedOrderDescriptorWithoutClientIndex));","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"Imranr2"},"content":"        // multiple names without client index - last name accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"Imranr2"},"content":"                new AddOrderCommand(expectedOrderDescriptorWithoutClientIndex));","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Imranr2"},"content":"        // multiple phones without client index - last phone accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"Imranr2"},"content":"                new AddOrderCommand(expectedOrderDescriptorWithoutClientIndex));","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"Imranr2"},"content":"        // multiple addresses without client index - last address accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"sivayogasubramanian"},"content":"                new AddOrderCommand(expectedOrderDescriptorWithoutClientIndex));","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"        // multiple recipe name without client index - last recipe name accepted","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_CHICKEN_RICE + RECIPE_NAME_DESC_LAKSA","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"sivayogasubramanian"},"content":"                new AddOrderCommand(expectedOrderDescriptorWithoutClientIndex));","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"        // multiple recipe ingredient list without client index - last list accepted","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_1","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"Imranr2"},"content":"                new AddOrderCommand(expectedOrderDescriptorWithoutClientIndex));","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"        // multiple order price without client index - last order price accepted","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_1","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"                        + ORDER_PRICE_DESC_2 + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"                new AddOrderCommand(expectedOrderDescriptorWithoutClientIndex));","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"sivayogasubramanian"},"content":"        // multiple order deadline without client index - last deadline accepted","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_1","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"sivayogasubramanian"},"content":"                        + ORDER_PRICE_DESC_2 + DEADLINE_DESC_DECEMBER + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"sivayogasubramanian"},"content":"                new AddOrderCommand(expectedOrderDescriptorWithoutClientIndex));","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"sivayogasubramanian"},"content":"        // multiple order quantity without client index - last quantity accepted","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_1","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"sivayogasubramanian"},"content":"                        + ORDER_PRICE_DESC_2 + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_1 + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"sivayogasubramanian"},"content":"                new AddOrderCommand(expectedOrderDescriptorWithoutClientIndex));","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"zognin"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Without Client Index and ingredient list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"zognin"},"content":"        assertParseSuccess(parser, PHONE_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"zognin"},"content":"                        + RECIPE_NAME_DESC_CHICKEN_RICE + ORDER_PRICE_DESC_1 + DEADLINE_DESC_DECEMBER","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"zognin"},"content":"                        + ORDER_QUANTITY_DESC_1,","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"zognin"},"content":"                new AddOrderCommand(expectedOrderDescriptorWithoutClientIndexAndIngredientList));","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"zognin"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Without Client Index and order quantity \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"zognin"},"content":"        assertParseSuccess(parser, PHONE_DESC_IMRAN + NAME_DESC_IMRAN + ADDRESS_DESC_IMRAN","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"zognin"},"content":"                        + RECIPE_NAME_DESC_CHICKEN_RICE + RECIPE_INGREDIENT_LIST_DESC_1 + ORDER_PRICE_DESC_1","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"zognin"},"content":"                        + DEADLINE_DESC_DECEMBER,","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"zognin"},"content":"                new AddOrderCommand(expectedOrderDescriptorWithoutClientIndexAndOrderQuantity));","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"sivayogasubramanian"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d With Client Index \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"Imranr2"},"content":"        // multiple client index with client details - last index accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"Imranr2"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"sivayogasubramanian"},"content":"                INDEX_DESC_AMY + INDEX_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"Imranr2"},"content":"                new AddOrderCommand(expectedOrderDescriptorWithClientIndexAndParams));","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parse_compulsoryFieldsMissing_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"sivayogasubramanian"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":163,"author":{"gitId":"sivayogasubramanian"},"content":"        // missing name","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, PHONE_DESC_BOB + ADDRESS_DESC_BOB + RECIPE_NAME_DESC_LAKSA","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"Imranr2"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"sivayogasubramanian"},"content":"        // missing phone","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ADDRESS_DESC_BOB + RECIPE_NAME_DESC_LAKSA","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"Imranr2"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"sivayogasubramanian"},"content":"        // missing address","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"Imranr2"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":181,"author":{"gitId":"sivayogasubramanian"},"content":"        // missing recipe name","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"Imranr2"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"sivayogasubramanian"},"content":"        // missing price","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"sivayogasubramanian"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"sivayogasubramanian"},"content":"        // missing deadline","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"sivayogasubramanian"},"content":"                        + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"sivayogasubramanian"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"sivayogasubramanian"},"content":"        // all compulsory fields missing","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":203,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":204,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":205,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-05"},{"lineNumber":206,"author":{"gitId":"Imranr2"},"content":"        // invalid index","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, INVALID_INDEX_DESC + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"sivayogasubramanian"},"content":"                        + ORDER_PRICE_DESC_2 + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"sivayogasubramanian"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"Imranr2"},"content":"        // invalid name","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + ADDRESS_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"EuniceSim142"},"content":"                GenericString.getMessageConstraints(\"Name\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":216,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":217,"author":{"gitId":"Imranr2"},"content":"        // invalid phone","lastModifiedDate":"2021-10-07"},{"lineNumber":218,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ADDRESS_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"Imranr2"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":222,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":223,"author":{"gitId":"Imranr2"},"content":"        // invalid address","lastModifiedDate":"2021-10-07"},{"lineNumber":224,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_ADDRESS_DESC + PHONE_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":226,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"Imranr2"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":228,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":229,"author":{"gitId":"sivayogasubramanian"},"content":"        // invalid recipe name","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ADDRESS_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":231,"author":{"gitId":"sivayogasubramanian"},"content":"                        + INVALID_RECIPE_NAME_DESC + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":232,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":233,"author":{"gitId":"sivayogasubramanian"},"content":"                GenericString.getMessageConstraints(\"Recipe Name\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":234,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":235,"author":{"gitId":"sivayogasubramanian"},"content":"        // invalid recipe ingredients","lastModifiedDate":"2021-10-10"},{"lineNumber":236,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ADDRESS_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":237,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + INVALID_RECIPE_INGREDIENT_LIST_DESC + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":238,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":239,"author":{"gitId":"sivayogasubramanian"},"content":"                RecipeIngredientList.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":240,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":241,"author":{"gitId":"sivayogasubramanian"},"content":"        // invalid order price","lastModifiedDate":"2021-10-10"},{"lineNumber":242,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ADDRESS_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":243,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2 + INVALID_ORDER_PRICE_DESC","lastModifiedDate":"2021-10-10"},{"lineNumber":244,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":245,"author":{"gitId":"sivayogasubramanian"},"content":"                Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":246,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":247,"author":{"gitId":"sivayogasubramanian"},"content":"        // invalid order deadline","lastModifiedDate":"2021-10-10"},{"lineNumber":248,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ADDRESS_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":249,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":250,"author":{"gitId":"sivayogasubramanian"},"content":"                        + INVALID_DEADLINE_DESC + ORDER_QUANTITY_DESC_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":251,"author":{"gitId":"sivayogasubramanian"},"content":"                Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":252,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":253,"author":{"gitId":"sivayogasubramanian"},"content":"        // invalid order quantity","lastModifiedDate":"2021-10-10"},{"lineNumber":254,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ADDRESS_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":255,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":256,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + INVALID_ORDER_QUANTITY_DESC,","lastModifiedDate":"2021-10-10"},{"lineNumber":257,"author":{"gitId":"sivayogasubramanian"},"content":"                Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":258,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":259,"author":{"gitId":"sivayogasubramanian"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-05"},{"lineNumber":260,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + PHONE_DESC_BOB + NAME_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":261,"author":{"gitId":"sivayogasubramanian"},"content":"                        + RECIPE_NAME_DESC_LAKSA + RECIPE_INGREDIENT_LIST_DESC_2 + ORDER_PRICE_DESC_2","lastModifiedDate":"2021-10-10"},{"lineNumber":262,"author":{"gitId":"sivayogasubramanian"},"content":"                        + DEADLINE_DESC_MARCH + ORDER_QUANTITY_DESC_1,","lastModifiedDate":"2021-10-10"},{"lineNumber":263,"author":{"gitId":"sivayogasubramanian"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":264,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":265,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"EuniceSim142":2,"Imranr2":49,"zognin":17,"sivayogasubramanian":197}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/order/AddOrderIngredientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INGREDIENT_NAME_DESC_APPLE;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INGREDIENT_NAME_DESC_BEEF;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_INDEX_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_INGREDIENT_NAME_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_QUANTITY_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_UNIT_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.QUANTITY_DESC_APPLE;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.QUANTITY_DESC_BEEF;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.UNIT_DESC_APPLE;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.UNIT_DESC_BEEF;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_INGREDIENT_NAME_BEEF;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_QUANTITY_BEEF;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_UNIT_BEEF;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.BEEF;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.AddOrderIngredientCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.IngredientDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientDescriptorBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"public class AddOrderIngredientCommandParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    private AddOrderIngredientCommandParser parser \u003d new AddOrderIngredientCommandParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        IngredientDescriptor expectedIngredientDescriptor \u003d new IngredientDescriptorBuilder(BEEF).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        String targetIndexDesc \u003d targetIndex.getOneBased() + \" \";","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        assertParseSuccess(parser, targetIndexDesc + INGREDIENT_NAME_DESC_BEEF + QUANTITY_DESC_BEEF","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"                + UNIT_DESC_BEEF, new AddOrderIngredientCommand(targetIndex, expectedIngredientDescriptor));","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"        // multiple ingredient names - last ingredient name accepted","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        assertParseSuccess(parser, targetIndexDesc","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"                + INGREDIENT_NAME_DESC_APPLE + INGREDIENT_NAME_DESC_BEEF + QUANTITY_DESC_BEEF","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"                + UNIT_DESC_BEEF, new AddOrderIngredientCommand(targetIndex, expectedIngredientDescriptor));","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        // multiple quantities - last quantity accepted","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        assertParseSuccess(parser, targetIndexDesc","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"                + INGREDIENT_NAME_DESC_BEEF + QUANTITY_DESC_APPLE + QUANTITY_DESC_BEEF","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"                + UNIT_DESC_BEEF, new AddOrderIngredientCommand(targetIndex, expectedIngredientDescriptor));","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        // multiple units - last unit accepted","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"        assertParseSuccess(parser, targetIndexDesc","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"                + INGREDIENT_NAME_DESC_BEEF + QUANTITY_DESC_BEEF + UNIT_DESC_APPLE","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"                + UNIT_DESC_BEEF, new AddOrderIngredientCommand(targetIndex, expectedIngredientDescriptor));","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"        String targetIndexDesc \u003d INDEX_FIRST.getOneBased() + \" \";","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderIngredientCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"        // missing index","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, VALID_INGREDIENT_NAME_BEEF + QUANTITY_DESC_BEEF + UNIT_DESC_BEEF,","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        // missing ingredient name prefix","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, targetIndexDesc + VALID_INGREDIENT_NAME_BEEF + QUANTITY_DESC_BEEF + UNIT_DESC_BEEF,","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"        // missing quantity prefix","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, targetIndexDesc + INGREDIENT_NAME_DESC_BEEF + VALID_QUANTITY_BEEF + UNIT_DESC_BEEF,","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"        // missing unit prefix","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, targetIndexDesc + INGREDIENT_NAME_DESC_BEEF + QUANTITY_DESC_BEEF + VALID_UNIT_BEEF,","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"        // all prefixes missing","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, targetIndexDesc + VALID_INGREDIENT_NAME_BEEF + VALID_QUANTITY_BEEF + VALID_UNIT_BEEF,","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"        // all arguments missing","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, VALID_INGREDIENT_NAME_BEEF + VALID_QUANTITY_BEEF + VALID_UNIT_BEEF,","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"zognin"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"zognin"},"content":"        String targetIndexDesc \u003d INDEX_FIRST.getOneBased() + \" \";","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"zognin"},"content":"        // invalid ingredient index","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, INVALID_INDEX_DESC","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"zognin"},"content":"                + INGREDIENT_NAME_DESC_BEEF + QUANTITY_DESC_BEEF + UNIT_DESC_BEEF,","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"zognin"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddOrderIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"zognin"},"content":"        // invalid ingredient name","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, targetIndexDesc + INVALID_INGREDIENT_NAME_DESC + QUANTITY_DESC_BEEF + UNIT_DESC_BEEF,","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"zognin"},"content":"                GenericString.getMessageConstraints(\"Name\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"zognin"},"content":"        // invalid quantity","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, targetIndexDesc + INGREDIENT_NAME_DESC_BEEF + INVALID_QUANTITY_DESC + UNIT_DESC_BEEF,","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"zognin"},"content":"                Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"zognin"},"content":"        // invalid unit","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, targetIndexDesc + INGREDIENT_NAME_DESC_BEEF + QUANTITY_DESC_BEEF + INVALID_UNIT_DESC,","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"zognin"},"content":"                GenericString.getMessageConstraints(\"Unit\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"zognin"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, targetIndexDesc","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"zognin"},"content":"                        + INVALID_INGREDIENT_NAME_DESC + INVALID_QUANTITY_DESC + UNIT_DESC_BEEF,","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"zognin"},"content":"                GenericString.getMessageConstraints(\"Name\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"zognin":117}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/order/DeleteOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Imranr2"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.order;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.DeleteOrderCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Imranr2"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":" * outside of the DeleteOrderCommandParser code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":" * same path through the DeleteOrderCommandParser, and therefore we test only one of them.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Imranr2"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":"public class DeleteOrderCommandParserTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"    private DeleteOrderCommandParser parser \u003d new DeleteOrderCommandParser();","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Imranr2"},"content":"    public void parse_validArgs_returnsDeleteOrderCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Imranr2"},"content":"        assertParseSuccess(parser, \"1\", new DeleteOrderCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Imranr2"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"                DeleteOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Imranr2"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Imranr2":32}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/order/DeleteOrderIngredientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INGREDIENT_INDEX_DESC_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_INGREDIENT_INDEX_DESC_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.DeleteOrderIngredientCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"public class DeleteOrderIngredientCommandParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    private DeleteOrderIngredientCommandParser parser \u003d new DeleteOrderIngredientCommandParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    public void parse_validArgs_returnsDeleteOrderIngredientCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"        assertParseSuccess(parser, \"1 \" + INGREDIENT_INDEX_DESC_FIRST,","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"                new DeleteOrderIngredientCommand(INDEX_FIRST, INDEX_FIRST));","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        // Invalid order index","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, \"a \" + INGREDIENT_INDEX_DESC_FIRST,","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteOrderIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, \"-100\" + INGREDIENT_INDEX_DESC_FIRST,","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteOrderIngredientCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"        // Invalid ingredient index","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_INGREDIENT_INDEX_DESC_FIRST, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        // Both args invalid -\u003e invalid ingredient index message shown","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        assertParseFailure(parser, \"-1 \" + INVALID_INGREDIENT_INDEX_DESC_FIRST, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"zognin":39}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/order/DoneOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.DoneOrderCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"public class DoneOrderCommandParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"    private DoneOrderCommandParser parser \u003d new DoneOrderCommandParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    public void parse_validArgs_returnsDoneOrderCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"        assertParseSuccess(parser, \"1\", new DoneOrderCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"                DoneOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EuniceSim142":25}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/order/EditOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DEADLINE_DESC_DECEMBER;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.DEADLINE_DESC_MARCH;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_DEADLINE_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_ORDER_PRICE_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_ORDER_QUANTITY_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.INVALID_RECIPE_NAME_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.ORDER_PRICE_DESC_1;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.ORDER_PRICE_DESC_2;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.ORDER_QUANTITY_DESC_1;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.RECIPE_NAME_DESC_LAKSA;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_DEADLINE_DECEMBER;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_DEADLINE_MARCH;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ORDER_QUANTITY_1;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ORDER_QUANTITY_2;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PRICE_1;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_RECIPE_NAME_LAKSA;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.EditOrderCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.OrderDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Deadline;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Price;","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderDescriptorBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"class EditOrderCommandParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditOrderCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"    private EditOrderCommandParser parser \u003d new EditOrderCommandParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"        // no index specified","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"        // no field specified","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"1\", EditOrderCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"        // no index and no field specified","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"        // negative index","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"-5\" + RECIPE_NAME_DESC_LAKSA, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"        // zero index","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"0\" + RECIPE_NAME_DESC_LAKSA, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC,","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"                GenericString.getMessageConstraints(\"Name\")); // invalid client name","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC,","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"                Phone.MESSAGE_CONSTRAINTS); // invalid client phone","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"                Address.MESSAGE_CONSTRAINTS); // invalid client address","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_RECIPE_NAME_DESC,","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"sivayogasubramanian"},"content":"                GenericString.getMessageConstraints(\"Recipe Name\")); // invalid client address","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_RECIPE_NAME_DESC,","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"                GenericString.getMessageConstraints(\"Recipe Name\")); // invalid recipe name","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ORDER_PRICE_DESC,","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"sivayogasubramanian"},"content":"                Price.MESSAGE_CONSTRAINTS); // invalid order price","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DEADLINE_DESC,","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"sivayogasubramanian"},"content":"                Deadline.MESSAGE_CONSTRAINTS); // invalid order deadline","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ORDER_QUANTITY_DESC,","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"sivayogasubramanian"},"content":"                Quantity.MESSAGE_CONSTRAINTS); // invalid order quantity","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"sivayogasubramanian"},"content":"        // invalid phone followed by valid address","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + ADDRESS_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"sivayogasubramanian"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"sivayogasubramanian"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_ADDRESS_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"sivayogasubramanian"},"content":"                GenericString.getMessageConstraints(\"Name\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"                + RECIPE_NAME_DESC_LAKSA + ORDER_PRICE_DESC_1 + DEADLINE_DESC_DECEMBER + ORDER_QUANTITY_DESC_1;","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor descriptor \u003d new OrderDescriptorBuilder().withClientName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"sivayogasubramanian"},"content":"                .withClientPhone(VALID_PHONE_BOB).withClientAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"sivayogasubramanian"},"content":"                .withRecipeName(VALID_RECIPE_NAME_LAKSA).withPrice(VALID_PRICE_1)","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"sivayogasubramanian"},"content":"                .withDeadline(VALID_DEADLINE_DECEMBER).withQuantity(VALID_ORDER_QUANTITY_1).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"sivayogasubramanian"},"content":"        EditOrderCommand expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"sivayogasubramanian"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"sivayogasubramanian"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor descriptor \u003d new OrderDescriptorBuilder().withClientPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"sivayogasubramanian"},"content":"                .withClientAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"sivayogasubramanian"},"content":"        EditOrderCommand expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"sivayogasubramanian"},"content":"        // client name","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"sivayogasubramanian"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"sivayogasubramanian"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor descriptor \u003d new OrderDescriptorBuilder().withClientName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"sivayogasubramanian"},"content":"        EditOrderCommand expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"sivayogasubramanian"},"content":"        // client phone","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"sivayogasubramanian"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor \u003d new OrderDescriptorBuilder().withClientPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"sivayogasubramanian"},"content":"        expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"sivayogasubramanian"},"content":"        // client address","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"sivayogasubramanian"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor \u003d new OrderDescriptorBuilder().withClientAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"sivayogasubramanian"},"content":"        expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"sivayogasubramanian"},"content":"        // recipe name","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"sivayogasubramanian"},"content":"        userInput \u003d targetIndex.getOneBased() + RECIPE_NAME_DESC_LAKSA;","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor \u003d new OrderDescriptorBuilder().withRecipeName(VALID_RECIPE_NAME_LAKSA).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"sivayogasubramanian"},"content":"        expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"sivayogasubramanian"},"content":"        // order price","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"sivayogasubramanian"},"content":"        userInput \u003d targetIndex.getOneBased() + ORDER_PRICE_DESC_2;","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor \u003d new OrderDescriptorBuilder().withPrice(VALID_ORDER_QUANTITY_2).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"sivayogasubramanian"},"content":"        expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"sivayogasubramanian"},"content":"        // order deadline","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"sivayogasubramanian"},"content":"        userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_MARCH;","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor \u003d new OrderDescriptorBuilder().withDeadline(VALID_DEADLINE_MARCH).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"sivayogasubramanian"},"content":"        expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"sivayogasubramanian"},"content":"        // order quantity","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"sivayogasubramanian"},"content":"        userInput \u003d targetIndex.getOneBased() + ORDER_QUANTITY_DESC_1;","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor \u003d new OrderDescriptorBuilder().withQuantity(VALID_ORDER_QUANTITY_1).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"sivayogasubramanian"},"content":"        expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"sivayogasubramanian"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"sivayogasubramanian"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"sivayogasubramanian"},"content":"                + ADDRESS_DESC_AMY + PHONE_DESC_BOB + ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor descriptor \u003d new OrderDescriptorBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"sivayogasubramanian"},"content":"                .withClientAddress(VALID_ADDRESS_BOB).withClientPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"sivayogasubramanian"},"content":"        EditOrderCommand expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"sivayogasubramanian"},"content":"        // no other valid values specified","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"sivayogasubramanian"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"sivayogasubramanian"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"sivayogasubramanian"},"content":"        OrderDescriptor descriptor \u003d new OrderDescriptorBuilder().withClientPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"sivayogasubramanian"},"content":"        EditOrderCommand expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"sivayogasubramanian"},"content":"        // other valid values specified","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"sivayogasubramanian"},"content":"        userInput \u003d targetIndex.getOneBased() + RECIPE_NAME_DESC_LAKSA + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"sivayogasubramanian"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor \u003d new OrderDescriptorBuilder().withClientPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"sivayogasubramanian"},"content":"                .withClientAddress(VALID_ADDRESS_BOB).withRecipeName(VALID_RECIPE_NAME_LAKSA).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"sivayogasubramanian"},"content":"        expectedCommand \u003d new EditOrderCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"sivayogasubramanian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"sivayogasubramanian":219}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/order/FindOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Imranr2"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.order;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil.MESSAGE_INVALID_KEYWORD;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_ADDRESS_EUNOS_BISHAN_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_NAME_CAROL_DAVID_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollectionTest.CLIENT_PHONE_9110_3216_PREDICATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.FindOrderCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.PredicateCollection;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"public class FindOrderCommandParserTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":"    private FindOrderCommandParser parser \u003d new FindOrderCommandParser();","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Imranr2"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Imranr2"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"                FindOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"    public void parse_noKeywords_throwsParseException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Imranr2"},"content":"        assertParseFailure(parser, \" \" + PREFIX_CLIENT_NAME + \" \" + PREFIX_CLIENT_ADDRESS","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Imranr2"},"content":"                        + \" \" + PREFIX_CLIENT_PHONE, MESSAGE_INVALID_KEYWORD);","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Imranr2"},"content":"    public void parse_validArgs_returnsFindOrderCommand() {","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cOrder\u003e predicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(CLIENT_NAME_CAROL_DAVID_PREDICATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(CLIENT_ADDRESS_EUNOS_BISHAN_PREDICATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Imranr2"},"content":"        predicateCollection.addPredicate(CLIENT_PHONE_9110_3216_PREDICATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Imranr2"},"content":"        FindOrderCommand expectedFindOrderCommand \u003d new FindOrderCommand(predicateCollection);","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_CLIENT_NAME + \"Carol David \"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Imranr2"},"content":"                + PREFIX_CLIENT_ADDRESS + \"Eunos Bishan \"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Imranr2"},"content":"                + PREFIX_CLIENT_PHONE + \"9110 3216 \", expectedFindOrderCommand);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Imranr2"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_CLIENT_NAME + \"Carol \\n \\t David \"","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Imranr2"},"content":"                + PREFIX_CLIENT_ADDRESS + \"Eunos  \\n \\t Bishan \"","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Imranr2"},"content":"                + PREFIX_CLIENT_PHONE + \"9110 \\n \\t 3216 \", expectedFindOrderCommand);","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Imranr2"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Imranr2":48,"zognin":4}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/order/UndoneOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.UndoneOrderCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"public class UndoneOrderCommandParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"    private UndoneOrderCommandParser parser \u003d new UndoneOrderCommandParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    public void parse_validArgs_returnsUndoneOrderCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"        assertParseSuccess(parser, \"1\", new UndoneOrderCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"                UndoneOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EuniceSim142":25}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/util/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"        String argsString \u003d \"  some random string /n name with leading and trailing spaces \";","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"zognin":1,"-":146,"sivayogasubramanian":1}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/logic/parser/util/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.logic.parser.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Email;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.CompletionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Deadline;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Price;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.RecipeIngredientList;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    private static final String INVALID_COMPLETION_STATUS \u003d \"y\";","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String INVALID_DEADLINE \u003d \"12-12-2019\";","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String INVALID_PRICE \u003d \"$4.00\";","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String INVALID_RECIPE_INGREDIENTS \u003d \"Rice-one-cup\";","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    private static final String INVALID_INTERNAL_QUANTITY \u003d \"-3\";","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"    private static final String INVALID_QUANTITY \u003d \"-3\";","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"    private static final String INVALID_GENERIC_STRING \u003d \"R@chel\";","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    private static final String INVALID_KEYWORD \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"    private static final String VALID_COMPLETION_STATUS_ONE \u003d \"yes\";","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"    private static final String VALID_COMPLETION_STATUS_TWO \u003d \"yEs\";","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String VALID_DEADLINE \u003d \"12-12-2025 1500\";","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String VALID_PRICE \u003d \"4.00\";","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String VALID_RECIPE_INGREDIENTS \u003d \"Rice-1-cup, Chicken-1-whole\";","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    private static final String VALID_QUANTITY_1 \u003d \"30\";","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"    private static final String VALID_QUANTITY_2 \u003d \"10\";","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"    private static final String VALID_GENERIC_STRING \u003d \"Rachel Walker\";","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"    private static final String VALID_KEYWORD_1 \u003d \"Hello\";","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"    private static final String VALID_KEYWORD_2 \u003d \"Goodbye\";","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"    // Client parsers","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"EuniceSim142"},"content":"    // Order parsers:","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"EuniceSim142"},"content":"    public void parseCompletionStatus_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCompletionStatus(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"EuniceSim142"},"content":"    public void parseCompletionStatus_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCompletionStatus(INVALID_COMPLETION_STATUS));","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"EuniceSim142"},"content":"    public void parseCompletionStatus_validValueWithoutWhitespace_returnsCompletionStatus() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"EuniceSim142"},"content":"        CompletionStatus expectedCompletionStatus \u003d new CompletionStatus(VALID_COMPLETION_STATUS_ONE);","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(expectedCompletionStatus, ParserUtil.parseCompletionStatus(VALID_COMPLETION_STATUS_ONE));","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"EuniceSim142"},"content":"    public void parseCompletionStatus_validValueCapitalisedLetters_returnsCompletionStatus() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"EuniceSim142"},"content":"        CompletionStatus expectedCompletionStatus \u003d new CompletionStatus(VALID_COMPLETION_STATUS_TWO);","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(expectedCompletionStatus, ParserUtil.parseCompletionStatus(VALID_COMPLETION_STATUS_TWO));","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"EuniceSim142"},"content":"    public void parseCompletionStatus_validValueWithWhitespace_returnsTrimmedCompletionStatus() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"EuniceSim142"},"content":"        String completionStatusWithWhitespace \u003d WHITESPACE + VALID_COMPLETION_STATUS_ONE + WHITESPACE;","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"EuniceSim142"},"content":"        CompletionStatus expectedCompletionStatus \u003d new CompletionStatus(VALID_COMPLETION_STATUS_ONE);","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(expectedCompletionStatus, ParserUtil.parseCompletionStatus(completionStatusWithWhitespace));","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parseDeadline_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDeadline(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parseDeadline_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDeadline(INVALID_DEADLINE));","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parseDeadline_validValueWithoutWhitespace_returnsDeadline() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"sivayogasubramanian"},"content":"        Deadline expectedDeadline \u003d new Deadline(VALID_DEADLINE);","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(expectedDeadline, ParserUtil.parseDeadline(VALID_DEADLINE));","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parseDeadline_validValueWithWhitespace_returnsDeadline() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"sivayogasubramanian"},"content":"        String deadlineWithWhitespace \u003d WHITESPACE + VALID_DEADLINE + WHITESPACE;","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"sivayogasubramanian"},"content":"        Deadline expectedDeadline \u003d new Deadline(VALID_DEADLINE);","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(expectedDeadline, ParserUtil.parseDeadline(deadlineWithWhitespace));","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parsePrice_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePrice(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parsePrice_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePrice(INVALID_PRICE));","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parsePrice_validValueWithoutWhitespace_returnsPrice() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"sivayogasubramanian"},"content":"        Price expectedPrice \u003d new Price(VALID_PRICE);","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(expectedPrice, ParserUtil.parsePrice(VALID_PRICE));","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parsePrice_validValueWithWhitespace_returnsPrice() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"sivayogasubramanian"},"content":"        String priceWithWhitespace \u003d WHITESPACE + VALID_PRICE + WHITESPACE;","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"sivayogasubramanian"},"content":"        Price expectedPrice \u003d new Price(VALID_PRICE);","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(expectedPrice, ParserUtil.parsePrice(priceWithWhitespace));","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parseRecipeIngredients_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRecipeIngredients(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parseRecipeIngredients_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRecipeIngredients(INVALID_RECIPE_INGREDIENTS));","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parseRecipeIngredients_validValueWithoutWhitespace_returnsRecipeIngredients() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient rice \u003d new Ingredient(new GenericString(\"Rice\"), new Quantity(\"1\"), new GenericString(\"cup\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient chicken \u003d new Ingredient(","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"sivayogasubramanian"},"content":"                new GenericString(\"Chicken\"), new Quantity(\"1\"), new GenericString(\"whole\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"sivayogasubramanian"},"content":"        RecipeIngredientList expectedList \u003d new RecipeIngredientList(List.of(rice, chicken));","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(expectedList, ParserUtil.parseRecipeIngredients(VALID_RECIPE_INGREDIENTS));","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"sivayogasubramanian"},"content":"    public void parseRecipeIngredients_validValueWithWhitespace_returnsRecipeIngredients() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient rice \u003d new Ingredient(new GenericString(\"Rice\"), new Quantity(\"1\"), new GenericString(\"cup\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient chicken \u003d new Ingredient(","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"sivayogasubramanian"},"content":"                new GenericString(\"Chicken\"), new Quantity(\"1\"), new GenericString(\"whole\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"sivayogasubramanian"},"content":"        String listWithWhitespace \u003d WHITESPACE + VALID_RECIPE_INGREDIENTS + WHITESPACE;","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"sivayogasubramanian"},"content":"        RecipeIngredientList expectedList \u003d new RecipeIngredientList(List.of(rice, chicken));","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(expectedList, ParserUtil.parseRecipeIngredients(listWithWhitespace));","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"zognin"},"content":"    // Shared parsers","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"zognin"},"content":"    public void parseGenericString_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"zognin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGenericString(null,","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"zognin"},"content":"                \"Name\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"zognin"},"content":"    public void parseGenericString_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"zognin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGenericString(INVALID_GENERIC_STRING,","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"zognin"},"content":"                \"Name\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"zognin"},"content":"    public void parseGenericString_validValueWithoutWhitespace_returnsGenericString() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"zognin"},"content":"        GenericString expectedName \u003d new GenericString(VALID_GENERIC_STRING);","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"zognin"},"content":"        assertEquals(expectedName, ParserUtil.parseGenericString(VALID_GENERIC_STRING, \"Name\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"zognin"},"content":"    public void parseGenericString_validValueWithWhitespace_returnsTrimmedGenericString() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"zognin"},"content":"        String genericStringWithWhitespace \u003d WHITESPACE + VALID_GENERIC_STRING + WHITESPACE;","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"zognin"},"content":"        GenericString expectedGenericString \u003d new GenericString(VALID_GENERIC_STRING);","lastModifiedDate":"2021-10-12"},{"lineNumber":280,"author":{"gitId":"zognin"},"content":"        assertEquals(expectedGenericString, ParserUtil.parseGenericString(genericStringWithWhitespace,","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"zognin"},"content":"                \"Name\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"zognin"},"content":"    public void parseKeywords_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"zognin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseKeywords(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":287,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":288,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":289,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":290,"author":{"gitId":"zognin"},"content":"    public void parseKeywords_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"zognin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseKeywords(INVALID_KEYWORD));","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"zognin"},"content":"    public void parseKeywords_validValues_returnsListOfStrings() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"zognin"},"content":"        List\u003cString\u003e expectedList \u003d List.of(VALID_KEYWORD_1, VALID_KEYWORD_2);","lastModifiedDate":"2021-10-12"},{"lineNumber":297,"author":{"gitId":"zognin"},"content":"        assertEquals(expectedList, ParserUtil.parseKeywords(VALID_KEYWORD_1 + \" \" + VALID_KEYWORD_2));","lastModifiedDate":"2021-10-12"},{"lineNumber":298,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":300,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":301,"author":{"gitId":"zognin"},"content":"    public void parseInternalQuantity_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":302,"author":{"gitId":"zognin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseInternalQuantity(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":303,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":304,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":305,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":306,"author":{"gitId":"zognin"},"content":"    public void parseInternalQuantity_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":307,"author":{"gitId":"zognin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInternalQuantity(INVALID_INTERNAL_QUANTITY));","lastModifiedDate":"2021-10-11"},{"lineNumber":308,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":309,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":310,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":311,"author":{"gitId":"zognin"},"content":"    public void parseInternalQuantity_validValueWithoutWhitespace_returnsQuantity() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":312,"author":{"gitId":"zognin"},"content":"        Quantity expectedQuantity \u003d new Quantity(VALID_QUANTITY_1);","lastModifiedDate":"2021-10-11"},{"lineNumber":313,"author":{"gitId":"zognin"},"content":"        assertEquals(expectedQuantity, ParserUtil.parseInternalQuantity(VALID_QUANTITY_1));","lastModifiedDate":"2021-10-11"},{"lineNumber":314,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":315,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":316,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":317,"author":{"gitId":"zognin"},"content":"    public void parseInternalQuantity_validValueWithWhitespace_returnsTrimmedQuantity() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":318,"author":{"gitId":"zognin"},"content":"        String quantityWithWhitespace \u003d WHITESPACE + VALID_QUANTITY_1 + WHITESPACE;","lastModifiedDate":"2021-10-11"},{"lineNumber":319,"author":{"gitId":"zognin"},"content":"        Quantity expectedQuantity \u003d new Quantity(VALID_QUANTITY_1);","lastModifiedDate":"2021-10-11"},{"lineNumber":320,"author":{"gitId":"zognin"},"content":"        assertEquals(expectedQuantity, ParserUtil.parseInternalQuantity(quantityWithWhitespace));","lastModifiedDate":"2021-10-11"},{"lineNumber":321,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":322,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":323,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":324,"author":{"gitId":"EuniceSim142"},"content":"    public void parseQuantity_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":325,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseQuantity(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":326,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":327,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":328,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":329,"author":{"gitId":"EuniceSim142"},"content":"    public void parseQuantity_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":330,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseQuantity(INVALID_QUANTITY));","lastModifiedDate":"2021-10-07"},{"lineNumber":331,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":332,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":333,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":334,"author":{"gitId":"EuniceSim142"},"content":"    public void parseQuantity_validValueWithoutWhitespace_returnsQuantity() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":335,"author":{"gitId":"zognin"},"content":"        Quantity expectedQuantity \u003d new Quantity(VALID_QUANTITY_1);","lastModifiedDate":"2021-10-11"},{"lineNumber":336,"author":{"gitId":"zognin"},"content":"        assertEquals(expectedQuantity, ParserUtil.parseQuantity(VALID_QUANTITY_1));","lastModifiedDate":"2021-10-11"},{"lineNumber":337,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":338,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":339,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":340,"author":{"gitId":"EuniceSim142"},"content":"    public void parseQuantity_validValueWithWhitespace_returnsTrimmedQuantity() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":341,"author":{"gitId":"zognin"},"content":"        String quantityWithWhitespace \u003d WHITESPACE + VALID_QUANTITY_1 + WHITESPACE;","lastModifiedDate":"2021-10-11"},{"lineNumber":342,"author":{"gitId":"zognin"},"content":"        Quantity expectedQuantity \u003d new Quantity(VALID_QUANTITY_1);","lastModifiedDate":"2021-10-11"},{"lineNumber":343,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(expectedQuantity, ParserUtil.parseQuantity(quantityWithWhitespace));","lastModifiedDate":"2021-10-07"},{"lineNumber":344,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":345,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":346,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":347,"author":{"gitId":"zognin"},"content":"    public void parseQuantities_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":348,"author":{"gitId":"zognin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseQuantities(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":349,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":350,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":351,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":352,"author":{"gitId":"zognin"},"content":"    public void parseQuantities_invalidValues_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":353,"author":{"gitId":"zognin"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":354,"author":{"gitId":"zognin"},"content":"                ParserUtil.parseQuantities(INVALID_INTERNAL_QUANTITY));","lastModifiedDate":"2021-10-11"},{"lineNumber":355,"author":{"gitId":"zognin"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":356,"author":{"gitId":"zognin"},"content":"                ParserUtil.parseQuantities(VALID_QUANTITY_1 + \" \" + INVALID_INTERNAL_QUANTITY));","lastModifiedDate":"2021-10-11"},{"lineNumber":357,"author":{"gitId":"zognin"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":358,"author":{"gitId":"zognin"},"content":"                ParserUtil.parseQuantities(INVALID_QUANTITY + \" \" + VALID_QUANTITY_2));","lastModifiedDate":"2021-10-11"},{"lineNumber":359,"author":{"gitId":"zognin"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":360,"author":{"gitId":"zognin"},"content":"                ParserUtil.parseQuantities(VALID_GENERIC_STRING + \" \" + VALID_QUANTITY_2));","lastModifiedDate":"2021-10-11"},{"lineNumber":361,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":362,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":363,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":364,"author":{"gitId":"zognin"},"content":"    public void parseQuantities_validValues_returnsListOfQuantities() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":365,"author":{"gitId":"zognin"},"content":"        List\u003cQuantity\u003e expectedList \u003d List.of(new Quantity(VALID_QUANTITY_1), new Quantity(VALID_QUANTITY_2));","lastModifiedDate":"2021-10-11"},{"lineNumber":366,"author":{"gitId":"zognin"},"content":"        assertEquals(expectedList, ParserUtil.parseQuantities(VALID_QUANTITY_1 + \" \" + VALID_QUANTITY_2));","lastModifiedDate":"2021-10-11"},{"lineNumber":367,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"EuniceSim142":68,"zognin":103,"-":102,"sivayogasubramanian":95}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_QUANTITY_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.ALICE;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.APPLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.BEEF;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_ALICE;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.ClientBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(Collections.emptyList(), addressBook.getClientList());","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasClient(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"    public void hasClient_clientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(addressBook.hasClient(ALICE));","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"    public void hasClient_clientInAddressBook_returnsTrue() {","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"        addressBook.addClient(ALICE);","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(addressBook.hasClient(ALICE));","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"    public void hasClient_clientWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"        addressBook.addClient(ALICE);","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(addressBook.hasClient(editedAlice));","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":75,"author":{"gitId":"Imranr2"},"content":"    public void deleteClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"Imranr2"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.removeClient(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"Imranr2"},"content":"    public void deleteClient_clientNotInAddressBook_throwsNotFoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"Imranr2"},"content":"        assertThrows(NotFoundException.class, () -\u003e addressBook.removeClient(ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"Imranr2"},"content":"    public void deleteClient_clientInAddressBook_success() throws NotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"Imranr2"},"content":"        addressBook.addClient(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"Imranr2"},"content":"        addressBook.removeClient(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"Imranr2"},"content":"        assertFalse(addressBook.hasClient(ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"Imranr2"},"content":"    public void getClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getClientList().remove(0));","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"Imranr2"},"content":"    public void hasOrder_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"Imranr2"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasOrder(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"Imranr2"},"content":"    public void hasOrder_orderNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"Imranr2"},"content":"        assertFalse(addressBook.hasOrder(ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"Imranr2"},"content":"    public void hasOrder_orderInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"Imranr2"},"content":"        addressBook.addOrder(ORDER_FOR_ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"Imranr2"},"content":"        assertTrue(addressBook.hasOrder(ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"Imranr2"},"content":"    public void deleteOrder_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"Imranr2"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.removeOrder(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"Imranr2"},"content":"    public void deleteOrder_orderNotInAddressBook_throwsNotFoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"Imranr2"},"content":"        assertThrows(NotFoundException.class, () -\u003e addressBook.removeOrder(ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"Imranr2"},"content":"    public void deleteOrder_orderInAddressBook_success() throws NotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"Imranr2"},"content":"        addressBook.addOrder(ORDER_FOR_ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"Imranr2"},"content":"        addressBook.removeOrder(ORDER_FOR_ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"Imranr2"},"content":"        assertFalse(addressBook.hasOrder(ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"EuniceSim142"},"content":"    public void hasIngredient_nullIngredient_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasIngredient(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"EuniceSim142"},"content":"    public void hasIngredient_ingredientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(addressBook.hasIngredient(APPLE));","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"EuniceSim142"},"content":"    public void hasIngredient_ingredientInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"EuniceSim142"},"content":"        addressBook.addIngredient(APPLE);","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(addressBook.hasIngredient(APPLE));","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"EuniceSim142"},"content":"    public void hasIngredient_ingredientWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"EuniceSim142"},"content":"        addressBook.addIngredient(APPLE);","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"EuniceSim142"},"content":"        Ingredient editedApple \u003d new IngredientBuilder(APPLE).withQuantity(VALID_QUANTITY_BEEF).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(addressBook.hasIngredient(editedApple));","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"sivayogasubramanian"},"content":"    public void addIngredientQuantity_nullTarget_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"sivayogasubramanian"},"content":"                addressBook.addIngredientQuantity(null, new Quantity(\"1\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"sivayogasubramanian"},"content":"    public void addIngredientQuantity_nullMultiplier_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"sivayogasubramanian"},"content":"                addressBook.addIngredientQuantity(APPLE, null));","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"sivayogasubramanian"},"content":"    public void addIngredientQuantity_validTargetAndMultiplier_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"sivayogasubramanian"},"content":"        addressBook.addIngredient(new IngredientBuilder(BEEF).withQuantity(VALID_QUANTITY_BEEF).build());","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient target \u003d new IngredientBuilder(BEEF).withQuantity(\"1\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient expectedIngredient \u003d new IngredientBuilder(BEEF).withQuantity(\"32\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"sivayogasubramanian"},"content":"        addressBook.addIngredientQuantity(target, new Quantity(\"2\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(addressBook.hasIngredient(expectedIngredient));","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"sivayogasubramanian"},"content":"    public void minusIngredientQuantity_nullTarget_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"sivayogasubramanian"},"content":"            -\u003e addressBook.minusIngredientQuantity(null, new Quantity(\"1\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"sivayogasubramanian"},"content":"    public void minusIngredientQuantity_nullMultiplier_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"sivayogasubramanian"},"content":"            -\u003e addressBook.minusIngredientQuantity(APPLE, null));","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"sivayogasubramanian"},"content":"    public void minusIngredientQuantity_validTargetAndMultiplier_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"sivayogasubramanian"},"content":"        addressBook.addIngredient(new IngredientBuilder(BEEF).withQuantity(VALID_QUANTITY_BEEF).build());","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient target \u003d new IngredientBuilder(BEEF).withQuantity(\"1\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient expectedIngredient \u003d new IngredientBuilder(BEEF).withQuantity(\"28\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"sivayogasubramanian"},"content":"        addressBook.addIngredientQuantity(target, new Quantity(\"2\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(addressBook.hasIngredient(expectedIngredient));","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setOrder_nullTarget_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.setOrder(null, ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setOrder_nullEditedOrder_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.setOrder(ORDER_FOR_ALICE, null));","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setOrder_invalidTarget_throwsNullPointerException() throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NotFoundException.class, () -\u003e addressBook.setOrder(ORDER_FOR_ALICE, ORDER_FOR_AMY));","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setOrder_validTargetAndEditedOrder_success() throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"sivayogasubramanian"},"content":"        addressBook.addOrder(ORDER_FOR_ALICE);","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"sivayogasubramanian"},"content":"        addressBook.setOrder(ORDER_FOR_ALICE, ORDER_FOR_AMY);","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(addressBook.hasOrder(ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(addressBook.hasOrder(ORDER_FOR_AMY));","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":218,"author":{"gitId":"EuniceSim142"},"content":"     * A stub ReadOnlyAddressBook whose clients list can violate interface constraints.","lastModifiedDate":"2021-09-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":221,"author":{"gitId":"zognin"},"content":"        private final ObservableList\u003cClient\u003e clients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-25"},{"lineNumber":222,"author":{"gitId":"zognin"},"content":"        private final ObservableList\u003cOrder\u003e orders \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-01"},{"lineNumber":223,"author":{"gitId":"EuniceSim142"},"content":"        private final ObservableList\u003cIngredient\u003e ingredients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-06"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":225,"author":{"gitId":"EuniceSim142"},"content":"        AddressBookStub(Collection\u003cClient\u003e clients) {","lastModifiedDate":"2021-09-23"},{"lineNumber":226,"author":{"gitId":"EuniceSim142"},"content":"            this.clients.setAll(clients);","lastModifiedDate":"2021-09-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":230,"author":{"gitId":"zognin"},"content":"        public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":231,"author":{"gitId":"zognin"},"content":"            return clients;","lastModifiedDate":"2021-10-01"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":233,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":234,"author":{"gitId":"zognin"},"content":"        @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":235,"author":{"gitId":"zognin"},"content":"        public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":236,"author":{"gitId":"zognin"},"content":"            return orders;","lastModifiedDate":"2021-10-01"},{"lineNumber":237,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":238,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":239,"author":{"gitId":"EuniceSim142"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":240,"author":{"gitId":"EuniceSim142"},"content":"        public ObservableList\u003cIngredient\u003e getIngredientList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":241,"author":{"gitId":"EuniceSim142"},"content":"            return ingredients;","lastModifiedDate":"2021-10-06"},{"lineNumber":242,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"EuniceSim142":52,"Imranr2":51,"zognin":10,"-":57,"sivayogasubramanian":74}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_QUANTITY_BEEF;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.Model.PREDICATE_SHOW_ALL_INGREDIENTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.model.Model.PREDICATE_SHOW_ALL_ORDERS;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.ALICE;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.BENSON;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.APPLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.BEEF;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_ALICE;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.GuiSettings;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.StringContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.AddressBookBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasClient(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"    public void hasClient_clientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(modelManager.hasClient(ALICE));","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"EuniceSim142"},"content":"    public void hasClient_clientInAddressBook_returnsTrue() {","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"EuniceSim142"},"content":"        modelManager.addClient(ALICE);","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(modelManager.hasClient(ALICE));","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"Imranr2"},"content":"    public void deleteClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"Imranr2"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.deleteClient(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"Imranr2"},"content":"    public void deleteClient_clientNotInAddressBook_throwsNotFoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"Imranr2"},"content":"        assertThrows(NotFoundException.class, () -\u003e modelManager.deleteClient(ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"Imranr2"},"content":"    public void deleteClient_clientInAddressBook_success() throws NotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"Imranr2"},"content":"        modelManager.addClient(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"Imranr2"},"content":"        modelManager.deleteClient(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"Imranr2"},"content":"        assertFalse(modelManager.hasClient(ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"Imranr2"},"content":"    public void hasOrder_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"Imranr2"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasOrder(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"Imranr2"},"content":"    public void hasOrder_orderNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"Imranr2"},"content":"        assertFalse(modelManager.hasOrder(ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"Imranr2"},"content":"    public void hasOrder_orderInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"Imranr2"},"content":"        modelManager.addOrder(ORDER_FOR_ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"Imranr2"},"content":"        assertTrue(modelManager.hasOrder(ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"Imranr2"},"content":"    public void deleteOrder_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"Imranr2"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.deleteOrder(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"Imranr2"},"content":"    public void deleteOrder_orderNotInAddressBook_throwsNotFoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"Imranr2"},"content":"        assertThrows(NotFoundException.class, () -\u003e modelManager.deleteOrder(ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"Imranr2"},"content":"    public void deleteOrder_orderInAddressBook_success() throws NotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"Imranr2"},"content":"        modelManager.addOrder(ORDER_FOR_ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"Imranr2"},"content":"        modelManager.deleteOrder(ORDER_FOR_ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"Imranr2"},"content":"        assertFalse(modelManager.hasOrder(ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":154,"author":{"gitId":"EuniceSim142"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredClientList().remove(0));","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"EuniceSim142"},"content":"    public void hasIngredient_nullIngredient_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasIngredient(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"EuniceSim142"},"content":"    public void hasIngredient_ingredientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(modelManager.hasIngredient(APPLE));","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"EuniceSim142"},"content":"    public void hasIngredient_ingredientInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"EuniceSim142"},"content":"        modelManager.addIngredient(APPLE);","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(modelManager.hasIngredient(APPLE));","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"sivayogasubramanian"},"content":"    public void addIngredientQuantity_nullTarget_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"sivayogasubramanian"},"content":"                modelManager.addIngredientQuantity(null, new Quantity(\"1\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"sivayogasubramanian"},"content":"    public void addIngredientQuantity_nullMultiplier_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addIngredientQuantity(APPLE, null));","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"sivayogasubramanian"},"content":"    public void addIngredientQuantity_validTargetAndMultiplier_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"sivayogasubramanian"},"content":"        modelManager.addIngredient(new IngredientBuilder(BEEF).withQuantity(VALID_QUANTITY_BEEF).build());","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient target \u003d new IngredientBuilder(BEEF).withQuantity(\"1\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient expectedIngredient \u003d new IngredientBuilder(BEEF).withQuantity(\"32\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"sivayogasubramanian"},"content":"        modelManager.addIngredientQuantity(target, new Quantity(\"2\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(modelManager.hasIngredient(expectedIngredient));","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"sivayogasubramanian"},"content":"    public void minusIngredientQuantity_nullTarget_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"sivayogasubramanian"},"content":"                modelManager.minusIngredientQuantity(null, new Quantity(\"1\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"sivayogasubramanian"},"content":"    public void minusIngredientQuantity_nullMultiplier_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.minusIngredientQuantity(APPLE, null));","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"sivayogasubramanian"},"content":"    public void minusIngredientQuantity_validTargetAndMultiplier_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"sivayogasubramanian"},"content":"        modelManager.addIngredient(new IngredientBuilder(BEEF).withQuantity(VALID_QUANTITY_BEEF).build());","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient target \u003d new IngredientBuilder(BEEF).withQuantity(\"1\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient expectedIngredient \u003d new IngredientBuilder(BEEF).withQuantity(\"28\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"sivayogasubramanian"},"content":"        modelManager.addIngredientQuantity(target, new Quantity(\"2\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(modelManager.hasIngredient(expectedIngredient));","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setOrder_nullTarget_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setOrder(null, ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setOrder_nullEditedOrder_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setOrder(ORDER_FOR_ALICE, null));","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setOrder_invalidTarget_throwsNullPointerException() throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NotFoundException.class, () -\u003e modelManager.setOrder(ORDER_FOR_ALICE, ORDER_FOR_AMY));","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setOrder_validTargetAndEditedOrder_success() throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"sivayogasubramanian"},"content":"        modelManager.addOrder(ORDER_FOR_ALICE);","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"sivayogasubramanian"},"content":"        modelManager.setOrder(ORDER_FOR_ALICE, ORDER_FOR_AMY);","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(modelManager.hasOrder(ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(modelManager.hasOrder(ORDER_FOR_AMY));","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":238,"author":{"gitId":"EuniceSim142"},"content":"    public void getFilteredIngredientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":239,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredIngredientList().remove(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":240,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":241,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":242,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":243,"author":{"gitId":"zognin"},"content":"    public void getFilteredOrderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":244,"author":{"gitId":"zognin"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredOrderList().remove(0));","lastModifiedDate":"2021-10-06"},{"lineNumber":245,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":246,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":249,"author":{"gitId":"EuniceSim142"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withClient(ALICE).withClient(BENSON)","lastModifiedDate":"2021-10-08"},{"lineNumber":250,"author":{"gitId":"EuniceSim142"},"content":"                .withIngredient(APPLE).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":271,"author":{"gitId":"EuniceSim142"},"content":"        // different filteredClientList -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":272,"author":{"gitId":"sivayogasubramanian"},"content":"        String[] keywords \u003d ALICE.getName().toString().split(\"\\\\s+\");","lastModifiedDate":"2021-09-22"},{"lineNumber":273,"author":{"gitId":"Imranr2"},"content":"        modelManager.updateFilteredClientList(","lastModifiedDate":"2021-10-10"},{"lineNumber":274,"author":{"gitId":"Imranr2"},"content":"                new StringContainsKeywordsPredicate\u003c\u003e(Client::getName, Arrays.asList(keywords))","lastModifiedDate":"2021-10-10"},{"lineNumber":275,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":276,"author":{"gitId":"Imranr2"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2021-10-10"},{"lineNumber":277,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":278,"author":{"gitId":"Imranr2"},"content":"        // different filteredOrderList -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":279,"author":{"gitId":"Imranr2"},"content":"        keywords \u003d ALICE.getName().toString().split(\"\\\\s+\");","lastModifiedDate":"2021-10-10"},{"lineNumber":280,"author":{"gitId":"Imranr2"},"content":"        modelManager.updateFilteredOrderList(","lastModifiedDate":"2021-10-10"},{"lineNumber":281,"author":{"gitId":"Imranr2"},"content":"                new StringContainsKeywordsPredicate\u003c\u003e(Order::getClientName, Arrays.asList(keywords))","lastModifiedDate":"2021-10-10"},{"lineNumber":282,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":285,"author":{"gitId":"EuniceSim142"},"content":"        // different filteredIngredientList -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":286,"author":{"gitId":"EuniceSim142"},"content":"        modelManager.addIngredient(BEEF);","lastModifiedDate":"2021-10-08"},{"lineNumber":287,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2021-10-08"},{"lineNumber":288,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":290,"author":{"gitId":"EuniceSim142"},"content":"        modelManager.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":291,"author":{"gitId":"EuniceSim142"},"content":"        modelManager.updateFilteredIngredientList(PREDICATE_SHOW_ALL_INGREDIENTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":292,"author":{"gitId":"Imranr2"},"content":"        modelManager.updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS);","lastModifiedDate":"2021-10-10"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"EuniceSim142":42,"Imranr2":64,"zognin":6,"-":109,"sivayogasubramanian":78}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":17,"sivayogasubramanian":2}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/client/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":33,"sivayogasubramanian":2}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/client/ClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.ALICE;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.ClientBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"public class ClientTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    public void isSameClient() {","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(ALICE.isSameClient(ALICE));","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(ALICE.isSameClient(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        // same phone, all other attributes different -\u003e returns true","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(ALICE.isSameClient(editedAlice));","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        // different phone, all other attributes same -\u003e returns false","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(ALICE.isSameClient(editedAlice));","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"        Client aliceCopy \u003d new ClientBuilder(ALICE).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"EuniceSim142":14,"zognin":3,"-":43,"sivayogasubramanian":9}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/client/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":65,"sivayogasubramanian":2}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/client/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":37,"sivayogasubramanian":2}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/client/UniqueClientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.client;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.ALICE;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import java.util.List;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.ClientBuilder;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"public class UniqueClientListTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    private final UniqueClientList uniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    public void contains_nullClient_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.contains(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    public void contains_clientNotInList_returnsFalse() {","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(uniqueClientList.contains(ALICE));","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"    public void contains_clientInList_returnsTrue() {","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(uniqueClientList.contains(ALICE));","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"    public void contains_clientWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(uniqueClientList.contains(editedAlice));","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"    public void add_nullClient_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.add(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    public void setClient_nullTargetClient_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(null, ALICE));","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"    public void setClient_nullEditedClient_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(ALICE, null));","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"Imranr2"},"content":"    public void setClient_targetClientNotInList_throwsNotFoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NotFoundException.class, () -\u003e uniqueClientList.setClient(ALICE, ALICE));","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"    public void setClient_editedClientIsSameClient_success() throws NotFoundException {","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"        uniqueClientList.setClient(ALICE, ALICE);","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"        expectedUniqueClientList.add(ALICE);","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"    public void setClient_editedClientHasSameIdentity_success() throws NotFoundException {","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"        uniqueClientList.setClient(ALICE, editedAlice);","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"        expectedUniqueClientList.add(editedAlice);","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"EuniceSim142"},"content":"    public void setClient_editedClientHasDifferentIdentity_success() throws NotFoundException {","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"EuniceSim142"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"EuniceSim142"},"content":"        uniqueClientList.setClient(ALICE, BOB);","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"EuniceSim142"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"    public void remove_nullClient_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.remove(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"Imranr2"},"content":"    public void remove_clientDoesNotExist_throwsNotFoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NotFoundException.class, () -\u003e uniqueClientList.remove(ALICE));","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"EuniceSim142"},"content":"    public void remove_existingClient_removesClient() throws NotFoundException {","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"EuniceSim142"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"EuniceSim142"},"content":"        uniqueClientList.remove(ALICE);","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"EuniceSim142"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"EuniceSim142"},"content":"    public void setClients_nullUniqueClientList_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((UniqueClientList) null));","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"EuniceSim142"},"content":"    public void setClients_uniqueClientList_replacesOwnListWithProvidedUniqueClientList() {","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"EuniceSim142"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"EuniceSim142"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"EuniceSim142"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"EuniceSim142"},"content":"        uniqueClientList.setClients(expectedUniqueClientList);","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"EuniceSim142"},"content":"    public void setClients_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((List\u003cClient\u003e) null));","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"EuniceSim142"},"content":"    public void setClients_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"EuniceSim142"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"EuniceSim142"},"content":"        List\u003cClient\u003e clientList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"EuniceSim142"},"content":"        uniqueClientList.setClients(clientList);","lastModifiedDate":"2021-09-23"},{"lineNumber":135,"author":{"gitId":"EuniceSim142"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"EuniceSim142"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":139,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"EuniceSim142"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":142,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-09-23"},{"lineNumber":143,"author":{"gitId":"EuniceSim142"},"content":"            -\u003e uniqueClientList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-09-23"},{"lineNumber":144,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":145,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"EuniceSim142":136,"Imranr2":2,"sivayogasubramanian":7}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/ingredient/IngredientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_INGREDIENT_NAME_APPLE;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_INGREDIENT_NAME_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_QUANTITY_APPLE;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_QUANTITY_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_UNIT_APPLE;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_UNIT_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.AVOCADO;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"public class IngredientTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    public void isSameIngredient() {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(AVOCADO.isSameIngredient(AVOCADO));","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(AVOCADO.isSameIngredient(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"        // same ingredient name and unit, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"        Ingredient editedAvocado \u003d new IngredientBuilder(AVOCADO).withQuantity(VALID_QUANTITY_BEEF).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(AVOCADO.isSameIngredient(editedAvocado));","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"        // different ingredient name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"        editedAvocado \u003d new IngredientBuilder(AVOCADO).withIngredientName(VALID_INGREDIENT_NAME_BEEF).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(AVOCADO.isSameIngredient(editedAvocado));","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"        // different ingredient name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"        editedAvocado \u003d new IngredientBuilder(AVOCADO).withUnit(VALID_UNIT_BEEF).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(AVOCADO.isSameIngredient(editedAvocado));","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"    public void isValidIngredient() {","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"        // valid","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(Ingredient.isValidIngredient(VALID_INGREDIENT_NAME_APPLE, VALID_QUANTITY_APPLE, VALID_UNIT_APPLE));","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(Ingredient.isValidIngredient(VALID_INGREDIENT_NAME_BEEF, VALID_QUANTITY_BEEF, VALID_UNIT_BEEF));","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"        // invalid","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Ingredient.isValidIngredient(VALID_INGREDIENT_NAME_APPLE + \"$\",","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"                VALID_QUANTITY_APPLE, VALID_UNIT_APPLE)); // name invalid","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Ingredient.isValidIngredient(VALID_INGREDIENT_NAME_APPLE,","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"                VALID_QUANTITY_APPLE + \u0027$\u0027, VALID_UNIT_APPLE)); // quantity invalid","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Ingredient.isValidIngredient(VALID_INGREDIENT_NAME_APPLE,","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"                \"0\", VALID_UNIT_APPLE)); // quantity zero invalid","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Ingredient.isValidIngredient(VALID_INGREDIENT_NAME_APPLE,","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"                VALID_QUANTITY_APPLE + \u0027$\u0027, VALID_UNIT_APPLE + \u0027$\u0027)); // quantity invalid","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"    public void equals() {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"        Ingredient avocadoCopy \u003d new IngredientBuilder(AVOCADO).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(AVOCADO.equals(avocadoCopy));","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(AVOCADO.equals(AVOCADO));","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(AVOCADO.equals(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(AVOCADO.equals(5));","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"        // different ingredient -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(AVOCADO.equals(BEEF));","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"        // different ingredient name -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"        Ingredient editedAvocado \u003d new IngredientBuilder(AVOCADO)","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"                .withIngredientName(VALID_INGREDIENT_NAME_BEEF).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(AVOCADO.equals(editedAvocado));","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"        // different quantity -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"        editedAvocado \u003d new IngredientBuilder(AVOCADO).withQuantity(VALID_QUANTITY_BEEF).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(AVOCADO.equals(editedAvocado));","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"EuniceSim142"},"content":"        // different unit -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"EuniceSim142"},"content":"        editedAvocado \u003d new IngredientBuilder(AVOCADO).withUnit(VALID_UNIT_BEEF).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(AVOCADO.equals(editedAvocado));","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"EuniceSim142":68,"sivayogasubramanian":20}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/ingredient/UniqueIngredientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.APPLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"public class UniqueIngredientListTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    private final UniqueIngredientList uniqueIngredientList \u003d new UniqueIngredientList();","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    public void contains_nullIngredient_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueIngredientList.contains(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    public void contains_ingredientNotInList_returnsFalse() {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(uniqueIngredientList.contains(APPLE));","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"    public void contains_ingredientInList_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"        uniqueIngredientList.add(APPLE);","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(uniqueIngredientList.contains(APPLE));","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"    public void contains_ingredientWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"        uniqueIngredientList.add(APPLE);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"        Ingredient editedApple \u003d new IngredientBuilder(APPLE).withUnit(\"whole\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(uniqueIngredientList.contains(editedApple));","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"    public void add_nullIngredient_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueIngredientList.add(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    public void setIngredients_nullUniqueIngredientList_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueIngredientList","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"                .setIngredients((UniqueIngredientList) null));","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"    public void setIngredients_uniqueIngredientList_replacesOwnListWithProvidedUniqueIngredientList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"        uniqueIngredientList.add(APPLE);","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"        UniqueIngredientList expectedUniqueIngredientList \u003d new UniqueIngredientList();","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"        expectedUniqueIngredientList.add(BEEF);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"        uniqueIngredientList.setIngredients(expectedUniqueIngredientList);","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(expectedUniqueIngredientList, uniqueIngredientList);","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"    public void setIngredients_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueIngredientList.setIngredients((List\u003cIngredient\u003e) null));","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"    public void setIngredients_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"        uniqueIngredientList.add(APPLE);","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"        List\u003cIngredient\u003e ingredientList \u003d Collections.singletonList(BEEF);","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"        uniqueIngredientList.setIngredients(ingredientList);","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"        UniqueIngredientList expectedUniqueIngredientList \u003d new UniqueIngredientList();","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"        expectedUniqueIngredientList.add(BEEF);","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(expectedUniqueIngredientList, uniqueIngredientList);","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"    public void addIngredientQuantity_ingredientInList_addsQuantity() {","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"        GenericString name \u003d new GenericString(\"Garlic\");","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"        GenericString unit \u003d new GenericString(\"whole\");","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient toAdd \u003d new Ingredient(name, new Quantity(\"100\"), unit);","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient target \u003d new Ingredient(name, new Quantity(\"10\"), unit);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient expected \u003d new Ingredient(name, new Quantity(\"110\"), unit);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient expected2 \u003d new Ingredient(name, new Quantity(\"150\"), unit);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"        UniqueIngredientList uniqueIngredientList \u003d new UniqueIngredientList();","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"        uniqueIngredientList.add(toAdd);","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"        UniqueIngredientList expectedUniqueIngredientList \u003d new UniqueIngredientList();","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"        expectedUniqueIngredientList.add(expected);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"sivayogasubramanian"},"content":"        UniqueIngredientList expectedUniqueIngredientList2 \u003d new UniqueIngredientList();","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"sivayogasubramanian"},"content":"        expectedUniqueIngredientList2.add(expected2);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"        uniqueIngredientList.addIngredientQuantity(target, new Quantity(\"1\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(expectedUniqueIngredientList, uniqueIngredientList);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"        uniqueIngredientList.addIngredientQuantity(target, new Quantity(\"4\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(expectedUniqueIngredientList2, uniqueIngredientList);","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"sivayogasubramanian"},"content":"    public void minusIngredientQuantity_ingredientInList_reducesQuantity() {","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"sivayogasubramanian"},"content":"        GenericString name \u003d new GenericString(\"Garlic\");","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"sivayogasubramanian"},"content":"        GenericString unit \u003d new GenericString(\"whole\");","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient toAdd \u003d new Ingredient(name, new Quantity(\"100\"), unit);","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient target \u003d new Ingredient(name, new Quantity(\"10\"), unit);","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient expected \u003d new Ingredient(name, new Quantity(\"90\"), unit);","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient expected2 \u003d new Ingredient(name, new Quantity(\"50\"), unit);","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"sivayogasubramanian"},"content":"        UniqueIngredientList uniqueIngredientList \u003d new UniqueIngredientList();","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"sivayogasubramanian"},"content":"        uniqueIngredientList.add(toAdd);","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"sivayogasubramanian"},"content":"        UniqueIngredientList expectedUniqueIngredientList \u003d new UniqueIngredientList();","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"sivayogasubramanian"},"content":"        expectedUniqueIngredientList.add(expected);","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"sivayogasubramanian"},"content":"        UniqueIngredientList expectedUniqueIngredientList2 \u003d new UniqueIngredientList();","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"        expectedUniqueIngredientList2.add(expected2);","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"        uniqueIngredientList.minusIngredientQuantity(target, new Quantity(\"1\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(expectedUniqueIngredientList, uniqueIngredientList);","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"        uniqueIngredientList.minusIngredientQuantity(target, new Quantity(\"4\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(expectedUniqueIngredientList2, uniqueIngredientList);","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"EuniceSim142"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"EuniceSim142"},"content":"            -\u003e uniqueIngredientList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"EuniceSim142":83,"sivayogasubramanian":48}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/order/CompletionStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.order;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"public class CompletionStatusTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CompletionStatus(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"    public void constructor_invalidCompletionStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"        String truncatedInput \u003d \"y\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CompletionStatus(truncatedInput));","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"        String capitalisedInput \u003d \"no!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CompletionStatus(capitalisedInput));","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    public void constructor_validICompletionStatus_returnsCorrectCompletionStatus() {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"        String validYes \u003d \"yes\";","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(\"yes\", new CompletionStatus(validYes).toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"        String validNo \u003d \"no\";","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(\"no\", new CompletionStatus(validNo).toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"    public void isValidCompletionStatus() {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"        // null completionStatus","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e CompletionStatus.isValidCompletionStatus(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"        // invalid completionStatus","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(CompletionStatus.isValidCompletionStatus(\"\")); // empty string","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(CompletionStatus.isValidCompletionStatus(\" \")); // spaces only","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(CompletionStatus.isValidCompletionStatus(\"yes!\")); // \u0027!\u0027 not allowed","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(CompletionStatus.isValidCompletionStatus(\"y\")); // short form not allowed","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"        // valid completionStatus","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(CompletionStatus.isValidCompletionStatus(\"yes\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(CompletionStatus.isValidCompletionStatus(\"YES\")); // Case-insensitive","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(CompletionStatus.isValidCompletionStatus(\"yES\")); // Case-sensitive","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(CompletionStatus.isValidCompletionStatus(\"no\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EuniceSim142":51}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/order/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.order;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"class DeadlineTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"    public void constructor_invalidQuantity_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"        String emptyDeadline \u003d \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(emptyDeadline));","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"        String invalidFormat \u003d \"12/12/2025 1900\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidFormat));","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"        String invalidFormat2 \u003d \"2025-12-12 1900\";","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidFormat2));","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"        String missingDate \u003d \"1900\";","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(missingDate));","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"        String missingTime \u003d \"12-12-2025\";","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(missingTime));","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"    public void isValidDeadline() {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"        // null deadline","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Deadline.isValidDeadline(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"        // invalid deadline","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Deadline.isValidDeadline(\"\")); // empty string","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Deadline.isValidDeadline(\" \")); // spaces only","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Deadline.isValidDeadline(\"12/12/2019 1900\")); // invalid format (\u0027/\u0027 not allowed)","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Deadline.isValidDeadline(\"12/12/2025 1900\")); // invalid format (\u0027/\u0027 not allowed)","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Deadline.isValidDeadline(\"2025-12-12 1900\")); // invalid format (wrong date format)","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Deadline.isValidDeadline(\"1900\")); // missing date","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Deadline.isValidDeadline(\"12-12-2025\")); // missing time","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Deadline.isValidDeadline(\"29-02-2022 1900\")); // not leap year","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Deadline.isValidDeadline(\"31-04-2022 1900\")); // day does not exist in April","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"        // valid deadline","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(Deadline.isValidDeadline(\"12-12-0000 1900\")); // past date","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(Deadline.isValidDeadline(\"12-12-2019 1900\")); // past date","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(Deadline.isValidDeadline(\"12-12-2025 1900\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(Deadline.isValidDeadline(\"12-09-2025 2359\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(Deadline.isValidDeadline(\"29-02-2020 2359\")); // past leap year","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(Deadline.isValidDeadline(\"29-02-2024 2359\")); // leap year","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"    public void toJsonString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(\"12-12-2019 1900\", new Deadline(\"12-12-2019 1900\").toJsonStorageString());","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(\"12-12-2025 1900\", new Deadline(\"12-12-2025 1900\").toJsonStorageString());","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(\"12-09-2025 2359\", new Deadline(\"12-09-2025 2359\").toJsonStorageString());","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(\"29-02-2024 2359\", new Deadline(\"29-02-2024 2359\").toJsonStorageString());","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"sivayogasubramanian":66}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/order/OrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.order;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_DEADLINE_MARCH;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_INGREDIENT_NAME_BEEF;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ORDER_QUANTITY_2;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PRICE_2;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_QUANTITY_BEEF;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_RECIPE_NAME_LAKSA;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_UNIT_BEEF;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_ALICE;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_BENSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_CARL;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_DANIEL;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_ELLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_FIONA;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_GEORGE;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.OrderBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"class OrderTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"    public void isSameOrder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Imranr2"},"content":"        assertTrue(ORDER_FOR_ALICE.isSameOrder(ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Imranr2"},"content":"        assertFalse(ORDER_FOR_BENSON.isSameOrder(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"        Order editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_CARL).withClientName(new GenericString(VALID_NAME_BOB))","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"                .withClientPhone(new Phone(VALID_PHONE_BOB)).withClientAddress(new Address(VALID_ADDRESS_BOB))","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"                .withRecipeName(new GenericString(VALID_RECIPE_NAME_LAKSA))","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"                .withRecipeIngredients(new RecipeIngredientList(List.of(new Ingredient(","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"                        new GenericString(VALID_INGREDIENT_NAME_BEEF), new Quantity(VALID_QUANTITY_BEEF),","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"                        new GenericString(VALID_UNIT_BEEF)))))","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"                .withPrice(new Price(VALID_PRICE_2)).withDeadline(new Deadline(VALID_DEADLINE_MARCH))","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"                .withQuantity(new Quantity(VALID_ORDER_QUANTITY_2))","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"                .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"        // different object, with similar fields as ORDER_FOR_BOB -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Imranr2"},"content":"        assertTrue(ORDER_FOR_BOB.isSameOrder(editedRandomOrder));","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Imranr2"},"content":"        // different client phone -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"Imranr2"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_CARL).withClientPhone(new Phone(VALID_PHONE_BOB)).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"Imranr2"},"content":"        assertFalse(ORDER_FOR_CARL.isSameOrder(editedRandomOrder));","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"Imranr2"},"content":"        // different client name -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_DANIEL)","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"                .withClientName(new GenericString(VALID_NAME_AMY)).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"Imranr2"},"content":"        assertFalse(ORDER_FOR_DANIEL.isSameOrder(editedRandomOrder));","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Imranr2"},"content":"        // different client address -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Imranr2"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_ELLE).withClientAddress(new Address(\"Choa Chu Kang\")).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Imranr2"},"content":"        assertFalse(ORDER_FOR_ELLE.isSameOrder(editedRandomOrder));","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"        // different recipe name -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_FIONA).withRecipeName(new GenericString(\"Sushi\")).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(ORDER_FOR_FIONA.isSameOrder(editedRandomOrder));","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"        // different recipe ingredients -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_GEORGE)","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"                .withRecipeIngredients(new RecipeIngredientList(List.of(new Ingredient(","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"                        new GenericString(\"RaNdoM inGredient\"), new Quantity(\"10\"), new GenericString(\"uNiT\")))))","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"                .build();","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(ORDER_FOR_GEORGE.isSameOrder(editedRandomOrder));","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"        // empty recipe ingredients -\u003e return false","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_GEORGE)","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"                .withRecipeIngredients(new RecipeIngredientList(new ArrayList\u003c\u003e())).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(ORDER_FOR_GEORGE.isSameOrder(editedRandomOrder));","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"        // different order price -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_DANIEL).withPrice(new Price(\"10.50\")).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(ORDER_FOR_DANIEL.isSameOrder(editedRandomOrder));","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"        // different order deadline -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_FIONA).withDeadline(new Deadline(\"11-10-2025 1000\")).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(ORDER_FOR_FIONA.isSameOrder(editedRandomOrder));","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"sivayogasubramanian"},"content":"        // different order quantity -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_ALICE).withQuantity(new Quantity(\"5\")).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(ORDER_FOR_ALICE.isSameOrder(editedRandomOrder));","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"EuniceSim142"},"content":"        // different order done status -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"EuniceSim142"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_BENSON)","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"EuniceSim142"},"content":"                .withCompletionStatus(new CompletionStatus(true)).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(ORDER_FOR_BENSON.isSameOrder(editedRandomOrder));","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"sivayogasubramanian"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"sivayogasubramanian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"Imranr2"},"content":"        Order orderCopy \u003d new OrderBuilder(ORDER_FOR_DANIEL).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"Imranr2"},"content":"        assertTrue(ORDER_FOR_DANIEL.equals(orderCopy));","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"Imranr2"},"content":"        assertTrue(ORDER_FOR_ALICE.equals(ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"sivayogasubramanian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"Imranr2"},"content":"        assertFalse(ORDER_FOR_ALICE.equals(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"Imranr2"},"content":"        assertFalse(ORDER_FOR_ALICE.equals(5));","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"Imranr2"},"content":"        assertFalse(ORDER_FOR_ALICE.equals(ORDER_FOR_ELLE));","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"EuniceSim142"},"content":"        Order editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_CARL).withClientName(new GenericString(VALID_NAME_BOB))","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"sivayogasubramanian"},"content":"                .withClientPhone(new Phone(VALID_PHONE_BOB)).withClientAddress(new Address(VALID_ADDRESS_BOB))","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"sivayogasubramanian"},"content":"                .withRecipeName(new GenericString(VALID_RECIPE_NAME_LAKSA))","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"sivayogasubramanian"},"content":"                .withRecipeIngredients(new RecipeIngredientList(List.of(new Ingredient(","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"sivayogasubramanian"},"content":"                        new GenericString(VALID_INGREDIENT_NAME_BEEF), new Quantity(VALID_QUANTITY_BEEF),","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"sivayogasubramanian"},"content":"                        new GenericString(VALID_UNIT_BEEF)))))","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"sivayogasubramanian"},"content":"                .withPrice(new Price(VALID_PRICE_2)).withDeadline(new Deadline(VALID_DEADLINE_MARCH))","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"sivayogasubramanian"},"content":"                .withQuantity(new Quantity(VALID_ORDER_QUANTITY_2))","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"sivayogasubramanian"},"content":"                .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"sivayogasubramanian"},"content":"        // different object, with similar fields as ORDER_FOR_BOB -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(ORDER_FOR_BOB.isSameOrder(editedRandomOrder));","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"Imranr2"},"content":"        // different client name -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"EuniceSim142"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_CARL).withClientName(new GenericString(VALID_NAME_BOB)).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"Imranr2"},"content":"        assertFalse(ORDER_FOR_CARL.equals(editedRandomOrder));","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"Imranr2"},"content":"        // different client phone -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"Imranr2"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_DANIEL).withClientPhone(new Phone(VALID_PHONE_BOB)).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"Imranr2"},"content":"        assertFalse(ORDER_FOR_DANIEL.equals(editedRandomOrder));","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"Imranr2"},"content":"        // different client address -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"Imranr2"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_ELLE).withClientAddress(new Address(VALID_ADDRESS_BOB)).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"Imranr2"},"content":"        assertFalse(ORDER_FOR_ELLE.equals(editedRandomOrder));","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"sivayogasubramanian"},"content":"        // different recipe name -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"sivayogasubramanian"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_BOB).withRecipeName(new GenericString(\"Chocolate Cake\")).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(ORDER_FOR_BOB.equals(editedRandomOrder));","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"sivayogasubramanian"},"content":"        // different recipe ingredients -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"sivayogasubramanian"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_ELLE)","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"sivayogasubramanian"},"content":"                .withRecipeIngredients(new RecipeIngredientList(List.of(new Ingredient(","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"sivayogasubramanian"},"content":"                        new GenericString(\"RaNdoM inGredient\"), new Quantity(\"10\"), new GenericString(\"uNiT\")))))","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"sivayogasubramanian"},"content":"        .build();","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(ORDER_FOR_ELLE.equals(editedRandomOrder));","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"sivayogasubramanian"},"content":"        // empty recipe ingredients -\u003e return false","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"sivayogasubramanian"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_FIONA)","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"sivayogasubramanian"},"content":"                .withRecipeIngredients(new RecipeIngredientList(new ArrayList\u003c\u003e())).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(ORDER_FOR_FIONA.equals(editedRandomOrder));","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"sivayogasubramanian"},"content":"        // different order price -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"sivayogasubramanian"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_BOB).withPrice(new Price(\"0.50\")).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(ORDER_FOR_DANIEL.equals(editedRandomOrder));","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"sivayogasubramanian"},"content":"        // different order deadline -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"sivayogasubramanian"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_GEORGE).withDeadline(new Deadline(\"15-10-2025 1000\")).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(ORDER_FOR_FIONA.equals(editedRandomOrder));","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"sivayogasubramanian"},"content":"        // different order quantity -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"sivayogasubramanian"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_ALICE).withQuantity(new Quantity(\"40000\")).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(ORDER_FOR_ALICE.equals(editedRandomOrder));","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"EuniceSim142"},"content":"        // different order done status -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"EuniceSim142"},"content":"        editedRandomOrder \u003d new OrderBuilder(ORDER_FOR_BENSON).withCompletionStatus(new CompletionStatus(true)).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(ORDER_FOR_BENSON.equals(editedRandomOrder));","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":179,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"EuniceSim142":15,"Imranr2":41,"sivayogasubramanian":123}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/order/PriceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.order;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"class PriceTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Price(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"    public void constructor_invalidPrice_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"        String notAFloat \u003d \"$1.00\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Price(notAFloat));","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"        String negativePrice \u003d \"-1\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Price(negativePrice));","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"        String largePrice \u003d Double.toString(Double.MAX_VALUE);","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Price(largePrice));","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"    public void constructor_validPrice_returnsCorrectPrice() {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"        String validInteger \u003d \"1\";","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(\"1.00\", new Price(validInteger).toString());","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"        String validFloatWith2dp \u003d \"1.51\";","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(\"1.51\", new Price(validFloatWith2dp).toString());","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"    public void isValidPrice() {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"        // null price","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Price.isValidPrice(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"        // invalid price","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Price.isValidPrice(\"\")); // empty string","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Price.isValidPrice(\" \")); // spaces only","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Price.isValidPrice(\"$1.0\")); // \u0027$\u0027 not allowed","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Price.isValidPrice(\"-1\")); // negative price","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Price.isValidPrice(Double.toString(Double.MAX_VALUE))); // price too large","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Price.isValidPrice(\"1.5\")); // only 1dp is not allowed","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"        // valid price","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(Price.isValidPrice(\"1\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(Price.isValidPrice(\"1.51\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"        Price p1 \u003d new Price(\"10\");","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"        Price p2 \u003d new Price(\"10\");","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"        Price p3 \u003d new Price(\"11\");","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"        Price p4 \u003d new Price(\"10.00\");","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(p1.equals(p2));","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(p1.equals(p4));","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(p1.equals(p1));","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(p1.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"        // different price -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(p1.equals(p3));","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"sivayogasubramanian":75}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/order/RecipeIngredientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.order;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.APPLE;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.AVOCADO;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.BREAD;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.BUTTER;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.IngredientBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"class RecipeIngredientListTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    private final RecipeIngredientList recipeIngredientList \u003d new RecipeIngredientList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e new RecipeIngredientList(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"    public void contains_nullIngredient_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        assertThrows(NullPointerException.class, () -\u003e recipeIngredientList.contains(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    public void contains_ingredientNotInList_returnsFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"        assertFalse(recipeIngredientList.contains(APPLE));","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"    public void contains_ingredientInList_returnsTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        recipeIngredientList.getIngredients().add(APPLE);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        assertTrue(recipeIngredientList.contains(APPLE));","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    public void contains_ingredientWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        recipeIngredientList.getIngredients().add(APPLE);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"        Ingredient appleWithEditedSameUnit \u003d new IngredientBuilder(APPLE).withUnit(\"whole\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        Ingredient appleWithEditedDifferentQuantity \u003d new IngredientBuilder(APPLE).withQuantity(\"1000\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        assertTrue(recipeIngredientList.contains(appleWithEditedSameUnit));","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        assertTrue(recipeIngredientList.contains(appleWithEditedDifferentQuantity));","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"    public void isValidRecipeIngredientList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"        // null list","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(RecipeIngredientList.isValidRecipeIngredientList(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"        // invalid list","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(RecipeIngredientList.isValidRecipeIngredientList(new ArrayList\u003c\u003e())); // empty list","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"        // valid list","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(RecipeIngredientList.isValidRecipeIngredientList(List.of(AVOCADO))); // single element list","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(RecipeIngredientList.isValidRecipeIngredientList(List.of(BREAD, BUTTER))); // multi element list","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"    public void isValidInternalRecipeIngredientList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"        // null list","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(RecipeIngredientList.isValidInternalRecipeIngredientList(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"        // valid list","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(RecipeIngredientList","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"                .isValidInternalRecipeIngredientList(new ArrayList\u003c\u003e())); // zero element list allowed internally","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(RecipeIngredientList","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"                .isValidInternalRecipeIngredientList(List.of(AVOCADO))); // single element list","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(RecipeIngredientList","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"                .isValidInternalRecipeIngredientList(List.of(BREAD, BUTTER))); // multi element list","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"zognin":31,"sivayogasubramanian":47}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/order/UniqueOrderListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.order;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_ALICE;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_BENSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"class UniqueOrderListTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"    private final UniqueOrderList uniqueOrderList \u003d new UniqueOrderList();","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    public void contains_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.contains(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"    public void contains_orderNotInList_returnsFalse() {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"        assertFalse(uniqueOrderList.contains(ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"    public void contains_orderInList_returnsTrue() {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Imranr2"},"content":"        uniqueOrderList.add(ORDER_FOR_ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Imranr2"},"content":"        assertTrue(uniqueOrderList.contains(ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"    public void add_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.add(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"    public void remove_nullOrder_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Imranr2"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.remove(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Imranr2"},"content":"    public void remove_orderDoesNotExist_throwsNotFoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Imranr2"},"content":"        assertThrows(NotFoundException.class, () -\u003e uniqueOrderList.remove(ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Imranr2"},"content":"    public void remove_existingOrder_removesOrder() throws NotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Imranr2"},"content":"        uniqueOrderList.add(ORDER_FOR_ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Imranr2"},"content":"        uniqueOrderList.remove(ORDER_FOR_ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Imranr2"},"content":"        UniqueOrderList expectedUniqueOrderList \u003d new UniqueOrderList();","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Imranr2"},"content":"        assertEquals(expectedUniqueOrderList, uniqueOrderList);","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setOrders_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"Imranr2"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.setOrders(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setOrders_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"Imranr2"},"content":"        uniqueOrderList.add(ORDER_FOR_ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Imranr2"},"content":"        List\u003cOrder\u003e orderList \u003d Collections.singletonList(ORDER_FOR_BENSON);","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"        uniqueOrderList.setOrders(orderList);","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"        UniqueOrderList expectedUniqueOrderList \u003d new UniqueOrderList();","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"Imranr2"},"content":"        expectedUniqueOrderList.add(ORDER_FOR_BENSON);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(expectedUniqueOrderList, uniqueOrderList);","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setOrder_nullTarget_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.setOrder(null, ORDER_FOR_AMY));","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setOrder_nullEditedOrder_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueOrderList.setOrder(ORDER_FOR_AMY, null));","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setOrder_invalidTarget_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(NotFoundException.class, () -\u003e uniqueOrderList.setOrder(ORDER_FOR_AMY, ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setOrder_validTargetAndEditedOrder_success() throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"        uniqueOrderList.add(ORDER_FOR_ALICE);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"sivayogasubramanian"},"content":"        uniqueOrderList.setOrder(ORDER_FOR_ALICE, ORDER_FOR_BENSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(uniqueOrderList.contains(ORDER_FOR_ALICE));","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(uniqueOrderList.contains(ORDER_FOR_BENSON));","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Imranr2":27,"sivayogasubramanian":70}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/predicate/PredicateCollectionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.stubs.GenericStub;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"public class PredicateCollectionTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":"    // Client predicates","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":"    public static final StringContainsKeywordsPredicate\u003cClient\u003e CLIENT_NAME_ALICE_BOB_PREDICATE \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Imranr2"},"content":"            new StringContainsKeywordsPredicate\u003c\u003e(Client::getName, List.of(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"Imranr2"},"content":"    public static final StringContainsKeywordsPredicate\u003cClient\u003e CLIENT_PHONE_9427_3217_PREDICATE \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"Imranr2"},"content":"            new StringContainsKeywordsPredicate\u003c\u003e(Client::getPhone, List.of(\"9427\", \"3217\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"    public static final StringContainsKeywordsPredicate\u003cClient\u003e CLIENT_ADDRESS_YISHUN_GEYLANG_PREDICATE \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Imranr2"},"content":"            new StringContainsKeywordsPredicate\u003c\u003e(Client::getAddress, List.of(\"Yishun\", \"Geylang\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"    public static final StringContainsKeywordsPredicate\u003cClient\u003e CLIENT_EMAIL_ALICE_BOB_GMAIL_PREDICATE \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"Imranr2"},"content":"            new StringContainsKeywordsPredicate\u003c\u003e(Client::getEmail, List.of(\"alice@gmail.com\", \"bob@gmail.com\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"    // Ingredient predicates","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"    public static final StringContainsKeywordsPredicate\u003cIngredient\u003e INGREDIENT_NAME_AVOCADO_BUTTER_PREDICATE \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"            new StringContainsKeywordsPredicate\u003c\u003e(Ingredient::getName, List.of(\"Avocado\", \"Butter\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    public static final ValueInListPredicate\u003cIngredient, Quantity\u003e INGREDIENT_QUANTITY_5_550_PREDICATE \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"            new ValueInListPredicate\u003c\u003e(Ingredient::getQuantity,","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"                    List.of(new Quantity(\"5\"), new Quantity(\"550\")));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"    public static final ValueWithinRangePredicate\u003cIngredient, Quantity\u003e INGREDIENT_QUANTITY_5_TO_600_PREDICATE \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"            new ValueWithinRangePredicate\u003c\u003e(Ingredient::getQuantity, new Quantity(\"5\"), new Quantity(\"600\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"    public static final StringContainsKeywordsPredicate\u003cIngredient\u003e INGREDIENT_UNIT_WHOLE_GRAMS_PREDICATE \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"            new StringContainsKeywordsPredicate\u003c\u003e(Ingredient::getUnit, List.of(\"whole\", \"grams\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Imranr2"},"content":"    // Order predicates","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"    public static final StringContainsKeywordsPredicate\u003cOrder\u003e CLIENT_NAME_CAROL_DAVID_PREDICATE \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Imranr2"},"content":"            new StringContainsKeywordsPredicate\u003c\u003e(Order::getClientName, List.of(\"Carol\", \"David\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Imranr2"},"content":"    public static final StringContainsKeywordsPredicate\u003cOrder\u003e CLIENT_PHONE_9110_3216_PREDICATE \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"            new StringContainsKeywordsPredicate\u003c\u003e(Order::getClientPhone, List.of(\"9110\", \"3216\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"    public static final StringContainsKeywordsPredicate\u003cOrder\u003e CLIENT_ADDRESS_EUNOS_BISHAN_PREDICATE \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Imranr2"},"content":"            new StringContainsKeywordsPredicate\u003c\u003e(Order::getClientAddress, List.of(\"Eunos\", \"Bishan\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"Imranr2"},"content":"    // Generic stub predicates","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"Imranr2"},"content":"    public static final StringContainsKeywordsPredicate\u003cGenericStub\u003e GENERIC_STUB_NAME_ALICE_BOB_PREDICATE \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"Imranr2"},"content":"            new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getName, List.of(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"Imranr2"},"content":"    public static final StringContainsKeywordsPredicate\u003cGenericStub\u003e GENERIC_STUB_ADDRESS_YISHUN_GEYLANG_PREDICATE \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"Imranr2"},"content":"            new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getAddress, List.of(\"Yishun\", \"Geylang\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Imranr2"},"content":"    public static \u003cT\u003e void addPredicates(PredicateCollection\u003cT\u003e predicateCollection,","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"Imranr2"},"content":"                                         List\u003cPredicate\u003cT\u003e\u003e predicates) {","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Imranr2"},"content":"        for (Predicate\u003cT\u003e predicate : predicates) {","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Imranr2"},"content":"            predicateCollection.addPredicate(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"Imranr2"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cGenericStub\u003e predicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Imranr2"},"content":"        addPredicates(predicateCollection, List.of(GENERIC_STUB_NAME_ALICE_BOB_PREDICATE,","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Imranr2"},"content":"                GENERIC_STUB_ADDRESS_YISHUN_GEYLANG_PREDICATE));","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cGenericStub\u003e sameOrderPredicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"Imranr2"},"content":"        addPredicates(sameOrderPredicateCollection, List.of(GENERIC_STUB_NAME_ALICE_BOB_PREDICATE,","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"Imranr2"},"content":"                GENERIC_STUB_ADDRESS_YISHUN_GEYLANG_PREDICATE));","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cGenericStub\u003e diffOrderPredicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"Imranr2"},"content":"        addPredicates(diffOrderPredicateCollection, List.of(GENERIC_STUB_ADDRESS_YISHUN_GEYLANG_PREDICATE,","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"Imranr2"},"content":"                GENERIC_STUB_NAME_ALICE_BOB_PREDICATE));","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cGenericStub\u003e incompletePredicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"Imranr2"},"content":"        addPredicates(incompletePredicateCollection,","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"Imranr2"},"content":"                List.of(GENERIC_STUB_ADDRESS_YISHUN_GEYLANG_PREDICATE));","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cGenericStub\u003e emptyGenericStubPredicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"Imranr2"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"Imranr2"},"content":"        assertFalse(predicateCollection.equals(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"Imranr2"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"Imranr2"},"content":"        assertFalse(predicateCollection.equals(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"Imranr2"},"content":"        // same object - must be equal","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"Imranr2"},"content":"        assertEquals(predicateCollection, predicateCollection);","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"Imranr2"},"content":"        // same order - must be equal","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"Imranr2"},"content":"        assertEquals(predicateCollection, sameOrderPredicateCollection);","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"Imranr2"},"content":"        // diff order - must be equal","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"Imranr2"},"content":"        assertEquals(predicateCollection, diffOrderPredicateCollection);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"Imranr2"},"content":"        // Different No. of predicates - not equal","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"Imranr2"},"content":"        assertNotEquals(predicateCollection, incompletePredicateCollection);","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"Imranr2"},"content":"        // One has no predicates - not equal","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"Imranr2"},"content":"        assertNotEquals(predicateCollection, emptyGenericStubPredicateCollection);","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"Imranr2"},"content":"    public void test() {","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"Imranr2"},"content":"        PredicateCollection\u003cGenericStub\u003e genericStubPredicateCollection \u003d new PredicateCollection\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"Imranr2"},"content":"        addPredicates(genericStubPredicateCollection, List.of(GENERIC_STUB_NAME_ALICE_BOB_PREDICATE,","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"Imranr2"},"content":"                GENERIC_STUB_ADDRESS_YISHUN_GEYLANG_PREDICATE));","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"Imranr2"},"content":"        // GenericStub with everything matching","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"Imranr2"},"content":"        assertTrue(genericStubPredicateCollection.test(new GenericStub(new GenericString(\"Alice\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"Imranr2"},"content":"                new GenericString(\"Yishun\"))));","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"Imranr2"},"content":"        // GenericStub with matching name but not address","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"Imranr2"},"content":"        assertFalse(genericStubPredicateCollection.test(new GenericStub(new GenericString(\"Alice\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"Imranr2"},"content":"                new GenericString(\"Serangoon\"))));","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"Imranr2"},"content":"        // GenericStub with matching address but not name","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"Imranr2"},"content":"        assertFalse(genericStubPredicateCollection.test(new GenericStub(new GenericString(\"Carol\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"Imranr2"},"content":"                new GenericString(\"Yishun\"))));","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"Imranr2"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Imranr2":105,"zognin":18}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/predicate/StringContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.stubs.GenericStub;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"public class StringContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Imranr2"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"        StringContainsKeywordsPredicate\u003cGenericStub\u003e firstPredicate \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":"                new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getName, firstPredicateKeywordList);","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":"        StringContainsKeywordsPredicate\u003cGenericStub\u003e secondPredicate \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Imranr2"},"content":"                new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getName, secondPredicateKeywordList);","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"Imranr2"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"Imranr2"},"content":"        StringContainsKeywordsPredicate\u003cGenericStub\u003e firstPredicateCopy \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"                new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getName, firstPredicateKeywordList);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Imranr2"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Imranr2"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Imranr2"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Imranr2"},"content":"        // different keywords -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Imranr2"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Imranr2"},"content":"    public void test_fieldContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Imranr2"},"content":"        StringContainsKeywordsPredicate\u003cGenericStub\u003e predicate \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"                new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getName, List.of(\"Alice\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Imranr2"},"content":"        GenericStub genericStub \u003d new GenericStub(new GenericString(\"Alice\"), new GenericString(\"Yishun\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"        // One name keyword","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"        assertTrue(predicate.test(genericStub));","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"Imranr2"},"content":"        // Multiple name keywords","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"Imranr2"},"content":"        predicate \u003d new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getName, List.of(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"Imranr2"},"content":"        genericStub \u003d new GenericStub(new GenericString(\"Alice Bob\"), new GenericString(\"Yishun\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"Imranr2"},"content":"        assertTrue(predicate.test(genericStub));","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"Imranr2"},"content":"        // Only one matching name keyword","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"Imranr2"},"content":"        predicate \u003d new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getName, List.of(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Imranr2"},"content":"        genericStub \u003d new GenericStub(new GenericString(\"Alice Carol\"), new GenericString(\"Yishun\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"Imranr2"},"content":"        assertTrue(predicate.test(genericStub));","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"Imranr2"},"content":"        // Mixed-case name keywords","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"Imranr2"},"content":"        predicate \u003d new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getName, List.of(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"Imranr2"},"content":"        genericStub \u003d new GenericStub(new GenericString(\"Alice Bob\"), new GenericString(\"Yishun\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"Imranr2"},"content":"        assertTrue(predicate.test(genericStub));","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"Imranr2"},"content":"        // One address keyword","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"Imranr2"},"content":"        predicate \u003d new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getAddress, List.of(\"Yishun\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Imranr2"},"content":"        genericStub \u003d new GenericStub(new GenericString(\"Alice\"), new GenericString(\"Yishun\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Imranr2"},"content":"        assertTrue(predicate.test(genericStub));","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"Imranr2"},"content":"        // Multiple address keywords","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"Imranr2"},"content":"        predicate \u003d new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getAddress, List.of(\"Yishun\", \"Geylang\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"Imranr2"},"content":"        genericStub \u003d new GenericStub(new GenericString(\"Alice Bob\"), new GenericString(\"Yishun Geylang\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"Imranr2"},"content":"        assertTrue(predicate.test(genericStub));","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"Imranr2"},"content":"        // Only one matching address keyword","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"Imranr2"},"content":"        predicate \u003d new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getAddress, List.of(\"Yishun\", \"Serangoon\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"Imranr2"},"content":"        genericStub \u003d new GenericStub(new GenericString(\"Alice Carol\"), new GenericString(\"Yishun\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"Imranr2"},"content":"        assertTrue(predicate.test(genericStub));","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"Imranr2"},"content":"        // Mixed-case address keywords","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"Imranr2"},"content":"        predicate \u003d new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getAddress, List.of(\"YiSHun\", \"SeRAngOOn\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"Imranr2"},"content":"        genericStub \u003d new GenericStub(new GenericString(\"Alice Bob\"), new GenericString(\"Yishun Serangoon\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"Imranr2"},"content":"        assertTrue(predicate.test(genericStub));","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"Imranr2"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Imranr2"},"content":"        // Zero name keywords","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"Imranr2"},"content":"        StringContainsKeywordsPredicate\u003cGenericStub\u003e predicate \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"Imranr2"},"content":"                new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getName, Collections.emptyList());","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"Imranr2"},"content":"        GenericStub genericStub \u003d new GenericStub(new GenericString(\"Alice\"), new GenericString(\"Yishun\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"Imranr2"},"content":"        assertFalse(predicate.test(genericStub));","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"Imranr2"},"content":"        // Non-matching name keyword","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"Imranr2"},"content":"        predicate \u003d new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getName, Collections.singletonList(\"Carol\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"Imranr2"},"content":"        genericStub \u003d new GenericStub(new GenericString(\"Alice\"), new GenericString(\"Yishun\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"Imranr2"},"content":"        assertFalse(predicate.test(genericStub));","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"Imranr2"},"content":"        // Zero address keywords","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"Imranr2"},"content":"        predicate \u003d new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getAddress, Collections.emptyList());","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"Imranr2"},"content":"        genericStub \u003d new GenericStub(new GenericString(\"Alice\"), new GenericString(\"Yishun\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"Imranr2"},"content":"        assertFalse(predicate.test(genericStub));","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"Imranr2"},"content":"        // Non-matching address keyword","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"Imranr2"},"content":"        predicate \u003d new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getAddress,","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"Imranr2"},"content":"                Collections.singletonList(\"Geylang\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"Imranr2"},"content":"        genericStub \u003d new GenericStub(new GenericString(\"Alice\"), new GenericString(\"Yishun\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"Imranr2"},"content":"        assertFalse(predicate.test(genericStub));","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"Imranr2"},"content":"        // Keyword matches different field","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"Imranr2"},"content":"        predicate \u003d new StringContainsKeywordsPredicate\u003c\u003e(GenericStub::getName, Collections.singletonList(\"Yishun\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"Imranr2"},"content":"        genericStub \u003d new GenericStub(new GenericString(\"Alice\"), new GenericString(\"Yishun\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"Imranr2"},"content":"        assertFalse(predicate.test(genericStub));","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"Imranr2"},"content":"        // Keyword matches different field","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"Imranr2"},"content":"        predicate \u003d new StringContainsKeywordsPredicate\u003c\u003e(","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"Imranr2"},"content":"                GenericStub::getAddress, Collections.singletonList(\"Alice\")","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"Imranr2"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"Imranr2"},"content":"        genericStub \u003d new GenericStub(new GenericString(\"Alice\"), new GenericString(\"Yishun\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"Imranr2"},"content":"        assertFalse(predicate.test(genericStub));","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"Imranr2"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Imranr2":119,"zognin":2}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/predicate/ValueInListPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.stubs.GenericQuantityStub;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"public class ValueInListPredicateTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        List\u003cQuantity\u003e firstPredicateQuantityList \u003d Collections.singletonList(new Quantity(\"5\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"        List\u003cQuantity\u003e secondPredicateQuantityList \u003d Arrays.asList(new Quantity(\"5\"), new Quantity(\"10\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"        ValueInListPredicate\u003cGenericQuantityStub, Quantity\u003e firstPredicate \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"                new ValueInListPredicate\u003c\u003e(GenericQuantityStub::getQuantity, firstPredicateQuantityList);","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        ValueInListPredicate\u003cGenericQuantityStub, Quantity\u003e secondPredicate \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"                new ValueInListPredicate\u003c\u003e(GenericQuantityStub::getQuantity, secondPredicateQuantityList);","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        ValueInListPredicate\u003cGenericQuantityStub, Quantity\u003e firstPredicateCopy \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"                new ValueInListPredicate\u003c\u003e(GenericQuantityStub::getQuantity, firstPredicateQuantityList);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        // different quantities -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"    public void test_valueInList_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"        ValueInListPredicate\u003cGenericQuantityStub, Quantity\u003e predicate \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"                new ValueInListPredicate\u003c\u003e(GenericQuantityStub::getQuantity, List.of(new Quantity(\"5\")));","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        GenericQuantityStub genericQuantityStub \u003d new GenericQuantityStub(new Quantity(\"5\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        // One value, it is a match","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        assertTrue(predicate.test(genericQuantityStub));","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"        // Multiple values, at least one match","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"        predicate \u003d new ValueInListPredicate\u003c\u003e(GenericQuantityStub::getQuantity,","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"                List.of(new Quantity(\"5\"), new Quantity(\"10\")));","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"        assertTrue(predicate.test(genericQuantityStub));","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"    public void test_valueNotInList_returnsFalse() {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        ValueInListPredicate\u003cGenericQuantityStub, Quantity\u003e predicate \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"                new ValueInListPredicate\u003c\u003e(GenericQuantityStub::getQuantity, List.of(new Quantity(\"5\")));","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"        GenericQuantityStub genericQuantityStub \u003d new GenericQuantityStub(new Quantity(\"10\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"        // One value, no match","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"        assertFalse(predicate.test(genericQuantityStub));","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"        // Multiple values, no match","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"        predicate \u003d new ValueInListPredicate\u003c\u003e(GenericQuantityStub::getQuantity,","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"                List.of(new Quantity(\"5\"), new Quantity(\"15\")));","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"        assertFalse(predicate.test(genericQuantityStub));","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"zognin":72}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/predicate/ValueWithinRangePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.stubs.GenericQuantityStub;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"public class ValueWithinRangePredicateTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        Quantity firstPredicateMinQuantity \u003d new Quantity(\"1\");","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"        Quantity firstPredicateMaxQuantity \u003d new Quantity(\"10\");","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"        Quantity secondPredicateMinQuantity \u003d new Quantity(\"3\");","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"        Quantity secondPredicateMaxQuantity \u003d new Quantity(\"7\");","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"        ValueWithinRangePredicate\u003cGenericQuantityStub, Quantity\u003e firstPredicate \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"                new ValueWithinRangePredicate\u003c\u003e(GenericQuantityStub::getQuantity,","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"                firstPredicateMinQuantity, firstPredicateMaxQuantity);","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"        ValueWithinRangePredicate\u003cGenericQuantityStub, Quantity\u003e secondPredicate \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"                new ValueWithinRangePredicate\u003c\u003e(GenericQuantityStub::getQuantity,","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"                secondPredicateMinQuantity, secondPredicateMaxQuantity);","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        ValueWithinRangePredicate\u003cGenericQuantityStub, Quantity\u003e firstPredicateCopy \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"                new ValueWithinRangePredicate\u003c\u003e(GenericQuantityStub::getQuantity,","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"                        firstPredicateMinQuantity, firstPredicateMaxQuantity);","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        // different quantities -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"    public void test_valueWithinRange_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"        Quantity minQuantity \u003d new Quantity(\"3\");","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"        Quantity maxQuantity \u003d new Quantity(\"7\");","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        ValueWithinRangePredicate\u003cGenericQuantityStub, Quantity\u003e predicate \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"                new ValueWithinRangePredicate\u003c\u003e(GenericQuantityStub::getQuantity, minQuantity, maxQuantity);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"        GenericQuantityStub genericQuantityStub \u003d new GenericQuantityStub(new Quantity(\"5\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"        assertTrue(predicate.test(genericQuantityStub));","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"        // Start inclusive","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"        genericQuantityStub \u003d new GenericQuantityStub(minQuantity);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"        assertTrue(predicate.test(genericQuantityStub));","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"        // End inclusive","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"        genericQuantityStub \u003d new GenericQuantityStub(maxQuantity);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"        assertTrue(predicate.test(genericQuantityStub));","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"    public void test_valueOutOfRange_returnsFalse() {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"        Quantity minQuantity \u003d new Quantity(\"3\");","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"        Quantity maxQuantity \u003d new Quantity(\"7\");","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"        ValueWithinRangePredicate\u003cGenericQuantityStub, Quantity\u003e predicate \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"                new ValueWithinRangePredicate\u003c\u003e(GenericQuantityStub::getQuantity, minQuantity, maxQuantity);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"        // Less than min","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"        GenericQuantityStub genericQuantityStub \u003d new GenericQuantityStub(new Quantity(\"1\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"        assertFalse(predicate.test(genericQuantityStub));","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"        // Greater than max","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"        genericQuantityStub \u003d new GenericQuantityStub(new Quantity(\"11\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"        assertFalse(predicate.test(genericQuantityStub));","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"zognin":78}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/shared/GenericStringTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.shared;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"public class GenericStringTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GenericString(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    public void constructor_invalidGenericString_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"        String invalidGenericString \u003d \"\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GenericString(invalidGenericString));","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    public void isValidGenericString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"        // null generic string","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e GenericString.isValidGenericString(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"        // invalid generic string","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(GenericString.isValidGenericString(\"\")); // empty string","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(GenericString.isValidGenericString(\" \")); // spaces only","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(GenericString.isValidGenericString(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(GenericString.isValidGenericString(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"        // valid generic string","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(GenericString.isValidGenericString(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(GenericString.isValidGenericString(\"12345\")); // numbers only","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(GenericString.isValidGenericString(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(GenericString.isValidGenericString(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(GenericString.isValidGenericString(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"EuniceSim142":39}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/model/shared/QuantityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.model.shared;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"public class QuantityTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Quantity(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    public void constructor_invalidQuantity_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"        String invalidQuantity \u003d \"\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Quantity(invalidQuantity));","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    public void isValidQuantity() {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"        // null quantity","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(Quantity.isValidQuantity(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"        // invalid quantity","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(Quantity.isValidQuantity(\"\")); // empty string","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(Quantity.isValidQuantity(\" \")); // spaces only","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(Quantity.isValidQuantity(\"-91\")); // negative number","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(Quantity.isValidQuantity(\"qty\")); // non-numeric","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(Quantity.isValidQuantity(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(Quantity.isValidQuantity(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"        assertFalse(Quantity.isValidQuantity(\"9312333333331534\")); // int out of range","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"        // valid quantity","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"        assertTrue(Quantity.isValidQuantity(\"50\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(Quantity.isValidQuantity(\"40000\")); // large quantities","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"    public void isValidInternalQuantity() {","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"        // null quantity","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Quantity.isValidInternalQuantity(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"        // invalid quantity","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Quantity.isValidInternalQuantity(\"\")); // empty string","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Quantity.isValidInternalQuantity(\" \")); // spaces only","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Quantity.isValidInternalQuantity(\"-91\")); // negative number","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Quantity.isValidInternalQuantity(\"qty\")); // non-numeric","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Quantity.isValidInternalQuantity(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Quantity.isValidInternalQuantity(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"        assertFalse(Quantity.isValidInternalQuantity(\"9312333333331534\")); // int out of range","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"        // valid quantity","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(Quantity.isValidInternalQuantity(\"0\")); // internal allows 0","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(Quantity.isValidInternalQuantity(\"50\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"        assertTrue(Quantity.isValidInternalQuantity(\"40000\")); // large quantities","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"EuniceSim142":37,"sivayogasubramanian":22}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/storage/JsonAdaptedClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.storage.JsonAdaptedClient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.BENSON;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.IllegalValueException;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Email;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"public class JsonAdaptedClientTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    public void toModelType_validClientDetails_returnsClient() throws Exception {","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(BENSON);","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(BENSON, client.toModelType());","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"                new JsonAdaptedClient(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS);","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d GenericString.getMessageConstraints(\"Name\");","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS);","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, GenericString.class.getSimpleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"                new JsonAdaptedClient(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS);","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS);","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS);","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS);","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS);","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, null);","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"EuniceSim142":27,"-":57,"sivayogasubramanian":8}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/storage/JsonAdaptedIngredientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.storage.JsonAdaptedIngredient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.BUTTER;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.IllegalValueException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"public class JsonAdaptedIngredientTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    private static final String INVALID_INGREDIENT_NAME \u003d \"Ch@co!late\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    private static final String INVALID_QUANTITY \u003d \"-20\";","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"    private static final String INVALID_UNIT \u003d \"gr@ms\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    private static final String VALID_INGREDIENT_NAME \u003d BUTTER.getName().toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    private static final String VALID_QUANTITY \u003d BUTTER.getQuantity().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"    private static final String VALID_UNIT \u003d BUTTER.getUnit().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    public void toModelType_validIngredientDetails_returnsIngredient() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedIngredient ingredient \u003d new JsonAdaptedIngredient(BUTTER);","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(BUTTER, ingredient.toModelType());","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    public void toModelType_invalidIngredientName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedIngredient ingredient \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"                new JsonAdaptedIngredient(INVALID_INGREDIENT_NAME, VALID_QUANTITY, VALID_UNIT);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d GenericString.getMessageConstraints(\"Name\");","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, ingredient::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"    public void toModelType_nullIngredientName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedIngredient ingredient \u003d new JsonAdaptedIngredient(null, VALID_QUANTITY, VALID_UNIT);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, GenericString.class.getSimpleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, ingredient::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"    public void toModelType_invalidQuantity_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedIngredient ingredient \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"                new JsonAdaptedIngredient(VALID_INGREDIENT_NAME, INVALID_QUANTITY, VALID_UNIT);","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"        String expectedMessage \u003d Quantity.MESSAGE_INTERNAL_CONSTRAINTS;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, ingredient::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"    public void toModelType_nullQuantity_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedIngredient ingredient \u003d new JsonAdaptedIngredient(VALID_INGREDIENT_NAME, null, VALID_UNIT);","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Quantity.class.getSimpleName());","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, ingredient::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"    public void toModelType_invalidUnit_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedIngredient ingredient \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"                new JsonAdaptedIngredient(VALID_INGREDIENT_NAME, VALID_QUANTITY, INVALID_UNIT);","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d GenericString.getMessageConstraints(\"Unit\");","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, ingredient::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"    public void toModelType_nullUnit_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedIngredient ingredient \u003d new JsonAdaptedIngredient(VALID_INGREDIENT_NAME, VALID_QUANTITY, null);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, GenericString.class.getSimpleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, ingredient::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"EuniceSim142":71,"sivayogasubramanian":2}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/storage/JsonAdaptedOrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.storage.JsonAdaptedOrder.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.BENSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.CHICKEN;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.RICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_BENSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalOrders.ORDER_FOR_CARL;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.CompletionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Deadline;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Price;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"public class JsonAdaptedOrderTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"    private static final String INVALID_CLIENT_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Imranr2"},"content":"    private static final String INVALID_CLIENT_PHONE \u003d \"+651234\";","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"    private static final String INVALID_CLIENT_ADDRESS \u003d \" \";","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String INVALID_RECIPE_NAME \u003d \"Chicken@Rice\";","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String INVALID_ORDER_PRICE \u003d \"$1.50\";","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String INVALID_ORDER_DEADLINE \u003d \"2021-12-12 1900\";","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String INVALID_ORDER_QUANTITY \u003d \"-1\";","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"    private static final String INVALID_ORDER_COMPLETION_STATUS \u003d \"n\";","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Imranr2"},"content":"    private static final String VALID_CLIENT_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Imranr2"},"content":"    private static final String VALID_CLIENT_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Imranr2"},"content":"    private static final String VALID_CLIENT_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String VALID_RECIPE_NAME \u003d \"Chicken Rice\";","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final List\u003cJsonAdaptedIngredient\u003e VALID_RECIPE_INGREDIENT_LIST \u003d List.of(","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"            new JsonAdaptedIngredient(","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"                    CHICKEN.getName().toString(), new Quantity(\"1\").toString(), CHICKEN.getUnit().toString()),","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"            new JsonAdaptedIngredient(","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"                    RICE.getName().toString(), new Quantity(\"100\").toString(), RICE.getUnit().toString()));","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String VALID_ORDER_PRICE \u003d \"4.50\";","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String VALID_ORDER_DEADLINE \u003d \"20-12-2021 1200\";","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String VALID_ORDER_QUANTITY \u003d \"2\";","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"    private static final String VALID_ORDER_COMPLETION_STATUS \u003d \"no\";","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"    public void toModelType_validOrderDetails_returnsOrder() throws IllegalValueException {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Imranr2"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(ORDER_FOR_BENSON);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Imranr2"},"content":"        assertEquals(ORDER_FOR_BENSON, order.toModelType());","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"    public void toModelType_validOrderDetailsWithEmptyIngredients_returnsOrder() throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(ORDER_FOR_CARL);","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"        assertEquals(ORDER_FOR_CARL, order.toModelType());","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_CLIENT_NAME, INVALID_CLIENT_PHONE, VALID_CLIENT_ADDRESS,","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"                VALID_RECIPE_NAME, VALID_RECIPE_INGREDIENT_LIST, VALID_ORDER_PRICE, VALID_ORDER_DEADLINE,","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"                VALID_ORDER_QUANTITY, VALID_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_CLIENT_NAME, null, VALID_CLIENT_ADDRESS,","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"                VALID_RECIPE_NAME, VALID_RECIPE_INGREDIENT_LIST, VALID_ORDER_PRICE, VALID_ORDER_DEADLINE,","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"                VALID_ORDER_QUANTITY, VALID_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"Imranr2"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"Imranr2"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"                new JsonAdaptedOrder(INVALID_CLIENT_NAME, VALID_CLIENT_PHONE, VALID_CLIENT_ADDRESS,","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"                        VALID_RECIPE_NAME, VALID_RECIPE_INGREDIENT_LIST, VALID_ORDER_PRICE, VALID_ORDER_DEADLINE,","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"EuniceSim142"},"content":"                        VALID_ORDER_QUANTITY, VALID_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d GenericString.getMessageConstraints(\"Name\");","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"Imranr2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"Imranr2"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(null, VALID_CLIENT_PHONE, VALID_CLIENT_ADDRESS,","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"                VALID_RECIPE_NAME, VALID_RECIPE_INGREDIENT_LIST, VALID_ORDER_PRICE, VALID_ORDER_DEADLINE,","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"                VALID_ORDER_QUANTITY, VALID_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Imranr2"},"content":"        String expectedMessage \u003d String","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"                .format(JsonAdaptedOrder.MISSING_FIELD_MESSAGE_FORMAT, GenericString.class.getSimpleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"Imranr2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"Imranr2"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"Imranr2"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"sivayogasubramanian"},"content":"                new JsonAdaptedOrder(VALID_CLIENT_NAME, VALID_CLIENT_PHONE, INVALID_CLIENT_ADDRESS,","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"                        VALID_RECIPE_NAME, VALID_RECIPE_INGREDIENT_LIST, VALID_ORDER_PRICE, VALID_ORDER_DEADLINE,","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"EuniceSim142"},"content":"                        VALID_ORDER_QUANTITY, VALID_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"Imranr2"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"Imranr2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"Imranr2"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"Imranr2"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_CLIENT_NAME, VALID_CLIENT_PHONE, null,","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"sivayogasubramanian"},"content":"                VALID_RECIPE_NAME, VALID_RECIPE_INGREDIENT_LIST, VALID_ORDER_PRICE, VALID_ORDER_DEADLINE,","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"EuniceSim142"},"content":"                VALID_ORDER_QUANTITY, VALID_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"Imranr2"},"content":"        String expectedMessage \u003d String","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"Imranr2"},"content":"                .format(JsonAdaptedOrder.MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"Imranr2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test void toModelType_invalidRecipeName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"                new JsonAdaptedOrder(VALID_CLIENT_NAME, VALID_CLIENT_PHONE, VALID_CLIENT_ADDRESS,","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"                        INVALID_RECIPE_NAME, VALID_RECIPE_INGREDIENT_LIST, VALID_ORDER_PRICE, VALID_ORDER_DEADLINE,","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"EuniceSim142"},"content":"                        VALID_ORDER_QUANTITY, VALID_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"sivayogasubramanian"},"content":"        String expectedMessage \u003d GenericString.getMessageConstraints(\"Recipe Name\");","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test void toModelType_nullRecipeName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"sivayogasubramanian"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_CLIENT_NAME, VALID_CLIENT_PHONE, VALID_CLIENT_ADDRESS,","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"sivayogasubramanian"},"content":"                null, VALID_RECIPE_INGREDIENT_LIST, VALID_ORDER_PRICE, VALID_ORDER_DEADLINE,","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"EuniceSim142"},"content":"                VALID_ORDER_QUANTITY, VALID_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"sivayogasubramanian"},"content":"        String expectedMessage \u003d String","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"sivayogasubramanian"},"content":"                .format(JsonAdaptedOrder.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"sivayogasubramanian"},"content":"                        GenericString.getMessageConstraints(\"Recipe Name\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test void toModelType_invalidPrice_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"sivayogasubramanian"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"sivayogasubramanian"},"content":"                new JsonAdaptedOrder(VALID_CLIENT_NAME, VALID_CLIENT_PHONE, VALID_CLIENT_ADDRESS,","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"sivayogasubramanian"},"content":"                        VALID_RECIPE_NAME, VALID_RECIPE_INGREDIENT_LIST, INVALID_ORDER_PRICE, VALID_ORDER_DEADLINE,","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"EuniceSim142"},"content":"                        VALID_ORDER_QUANTITY, VALID_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"sivayogasubramanian"},"content":"        String expectedMessage \u003d Price.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test void toModelType_nullPrice_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"sivayogasubramanian"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_CLIENT_NAME, VALID_CLIENT_PHONE, VALID_CLIENT_ADDRESS,","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"sivayogasubramanian"},"content":"                VALID_RECIPE_NAME, VALID_RECIPE_INGREDIENT_LIST, null, VALID_ORDER_DEADLINE,","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"EuniceSim142"},"content":"                VALID_ORDER_QUANTITY, VALID_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"sivayogasubramanian"},"content":"        String expectedMessage \u003d String","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"sivayogasubramanian"},"content":"                .format(JsonAdaptedOrder.MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName());","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test void toModelType_invalidDeadline_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"sivayogasubramanian"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"sivayogasubramanian"},"content":"                new JsonAdaptedOrder(VALID_CLIENT_NAME, VALID_CLIENT_PHONE, VALID_CLIENT_ADDRESS,","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"sivayogasubramanian"},"content":"                        VALID_RECIPE_NAME, VALID_RECIPE_INGREDIENT_LIST, VALID_ORDER_PRICE, INVALID_ORDER_DEADLINE,","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"EuniceSim142"},"content":"                        VALID_ORDER_QUANTITY, VALID_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"sivayogasubramanian"},"content":"        String expectedMessage \u003d Deadline.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test void toModelType_nullDeadline_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"sivayogasubramanian"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_CLIENT_NAME, VALID_CLIENT_PHONE, VALID_CLIENT_ADDRESS,","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"sivayogasubramanian"},"content":"                VALID_RECIPE_NAME, VALID_RECIPE_INGREDIENT_LIST, VALID_ORDER_PRICE, null,","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"EuniceSim142"},"content":"                VALID_ORDER_QUANTITY, VALID_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"sivayogasubramanian"},"content":"        String expectedMessage \u003d String","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"sivayogasubramanian"},"content":"                .format(JsonAdaptedOrder.MISSING_FIELD_MESSAGE_FORMAT, Deadline.class.getSimpleName());","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test void toModelType_invalidQuantity_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"sivayogasubramanian"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"sivayogasubramanian"},"content":"                new JsonAdaptedOrder(VALID_CLIENT_NAME, VALID_CLIENT_PHONE, VALID_CLIENT_ADDRESS,","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"sivayogasubramanian"},"content":"                        VALID_RECIPE_NAME, VALID_RECIPE_INGREDIENT_LIST, VALID_ORDER_PRICE, VALID_ORDER_DEADLINE,","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"EuniceSim142"},"content":"                        INVALID_ORDER_QUANTITY, VALID_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"sivayogasubramanian"},"content":"        String expectedMessage \u003d Quantity.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test void toModelType_nullQuantity_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"sivayogasubramanian"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_CLIENT_NAME, VALID_CLIENT_PHONE, VALID_CLIENT_ADDRESS,","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"sivayogasubramanian"},"content":"                VALID_RECIPE_NAME, VALID_RECIPE_INGREDIENT_LIST, VALID_ORDER_PRICE, VALID_ORDER_DEADLINE,","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"EuniceSim142"},"content":"                null, VALID_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"sivayogasubramanian"},"content":"        String expectedMessage \u003d String","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"sivayogasubramanian"},"content":"                .format(JsonAdaptedOrder.MISSING_FIELD_MESSAGE_FORMAT, Quantity.class.getSimpleName());","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"EuniceSim142"},"content":"    @Test void toModelType_invalidCompletionStatus_throwsIllegalValueException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedOrder order \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"EuniceSim142"},"content":"                new JsonAdaptedOrder(VALID_CLIENT_NAME, VALID_CLIENT_PHONE, VALID_CLIENT_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"EuniceSim142"},"content":"                        VALID_RECIPE_NAME, VALID_RECIPE_INGREDIENT_LIST, VALID_ORDER_PRICE, VALID_ORDER_DEADLINE,","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"EuniceSim142"},"content":"                        VALID_ORDER_QUANTITY, INVALID_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d CompletionStatus.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"EuniceSim142"},"content":"    @Test void toModelType_nullCompletionStatus_throwsIllegalValueException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"EuniceSim142"},"content":"        JsonAdaptedOrder order \u003d new JsonAdaptedOrder(VALID_CLIENT_NAME, VALID_CLIENT_PHONE, VALID_CLIENT_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"EuniceSim142"},"content":"                VALID_RECIPE_NAME, VALID_RECIPE_INGREDIENT_LIST, VALID_ORDER_PRICE, VALID_ORDER_DEADLINE,","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"EuniceSim142"},"content":"                VALID_ORDER_QUANTITY, null);","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"EuniceSim142"},"content":"        String expectedMessage \u003d String","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"EuniceSim142"},"content":"                .format(JsonAdaptedOrder.MISSING_FIELD_MESSAGE_FORMAT, CompletionStatus.class.getSimpleName());","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, order::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"EuniceSim142":38,"Imranr2":38,"sivayogasubramanian":133}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.ALICE;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.HOON;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.IDA;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.DataConversionException;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"    public void readAddressBook_invalidClientAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidClientAddressBook.json\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"    public void readAddressBook_invalidAndValidClientAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidClientAddressBook.json\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"    public void readAddressBook_invalidIngredientAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidIngredientAddressBook.json\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"    public void readAddressBook_invalidAndValidIngredientAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidIngredientAddressBook.json\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"EuniceSim142"},"content":"        original.addClient(HOON);","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"EuniceSim142"},"content":"        original.removeClient(ALICE);","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"        original.addClient(IDA);","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"EuniceSim142":15,"-":96,"sivayogasubramanian":9}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.util.JsonUtil;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.IllegalValueException;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    private static final Path TYPICAL_CLIENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalClientsAddressBook.json\");","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    private static final Path INVALID_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidClientAddressBook.json\");","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    private static final Path DUPLICATE_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateClientAddressBook.json\");","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"    private static final Path INVALID_INGREDIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidIngredientAddressBook.json\");","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    private static final Path DUPLICATE_INGREDIENT_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"            .resolve(\"duplicateIngredientAddressBook.json\");","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final Path INVALID_ORDER_FILE_1 \u003d TEST_DATA_FOLDER.resolve(\"invalidOrderAddressBook1.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final Path INVALID_ORDER_FILE_2 \u003d TEST_DATA_FOLDER.resolve(\"invalidOrderAddressBook2.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final Path INVALID_ORDER_FILE_3 \u003d TEST_DATA_FOLDER.resolve(\"invalidOrderAddressBook3.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final Path INVALID_ORDER_FILE_4 \u003d TEST_DATA_FOLDER.resolve(\"invalidOrderAddressBook4.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final Path INVALID_ORDER_FILE_5 \u003d TEST_DATA_FOLDER.resolve(\"invalidOrderAddressBook5.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final Path INVALID_ORDER_FILE_6 \u003d TEST_DATA_FOLDER.resolve(\"invalidOrderAddressBook6.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final Path INVALID_ORDER_FILE_7 \u003d TEST_DATA_FOLDER.resolve(\"invalidOrderAddressBook7.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final Path INVALID_ORDER_FILE_8 \u003d TEST_DATA_FOLDER.resolve(\"invalidOrderAddressBook8.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"    private static final Path INVALID_ORDER_FILE_9 \u003d TEST_DATA_FOLDER.resolve(\"invalidOrderAddressBook9.json\");","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final Path DUPLICATE_ORDER_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateOrderAddressBook.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"    public void toModelType_typicalClientsFile_success() throws Exception {","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CLIENTS_FILE,","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"        AddressBook typicalClientsAddressBook \u003d TypicalClients.getTypicalAddressBook();","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"        assertEquals(addressBookFromFile, typicalClientsAddressBook);","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"    public void toModelType_invalidClientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CLIENT_FILE,","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"    public void toModelType_duplicateClients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CLIENT_FILE,","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_CLIENT,","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"    public void toModelType_invalidOrderFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ORDER_FILE_1,","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"        dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ORDER_FILE_2,","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"        dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ORDER_FILE_3,","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"        dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ORDER_FILE_4,","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"        dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ORDER_FILE_5,","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"        dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ORDER_FILE_6,","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"        dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ORDER_FILE_7,","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"        dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ORDER_FILE_8,","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"EuniceSim142"},"content":"        dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ORDER_FILE_9,","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"sivayogasubramanian"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"    public void toModelType_duplicateOrders_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"sivayogasubramanian"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_ORDER_FILE,","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"sivayogasubramanian"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"sivayogasubramanian"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_ORDER,","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"EuniceSim142"},"content":"    public void toModelType_invalidIngredientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"EuniceSim142"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_INGREDIENT_FILE,","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"EuniceSim142"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"EuniceSim142"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"EuniceSim142"},"content":"    public void toModelType_duplicateIngredients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"EuniceSim142"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_INGREDIENT_FILE,","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"EuniceSim142"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"EuniceSim142"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_INGREDIENT,","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"EuniceSim142"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"EuniceSim142":35,"-":27,"sivayogasubramanian":58}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.GuiSettings;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.DataConversionException;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":116,"sivayogasubramanian":5}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.GuiSettings;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.UserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":60,"sivayogasubramanian":6}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withClient(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"     * Adds a new {@code Client} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    public AddressBookBuilder withClient(Client client) {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"        addressBook.addClient(client);","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"     * Adds a new {@code Ingredient} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"    public AddressBookBuilder withIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"        addressBook.addIngredient(ingredient);","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"EuniceSim142":13,"-":26,"sivayogasubramanian":3}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"-":32,"sivayogasubramanian":1}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/ClientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Email;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":" * A utility class to help with building Client objects.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"public class ClientBuilder {","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"    private static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    private static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    private static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    private static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    private GenericString name;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    private Phone phone;","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    private Email email;","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"    private Address address;","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"     * Creates a {@code ClientBuilder} with the default details.","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    public ClientBuilder() {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"        name \u003d new GenericString(DEFAULT_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"     * Initializes the ClientBuilder with the data of {@code clientToCopy}.","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"    public ClientBuilder(Client clientToCopy) {","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"        name \u003d clientToCopy.getName();","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"        phone \u003d clientToCopy.getPhone();","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"        email \u003d clientToCopy.getEmail();","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"        address \u003d clientToCopy.getAddress();","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the {@code Name} of the {@code Client} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"    public ClientBuilder withName(String name) {","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"        this.name \u003d new GenericString(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the {@code Address} of the {@code Client} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"    public ClientBuilder withAddress(String address) {","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the {@code Phone} of the {@code Client} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"    public ClientBuilder withPhone(String phone) {","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the {@code Email} of the {@code Client} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"    public ClientBuilder withEmail(String email) {","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"EuniceSim142"},"content":"    public Client build() {","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"EuniceSim142"},"content":"        return new Client(name, phone, email, address);","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"EuniceSim142":73,"sivayogasubramanian":5}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/ClientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.ClientDescriptor;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Email;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":" * A utility class to help with building EditClientDescriptor objects.","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"public class ClientDescriptorBuilder {","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    private ClientDescriptor descriptor;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    public ClientDescriptorBuilder() {","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"        descriptor \u003d new ClientDescriptor();","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    public ClientDescriptorBuilder(ClientDescriptor descriptor) {","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"        this.descriptor \u003d new ClientDescriptor(descriptor);","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"     * Returns an {@code EditClientDescriptor} with fields containing {@code client}\u0027s details","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"    public ClientDescriptorBuilder(Client client) {","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"        descriptor \u003d new ClientDescriptor();","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        descriptor.setName(client.getName());","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"        descriptor.setPhone(client.getPhone());","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"        descriptor.setEmail(client.getEmail());","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"        descriptor.setAddress(client.getAddress());","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the {@code Name} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"    public ClientDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"        descriptor.setName(new GenericString(name));","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the {@code Phone} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"    public ClientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the {@code Email} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"    public ClientDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the {@code Address} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"    public ClientDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"    public ClientDescriptor build() {","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"        return descriptor;","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"EuniceSim142":64,"sivayogasubramanian":6}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/ClientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.client.AddClientCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.ClientDescriptor;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":" * A utility class for Client.","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"public class ClientUtil {","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"     * Returns an add command string for adding the {@code client}.","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    public static String getAddCommand(Client client) {","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"        return AddClientCommand.COMMAND_WORD + \" \" + getClientDetails(client);","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"     * Returns the part of command string for the given {@code client}\u0027s details.","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    public static String getClientDetails(Client client) {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        sb.append(PREFIX_CLIENT_NAME + client.getName().toString() + \" \");","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"        sb.append(PREFIX_CLIENT_PHONE + client.getPhone().toString() + \" \");","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"        sb.append(PREFIX_CLIENT_EMAIL + client.getEmail().toString() + \" \");","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        sb.append(PREFIX_CLIENT_ADDRESS + client.getAddress().toString() + \" \");","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"     * Returns the part of command string for the given {@code EditClientDescriptor}\u0027s details.","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"    public static String getEditClientDescriptorDetails(ClientDescriptor descriptor) {","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_CLIENT_NAME).append(name).append(\" \"));","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_CLIENT_PHONE).append(phone).append(\" \"));","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_CLIENT_EMAIL).append(email).append(\" \"));","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_CLIENT_ADDRESS).append(address).append(\" \"));","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"EuniceSim142":9,"zognin":12,"-":21,"sivayogasubramanian":4}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/IngredientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"public class IngredientBuilder {","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"    private static final String DEFAULT_INGREDIENT_NAME \u003d \"Cauliflower\";","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"    private static final String DEFAULT_QUANTITY \u003d \"14\";","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"    private static final String DEFAULT_UNIT \u003d \"whole\";","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"    private GenericString ingredientName;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"    private Quantity quantity;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    private GenericString unit;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"     * Creates a {@code IngredientBuilder} with the default details.","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    public IngredientBuilder() {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"        ingredientName \u003d new GenericString(DEFAULT_INGREDIENT_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"        quantity \u003d new Quantity(DEFAULT_QUANTITY);","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"        unit \u003d new GenericString(DEFAULT_UNIT);","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"     * Initializes the IngredientBuilder with the data of {@code ingredientToCopy}.","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    public IngredientBuilder(Ingredient ingredientToCopy) {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        ingredientName \u003d ingredientToCopy.getName();","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"        quantity \u003d ingredientToCopy.getQuantity();","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"        unit \u003d ingredientToCopy.getUnit();","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the {@code ingredientName} of the {@code Ingredient} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"    public IngredientBuilder withIngredientName(String ingredientName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"        this.ingredientName \u003d new GenericString(ingredientName);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the {@code Quantity} of the {@code Ingredient} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"    public IngredientBuilder withQuantity(String quantity) {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"        this.quantity \u003d new Quantity(quantity);","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the {@code Unit} of the {@code Ingredient} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"    public IngredientBuilder withUnit(String unit) {","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"        this.unit \u003d new GenericString(unit);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"    public Ingredient build() {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"        return new Ingredient(ingredientName, quantity, unit);","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"EuniceSim142":60,"sivayogasubramanian":1}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/IngredientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.IngredientDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"public class IngredientDescriptorBuilder {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"    private IngredientDescriptor descriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"    public IngredientDescriptorBuilder() {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"        descriptor \u003d new IngredientDescriptor();","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    public IngredientDescriptorBuilder(IngredientDescriptor descriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"        this.descriptor \u003d new IngredientDescriptor(descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"     * Returns an {@code EditIngredientDescriptor} with fields containing {@code ingredient}\u0027s details","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    public IngredientDescriptorBuilder(Ingredient ingredient) {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"        descriptor \u003d new IngredientDescriptor();","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"        descriptor.setName(ingredient.getName());","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"        descriptor.setQuantity(ingredient.getQuantity());","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"        descriptor.setUnit(ingredient.getUnit());","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the {@code IngredientName} of the {@code EditIngredientDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"    public IngredientDescriptorBuilder withIngredientName(String ingredientName) {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"        descriptor.setName(new GenericString(ingredientName));","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the {@code Quantity} of the {@code EditIngredientDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"    public IngredientDescriptorBuilder withQuantity(String quantity) {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"        descriptor.setQuantity(new Quantity(quantity));","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the {@code Unit} of the {@code EditIngredientDescriptor} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"    public IngredientDescriptorBuilder withUnit(String unit) {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"        descriptor.setUnit(new GenericString(unit));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"    public IngredientDescriptor build() {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"        return descriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"EuniceSim142":56,"sivayogasubramanian":1}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/IngredientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_QUANTITY;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_INGREDIENT_UNIT;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.ingredient.AddIngredientCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.IngredientDescriptor;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":" * A utility class for Ingredient.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"public class IngredientUtil {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"     * Returns an add ingredient command string for adding the {@code ingredient}.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"     * @param ingredient to add.","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"     * @return add ingredient command string.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"    public static String getAddCommand(Ingredient ingredient) {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"        return AddIngredientCommand.COMMAND_WORD + \" \" + getIngredientDetails(ingredient);","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"     * Returns the part of command string for the given {@code ingredient}\u0027s details.","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"     * @param ingredient to get details from.","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"     * @return all ingredient details.","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"    public static String getIngredientDetails(Ingredient ingredient) {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"        sb.append(PREFIX_INGREDIENT_NAME + ingredient.getName().toString() + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"        sb.append(PREFIX_INGREDIENT_QUANTITY + ingredient.getQuantity().toString() + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"        sb.append(PREFIX_INGREDIENT_UNIT + ingredient.getUnit().toString() + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"EuniceSim142"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * Returns the part of command string for the given {@code EditIngredientDescriptor}\u0027s details.","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public static String getEditIngredientDescriptorDetails(IngredientDescriptor descriptor) {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        descriptor.getName().ifPresent(name -\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                sb.append(PREFIX_INGREDIENT_NAME).append(name).append(\" \"));","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        descriptor.getQuantity().ifPresent(quantity -\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                sb.append(PREFIX_INGREDIENT_QUANTITY).append(quantity).append(\" \"));","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        descriptor.getUnit().ifPresent(unit -\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"                sb.append(PREFIX_INGREDIENT_UNIT).append(unit).append(\" \"));","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"EuniceSim142":37,"Manoharan-Ajay-Anand":15}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/OrderBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.CompletionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Deadline;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Price;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.RecipeIngredientList;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":" * A utility class to help with building Order objects.","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"public class OrderBuilder {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"    private static final String DEFAULT_CLIENT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":"    private static final String DEFAULT_CLIENT_PHONE \u003d \"85355255\";","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":"    private static final String DEFAULT_CLIENT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String DEFAULT_RECIPE_NAME \u003d \"Egg Prata\";","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final List\u003cIngredient\u003e DEFAULT_RECIPE_INGREDIENT_LIST \u003d List.of(","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"            new Ingredient(new GenericString(\"Flour\"), new Quantity(\"200\"), new GenericString(\"grams\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"            new Ingredient(new GenericString(\"Eggs\"), new Quantity(\"1\"), new GenericString(\"whole\")));","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String DEFAULT_ORDER_PRICE \u003d \"1.50\";","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String DEFAULT_ORDER_DEADLINE \u003d \"12-12-2021 1500\";","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"    private static final String DEFAULT_ORDER_QUANTITY \u003d \"1\";","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    private static final String DEFAULT_ORDER_COMPLETION_STATUS \u003d \"no\";","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"    private GenericString clientName;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Imranr2"},"content":"    private Phone clientPhone;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Imranr2"},"content":"    private Address clientAddress;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"    private GenericString recipeName;","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"    private RecipeIngredientList recipeIngredients;","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"    private Price price;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"    private Deadline deadline;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"    private Quantity quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"EuniceSim142"},"content":"    private CompletionStatus completionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"     * Creates a {@code OrderBuilder} with the default details.","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"    public OrderBuilder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"        clientName \u003d new GenericString(DEFAULT_CLIENT_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"        clientPhone \u003d new Phone(DEFAULT_CLIENT_PHONE);","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Imranr2"},"content":"        clientAddress \u003d new Address(DEFAULT_CLIENT_ADDRESS);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"        recipeName \u003d new GenericString(DEFAULT_RECIPE_NAME);","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"        recipeIngredients \u003d new RecipeIngredientList(DEFAULT_RECIPE_INGREDIENT_LIST);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"        price \u003d new Price(DEFAULT_ORDER_PRICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"        deadline \u003d new Deadline(DEFAULT_ORDER_DEADLINE);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"        quantity \u003d new Quantity(DEFAULT_ORDER_QUANTITY);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"        completionStatus \u003d new CompletionStatus(DEFAULT_ORDER_COMPLETION_STATUS);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"     * Initializes the OrderBuilder with the data of {@code orderToCopy}.","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param orderToCopy The data from which to copy from to create a new order.","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"    public OrderBuilder(Order orderToCopy) {","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"Imranr2"},"content":"        clientName \u003d orderToCopy.getClientName();","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"Imranr2"},"content":"        clientPhone \u003d orderToCopy.getClientPhone();","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"Imranr2"},"content":"        clientAddress \u003d orderToCopy.getClientAddress();","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"        recipeName \u003d orderToCopy.getRecipeName();","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"        recipeIngredients \u003d orderToCopy.getRecipeIngredients();","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"        price \u003d orderToCopy.getPrice();","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"        deadline \u003d orderToCopy.getDeadline();","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"        quantity \u003d orderToCopy.getQuantity();","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"EuniceSim142"},"content":"        completionStatus \u003d orderToCopy.getCompletionStatus();","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"Imranr2"},"content":"     * Sets the {@code clientName} of the {@code OrderBuilder} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"Imranr2"},"content":"     * @param clientName The client\u0027s name associated with the order we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return The {@code OrderBuilder} object.","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"EuniceSim142"},"content":"    public OrderBuilder withClientName(GenericString clientName) {","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"Imranr2"},"content":"        this.clientName \u003d clientName;","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"Imranr2"},"content":"     * Sets the {@code clientPhone} of the {@code OrderBuilder} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"Imranr2"},"content":"     * @param clientPhone The client\u0027s phone associated with the order we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"Imranr2"},"content":"     * @return The {@code OrderBuilder} object.","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Imranr2"},"content":"    public OrderBuilder withClientPhone(Phone clientPhone) {","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Imranr2"},"content":"        this.clientPhone \u003d clientPhone;","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"Imranr2"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"Imranr2"},"content":"     * Sets the {@code clientAddress} of the {@code OrderBuilder} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"Imranr2"},"content":"     * @param clientAddress The client\u0027s address associated with the order we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"Imranr2"},"content":"     * @return The {@code OrderBuilder} object.","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"Imranr2"},"content":"    public OrderBuilder withClientAddress(Address clientAddress) {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"Imranr2"},"content":"        this.clientAddress \u003d clientAddress;","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"Imranr2"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"sivayogasubramanian"},"content":"     * Sets the {@code recipeName} of the {@code OrderBuilder} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param recipeName The order\u0027s recipe name associated with the order we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return The {@code OrderBuilder} object.","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"sivayogasubramanian"},"content":"    public OrderBuilder withRecipeName(GenericString recipeName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"sivayogasubramanian"},"content":"        this.recipeName \u003d recipeName;","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"sivayogasubramanian"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"     * Sets the {@code recipeIngredients} of the {@code OrderBuilder} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param recipeIngredients The order recipe ingredients associated with the order we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return The {@code OrderBuilder} object.","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"sivayogasubramanian"},"content":"    public OrderBuilder withRecipeIngredients(RecipeIngredientList recipeIngredients) {","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"sivayogasubramanian"},"content":"        this.recipeIngredients \u003d recipeIngredients;","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"sivayogasubramanian"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"sivayogasubramanian"},"content":"     * Sets the {@code price} of the {@code OrderBuilder} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param price The order price associated with the order we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return The {@code OrderBuilder} object.","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"sivayogasubramanian"},"content":"    public OrderBuilder withPrice(Price price) {","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"sivayogasubramanian"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"sivayogasubramanian"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"sivayogasubramanian"},"content":"     * Sets the {@code deadline} of the {@code OrderBuilder} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param deadline The order deadline associated with the order we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return The {@code OrderBuilder} object.","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"sivayogasubramanian"},"content":"    public OrderBuilder withDeadline(Deadline deadline) {","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"sivayogasubramanian"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"sivayogasubramanian"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"sivayogasubramanian"},"content":"     * Sets the {@code quantity} of the {@code OrderBuilder} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param quantity The order quantity associated with the order we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return The {@code OrderBuilder} object.","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"sivayogasubramanian"},"content":"    public OrderBuilder withQuantity(Quantity quantity) {","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"sivayogasubramanian"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"sivayogasubramanian"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the {@code quantity} of the {@code OrderBuilder} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"EuniceSim142"},"content":"     * @param completionStatus The order quantity associated with the order we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"EuniceSim142"},"content":"     * @return The {@code OrderBuilder} object.","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"EuniceSim142"},"content":"    public OrderBuilder withCompletionStatus(CompletionStatus completionStatus) {","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"EuniceSim142"},"content":"        this.completionStatus \u003d completionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"EuniceSim142"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"sivayogasubramanian"},"content":"     * Builds the order.","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return An order object.","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"sivayogasubramanian"},"content":"    public Order build() {","lastModifiedDate":"2021-10-05"},{"lineNumber":179,"author":{"gitId":"sivayogasubramanian"},"content":"        return new Order(clientName, clientPhone, clientAddress,","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"EuniceSim142"},"content":"                recipeName, recipeIngredients, price, deadline, quantity, completionStatus);","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":182,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"EuniceSim142":21,"Imranr2":36,"sivayogasubramanian":125}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/OrderDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.OrderDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Address;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.CompletionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Deadline;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Price;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.RecipeIngredientList;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":" * A utility class to help with building OrderDescriptorBuilder objects.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"public class OrderDescriptorBuilder {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    private OrderDescriptor descriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"     * Creates an empty {@code OrderDescriptorBuilder}.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"    public OrderDescriptorBuilder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor \u003d new OrderDescriptor();","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"     * Initializes the OrderDescriptorBuilder with the data of {@code descriptor}.","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param descriptor The data from which to copy from to create a new order descriptor.","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"    public OrderDescriptorBuilder(OrderDescriptor descriptor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"        this.descriptor \u003d new OrderDescriptor(descriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"     * Returns a {@code OrderDescriptor} with fields containing {@code order}\u0027s details","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param order The order from which to copy from to create a new order descriptor.","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"    public OrderDescriptorBuilder(Order order) {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor \u003d new OrderDescriptor();","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"        descriptor.setClientName(order.getClientName());","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Imranr2"},"content":"        descriptor.setClientPhone(order.getClientPhone());","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Imranr2"},"content":"        descriptor.setClientAddress(order.getClientAddress());","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor.setRecipeName(order.getRecipeName());","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor.setRecipeIngredients(order.getRecipeIngredients());","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor.setPrice(order.getPrice());","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor.setDeadline(order.getDeadline());","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor.setQuantity(order.getQuantity());","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"        descriptor.setCompletionStatus(order.getCompletionStatus());","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Imranr2"},"content":"     * Sets the {@code Name} of the {@code OrderDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"Imranr2"},"content":"     * @param clientName The name that should be set.","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"Imranr2"},"content":"     * @return A OrderDescriptorBuilder object that contains the new name details.","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"Imranr2"},"content":"    public OrderDescriptorBuilder withClientName(String clientName) {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"        descriptor.setClientName(new GenericString(clientName));","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"Imranr2"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"Imranr2"},"content":"     * Sets the {@code Phone} of the {@code OrderDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"Imranr2"},"content":"     * @param clientPhone The phone that should be set.","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Imranr2"},"content":"     * @return A OrderDescriptorBuilder object that contains the new phone details.","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Imranr2"},"content":"    public OrderDescriptorBuilder withClientPhone(String clientPhone) {","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"Imranr2"},"content":"        descriptor.setClientPhone(new Phone(clientPhone));","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"Imranr2"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"Imranr2"},"content":"     * Sets the {@code Address} of the {@code OrderDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"Imranr2"},"content":"     * @param clientAddress The address that should be set.","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"Imranr2"},"content":"     * @return A OrderDescriptorBuilder object that contains the new address details.","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"Imranr2"},"content":"    public OrderDescriptorBuilder withClientAddress(String clientAddress) {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Imranr2"},"content":"        descriptor.setClientAddress(new Address(clientAddress));","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"Imranr2"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Imranr2"},"content":"     * Sets the {@code Index} of the {@code OrderDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"Imranr2"},"content":"     * @param clientIndex The index that should be set.","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"Imranr2"},"content":"     * @return A OrderDescriptorBuilder object that contains the new index details.","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"Imranr2"},"content":"    public OrderDescriptorBuilder withClientIndex(Index clientIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Imranr2"},"content":"        descriptor.setClientIndex(clientIndex);","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"     * Sets the {@code recipeName} of the {@code OrderDescriptor} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param recipeName The recipeName that should be set.","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return A OrderDescriptorBuilder object that contains the new recipeName details.","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"sivayogasubramanian"},"content":"    public OrderDescriptorBuilder withRecipeName(String recipeName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor.setRecipeName(new GenericString(recipeName));","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"sivayogasubramanian"},"content":"     * Sets the {@code ingredients} of the {@code OrderDescriptor} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param ingredients The ingredients that should be set.","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return A OrderDescriptorBuilder object that contains the new ingredients details.","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"    public OrderDescriptorBuilder withRecipeIngredients(List\u003cIngredient\u003e ingredients) {","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor.setRecipeIngredients(ingredients \u003d\u003d null ? null : new RecipeIngredientList(ingredients));","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"sivayogasubramanian"},"content":"     * Sets the {@code price} of the {@code OrderDescriptor} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param price The price that should be set.","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return A OrderDescriptorBuilder object that contains the new price details.","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"sivayogasubramanian"},"content":"    public OrderDescriptorBuilder withPrice(String price) {","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor.setPrice(new Price(price));","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"sivayogasubramanian"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"sivayogasubramanian"},"content":"     * Sets the {@code deadline} of the {@code OrderDescriptor} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param deadline The deadline that should be set.","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return A OrderDescriptorBuilder object that contains the new deadline details.","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"sivayogasubramanian"},"content":"    public OrderDescriptorBuilder withDeadline(String deadline) {","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor.setDeadline(new Deadline(deadline));","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"sivayogasubramanian"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"sivayogasubramanian"},"content":"     * Sets the {@code quantity} of the {@code OrderDescriptor} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param quantity The quantity that should be set.","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"sivayogasubramanian"},"content":"     * @return A OrderDescriptorBuilder object that contains the new quantity details.","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"sivayogasubramanian"},"content":"    public OrderDescriptorBuilder withQuantity(String quantity) {","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor.setQuantity(quantity \u003d\u003d null ? null : new Quantity(quantity));","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"sivayogasubramanian"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"EuniceSim142"},"content":"     * Sets the {@code quantity} of the {@code OrderDescriptor} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"EuniceSim142"},"content":"     * @param completionStatus The quantity that should be set.","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"EuniceSim142"},"content":"     * @return A OrderDescriptorBuilder object that contains the new quantity details.","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"EuniceSim142"},"content":"    public OrderDescriptorBuilder withCompletionStatus(String completionStatus) {","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"EuniceSim142"},"content":"        descriptor.setCompletionStatus(completionStatus \u003d\u003d null ? null : new CompletionStatus(completionStatus));","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"EuniceSim142"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"sivayogasubramanian"},"content":"    public OrderDescriptor build() {","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"sivayogasubramanian"},"content":"        return descriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":170,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":171,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"EuniceSim142":15,"Imranr2":42,"sivayogasubramanian":114}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/OrderUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Imranr2"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_ADDRESS;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_CLIENT_PHONE;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_DEADLINE;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_PRICE;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_ORDER_QUANTITY;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_RECIPE_INGREDIENT;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.CliSyntax.PREFIX_RECIPE_NAME;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.commands.order.AddOrderCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.descriptors.OrderDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.logic.parser.util.Prefix;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.RecipeIngredientList;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Imranr2"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Imranr2"},"content":" * A utility class for Order.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Imranr2"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"public class OrderUtil {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"     * Adds ingredient to a copy of an ingredient list of an order.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"     * @param order Order to get the original ingredient list from.","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"     * @param ingredient Ingredient to add to the ingredient list.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"     * @return New ingredient list.","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"    public static RecipeIngredientList addIngredientToIngredientList(Order order, Ingredient ingredient) {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"zognin"},"content":"        RecipeIngredientList editedRecipeIngredientList \u003d order.getRecipeIngredients();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"        List\u003cIngredient\u003e newIngredients \u003d new ArrayList\u003c\u003e(editedRecipeIngredientList.getIngredients());","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"        newIngredients.add(ingredient);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"zognin"},"content":"        return new RecipeIngredientList(newIngredients);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"zognin"},"content":"     * Removes ingredient from a copy of an ingredient list of an order.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"zognin"},"content":"     * @param order Order to get the original ingredient list from.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"zognin"},"content":"     * @param ingredient Ingredient to remove from the ingredient list.","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"zognin"},"content":"     * @return New ingredient list.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"zognin"},"content":"    public static RecipeIngredientList removeIngredientFromIngredientList(Order order, Ingredient ingredient) {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"zognin"},"content":"        RecipeIngredientList editedRecipeIngredientList \u003d order.getRecipeIngredients();","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"zognin"},"content":"        List\u003cIngredient\u003e newIngredients \u003d new ArrayList\u003c\u003e(editedRecipeIngredientList.getIngredients());","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"zognin"},"content":"        newIngredients.remove(ingredient);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"        return new RecipeIngredientList(newIngredients);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Imranr2"},"content":"    public static String getAddCommand(Order order) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Imranr2"},"content":"        return AddOrderCommand.COMMAND_WORD + \" \" + getOrderDetails(order);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"Imranr2"},"content":"    public static String getOrderDetails(Order order) {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"Imranr2"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"        sb.append(wrapAroundPrefixAndSpace(PREFIX_CLIENT_NAME, order.getClientName().toString()));","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"        sb.append(wrapAroundPrefixAndSpace(PREFIX_CLIENT_PHONE, order.getClientPhone().toString()));","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"        sb.append(wrapAroundPrefixAndSpace(PREFIX_CLIENT_ADDRESS, order.getClientAddress().toString()));","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"        sb.append(wrapAroundPrefixAndSpace(PREFIX_RECIPE_NAME, order.getRecipeName().toString()));","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"        sb.append(wrapAroundPrefixAndSpace(PREFIX_RECIPE_INGREDIENT,","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"                getUserInputStringForRecipeIngredientList(order.getRecipeIngredients())));","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"        sb.append(wrapAroundPrefixAndSpace(PREFIX_ORDER_PRICE, order.getPrice().toString()));","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"        sb.append(wrapAroundPrefixAndSpace(PREFIX_ORDER_DEADLINE, order.getDeadline().toJsonStorageString()));","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"        sb.append(wrapAroundPrefixAndSpace(PREFIX_ORDER_QUANTITY, order.getQuantity().toString()));","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"     * Returns the part of command string for the given {@code OrderDescriptor}\u0027s details.","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"    public static String getEditOrderDescriptorDetails(OrderDescriptor descriptor) {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor.getClientName().ifPresent(name -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"                sb.append(PREFIX_CLIENT_NAME).append(name).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor.getClientPhone().ifPresent(phone -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"                sb.append(PREFIX_CLIENT_PHONE).append(phone).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor.getClientAddress().ifPresent(address -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"                sb.append(PREFIX_CLIENT_ADDRESS).append(address).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor.getRecipeName().ifPresent(name -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"                sb.append(PREFIX_RECIPE_NAME).append(name).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor.getPrice().ifPresent(price -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"                sb.append(PREFIX_ORDER_PRICE).append(price).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor.getDeadline().ifPresent(deadline -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"                sb.append(PREFIX_ORDER_DEADLINE).append(deadline.toJsonStorageString()).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"        descriptor.getQuantity().ifPresent(quantity -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"                sb.append(PREFIX_ORDER_QUANTITY).append(quantity).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"sivayogasubramanian"},"content":"    private static String wrapAroundPrefixAndSpace(Prefix prefix, String attribute) {","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"sivayogasubramanian"},"content":"        sb.append(prefix);","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"sivayogasubramanian"},"content":"        sb.append(attribute);","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"        sb.append(\" \");","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"Imranr2"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"    private static String getUserInputStringForRecipeIngredientList(RecipeIngredientList list) {","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"sivayogasubramanian"},"content":"        return list.getIngredients().stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"sivayogasubramanian"},"content":"                .map(ingredient -\u003e ingredient.getName() + \"-\" + ingredient.getQuantity() + \"-\" + ingredient.getUnit())","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"sivayogasubramanian"},"content":"                .collect(Collectors.joining(\", \"));","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"Imranr2"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Imranr2":22,"zognin":31,"sivayogasubramanian":55}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/PredicateUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Imranr2"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.StringContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.ValueInListPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.predicate.ValueWithinRangePredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":" * A utility class for predicates.","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Imranr2"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":"public class PredicateUtil {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"zognin"},"content":"     * Takes a variable number of objects, converts them to string and combines them to one space separated String.","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"zognin"},"content":"     * @param objects Objects to be converted to string.","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"zognin"},"content":"     * @return String separating each object\u0027s string representation by a space.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"zognin"},"content":"    public static String makeSpaceSeparatedStringKeywords(Object... objects) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"zognin"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"zognin"},"content":"        Arrays.stream(objects).forEach(keyword -\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"            sb.append(keyword.toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"zognin"},"content":"            sb.append(\" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"zognin"},"content":"        });","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"        return sb.toString().trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Imranr2"},"content":"     * Makes a {@code ValueInListPredicate} for {@code LocalDate} values.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Imranr2"},"content":"     * @param input String input to get keywords from.","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Imranr2"},"content":"     * @param getter Getter to get item to test predicate with.","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Imranr2"},"content":"     * @param \u003cT\u003e Type of predicate.","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Imranr2"},"content":"     * @return {@code ValueInListPredicate} for {@code LocalDate} values.","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Imranr2"},"content":"    public static \u003cT\u003e ValueInListPredicate\u003cT, LocalDate\u003e makeLocalDateInListPredicate(String input,","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Imranr2"},"content":"                                                                                      Function\u003cT, LocalDate\u003e getter) {","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Imranr2"},"content":"        DateTimeFormatter dateTimeFormatter \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-uuuu\").withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"        List\u003cString\u003e keywords \u003d List.of(input.split(\"\\\\s+\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Imranr2"},"content":"        List\u003cLocalDate\u003e dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Imranr2"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Imranr2"},"content":"            dates.add(LocalDate.parse(keyword, dateTimeFormatter));","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Imranr2"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Imranr2"},"content":"        return new ValueInListPredicate\u003c\u003e(getter, dates);","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"zognin"},"content":"     * Makes a {@code ValueInListPredicate} for quantity values.","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"zognin"},"content":"     * @param input String input to get keywords from.","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"zognin"},"content":"     * @param getter Getter to get item to test predicate with.","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"zognin"},"content":"     * @param \u003cT\u003e Type of predicate.","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"zognin"},"content":"     * @return {@code ValueInListPredicate} for quantity values.","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"zognin"},"content":"    public static \u003cT\u003e ValueInListPredicate\u003cT, Quantity\u003e makeQuantityInListPredicate(String input,","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"zognin"},"content":"                                                                                    Function\u003cT, Quantity\u003e getter) {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"zognin"},"content":"        List\u003cString\u003e keywords \u003d List.of(input.split(\"\\\\s+\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"zognin"},"content":"        List\u003cQuantity\u003e quantities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"zognin"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"zognin"},"content":"            quantities.add(new Quantity(keyword));","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"zognin"},"content":"        return new ValueInListPredicate\u003c\u003e(getter, quantities);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"zognin"},"content":"     * Makes a {@code ValueWithinRangePredicate} for quantity values.","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"zognin"},"content":"     * @param minQuantity Minimum quantity to form the lower bound of the range.","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"zognin"},"content":"     * @param maxQuantity Maximum quantity to form the upper bound of the range.","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"zognin"},"content":"     * @param getter Getter to get item to test predicate with.","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"zognin"},"content":"     * @param \u003cT\u003e Type of predicate.","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"zognin"},"content":"     * @return {@code ValueWithinRangePredicate} for quantity values.","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"zognin"},"content":"    public static \u003cT\u003e ValueWithinRangePredicate\u003cT, Quantity\u003e makeQuantityWithinRangePredicate(","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"zognin"},"content":"            String minQuantity,","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"zognin"},"content":"            String maxQuantity,","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"zognin"},"content":"            Function\u003cT, Quantity\u003e getter) {","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"zognin"},"content":"        return new ValueWithinRangePredicate\u003c\u003e(getter,","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"zognin"},"content":"                new Quantity(minQuantity),","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"zognin"},"content":"                new Quantity(maxQuantity));","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"Imranr2"},"content":"     * Parses {@code userInput} into a {@code StringContainsKeywordsPredicate\u003cT\u003e}.","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"Imranr2"},"content":"    public static \u003cT\u003e StringContainsKeywordsPredicate\u003cT\u003e makeStringContainsKeywordsPredicate(String input,","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"Imranr2"},"content":"            Function\u003cT, ?\u003e getter) {","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"Imranr2"},"content":"        List\u003cString\u003e keywords \u003d List.of(input.split(\"\\\\s+\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Imranr2"},"content":"        return new StringContainsKeywordsPredicate\u003c\u003e(getter, keywords);","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"Imranr2"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Imranr2":42,"zognin":57}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":71,"sivayogasubramanian":1}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"     * Returns the middle index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"EuniceSim142"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size() / 2);","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"EuniceSim142"},"content":"     * Returns the last index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"     * Returns the client in the {@code model}\u0027s client list at {@code index}.","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    public static Client getClient(Model model, Index index) {","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"        return model.getFilteredClientList().get(index.getZeroBased());","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"EuniceSim142":7,"-":43,"sivayogasubramanian":4}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/TypicalClients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ADDRESS_IMRAN;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_EMAIL_IMRAN;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_NAME_IMRAN;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PHONE_IMRAN;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":" * A utility class containing a list of {@code Client} objects to be used in tests.","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"public class TypicalClients {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"    public static final Client ALICE \u003d new ClientBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"zognin"},"content":"            .withPhone(\"94351253\").build();","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    public static final Client BENSON \u003d new ClientBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"zognin"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").build();","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"    public static final Client CARL \u003d new ClientBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"    public static final Client DANIEL \u003d new ClientBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").build();","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"EuniceSim142"},"content":"    public static final Client ELLE \u003d new ClientBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"EuniceSim142"},"content":"    public static final Client FIONA \u003d new ClientBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"EuniceSim142"},"content":"    public static final Client GEORGE \u003d new ClientBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"    public static final Client HOON \u003d new ClientBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"    public static final Client IDA \u003d new ClientBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"    // Manually added - Client\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"    public static final Client AMY \u003d new ClientBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"zognin"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"    public static final Client BOB \u003d new ClientBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"zognin"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final Client IMRAN \u003d new ClientBuilder().withName(VALID_NAME_IMRAN).withPhone(VALID_PHONE_IMRAN)","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"            .withEmail(VALID_EMAIL_IMRAN).withAddress(VALID_ADDRESS_IMRAN).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"    private TypicalClients() {} // prevents instantiation","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"     * Returns an {@code AddressBook} with all the typical clients.","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"        for (Client client : getTypicalClients()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"            ab.addClient(client);","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"    public static List\u003cClient\u003e getTypicalClients() {","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"EuniceSim142":19,"zognin":5,"-":35,"sivayogasubramanian":17}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"zognin":3,"-":7,"sivayogasubramanian":2}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/TypicalIngredients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_INGREDIENT_NAME_APPLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_INGREDIENT_NAME_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_QUANTITY_APPLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_QUANTITY_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_UNIT_APPLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_UNIT_BEEF;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"public class TypicalIngredients {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    public static final Ingredient AVOCADO \u003d new IngredientBuilder().withIngredientName(\"Avocado\")","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"            .withQuantity(\"5\").withUnit(\"whole\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final Ingredient BREAD \u003d new IngredientBuilder().withIngredientName(\"Bread\")","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"            .withQuantity(\"1000\").withUnit(\"slice\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    public static final Ingredient BUTTER \u003d new IngredientBuilder().withIngredientName(\"Butter\")","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"            .withQuantity(\"550\").withUnit(\"grams\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    public static final Ingredient CHICKEN \u003d new IngredientBuilder().withIngredientName(\"Chicken\")","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"            .withQuantity(\"10\").withUnit(\"whole\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"    public static final Ingredient DARK_CHOCOLATE \u003d new IngredientBuilder().withIngredientName(\"Dark Chocolate\")","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"            .withQuantity(\"300\").withUnit(\"grams\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    public static final Ingredient EGG \u003d new IngredientBuilder().withIngredientName(\"Egg\")","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"            .withQuantity(\"2\").withUnit(\"dozen\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    public static final Ingredient FISH \u003d new IngredientBuilder().withIngredientName(\"Fish\")","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"            .withQuantity(\"20\").withUnit(\"whole\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"    public static final Ingredient FLOUR \u003d new IngredientBuilder().withIngredientName(\"Flour\")","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"            .withQuantity(\"4\").withUnit(\"kg\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"    public static final Ingredient GINGER \u003d new IngredientBuilder().withIngredientName(\"Ginger\")","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"EuniceSim142"},"content":"            .withQuantity(\"8\").withUnit(\"whole\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final Ingredient KAYA \u003d new IngredientBuilder().withIngredientName(\"Kaya\")","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"            .withQuantity(\"1000\").withUnit(\"grams\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final Ingredient NOODLES \u003d new IngredientBuilder().withIngredientName(\"Noodles\")","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"            .withQuantity(\"4000\").withUnit(\"grams\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final Ingredient PRAWN \u003d new IngredientBuilder().withIngredientName(\"Prawn\")","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"            .withQuantity(\"200\").withUnit(\"whole\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final Ingredient RICE \u003d new IngredientBuilder().withIngredientName(\"Rice\")","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"            .withQuantity(\"5000\").withUnit(\"grams\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"EuniceSim142"},"content":"    public static final Ingredient APPLE \u003d new IngredientBuilder().withIngredientName(VALID_INGREDIENT_NAME_APPLE)","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"EuniceSim142"},"content":"            .withQuantity(VALID_QUANTITY_APPLE).withUnit(VALID_UNIT_APPLE).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"EuniceSim142"},"content":"    public static final Ingredient BEEF \u003d new IngredientBuilder().withIngredientName(VALID_INGREDIENT_NAME_BEEF)","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"EuniceSim142"},"content":"            .withQuantity(VALID_QUANTITY_BEEF).withUnit(VALID_UNIT_BEEF).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"EuniceSim142"},"content":"    private TypicalIngredients() {} // prevents instantiation","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"EuniceSim142"},"content":"     * Returns an {@code AddressBook} with all the typical ingredients.","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"EuniceSim142"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"EuniceSim142"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"EuniceSim142"},"content":"        for (Ingredient ingredient : getTypicalIngredients()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"EuniceSim142"},"content":"            ab.addIngredient(ingredient);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"EuniceSim142"},"content":"        return ab;","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"EuniceSim142"},"content":"    public static List\u003cIngredient\u003e getTypicalIngredients() {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"EuniceSim142"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(AVOCADO, BREAD, BUTTER, CHICKEN, DARK_CHOCOLATE, EGG, FISH, FLOUR,","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"EuniceSim142"},"content":"                GINGER, KAYA, NOODLES, PRAWN, RICE));","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"EuniceSim142":58,"sivayogasubramanian":11}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/TypicalOrders.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_DEADLINE_DECEMBER;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_DEADLINE_MARCH;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_INGREDIENT_NAME_APPLE;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_INGREDIENT_NAME_BEEF;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ORDER_COMPLETION_STATUS_NO;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ORDER_QUANTITY_1;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_ORDER_QUANTITY_2;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PRICE_1;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_PRICE_2;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_QUANTITY_APPLE;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_QUANTITY_BEEF;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_RECIPE_NAME_CHICKEN_RICE;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_RECIPE_NAME_LAKSA;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_UNIT_APPLE;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.logic.commands.CommandTestUtil.VALID_UNIT_BEEF;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.ALICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.BENSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.CARL;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.DANIEL;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.ELLE;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.FIONA;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.GEORGE;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalClients.IMRAN;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.BREAD;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.CHICKEN;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.FISH;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.KAYA;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.NOODLES;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.PRAWN;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIngredients.RICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"zognin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"zognin"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"zognin"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.CompletionStatus;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Deadline;","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Price;","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.RecipeIngredientList;","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":" * A utility class containing a list of {@code Order} objects to be used in tests.","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"public class TypicalOrders {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Imranr2"},"content":"    public static final Order ORDER_FOR_ALICE \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Imranr2"},"content":"            new OrderBuilder().withClientName(ALICE.getName()).withClientPhone(ALICE.getPhone())","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withClientAddress(ALICE.getAddress()).withRecipeName(new GenericString(\"Chicken Rice\"))","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withRecipeIngredients(new RecipeIngredientList(getRecipeIngredientListForClient(ALICE)))","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withPrice(new Price(\"4.50\")).withDeadline(new Deadline(\"12-12-2021 1200\"))","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"EuniceSim142"},"content":"                    .withQuantity(new Quantity(\"4\")).withCompletionStatus(new CompletionStatus(\"yes\"))","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"                    .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"Imranr2"},"content":"    public static final Order ORDER_FOR_BENSON \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"Imranr2"},"content":"            new OrderBuilder().withClientName(BENSON.getName()).withClientPhone(BENSON.getPhone())","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withClientAddress(BENSON.getAddress()).withRecipeName(new GenericString(\"Nasi Lemak\"))","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withRecipeIngredients(new RecipeIngredientList(getRecipeIngredientListForClient(BENSON)))","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withPrice(new Price(\"5.50\")).withDeadline(new Deadline(\"13-12-2021 1300\"))","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"EuniceSim142"},"content":"                    .withQuantity(new Quantity(\"2\")).withCompletionStatus(new CompletionStatus(\"no\"))","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"                    .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"Imranr2"},"content":"    public static final Order ORDER_FOR_CARL \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Imranr2"},"content":"            new OrderBuilder().withClientName(CARL.getName()).withClientPhone(CARL.getPhone())","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withClientAddress(CARL.getAddress()).withRecipeName(new GenericString(\"Prata\"))","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withPrice(new Price(\"6.50\")).withDeadline(new Deadline(\"14-12-2021 1020\"))","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"EuniceSim142"},"content":"                    .withQuantity(new Quantity(\"1\")).withCompletionStatus(new CompletionStatus(\"yes\"))","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"                    .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"Imranr2"},"content":"    public static final Order ORDER_FOR_DANIEL \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"Imranr2"},"content":"            new OrderBuilder().withClientName(DANIEL.getName()).withClientPhone(DANIEL.getPhone())","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withClientAddress(DANIEL.getAddress()).withRecipeName(new GenericString(\"Char kuay teow\"))","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withRecipeIngredients(new RecipeIngredientList(getRecipeIngredientListForClient(DANIEL)))","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withPrice(new Price(\"7.00\")).withDeadline(new Deadline(\"15-12-2021 1510\"))","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"EuniceSim142"},"content":"                    .withQuantity(new Quantity(\"2\")).withCompletionStatus(new CompletionStatus(\"no\"))","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"                    .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"Imranr2"},"content":"    public static final Order ORDER_FOR_ELLE \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"Imranr2"},"content":"            new OrderBuilder().withClientName(ELLE.getName()).withClientPhone(ELLE.getPhone())","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withClientAddress(ELLE.getAddress()).withRecipeName(new GenericString(\"Hokkien prawn mee\"))","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withRecipeIngredients(new RecipeIngredientList(getRecipeIngredientListForClient(ELLE)))","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withPrice(new Price(\"8.50\")).withDeadline(new Deadline(\"16-12-2021 1900\"))","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"EuniceSim142"},"content":"                    .withQuantity(new Quantity(\"2\")).withCompletionStatus(new CompletionStatus(\"yes\"))","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"                    .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"Imranr2"},"content":"    public static final Order ORDER_FOR_FIONA \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Imranr2"},"content":"            new OrderBuilder().withClientName(FIONA.getName()).withClientPhone(FIONA.getPhone())","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withClientAddress(FIONA.getAddress()).withRecipeName(new GenericString(\"Kaya toast\"))","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withRecipeIngredients(new RecipeIngredientList(getRecipeIngredientListForClient(FIONA)))","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withPrice(new Price(\"9.57\")).withDeadline(new Deadline(\"17-12-2021 2100\"))","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"EuniceSim142"},"content":"                    .withQuantity(new Quantity(\"2\")).withCompletionStatus(new CompletionStatus(\"no\"))","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"                    .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Imranr2"},"content":"    public static final Order ORDER_FOR_GEORGE \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Imranr2"},"content":"            new OrderBuilder().withClientName(GEORGE.getName()).withClientPhone(GEORGE.getPhone())","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withClientAddress(GEORGE.getAddress()).withRecipeName(new GenericString(\"Satay\"))","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withRecipeIngredients(new RecipeIngredientList(getRecipeIngredientListForClient(GEORGE)))","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withPrice(new Price(\"10\")).withDeadline(new Deadline(\"18-12-2021 2359\"))","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"EuniceSim142"},"content":"                    .withQuantity(new Quantity(\"2\")).withCompletionStatus(new CompletionStatus(\"yes\"))","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"                    .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"sivayogasubramanian"},"content":"    // Manually added - Order\u0027s details found in {@code TypicalClients} and {@code CommandTestUtil}","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"Imranr2"},"content":"    public static final Order ORDER_FOR_AMY \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"Imranr2"},"content":"            new OrderBuilder().withClientName(AMY.getName()).withClientPhone(AMY.getPhone())","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withClientAddress(AMY.getAddress())","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withRecipeName(new GenericString(VALID_RECIPE_NAME_CHICKEN_RICE))","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withPrice(new Price(VALID_PRICE_1))","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withDeadline(new Deadline(VALID_DEADLINE_DECEMBER))","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withQuantity(new Quantity(VALID_ORDER_QUANTITY_1))","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"EuniceSim142"},"content":"                    .withCompletionStatus(new CompletionStatus(VALID_ORDER_COMPLETION_STATUS_NO))","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"sivayogasubramanian"},"content":"                    .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"sivayogasubramanian"},"content":"    public static final Order ORDER_FOR_IMRAN \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"sivayogasubramanian"},"content":"            new OrderBuilder().withClientName(IMRAN.getName()).withClientPhone(IMRAN.getPhone())","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withClientAddress(IMRAN.getAddress())","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withRecipeName(new GenericString(VALID_RECIPE_NAME_CHICKEN_RICE))","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withRecipeIngredients(new RecipeIngredientList(List.of(new Ingredient(","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"                            new GenericString(VALID_INGREDIENT_NAME_APPLE), new Quantity(VALID_QUANTITY_APPLE),","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"                            new GenericString(VALID_UNIT_APPLE)))))","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withPrice(new Price(VALID_PRICE_1)).withDeadline(new Deadline(VALID_DEADLINE_DECEMBER))","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"EuniceSim142"},"content":"                    .withCompletionStatus(new CompletionStatus(VALID_ORDER_COMPLETION_STATUS_NO))","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"sivayogasubramanian"},"content":"                    .build();","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"Imranr2"},"content":"    public static final Order ORDER_FOR_BOB \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"Imranr2"},"content":"            new OrderBuilder().withClientName(BOB.getName()).withClientPhone(BOB.getPhone())","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withClientAddress(BOB.getAddress()).withRecipeName(new GenericString(VALID_RECIPE_NAME_LAKSA))","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withRecipeIngredients(new RecipeIngredientList(List.of(new Ingredient(","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"sivayogasubramanian"},"content":"                            new GenericString(VALID_INGREDIENT_NAME_BEEF), new Quantity(VALID_QUANTITY_BEEF),","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"sivayogasubramanian"},"content":"                            new GenericString(VALID_UNIT_BEEF)))))","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withPrice(new Price(VALID_PRICE_2)).withDeadline(new Deadline(VALID_DEADLINE_MARCH))","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"sivayogasubramanian"},"content":"                    .withQuantity(new Quantity(VALID_ORDER_QUANTITY_2))","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"EuniceSim142"},"content":"                    .withCompletionStatus(new CompletionStatus(VALID_ORDER_COMPLETION_STATUS_NO))","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"sivayogasubramanian"},"content":"                    .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"zognin"},"content":"     * Returns an {@code AddressBook} with all the typical orders.","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"zognin"},"content":"     * @return {@code AddressBook} with all the typical orders.","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"zognin"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"zognin"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"zognin"},"content":"        for (Order order : getTypicalOrders()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"zognin"},"content":"            ab.addOrder(order);","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"zognin"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"zognin"},"content":"        return ab;","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"zognin"},"content":"     * Returns a list of typical orders.","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"zognin"},"content":"     * @return List of typical orders.","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"zognin"},"content":"    public static List\u003cOrder\u003e getTypicalOrders() {","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"zognin"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ORDER_FOR_ALICE, ORDER_FOR_BENSON, ORDER_FOR_CARL, ORDER_FOR_DANIEL,","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"zognin"},"content":"                ORDER_FOR_ELLE, ORDER_FOR_FIONA, ORDER_FOR_GEORGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"sivayogasubramanian"},"content":"    private static List\u003cIngredient\u003e getRecipeIngredientListForClient(Client client) {","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"sivayogasubramanian"},"content":"        HashMap\u003cClient, List\u003cIngredient\u003e\u003e recipeIngredientsMap \u003d getRecipeIngredientsMapForClient();","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"sivayogasubramanian"},"content":"        if (!recipeIngredientsMap.containsKey(client)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"sivayogasubramanian"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"sivayogasubramanian"},"content":"        return recipeIngredientsMap.get(client);","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"sivayogasubramanian"},"content":"    private static HashMap\u003cClient, List\u003cIngredient\u003e\u003e getRecipeIngredientsMapForClient() {","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"sivayogasubramanian"},"content":"        HashMap\u003cClient, List\u003cIngredient\u003e\u003e recipeIngredientsMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient breadUsage \u003d new Ingredient(BREAD.getName(), new Quantity(\"2\"), BREAD.getUnit());","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient chickenUsage \u003d new Ingredient(CHICKEN.getName(), new Quantity(\"1\"), CHICKEN.getUnit());","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient fishUsage \u003d new Ingredient(FISH.getName(), new Quantity(\"1\"), FISH.getUnit());","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient kayaUsage \u003d new Ingredient(KAYA.getName(), new Quantity(\"100\"), KAYA.getUnit());","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient noodlesUsage \u003d new Ingredient(NOODLES.getName(), new Quantity(\"200\"), NOODLES.getUnit());","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient prawnUsage \u003d new Ingredient(PRAWN.getName(), new Quantity(\"10\"), PRAWN.getUnit());","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient riceUsage \u003d new Ingredient(RICE.getName(), new Quantity(\"200\"), RICE.getUnit());","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"sivayogasubramanian"},"content":"        recipeIngredientsMap.put(ALICE, List.of(chickenUsage, riceUsage));","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"sivayogasubramanian"},"content":"        recipeIngredientsMap.put(BENSON, List.of(fishUsage, riceUsage));","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"sivayogasubramanian"},"content":"        recipeIngredientsMap.put(DANIEL, List.of(noodlesUsage));","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"sivayogasubramanian"},"content":"        recipeIngredientsMap.put(ELLE, List.of(noodlesUsage, prawnUsage));","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"sivayogasubramanian"},"content":"        recipeIngredientsMap.put(FIONA, List.of(breadUsage, kayaUsage));","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"sivayogasubramanian"},"content":"        recipeIngredientsMap.put(GEORGE, List.of(chickenUsage));","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"sivayogasubramanian"},"content":"        return recipeIngredientsMap;","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"EuniceSim142":12,"Imranr2":18,"zognin":28,"sivayogasubramanian":130}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/stubs/GenericQuantityStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil.stubs;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"public class GenericQuantityStub {","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"    private final Quantity quantity;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"     * Constructs a stub containing a quantity attribute.","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"     * @param quantity Quantity belonging to the stub.","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    public GenericQuantityStub(Quantity quantity) {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"zognin"},"content":"    public Quantity getQuantity() {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"zognin"},"content":"        return quantity;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"zognin":20}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/stubs/GenericStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Imranr2"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil.stubs;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.GenericString;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Imranr2"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Imranr2"},"content":" * A generic stub class to test methods using generics.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Imranr2"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Imranr2"},"content":"public class GenericStub {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Imranr2"},"content":"    private GenericString name;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Imranr2"},"content":"    private GenericString address;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Imranr2"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Imranr2"},"content":"     * Constructs a GenericStub class.","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Imranr2"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Imranr2"},"content":"     * @param name Name of dummy.","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":"     * @param address Address of dummy.","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Imranr2"},"content":"    public GenericStub(GenericString name, GenericString address) {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Imranr2"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Imranr2"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Imranr2"},"content":"    public GenericString getName() {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Imranr2"},"content":"        return name;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Imranr2"},"content":"    public GenericString getAddress() {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Imranr2"},"content":"        return address;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Imranr2"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Imranr2":30}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/stubs/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil.stubs;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":" * A default model stub that has all of its methods failing.","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"sivayogasubramanian"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"sivayogasubramanian"},"content":"    public void deleteClient(Client target) {","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"    public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"EuniceSim142"},"content":"    // Ingredient-level","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"EuniceSim142"},"content":"    public void addIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"EuniceSim142"},"content":"    public boolean hasIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void deleteIngredient(Ingredient target) throws NotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    public void setIngredient(Ingredient target, Ingredient editedIngredient) throws NotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"EuniceSim142"},"content":"    public ObservableList\u003cIngredient\u003e getFilteredIngredientList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"EuniceSim142"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"    public void addIngredientQuantity(Ingredient target, Quantity multiplier) {","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"sivayogasubramanian"},"content":"    public void minusIngredientQuantity(Ingredient target, Quantity multiplier) {","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"EuniceSim142"},"content":"    public void updateFilteredIngredientList(Predicate\u003cIngredient\u003e predicate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"EuniceSim142"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"EuniceSim142"},"content":"    // Order-level","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"EuniceSim142"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"EuniceSim142"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"EuniceSim142"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"EuniceSim142"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"Imranr2"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"Imranr2"},"content":"    public void deleteOrder(Order order) {","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"Imranr2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setOrder(Order order, Order editedOrder) throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"sivayogasubramanian"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"EuniceSim142"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"EuniceSim142"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"zognin"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"zognin"},"content":"    public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"zognin"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"EuniceSim142":32,"Imranr2":5,"zognin":5,"Manoharan-Ajay-Anand":11,"sivayogasubramanian":110}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/stubs/ModelStubAcceptingClientAdded.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil.stubs;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":" * A Model stub that always accepts the client being added.","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"public class ModelStubAcceptingClientAdded extends ModelStub {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"    private final ArrayList\u003cClient\u003e clientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"    public ArrayList\u003cClient\u003e getClientsAdded() {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"        return clientsAdded;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(client);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"        return clientsAdded.stream().anyMatch(client::isSameClient);","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(client);","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"        clientsAdded.add(client);","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"        return new AddressBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"sivayogasubramanian":37}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/stubs/ModelStubAcceptingIngredientAdded.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil.stubs;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"public class ModelStubAcceptingIngredientAdded extends ModelStub {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"    private final ArrayList\u003cIngredient\u003e ingredientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"    public ArrayList\u003cIngredient\u003e getIngredientsAdded() {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"        return ingredientsAdded;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"    public boolean hasIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"        return ingredientsAdded.stream().anyMatch(ingredient::isSameIngredient);","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"    public void addIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"        ingredientsAdded.add(ingredient);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"EuniceSim142"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"EuniceSim142"},"content":"        return new AddressBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"EuniceSim142":34}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/stubs/ModelStubAcceptingOrderAdded.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil.stubs;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.exception.NotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Imranr2"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.shared.Quantity;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Imranr2"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Imranr2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":" * A Model stub that always accepts the order being added.","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"public class ModelStubAcceptingOrderAdded extends ModelStub {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Imranr2"},"content":"    private final ArrayList\u003cClient\u003e clientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    private final ArrayList\u003cIngredient\u003e ingredientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"    private final ArrayList\u003cOrder\u003e ordersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"EuniceSim142"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(client);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"EuniceSim142"},"content":"        clientsAdded.add(client);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"    public void addIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"        ingredientsAdded.add(ingredient);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"sivayogasubramanian"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(order);","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"sivayogasubramanian"},"content":"        ordersAdded.add(order);","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Imranr2"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Imranr2"},"content":"    public void deleteOrder(Order orderToDelete) {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Imranr2"},"content":"        ordersAdded.remove(orderToDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"sivayogasubramanian"},"content":"    public void setOrder(Order order, Order editedOrder) throws NotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"sivayogasubramanian"},"content":"        requireAllNonNull(order, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"sivayogasubramanian"},"content":"        int index \u003d ordersAdded.indexOf(order);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"sivayogasubramanian"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"sivayogasubramanian"},"content":"            throw new NotFoundException(Order.class.getName());","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"sivayogasubramanian"},"content":"        ordersAdded.set(index, editedOrder);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Imranr2"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"Imranr2"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"Imranr2"},"content":"        return FXCollections.observableList(clientsAdded);","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"sivayogasubramanian"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"sivayogasubramanian"},"content":"        return FXCollections.observableList(ordersAdded);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"EuniceSim142"},"content":"    public ArrayList\u003cOrder\u003e getOrdersAdded() {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"EuniceSim142"},"content":"        return ordersAdded;","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"Imranr2"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Imranr2"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"sivayogasubramanian"},"content":"    public ArrayList\u003cIngredient\u003e getIngredientsAdded() {","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"sivayogasubramanian"},"content":"        return ingredientsAdded;","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"sivayogasubramanian"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(order);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"sivayogasubramanian"},"content":"        return ordersAdded.stream().anyMatch(order::isSameOrder);","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"sivayogasubramanian"},"content":"    public void addIngredientQuantity(Ingredient target, Quantity multiplier) {","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"sivayogasubramanian"},"content":"        requireAllNonNull(target, multiplier);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient currentIngredient \u003d ingredientsAdded.stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"sivayogasubramanian"},"content":"                .filter(target::isSameIngredient).findFirst().orElse(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"sivayogasubramanian"},"content":"        if (currentIngredient !\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"sivayogasubramanian"},"content":"            Ingredient ingredientWithNewQuantity \u003d new Ingredient(","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"sivayogasubramanian"},"content":"                    currentIngredient.getName(),","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"sivayogasubramanian"},"content":"                    currentIngredient.getQuantity().addQuantityBy(target.getQuantity(), multiplier),","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"sivayogasubramanian"},"content":"                    currentIngredient.getUnit());","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"sivayogasubramanian"},"content":"            int index \u003d ingredientsAdded.indexOf(currentIngredient);","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"sivayogasubramanian"},"content":"            ingredientsAdded.set(index, ingredientWithNewQuantity);","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"sivayogasubramanian"},"content":"    public void minusIngredientQuantity(Ingredient target, Quantity multiplier) {","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"sivayogasubramanian"},"content":"        requireAllNonNull(target, multiplier);","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"sivayogasubramanian"},"content":"        Ingredient currentIngredient \u003d ingredientsAdded.stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"sivayogasubramanian"},"content":"                .filter(target::isSameIngredient).findFirst().orElse(null);","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"sivayogasubramanian"},"content":"        if (currentIngredient !\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"sivayogasubramanian"},"content":"            Ingredient ingredientWithNewQuantity \u003d new Ingredient(","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"sivayogasubramanian"},"content":"                    currentIngredient.getName(),","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"sivayogasubramanian"},"content":"                    currentIngredient.getQuantity().minusQuantityBy(target.getQuantity(), multiplier),","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"sivayogasubramanian"},"content":"                    currentIngredient.getUnit());","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"sivayogasubramanian"},"content":"            int index \u003d ingredientsAdded.indexOf(currentIngredient);","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"sivayogasubramanian"},"content":"            ingredientsAdded.set(index, ingredientWithNewQuantity);","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"sivayogasubramanian"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"sivayogasubramanian"},"content":"    public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {}","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"sivayogasubramanian"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"sivayogasubramanian"},"content":"        return new AddressBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"EuniceSim142":6,"Imranr2":16,"sivayogasubramanian":107}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/stubs/ModelStubWithClient.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil.stubs;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":" * A Model stub that contains a single client.","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"public class ModelStubWithClient extends ModelStub {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"    private final Client client;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":"     * Constructs a ModelStubWithClient object which contains the given client.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param client The client that this model should contain.","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"    public ModelStubWithClient(Client client) {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(client);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"        this.client \u003d client;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(client);","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"        return this.client.isSameClient(client);","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"sivayogasubramanian":28}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/stubs/ModelStubWithIngredient.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EuniceSim142"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil.stubs;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"EuniceSim142"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"EuniceSim142"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.ingredient.Ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"EuniceSim142"},"content":"public class ModelStubWithIngredient extends ModelStub {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"EuniceSim142"},"content":"    private final Ingredient ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EuniceSim142"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EuniceSim142"},"content":"     * Constructs a ModelStubWithIngredient object which contains the given ingredient.","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EuniceSim142"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"EuniceSim142"},"content":"     * @param ingredient The ingredient that this model should contain.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EuniceSim142"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"EuniceSim142"},"content":"    public ModelStubWithIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"EuniceSim142"},"content":"        this.ingredient \u003d ingredient;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"EuniceSim142"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"EuniceSim142"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"EuniceSim142"},"content":"    public boolean hasIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"EuniceSim142"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"EuniceSim142"},"content":"        return this.ingredient.isSameIngredient(ingredient);","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"EuniceSim142"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"EuniceSim142"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"EuniceSim142":25}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/testutil/stubs/ModelStubWithOrder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.testutil.stubs;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"sivayogasubramanian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.client.Client;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.model.order.Order;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"sivayogasubramanian"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"sivayogasubramanian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"sivayogasubramanian"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":" * A Model stub that contains a single order.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"sivayogasubramanian"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"sivayogasubramanian"},"content":"public class ModelStubWithOrder extends ModelStub {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"sivayogasubramanian"},"content":"    private final ArrayList\u003cClient\u003e clientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sivayogasubramanian"},"content":"    private final Order order;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"sivayogasubramanian"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"sivayogasubramanian"},"content":"     * Constructs a ModelStubWithOrder object which contains the given order.","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"sivayogasubramanian"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"sivayogasubramanian"},"content":"     * @param order The order that this model should contain.","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"sivayogasubramanian"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"sivayogasubramanian"},"content":"    public ModelStubWithOrder(Order order) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(order);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"sivayogasubramanian"},"content":"        this.order \u003d order;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"sivayogasubramanian"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"sivayogasubramanian"},"content":"        return FXCollections.observableList(clientsAdded);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"sivayogasubramanian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"sivayogasubramanian"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"sivayogasubramanian"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"sivayogasubramanian"},"content":"        requireNonNull(order);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"sivayogasubramanian"},"content":"        return this.order.isSameOrder(order);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"sivayogasubramanian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"sivayogasubramanian"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"sivayogasubramanian":39}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":32,"sivayogasubramanian":1}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sivayogasubramanian"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"sivayogasubramanian"},"content":"import ay2122s1_cs2103t_w16_2.btbb.MainApp;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"Manoharan-Ajay-Anand"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link #VALID_FILE_PATH}.","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":106,"Manoharan-Ajay-Anand":1,"sivayogasubramanian":3}},{"path":"src/test/java/ay2122s1_cs2103t_w16_2/btbb/ui/UiTabTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zognin"},"content":"package ay2122s1_cs2103t_w16_2.btbb.ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"zognin"},"content":"import static ay2122s1_cs2103t_w16_2.btbb.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"zognin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"zognin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"zognin"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"zognin"},"content":"public class UiTabTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"zognin"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"zognin"},"content":"    public void getZeroBasedTabIndex_validIndex_zeroBasedIndex() {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"zognin"},"content":"        UiTab tab \u003d UiTab.values()[INDEX_FIRST.getZeroBased()];","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"zognin"},"content":"        assertEquals(tab.getZeroBasedTabIndex(), INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"zognin"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"zognin"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"zognin":14}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"\u003c?import ay2122s1_cs2103t_w16_2.btbb.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"sivayogasubramanian":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"sivayogasubramanian"},"content":"\u003cfx:root type\u003d\"ay2122s1_cs2103t_w16_2.btbb.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"sivayogasubramanian":1}}]
