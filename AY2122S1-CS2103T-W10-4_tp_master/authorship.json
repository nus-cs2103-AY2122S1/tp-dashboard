[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"### \u003cspan style\u003d\"color:orangered\"\u003eIntroduction\u003c/span\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"* WedFast is a **desktop app for organising weddings, optimized for use via a Command Line","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"  Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"  fast, WedFast can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base.","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"* For the detailed documentation of this project, see the **[WedFast Product Website](https://ay2122s1-cs2103t-w10-4.github.io/tp/)**.","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"### \u003cspan style\u003d\"color:orangered\"\u003eAcknowledgement\u003c/span\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org),","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"inherited and continue optimized by AY2122S1-CS2103T-W10-4 developers.","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"DesmondTo":14,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"    archiveName \u003d \u0027WedFast.jar\u0027","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"run {","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"DesmondTo":3,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Banana3021"},"content":"### Ravi Ananya","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Banana3021"},"content":"\u003cimg src\u003d\"images/banana3021.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[github](https://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"sj1999-BIT"},"content":"### Shui Jie","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"sj1999-BIT"},"content":"\u003cimg src\u003d\"images/sj1999-bit.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"sj1999-BIT"},"content":"[[github](https://github.com/sj1999-BIT)]","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"[[portfolio](team/sj1999-bit.md)]","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"sj1999-BIT"},"content":"* Role: developer","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"* Responsibilities: Add filter contact, add group contact","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"### Ruohang Yin","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"\u003cimg src\u003d\"images/yin72257.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"[[github](http://github.com/yin72257)] [[portfolio](team/ruohang.md)]","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Linda124"},"content":"### Linda Tom","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Linda124"},"content":"\u003cimg src\u003d\"images/linda124.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"### Desmond To Cie Hong","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"\u003cimg src\u003d\"images/desmondto.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"[[github](http://github.com/desmondto)]","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"[[portfolio](team/desmondto.md)]","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"sj1999-BIT":6,"Linda124":2,"yin72257":3,"DesmondTo":4,"-":43,"Banana3021":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"DesmondTo"},"content":"### Delete by name feature","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"DesmondTo"},"content":"#### Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"DesmondTo"},"content":"The delete-by-name mechanism is facilitated by `AddressBook`. It implements `ReadOnlyAddressBook` with a person list, stored internally as an `persons`. Additionally, it implements the following operation:","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"DesmondTo"},"content":"* `AddressBook#removePerson()` — Removes specified person from its person list.","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"DesmondTo"},"content":"The operation is exposed in the `Model` interface as `Model#deletePerson()`.","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"DesmondTo"},"content":"Given below is an example usage scenario and how the delete-by-name mechanism behaves at each step.","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"DesmondTo"},"content":"Step 1. The user launches the application and has the following person list saved. `AddressBook` stores these contacts as `persons`.","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"DesmondTo"},"content":"![DeleteByNamePersonList0](images/DeleteByNamePersonList0.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"DesmondTo"},"content":"Step 2. The user executes `delete n/John Doe` command to delete the person named *John Doe* in the list.","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"DesmondTo"},"content":"The `delete` command first calls `Model#updateFilteredPersonList()` and `Model#getFilteredPersonList()` to get a list where all the persons in the list named *John Doe*.","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"DesmondTo"},"content":"![DeleteByNameFilteredPersonList0](images/DeleteByNameFilteredPersonList0.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"DesmondTo"},"content":"Step 3. With the access to the filtered list, it calls `Model#deletePerson()`, causing `AddressBook` to remove each person in the","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"DesmondTo"},"content":"list by calling `AddressBook#removePerson()`. Finally, the user will see the updated person list with *John Doe* removed.","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"DesmondTo"},"content":"![DeleteByNamePersonList1](images/DeleteByNamePersonList1.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a name is not found, it will not call `Model#deletePerson()`, so the `AddressBook` person list will not be modified.","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"DesmondTo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"DesmondTo"},"content":"The following sequence diagram shows how the price sum checking operation works:","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"DesmondTo"},"content":"![Interactions Inside the Logic Component for the `delete n/John Doe` Command](images/DeleteByNameSequenceDiagram.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"DesmondTo"},"content":":information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"DesmondTo"},"content":"limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"DesmondTo"},"content":"The following activity diagram summarizes what happens when a user executes a delete-by-name command:","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"DesmondTo"},"content":"\u003cimg src\u003d\"images/DeleteByName.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"DesmondTo"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"DesmondTo"},"content":"**Aspect: How delete-by-name executes:**","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"DesmondTo"},"content":"* **Alternative 1 (current choice):** Deletes the person with the exact same name.","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"DesmondTo"},"content":"    * Pros: Avoid the situation where user deletes the wrong person","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"DesmondTo"},"content":"    * Cons: User needs to remember the name precisely.","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"DesmondTo"},"content":"* **Alternative 2:** Deletes the person who names partially contains the specified name.","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"DesmondTo"},"content":"    * Pros: User does not have to remember the full name (e.g. `delete n/Alex` will delete both person named *Alex Tan* and *Alex Yeoh*).","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"DesmondTo"},"content":"    * Cons: Might delete the wrong person.","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"DesmondTo"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"DesmondTo"},"content":"* plans a wedding for himself/herself","lastModifiedDate":"2021-09-30"},{"lineNumber":308,"author":{"gitId":"DesmondTo"},"content":"* has a need to manage a significant number of contacts of who will be involving/in-charged for the wedding","lastModifiedDate":"2021-09-30"},{"lineNumber":309,"author":{"gitId":"DesmondTo"},"content":"* prefers desktop applications over other types","lastModifiedDate":"2021-09-30"},{"lineNumber":310,"author":{"gitId":"DesmondTo"},"content":"* can type fast on keyboards","lastModifiedDate":"2021-09-30"},{"lineNumber":311,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":312,"author":{"gitId":"DesmondTo"},"content":"* is reasonably comfortable and prefers using CLI applications","lastModifiedDate":"2021-09-30"},{"lineNumber":313,"author":{"gitId":"DesmondTo"},"content":"* is often forgetful and needs a program that will assist him with keeping track of the wedding details","lastModifiedDate":"2021-09-30"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"DesmondTo"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app and more specific to wedding-planning","lastModifiedDate":"2021-09-30"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                                                   | So that I can…​                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"Banana3021"},"content":"| -------- | --------------------------------------------- | ----------------------------------------------------------------  | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-25"},{"lineNumber":324,"author":{"gitId":"Banana3021"},"content":"| `* * *`  | new user                                      | read usage instructions                                           | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2021-09-25"},{"lineNumber":325,"author":{"gitId":"-"},"content":"| `* * *`  | user                                          | add a new person                                                  |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"Banana3021"},"content":"| `* * *`  | user with changing plans                      | delete a person                                                   | remove entries that I no longer need                                   |","lastModifiedDate":"2021-09-25"},{"lineNumber":327,"author":{"gitId":"Banana3021"},"content":"| `* * *`  | user who wants convenience                    | find a person by name                                             | save time by not searching through the entire contact list             |","lastModifiedDate":"2021-09-25"},{"lineNumber":328,"author":{"gitId":"Banana3021"},"content":"| `* * *`  | private user                                  | hide private contact details                                      | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2021-09-25"},{"lineNumber":329,"author":{"gitId":"Banana3021"},"content":"| `* * *`  | user with several contacts                    | filter contacts                                                   | keep track of them                                                     |","lastModifiedDate":"2021-09-25"},{"lineNumber":330,"author":{"gitId":"Banana3021"},"content":"| `* * *`  | careless user                                 | undo the last incorrect change made to tasks                      | revert my mistake                                                      |","lastModifiedDate":"2021-09-25"},{"lineNumber":331,"author":{"gitId":"Banana3021"},"content":"| `* * *`  | expert user                                   | use shortcuts to access different features                        | utilise the app efficiently                                            |","lastModifiedDate":"2021-09-25"},{"lineNumber":332,"author":{"gitId":"Banana3021"},"content":"| `* * *`  | frugal user                                   | add price tags to contacts                                        | avoid exceeding my budget                                              |","lastModifiedDate":"2021-09-25"},{"lineNumber":333,"author":{"gitId":"Banana3021"},"content":"| `* * *`  | forgetful user                                | notified for a specific time to remind myself to complete a task  | avoid forgetting to complete any important tasks                       |","lastModifiedDate":"2021-09-25"},{"lineNumber":334,"author":{"gitId":"Banana3021"},"content":"| `* * *`  | user with poor time management skills         | keep track of payment and deadlines                               | avoid missing any payments and getting fined                          |","lastModifiedDate":"2021-09-25"},{"lineNumber":335,"author":{"gitId":"Banana3021"},"content":"| `* * *`  | very organized user                           | group contacts under the same category                            | manipulate the contacts easily                                         |","lastModifiedDate":"2021-09-25"},{"lineNumber":336,"author":{"gitId":"Banana3021"},"content":"| `* * *`  | user who wants to customise the program       | create shortcuts for longer commands                              | use the commands more efficiently                                      |","lastModifiedDate":"2021-09-25"},{"lineNumber":337,"author":{"gitId":"Banana3021"},"content":"| `* * *`  | infrequent user                               | get reminded via email of when to handle contacts                 | avoid not being aware of my plans                                      |","lastModifiedDate":"2021-09-25"},{"lineNumber":338,"author":{"gitId":"Banana3021"},"content":"| `* *  `  | user who relies on faces for for recognition  | view the profile picture of contacts whose faces I have forgotten | recognise these people should I have to meet them in the future        |","lastModifiedDate":"2021-09-25"},{"lineNumber":339,"author":{"gitId":"Banana3021"},"content":"| `* *  `  | user with limited time to find contacts       | access recommended contacts                                       | prioritise adding more important contacts from scratch                 |","lastModifiedDate":"2021-09-25"},{"lineNumber":340,"author":{"gitId":"Banana3021"},"content":"| `* *  `  | user who needs to prioritise certain contacts | rank the contacts                                                 | see who needs to be called more often                                  |","lastModifiedDate":"2021-09-25"},{"lineNumber":341,"author":{"gitId":"Banana3021"},"content":"| `* *  `  | busy user                                     | schedule different timings for different contacts                 | plan the wedding around my schedule                                    |","lastModifiedDate":"2021-09-25"},{"lineNumber":342,"author":{"gitId":"Banana3021"},"content":"| `* *  `  | user who invites a lot of people              | check the attending status of guests                              | my plan is consistent                                                  |","lastModifiedDate":"2021-09-25"},{"lineNumber":343,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"DesmondTo"},"content":"(For all use cases below, the **System** is the `WedFast` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-27"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"Linda124"},"content":"**Use case: Add a contact to a group**","lastModifiedDate":"2021-09-25"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"DesmondTo"},"content":"**Guarantees**","lastModifiedDate":"2021-09-27"},{"lineNumber":354,"author":{"gitId":"DesmondTo"},"content":"* Contact will be added to group only if both the contact and group exists.","lastModifiedDate":"2021-09-27"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"Linda124"},"content":"1. User types out name of contact with group name using specified format.","lastModifiedDate":"2021-09-25"},{"lineNumber":359,"author":{"gitId":"DesmondTo"},"content":"2. User confirms.","lastModifiedDate":"2021-09-29"},{"lineNumber":360,"author":{"gitId":"DesmondTo"},"content":"3. System adds contact to said group.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":361,"author":{"gitId":"Linda124"},"content":"    Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":363,"author":{"gitId":"DesmondTo"},"content":"**Extensions**","lastModifiedDate":"2021-09-27"},{"lineNumber":364,"author":{"gitId":"DesmondTo"},"content":"* 2a. Either name/group name is unspecified/blank(white spaces only)/does not exist.","lastModifiedDate":"2021-09-29"},{"lineNumber":365,"author":{"gitId":"DesmondTo"},"content":"    * 2a1. System shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":366,"author":{"gitId":"DesmondTo"},"content":"    * 2a2. User indicates the error message has been read.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":367,"author":{"gitId":"DesmondTo"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-09-27"},{"lineNumber":368,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":369,"author":{"gitId":"Linda124"},"content":"**Use case:  Filter contacts**","lastModifiedDate":"2021-09-25"},{"lineNumber":370,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":371,"author":{"gitId":"DesmondTo"},"content":"**Guarantees:**","lastModifiedDate":"2021-09-27"},{"lineNumber":372,"author":{"gitId":"DesmondTo"},"content":"* System successfully filter and display the contacts list only if the group/tag exists.","lastModifiedDate":"2021-09-27"},{"lineNumber":373,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":374,"author":{"gitId":"Linda124"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"Linda124"},"content":"1. User types out group and/or tag in specified format.","lastModifiedDate":"2021-09-25"},{"lineNumber":377,"author":{"gitId":"DesmondTo"},"content":"2. User confirms.","lastModifiedDate":"2021-09-29"},{"lineNumber":378,"author":{"gitId":"DesmondTo"},"content":"3. System filters contacts that fall under that group and/or tag.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"DesmondTo"},"content":"* 2a. Either group/tag name is unspecified/blank(white spaces only)/does not exist.","lastModifiedDate":"2021-09-29"},{"lineNumber":383,"author":{"gitId":"DesmondTo"},"content":"    * 2a1. System shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":384,"author":{"gitId":"DesmondTo"},"content":"    * 2a2. User indicates the error message has been read.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":385,"author":{"gitId":"DesmondTo"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-27"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"DesmondTo"},"content":"**Use case:  Track important information**","lastModifiedDate":"2021-09-27"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"DesmondTo"},"content":"**MSS**","lastModifiedDate":"2021-09-27"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"Linda124"},"content":"1. User types in key details when creating new contacts.","lastModifiedDate":"2021-10-05"},{"lineNumber":392,"author":{"gitId":"DesmondTo"},"content":"2. User types out the tracking command keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":393,"author":{"gitId":"DesmondTo"},"content":"3. User confirms.","lastModifiedDate":"2021-09-29"},{"lineNumber":394,"author":{"gitId":"DesmondTo"},"content":"4. System summarises all the important information typed by user across all contacts.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"DesmondTo"},"content":"**Use case: Add/Edit price tag**","lastModifiedDate":"2021-09-27"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"DesmondTo"},"content":"**Guarantees:**","lastModifiedDate":"2021-09-27"},{"lineNumber":400,"author":{"gitId":"DesmondTo"},"content":"* A price tag will be added to the contact only if the contact exists and price is specified in the correct format.","lastModifiedDate":"2021-09-27"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"DesmondTo"},"content":"1. When adding/editing contact, user also types in the price detail.","lastModifiedDate":"2021-09-29"},{"lineNumber":403,"author":{"gitId":"DesmondTo"},"content":"2. User confirms.","lastModifiedDate":"2021-09-29"},{"lineNumber":404,"author":{"gitId":"DesmondTo"},"content":"3. System updates the contact list and the target contact will now have price tag(s).","lastModifiedDate":"2021-09-29"},{"lineNumber":405,"author":{"gitId":"DesmondTo"},"content":"    Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"DesmondTo"},"content":"**Extensions**","lastModifiedDate":"2021-09-27"},{"lineNumber":408,"author":{"gitId":"DesmondTo"},"content":"* 2a. Price is unspecified/blank(white spaces only)/written in invalid format.","lastModifiedDate":"2021-09-29"},{"lineNumber":409,"author":{"gitId":"DesmondTo"},"content":"    * 2a1. System shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":410,"author":{"gitId":"DesmondTo"},"content":"    * 2a2. User indicates the error message has been read.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":411,"author":{"gitId":"DesmondTo"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-27"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"sj1999-BIT"},"content":"1.  Should work on any pc as long as it has Java `11` or above installed.","lastModifiedDate":"2021-09-24"},{"lineNumber":418,"author":{"gitId":"DesmondTo"},"content":"2.  Should be able to store and manage at least 100 contacts.","lastModifiedDate":"2021-09-29"},{"lineNumber":419,"author":{"gitId":"sj1999-BIT"},"content":"3.  Should be able to guarantee data security to protect privacy of user.","lastModifiedDate":"2021-09-24"},{"lineNumber":420,"author":{"gitId":"sj1999-BIT"},"content":"4.  Should not store more than 20MB of infomation.","lastModifiedDate":"2021-09-24"},{"lineNumber":421,"author":{"gitId":"yin72257"},"content":"5.  Program should respond within 2 seconds of each command.","lastModifiedDate":"2021-09-24"},{"lineNumber":422,"author":{"gitId":"DesmondTo"},"content":"6.  Product is not handling more than 1 user planning a wedding at once.","lastModifiedDate":"2021-09-29"},{"lineNumber":423,"author":{"gitId":"yin72257"},"content":"7.  Should be usable by anyone who understands english without any experience in planning weddings.","lastModifiedDate":"2021-09-24"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"Banana3021"},"content":"* **PlantUML**: is a tool for specifying various diagrams in a textual form.","lastModifiedDate":"2021-09-30"},{"lineNumber":432,"author":{"gitId":"Banana3021"},"content":"* **API**: The Application Programming Interface specifies the interface through which software and other programs interact","lastModifiedDate":"2021-09-25"},{"lineNumber":433,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"Banana3021"},"content":"* **Filter**: Add tags to contacts such as price, type of contact","lastModifiedDate":"2021-09-25"},{"lineNumber":435,"author":{"gitId":"Banana3021"},"content":"* **Actor**: a role played by a use case","lastModifiedDate":"2021-09-30"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"sj1999-BIT":3,"Linda124":8,"DesmondTo":93,"yin72257":2,"-":358,"Banana3021":24}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"    \u003cimg src\u003d\"images/WedFastUserGuideCoverPage.png\" alt\u003d\"CoverPage\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"---","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"## **Table of Contents**","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"* [**Product Overview**](#product-overview)","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"* [**About This User Guide**](#about-this-user-guide)","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"  * [How to navigate this guide?](#how-to-navigate-this-guide)","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"  * [What do these icons mean?](#what-do-these-icons-mean)","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"  * [What do these formatting mean?](#what-do-these-formatting-mean)","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"* [**Getting Started**](#getting-started)","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"  * [Installation](#installation)","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"  * [Using command-line interface(CLI)](#using-command-line-interface-cli)","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"* [**Features**](#features)","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"  * [Viewing help : `help`](#viewing-help--help)","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"  * [Adding a person : `add`](#adding-a-person--add)","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"  * [Listing all persons : `list`](#listing-all-persons--list)","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"  * [Editing a person : `edit`](#editing-a-person--edit)","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"  * [Grouping persons : `group`](#grouping-persons--group)","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"  * [Locating persons : `find`](#locating-persons--find)","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"  * [Deleting a person : `delete`](#deleting-a-person--delete)","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"  * [Clearing all entries : `clear`](#clearing-all-entries--clear)","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"  * [Undoing last change : `undo`](#undoing-last-change--undo)","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"  * [Counting down to the wedding day : `countdown`](#counting-down-to-the-wedding-day--countdown)","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"  * [Counting head by tag : `tagInfo`](#counting-head-by-tag--taginfo)","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"  * [Calculating wedding cost : `price`](#calculating-wedding-cost--price)","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"  * [Getting your wedding plan report : `report`](#getting-your-wedding-plan-report--report)","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"  * [Adding customizable shortcuts : `addsc`](#adding-customizable-shortcuts--addsc)","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"  * [Using shortcuts : `sc`](#using--shortcuts--sc)","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"  * [Viewing shortcuts : `listsc`](#viewing-shortcuts--listsc)","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"  * [Deleting shortcuts : `removesc`](#deleting-shortcuts--removesc)","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"  * [Exiting the program : `exit`](#exiting-the-program--exit)","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"  * [Saving the data file](#saving-the-data-file)","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"  * [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"  * [Redoing last change : `redo`](#redoing-last-change--redo-coming-soon) (Coming soon)","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"  * [Reminding via email : `remind`](#reminding-via-email--remind-coming-soon) (Coming soon)","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"* [**FAQ**](#faq)","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"  * [About the program](#about-the-program)","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"  * [About the command](#about-the-command)","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"* [**Command Summary**](#command-summary)","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"* [**Glossary**](#glossary)","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"---","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"## **Product Overview**","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"**_WedFast_ is a desktop app for managing contacts of your dream wedding, optimized for use via a","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"[Command Line Interface](#command-line-interface-cli) (CLI) while still having the benefits of a","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"[Graphical User Interface](#graphical-user-interface-gui) (GUI).**","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"You can use _WedFast_ to **add, edit and delete the contacts**. These contacts are not just limited to those attending","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"your wedding, it can also be those you are hiring such as your photographer and costume designer. On this basis,","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"_WedFast_ allows you to **add tag to these contacts, calculating the cost, and even generating a detailed report for","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"your wedding plan!**","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"Excited to try _WedFast_ out? This user guide will **walk you through all the latest features, troubleshoots your","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"problems and provides you a command summary to boost your efficiency!**","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"---","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"## **About This User Guide**","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":":information_source: Welcome to _WedFast_ user guide!","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"In this section, you will **learn how to use this guide**.","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"### How to navigate this guide?","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"1. **Navigating up or down** this user guide via either of the following methods:","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"DesmondTo"},"content":"  * Scroll up or down using your mouse wheel.","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"DesmondTo"},"content":"  * Press ↑ or ↓ button on your keyboard.","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"DesmondTo"},"content":"2. **Jumping to different section** of this user guide:","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"DesmondTo"},"content":"  * Click on any content you want to read in [Table of Contents](#table-of-contents).","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"DesmondTo"},"content":"3. **Finding keywords** in this user guide:","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"DesmondTo"},"content":"  * Press CTRL + F and type in some keywords.","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"  * Press Enter to navigate to each keyword found in this user guide.","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"DesmondTo"},"content":"### What do these icons mean?","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"DesmondTo"},"content":"**Icon**              | **Meaning**","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"DesmondTo"},"content":":---------------------|:-----------------------------","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"DesmondTo"},"content":":information_source:  | Important info that you need to take note of","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"DesmondTo"},"content":":bulb:                | Useful tip that you might want to know","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"DesmondTo"},"content":":exclamation:         | Be cautious when attempting/Things that you should avoid","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"DesmondTo"},"content":"🔝                    | Back to [Table of Content](#table-of-contents)","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"DesmondTo"},"content":"### What do these formatting mean?","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"DesmondTo"},"content":"**Format**           | **Meaning**","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"DesmondTo"},"content":":--------------------|:-----------------------------","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"DesmondTo"},"content":"_Italic text_        | The name of this product or a file path.","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"DesmondTo"},"content":"**Bold text**        | The focus of a sentence or the table header.","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"DesmondTo"},"content":"`Text in code block` | A command syntax or an item of interest.","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"DesmondTo"},"content":"[Text in blue](#what-do-these-formatting-mean)    | A text that you can click to jump to different section of this guide or to a website.","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"DesmondTo"},"content":"\u003cspan style\u003d\"color:#e46c0a; font-size: 2em; font-weight: bold;\"\u003eVery large, bold text in Orange\u003c/span\u003e  | Heading of a section in this guide.","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"DesmondTo"},"content":"\u003cspan style\u003d\"color:#e46c0a; font-size: 1.65em;\"\u003eLarge text in Orange\u003c/span\u003e | Subheading of a section in this guide.","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"DesmondTo"},"content":"---","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"DesmondTo"},"content":"## **Getting Started**","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"DesmondTo"},"content":":information_source: This section will teach you step-by-step how to install and use _WedFast_","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"DesmondTo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"DesmondTo"},"content":"### Installation","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"DesmondTo"},"content":"1. Ensure your device runs on **Windows** or **macOS** because _WedFast_ only supports these two operating systems.","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"DesmondTo"},"content":"2. Ensure you have `Java 11` or above installed in your device. Not sure how to install? [Click me](https://java.com/en/download/help/download_options.html).","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"DesmondTo"},"content":"3. Download the latest `wedfast.jar` from [here](https://github.com/AY2122S1-CS2103T-W10-4/tp/releases/download/v1.2.1/WedFast.jar).","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"DesmondTo"},"content":"4. Copy the file to the folder you want to use as the _home folder_ for your _WedFast_.","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"DesmondTo"},"content":"5. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"DesmondTo"},"content":"   Note how the app contains some sample data.","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"DesmondTo"},"content":"   \u003cimg src\u003d\"images/Ui.png\" alt\u003d\"CoverPage\" height\u003d\"500\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":135,"author":{"gitId":"DesmondTo"},"content":"### Using command-line interface (CLI)","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"DesmondTo"},"content":"1. Type the command in the command box and press Enter to execute it.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"DesmondTo"},"content":"   e.g. typing `help` and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":139,"author":{"gitId":"DesmondTo"},"content":"2. Some example commands you can try:","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"DesmondTo"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"DesmondTo"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`: Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"DesmondTo"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"DesmondTo"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"DesmondTo"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"DesmondTo"},"content":"3. Congratulation for finishing up the basics! You can refer to the [Features](#features) below for more details of","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"DesmondTo"},"content":"   each command.","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"DesmondTo"},"content":"[Back to top 🔝](#table-of-contents)","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"DesmondTo"},"content":"---","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"DesmondTo"},"content":"## **Features**","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"DesmondTo"},"content":":information_source: **Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"DesmondTo"},"content":"This section consists of important note for _WedFast_ command to function properly.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"DesmondTo"},"content":"Rest assured that this guide will provide example to help you better understand each important note below.","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"DesmondTo"},"content":"No.  | **Note**                                                                                                                                           | **Example**","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"DesmondTo"},"content":":---:| :------------------------------------------------------------------------------------------------------------------------------------------------- | :-----------------------------","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"DesmondTo"},"content":"1    | Words in `UPPER_CASE` are the parameters you need to supplied                                                                                      | In `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"DesmondTo"},"content":"2    | Items in square brackets are optional.                                                                                                             | `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"DesmondTo"},"content":"3    | Items with `…`​ after them can be used multiple times including zero times.                                                                     | `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"DesmondTo"},"content":"4    | Parameters can be in any order.                                                                                                                    | If the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"DesmondTo"},"content":"5    | If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken. | If you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"DesmondTo"},"content":"6    | Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.                    | If the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"DesmondTo"},"content":"[Back to top 🔝](#table-of-contents)","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"DesmondTo"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"DesmondTo"},"content":"This feature provides you with the help page link, so that you can access it to troubleshoot your problem with the info","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"DesmondTo"},"content":"provided.","lastModifiedDate":"2021-10-28"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":183,"author":{"gitId":"DesmondTo"},"content":"To show a message on how to access the help page.","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"DesmondTo"},"content":"1. Type the command: `help` in the command box.","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"DesmondTo"},"content":"2. Press Enter","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"DesmondTo"},"content":"Outcome:\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"DesmondTo"},"content":"You will be able to see a pop-up window showing the help page link.","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"DesmondTo"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"DesmondTo"},"content":"### Adding a person : `add`","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"DesmondTo"},"content":"This feature allows you to add a person to your contact by specifying the details, so that you can refer back in the","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"DesmondTo"},"content":"future.","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"DesmondTo"},"content":"To add a person to the contact list:","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"DesmondTo"},"content":"1. Type the command in the command box with the following format:\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"DesmondTo"},"content":"`add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [pr/PRICE] [i/IMPORTANT_INFORMATION] [s/STATUS] [t/TAG]…​`","lastModifiedDate":"2021-10-29"},{"lineNumber":198,"author":{"gitId":"DesmondTo"},"content":"2. Press Enter.","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"DesmondTo"},"content":"**:bulb: Tip:**\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"DesmondTo"},"content":"* A person can have any number of tags (including 0)","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"DesmondTo"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":207,"author":{"gitId":"DesmondTo"},"content":"`add n/Jane Doherty p/1847291074 e/janedoe123@gmail.com a/Coral Street, 5th Avenue, #02-04, pr/500.00 i/none s/pending ","lastModifiedDate":"2021-10-29"},{"lineNumber":208,"author":{"gitId":"DesmondTo"},"content":"t/caterer`","lastModifiedDate":"2021-10-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"DesmondTo"},"content":"Outcome:\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"DesmondTo"},"content":"You will see a contact named `Jane Doherty` with all the specified details appears in the contact list.","lastModifiedDate":"2021-10-29"},{"lineNumber":212,"author":{"gitId":"DesmondTo"},"content":"![add contact](images/AddContact.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"DesmondTo"},"content":"### Listing all persons : `list`","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"DesmondTo"},"content":"This feature displays a list of all your contacts in a single column.","lastModifiedDate":"2021-10-28"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":217,"author":{"gitId":"DesmondTo"},"content":"To lists all the existing contacts.","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"DesmondTo"},"content":"1. Type the command: `list` in the command box.","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"DesmondTo"},"content":"2. Press Enter.","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"DesmondTo"},"content":"This feature allows you to update a person\u0027s detail at the specified index, so that you can replace the incorrect and ","lastModifiedDate":"2021-10-28"},{"lineNumber":223,"author":{"gitId":"DesmondTo"},"content":"outdated data with the correct and updated one.","lastModifiedDate":"2021-10-28"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":225,"author":{"gitId":"DesmondTo"},"content":"To edit an existing person in the contact list:","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"DesmondTo"},"content":"1. Type the command in the command box with the following format:\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"DesmondTo"},"content":"   `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [pr/PRICE] [i/IMPORTANT_INFORMATION] [r/REMINDER] [g/group] [t/tag]…​`","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"DesmondTo"},"content":"2. Press Enter.","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":232,"author":{"gitId":"DesmondTo"},"content":"**:bulb: Tips:**\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"DesmondTo"},"content":"* `INDEX` refers to the index number shown in the displayed person list. It must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-10-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"Linda124"},"content":"* When editing tags, the existing tags of the person will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2021-10-29"},{"lineNumber":236,"author":{"gitId":"DesmondTo"},"content":"* You can remove all the person’s tags by typing t/ without specifying any tags after it.","lastModifiedDate":"2021-10-28"},{"lineNumber":237,"author":{"gitId":"DesmondTo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"DesmondTo"},"content":"Examples and expected outcomes:","lastModifiedDate":"2021-10-29"},{"lineNumber":240,"author":{"gitId":"DesmondTo"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be 91234567 and johndoe@example.com respectively.","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"DesmondTo"},"content":"* `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be Betsy Crower and clears all existing tags.","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":243,"author":{"gitId":"DesmondTo"},"content":"### Grouping persons : `group`","lastModifiedDate":"2021-10-24"},{"lineNumber":244,"author":{"gitId":"DesmondTo"},"content":"This feature allows you to add a single tag to multiple contacts at once.","lastModifiedDate":"2021-10-29"},{"lineNumber":245,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":246,"author":{"gitId":"DesmondTo"},"content":"To group existing persons in the contact list together to an existing named tag or create a new tag","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"DesmondTo"},"content":"1. Type the command in the command box with the following format:\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"DesmondTo"},"content":"   `group t/GROUP_NAME n/NAME1, NAME2, ...`","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"DesmondTo"},"content":"2. Press Enter.","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":251,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":253,"author":{"gitId":"DesmondTo"},"content":"**:bulb: Tips:**\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":254,"author":{"gitId":"DesmondTo"},"content":"* You cannot add two or more same `TAG` on a contact (no duplicate `TAG`).","lastModifiedDate":"2021-10-29"},{"lineNumber":255,"author":{"gitId":"DesmondTo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":257,"author":{"gitId":"DesmondTo"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":258,"author":{"gitId":"DesmondTo"},"content":"`group t/VIP n/Alex Yeoh, Bernice Yu`","lastModifiedDate":"2021-10-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":260,"author":{"gitId":"DesmondTo"},"content":"Outcome:\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":261,"author":{"gitId":"DesmondTo"},"content":"Both `Alex Yeoh` and `Bernice Yu` now has the tag `VIP`","lastModifiedDate":"2021-10-29"},{"lineNumber":262,"author":{"gitId":"DesmondTo"},"content":"![group contact](images/GroupContacts.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":264,"author":{"gitId":"DesmondTo"},"content":"### Locating persons : `find`","lastModifiedDate":"2021-10-26"},{"lineNumber":265,"author":{"gitId":"DesmondTo"},"content":"This feature allows you to filter the contact list based on the parameters specified, so that you can easily find the","lastModifiedDate":"2021-10-29"},{"lineNumber":266,"author":{"gitId":"DesmondTo"},"content":"contacts you interested.","lastModifiedDate":"2021-10-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":268,"author":{"gitId":"DesmondTo"},"content":"To find persons whose names contain any of the given keywords, or labelled with same tag, or labelled within the price range.","lastModifiedDate":"2021-10-26"},{"lineNumber":269,"author":{"gitId":"DesmondTo"},"content":"1. Type the command in the command box with either of the following formats:\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":270,"author":{"gitId":"DesmondTo"},"content":"    * `find KEYWORD [MORE_KEYWORDS]` or","lastModifiedDate":"2021-10-26"},{"lineNumber":271,"author":{"gitId":"DesmondTo"},"content":"    * `find t/TAG [t/MORE_TAG]` or","lastModifiedDate":"2021-10-26"},{"lineNumber":272,"author":{"gitId":"DesmondTo"},"content":"    * `find pr/PRICE_RANGE`","lastModifiedDate":"2021-10-26"},{"lineNumber":273,"author":{"gitId":"DesmondTo"},"content":"2. Press Enter.","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":275,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":276,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":277,"author":{"gitId":"DesmondTo"},"content":"**:bulb: Tips:**\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":278,"author":{"gitId":"DesmondTo"},"content":"* These parameters can all be use in conjunction to find a contact that fits any keyword and any tag and under a price range.","lastModifiedDate":"2021-10-29"},{"lineNumber":279,"author":{"gitId":"DesmondTo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":280,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":281,"author":{"gitId":"DesmondTo"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":282,"author":{"gitId":"DesmondTo"},"content":"`find t/friends t/colleagues pr/\u003e\u003d0.00`","lastModifiedDate":"2021-10-29"},{"lineNumber":283,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":284,"author":{"gitId":"DesmondTo"},"content":"Outcome:\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":285,"author":{"gitId":"DesmondTo"},"content":"You will see only the contacts with `friends` and `colleagues` tag as well as having the price of more than `$0.00`","lastModifiedDate":"2021-10-29"},{"lineNumber":286,"author":{"gitId":"DesmondTo"},"content":"![find contact](images/findContact.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":287,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":288,"author":{"gitId":"yin72257"},"content":"**:exclamation:Caution:**\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":289,"author":{"gitId":"yin72257"},"content":"Find currently only supports name, tags and price range. Price range operators include \u003d, \u003e, \u003c, \u003e\u003d, \u003c\u003d.","lastModifiedDate":"2021-11-01"},{"lineNumber":290,"author":{"gitId":"yin72257"},"content":"Furthermore, price must be entered with 2 decimal points. ","lastModifiedDate":"2021-11-01"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2021-10-26"},{"lineNumber":293,"author":{"gitId":"DesmondTo"},"content":"This feature allows you to remove a person entry in your contact that you no longer wish to track in the future.","lastModifiedDate":"2021-10-28"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":295,"author":{"gitId":"DesmondTo"},"content":"To delete a person from the contact list via index/name/tag:","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"DesmondTo"},"content":"1. Type the command in the command box with either of the following formats:\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":297,"author":{"gitId":"DesmondTo"},"content":"    * `delete INDEX` or \u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":298,"author":{"gitId":"DesmondTo"},"content":"    * `delete n/NAME` or \u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":299,"author":{"gitId":"DesmondTo"},"content":"    * `delete t/TAG`","lastModifiedDate":"2021-10-26"},{"lineNumber":300,"author":{"gitId":"DesmondTo"},"content":"2. Press Enter.","lastModifiedDate":"2021-10-24"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"DesmondTo"},"content":"**:exclamation:Caution:**\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":305,"author":{"gitId":"Linda124"},"content":"It deletes a person entry permanently from your contact, but you can [undo](#undoing-last-change--undo) the deletion","lastModifiedDate":"2021-10-29"},{"lineNumber":306,"author":{"gitId":"Linda124"},"content":"if you wish to.","lastModifiedDate":"2021-10-29"},{"lineNumber":307,"author":{"gitId":"DesmondTo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":308,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":309,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":310,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":311,"author":{"gitId":"DesmondTo"},"content":"**:bulb: Tips:**\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":312,"author":{"gitId":"DesmondTo"},"content":"* `INDEX` refers to the index number shown in the displayed person list. It must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"DesmondTo"},"content":"* Other than `INDEX`, you can specify a contact you want to delete by `NAME` or `TAG`, but they cannot be used together","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"DesmondTo"},"content":"  such as `delete 1 n/Lily`","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"DesmondTo"},"content":"* `TAG` must not contain whitespace","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"DesmondTo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"DesmondTo"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":319,"author":{"gitId":"DesmondTo"},"content":"`delete 7`","lastModifiedDate":"2021-10-28"},{"lineNumber":320,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":321,"author":{"gitId":"DesmondTo"},"content":"Outcome:\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":322,"author":{"gitId":"DesmondTo"},"content":"The 7th contact, `John Doe` disappears from the contact list.","lastModifiedDate":"2021-10-28"},{"lineNumber":323,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"DesmondTo"},"content":"Before:\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":325,"author":{"gitId":"DesmondTo"},"content":"![before delete contact](images/deleteContact1.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":326,"author":{"gitId":"DesmondTo"},"content":"After:\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":327,"author":{"gitId":"DesmondTo"},"content":"![after delete contact](images/deleteContact2.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":329,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2021-10-26"},{"lineNumber":330,"author":{"gitId":"DesmondTo"},"content":"This feature allows you to delete all the contacts at once from the contact list.","lastModifiedDate":"2021-10-28"},{"lineNumber":331,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":332,"author":{"gitId":"DesmondTo"},"content":"To clear all entries in the contact list:","lastModifiedDate":"2021-10-26"},{"lineNumber":333,"author":{"gitId":"DesmondTo"},"content":"1. Type the command: `clear` in the command box.","lastModifiedDate":"2021-10-26"},{"lineNumber":334,"author":{"gitId":"DesmondTo"},"content":"2. Press Enter","lastModifiedDate":"2021-10-26"},{"lineNumber":335,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":336,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"DesmondTo"},"content":"**:exclamation:Caution:**\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":339,"author":{"gitId":"Linda124"},"content":"It deletes all the existing person entries permanently from your contact, but you can [undo](#undoing-last-change--undo) the deletion","lastModifiedDate":"2021-10-29"},{"lineNumber":340,"author":{"gitId":"Linda124"},"content":"if you wish to.","lastModifiedDate":"2021-10-29"},{"lineNumber":341,"author":{"gitId":"DesmondTo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":342,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":343,"author":{"gitId":"DesmondTo"},"content":"Outcome:\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":344,"author":{"gitId":"DesmondTo"},"content":"All the contacts disappear from the contact list.","lastModifiedDate":"2021-10-28"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"DesmondTo"},"content":"### Undoing last change : `undo`","lastModifiedDate":"2021-10-26"},{"lineNumber":347,"author":{"gitId":"DesmondTo"},"content":"This feature allows you to undo a change to the contact list if you think the change is a mistake.","lastModifiedDate":"2021-10-28"},{"lineNumber":348,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":349,"author":{"gitId":"DesmondTo"},"content":"To undo the last change that was made to the contact list.","lastModifiedDate":"2021-10-26"},{"lineNumber":350,"author":{"gitId":"DesmondTo"},"content":"1. Type the command: `undo` in the command box.","lastModifiedDate":"2021-10-26"},{"lineNumber":351,"author":{"gitId":"DesmondTo"},"content":"2. Press Enter.","lastModifiedDate":"2021-10-26"},{"lineNumber":352,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":353,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":354,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":355,"author":{"gitId":"DesmondTo"},"content":"**:bulb: Tip:**\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":356,"author":{"gitId":"DesmondTo"},"content":"* This feature currently only supports features such as [adding](#adding-a-person--add), ","lastModifiedDate":"2021-10-28"},{"lineNumber":357,"author":{"gitId":"DesmondTo"},"content":"  [editing](#editing-a-person--edit), [delete](#deleting-a-person--delete), [grouping](#grouping-persons--group) and ","lastModifiedDate":"2021-10-29"},{"lineNumber":358,"author":{"gitId":"DesmondTo"},"content":"  [clear](#clearing-all-entries--clear)","lastModifiedDate":"2021-10-29"},{"lineNumber":359,"author":{"gitId":"DesmondTo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":360,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":361,"author":{"gitId":"DesmondTo"},"content":"Examples and expected outcome:\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":362,"author":{"gitId":"DesmondTo"},"content":"* `undo` after `delete 2`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":363,"author":{"gitId":"DesmondTo"},"content":"  2nd contact is deleted with command `delete 2`:","lastModifiedDate":"2021-10-29"},{"lineNumber":364,"author":{"gitId":"Banana3021"},"content":"  ![delete by index](images/DeleteIndex.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":365,"author":{"gitId":"DesmondTo"},"content":"  Undo the deletion with command `undo`:","lastModifiedDate":"2021-10-29"},{"lineNumber":366,"author":{"gitId":"Banana3021"},"content":"  ![undo delete by index](images/UndoDeleteIndex.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":367,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":368,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":369,"author":{"gitId":"DesmondTo"},"content":"* `undo` after `group`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":370,"author":{"gitId":"DesmondTo"},"content":"  Group `David Li` and `Irfan Ibrahim` under the tag `Bus` with command `group t/Bus n/David Li, Irfan Ibrahim`:\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":371,"author":{"gitId":"Banana3021"},"content":"  ![group](images/GroupContacts.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":372,"author":{"gitId":"DesmondTo"},"content":"  Undo the grouping with command `undo`","lastModifiedDate":"2021-10-29"},{"lineNumber":373,"author":{"gitId":"Banana3021"},"content":"  ![group](images/UndoGroupContacts.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":374,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":375,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":376,"author":{"gitId":"DesmondTo"},"content":"* `undo` after `clear`:\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":377,"author":{"gitId":"DesmondTo"},"content":"  Clear all person entries in the contact with command `clear`:","lastModifiedDate":"2021-10-29"},{"lineNumber":378,"author":{"gitId":"Banana3021"},"content":"  ![clear](images/Clear.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":379,"author":{"gitId":"DesmondTo"},"content":"  Undo the clear with command `undo`:","lastModifiedDate":"2021-10-29"},{"lineNumber":380,"author":{"gitId":"Banana3021"},"content":"  ![clear](images/UndoClear.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":381,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":382,"author":{"gitId":"DesmondTo"},"content":"### Counting down to the wedding day : `countdown`","lastModifiedDate":"2021-10-26"},{"lineNumber":383,"author":{"gitId":"DesmondTo"},"content":"This feature helps you calculate how many day left before your wedding, so that you have an idea how much time can you","lastModifiedDate":"2021-10-28"},{"lineNumber":384,"author":{"gitId":"DesmondTo"},"content":"prepare for your wedding.","lastModifiedDate":"2021-10-28"},{"lineNumber":385,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":386,"author":{"gitId":"DesmondTo"},"content":"To check the countdown till your wedding day:","lastModifiedDate":"2021-10-24"},{"lineNumber":387,"author":{"gitId":"DesmondTo"},"content":"1. Type the command in the command box with the following format:\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":388,"author":{"gitId":"DesmondTo"},"content":"   `countdown YYYY-MM-DD`","lastModifiedDate":"2021-10-24"},{"lineNumber":389,"author":{"gitId":"DesmondTo"},"content":"2. Press Enter.","lastModifiedDate":"2021-10-24"},{"lineNumber":390,"author":{"gitId":"DesmondTo"},"content":"3. Your wedding date has now been updated.","lastModifiedDate":"2021-10-24"},{"lineNumber":391,"author":{"gitId":"DesmondTo"},"content":"4. Type `countdown` in the command box and press Enter to check the countdown based on the wedding date","lastModifiedDate":"2021-10-24"},{"lineNumber":392,"author":{"gitId":"DesmondTo"},"content":"   set.","lastModifiedDate":"2021-10-24"},{"lineNumber":393,"author":{"gitId":"DesmondTo"},"content":"5. Repeat step (1) and step (2) again if you wish to reset the wedding date.","lastModifiedDate":"2021-10-24"},{"lineNumber":394,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":395,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":396,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":397,"author":{"gitId":"DesmondTo"},"content":"**:bulb: Tips:**\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":398,"author":{"gitId":"DesmondTo"},"content":"1. If you have not set the wedding date before, then the default wedding date will be today.","lastModifiedDate":"2021-10-26"},{"lineNumber":399,"author":{"gitId":"DesmondTo"},"content":"2. If you had set the wedding date before, then you can follow step (4) ONLY to check the countdown.","lastModifiedDate":"2021-10-26"},{"lineNumber":400,"author":{"gitId":"DesmondTo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":402,"author":{"gitId":"DesmondTo"},"content":"Outcome:\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":403,"author":{"gitId":"DesmondTo"},"content":"A message that tells you how many days left before wedding will be displayed in the command feedback box.","lastModifiedDate":"2021-10-28"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":405,"author":{"gitId":"DesmondTo"},"content":"### Counting head by tag : `tagInfo`","lastModifiedDate":"2021-10-26"},{"lineNumber":406,"author":{"gitId":"DesmondTo"},"content":"This feature allows you to obtain a list of number of contacts under each tag.","lastModifiedDate":"2021-10-29"},{"lineNumber":407,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":408,"author":{"gitId":"DesmondTo"},"content":"To return a unique list of tags with the number of contacts labelled with the tag.","lastModifiedDate":"2021-10-24"},{"lineNumber":409,"author":{"gitId":"DesmondTo"},"content":"1. Type the command in the command box with either of the following formats:\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":410,"author":{"gitId":"DesmondTo"},"content":"   * `tagInfo [t/TAG]...` or","lastModifiedDate":"2021-10-24"},{"lineNumber":411,"author":{"gitId":"DesmondTo"},"content":"   * `tagInfo list`","lastModifiedDate":"2021-10-24"},{"lineNumber":412,"author":{"gitId":"DesmondTo"},"content":"2. Press Enter","lastModifiedDate":"2021-10-24"},{"lineNumber":413,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":414,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"DesmondTo"},"content":"**:bulb: Tips:**\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":417,"author":{"gitId":"DesmondTo"},"content":"The list can be specified to only limited tags or to include all the tags used to label the contacts.`","lastModifiedDate":"2021-10-26"},{"lineNumber":418,"author":{"gitId":"DesmondTo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"DesmondTo"},"content":"Example and expected outcome:\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":421,"author":{"gitId":"DesmondTo"},"content":"* `tagInfo t/male, colleagues` tag Info: males used by 3 people, colleagues used by 5 people","lastModifiedDate":"2021-10-24"},{"lineNumber":422,"author":{"gitId":"DesmondTo"},"content":"* `tagInfo list` returns a list with all the tags labelled by the contacts.","lastModifiedDate":"2021-10-24"},{"lineNumber":423,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":424,"author":{"gitId":"DesmondTo"},"content":"### Calculating wedding cost : `price`","lastModifiedDate":"2021-10-26"},{"lineNumber":425,"author":{"gitId":"DesmondTo"},"content":"This feature helps you calculate your wedding expenses, so that you can stick to the budget and prevent overspending.","lastModifiedDate":"2021-10-28"},{"lineNumber":426,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":427,"author":{"gitId":"DesmondTo"},"content":"To calculate the expenses:","lastModifiedDate":"2021-10-28"},{"lineNumber":428,"author":{"gitId":"DesmondTo"},"content":"1. Type the command in the command box with the following format:","lastModifiedDate":"2021-10-28"},{"lineNumber":429,"author":{"gitId":"DesmondTo"},"content":"   * `price` (For over wedding cost)","lastModifiedDate":"2021-10-28"},{"lineNumber":430,"author":{"gitId":"DesmondTo"},"content":"   * `price t/TAG [t/TAG]…​` (For the cost under 1 or more category, specified by `TAG`)","lastModifiedDate":"2021-10-28"},{"lineNumber":431,"author":{"gitId":"DesmondTo"},"content":"2. Press Enter","lastModifiedDate":"2021-10-28"},{"lineNumber":432,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":433,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"DesmondTo"},"content":"**:bulb: Tip:**\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":436,"author":{"gitId":"DesmondTo"},"content":"* Only the cost of those contacts with `confirmed` status will be added.","lastModifiedDate":"2021-10-28"},{"lineNumber":437,"author":{"gitId":"DesmondTo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"DesmondTo"},"content":"Outcome:\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":440,"author":{"gitId":"DesmondTo"},"content":"The calculation result will be displayed in the command feedback box.","lastModifiedDate":"2021-10-28"},{"lineNumber":441,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":442,"author":{"gitId":"DesmondTo"},"content":"### Getting your wedding plan report : `report`","lastModifiedDate":"2021-10-26"},{"lineNumber":443,"author":{"gitId":"Linda124"},"content":"This feature allows you to track the status of your wedding plan. It shows you the total number of confirmed, pending and declined contacts under each tag. It also enables you to view the total spending accumulated across confirmed contacts under each tag.","lastModifiedDate":"2021-10-29"},{"lineNumber":444,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":445,"author":{"gitId":"Linda124"},"content":"To view the report","lastModifiedDate":"2021-10-29"},{"lineNumber":446,"author":{"gitId":"DesmondTo"},"content":"1. Type the command: `report` in the command box.","lastModifiedDate":"2021-10-26"},{"lineNumber":447,"author":{"gitId":"DesmondTo"},"content":"2. Press Enter","lastModifiedDate":"2021-10-26"},{"lineNumber":448,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":449,"author":{"gitId":"Linda124"},"content":"Example and expected outcome:\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":450,"author":{"gitId":"Linda124"},"content":"* `report`:","lastModifiedDate":"2021-10-29"},{"lineNumber":451,"author":{"gitId":"Linda124"},"content":"  ![report](images/Report.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":452,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":453,"author":{"gitId":"yin72257"},"content":"### Adding customizable shortcuts : `addsc`","lastModifiedDate":"2021-10-28"},{"lineNumber":454,"author":{"gitId":"DesmondTo"},"content":"This feature allows you to add a shortcut command to your liking.","lastModifiedDate":"2021-10-29"},{"lineNumber":455,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":456,"author":{"gitId":"yin72257"},"content":"To add a command bound to a shortcut phrase","lastModifiedDate":"2021-10-28"},{"lineNumber":457,"author":{"gitId":"DesmondTo"},"content":"1. Type the command in the command box with either of the following formats:\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":458,"author":{"gitId":"yin72257"},"content":"   `addsc SHORTCUT c/COMMAND`","lastModifiedDate":"2021-10-28"},{"lineNumber":459,"author":{"gitId":"DesmondTo"},"content":"2. Press Enter","lastModifiedDate":"2021-10-24"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":461,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":463,"author":{"gitId":"DesmondTo"},"content":"**:bulb: Tip:**\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":464,"author":{"gitId":"DesmondTo"},"content":"* `SHORTCUT` can be any alphabetical characters.","lastModifiedDate":"2021-10-29"},{"lineNumber":465,"author":{"gitId":"DesmondTo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":467,"author":{"gitId":"yin72257"},"content":"### Using  shortcuts : `sc`","lastModifiedDate":"2021-10-28"},{"lineNumber":468,"author":{"gitId":"DesmondTo"},"content":"This feature allows you to use any shortcut added.","lastModifiedDate":"2021-10-29"},{"lineNumber":469,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":470,"author":{"gitId":"DesmondTo"},"content":"To call the command bound to the shortcut:","lastModifiedDate":"2021-10-29"},{"lineNumber":471,"author":{"gitId":"yin72257"},"content":"1. Type the command in the command box with either of the following formats:\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":472,"author":{"gitId":"yin72257"},"content":"    `sc SHORTCUT`","lastModifiedDate":"2021-10-28"},{"lineNumber":473,"author":{"gitId":"yin72257"},"content":"2. Press Enter","lastModifiedDate":"2021-10-28"},{"lineNumber":474,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":475,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":476,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":477,"author":{"gitId":"DesmondTo"},"content":"**:bulb: Tip:**\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":478,"author":{"gitId":"DesmondTo"},"content":"* Calling the `sc` shortcut will act as if the COMMAND is being called directly.","lastModifiedDate":"2021-10-29"},{"lineNumber":479,"author":{"gitId":"yin72257"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":480,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":481,"author":{"gitId":"DesmondTo"},"content":"Example and expected outcome:\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":482,"author":{"gitId":"yin72257"},"content":"* `sc f` calls the COMMAND attached to the shortcut `f`","lastModifiedDate":"2021-10-28"},{"lineNumber":483,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":484,"author":{"gitId":"yin72257"},"content":"### Viewing shortcuts : `listsc`","lastModifiedDate":"2021-10-28"},{"lineNumber":485,"author":{"gitId":"DesmondTo"},"content":"This feature allows you to list down the shortcut added.","lastModifiedDate":"2021-10-29"},{"lineNumber":486,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":487,"author":{"gitId":"DesmondTo"},"content":"To view all shortcuts available for the user:","lastModifiedDate":"2021-10-29"},{"lineNumber":488,"author":{"gitId":"yin72257"},"content":"1. Type the command: `listsc` in the command box.","lastModifiedDate":"2021-10-28"},{"lineNumber":489,"author":{"gitId":"yin72257"},"content":"2. Press Enter","lastModifiedDate":"2021-10-28"},{"lineNumber":490,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":491,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":492,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":493,"author":{"gitId":"DesmondTo"},"content":"**:bulb: Tip:**\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":494,"author":{"gitId":"DesmondTo"},"content":"* Empty list of shortcuts mean you have not added any shortcut yet. You can learn how to add a shortcut ","lastModifiedDate":"2021-10-29"},{"lineNumber":495,"author":{"gitId":"DesmondTo"},"content":"[here](#adding-customizable-shortcuts--addsc)","lastModifiedDate":"2021-10-29"},{"lineNumber":496,"author":{"gitId":"yin72257"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":497,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":498,"author":{"gitId":"yin72257"},"content":"### Deleting shortcuts : `removesc`","lastModifiedDate":"2021-10-28"},{"lineNumber":499,"author":{"gitId":"DesmondTo"},"content":"This feature allows you to remove the shortcut added.","lastModifiedDate":"2021-10-29"},{"lineNumber":500,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":501,"author":{"gitId":"DesmondTo"},"content":"To remove a shortcut:","lastModifiedDate":"2021-10-29"},{"lineNumber":502,"author":{"gitId":"yin72257"},"content":"1. Type the command in the command box with either of the following formats:\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":503,"author":{"gitId":"yin72257"},"content":"    `removesc SHORTCUT`","lastModifiedDate":"2021-10-28"},{"lineNumber":504,"author":{"gitId":"yin72257"},"content":"2. Press Enter","lastModifiedDate":"2021-10-28"},{"lineNumber":505,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":506,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":507,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":508,"author":{"gitId":"DesmondTo"},"content":"**:bulb: Tip:**\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":509,"author":{"gitId":"yin72257"},"content":"There would be no effect if the shortcut does not exist.","lastModifiedDate":"2021-10-28"},{"lineNumber":510,"author":{"gitId":"yin72257"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":511,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":512,"author":{"gitId":"DesmondTo"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":513,"author":{"gitId":"DesmondTo"},"content":"`removesc f` ","lastModifiedDate":"2021-10-29"},{"lineNumber":514,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":515,"author":{"gitId":"DesmondTo"},"content":"Outcome:\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":516,"author":{"gitId":"DesmondTo"},"content":"Removes the attachment of the COMMAND to the shortcut `f`","lastModifiedDate":"2021-10-29"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":518,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-10-24"},{"lineNumber":519,"author":{"gitId":"DesmondTo"},"content":"This feature allows you to close the app.","lastModifiedDate":"2021-10-29"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":521,"author":{"gitId":"DesmondTo"},"content":"To exit the app.","lastModifiedDate":"2021-10-24"},{"lineNumber":522,"author":{"gitId":"DesmondTo"},"content":"1. Type the command: `exit` in the command box.","lastModifiedDate":"2021-10-24"},{"lineNumber":523,"author":{"gitId":"DesmondTo"},"content":"2. Press Enter","lastModifiedDate":"2021-10-24"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":525,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":527,"author":{"gitId":"DesmondTo"},"content":"**:bulb: Tip:**\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":528,"author":{"gitId":"DesmondTo"},"content":"* All the data will be saved automatically after each command. For more info, you may refer to ","lastModifiedDate":"2021-10-29"},{"lineNumber":529,"author":{"gitId":"DesmondTo"},"content":"  [this](#saving-the-data-file)","lastModifiedDate":"2021-10-29"},{"lineNumber":530,"author":{"gitId":"DesmondTo"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":531,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":532,"author":{"gitId":"DesmondTo"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-10-26"},{"lineNumber":533,"author":{"gitId":"DesmondTo"},"content":"This feature close the app without the need of clicking mouse.","lastModifiedDate":"2021-10-28"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":535,"author":{"gitId":"DesmondTo"},"content":"To exit the app.","lastModifiedDate":"2021-10-26"},{"lineNumber":536,"author":{"gitId":"DesmondTo"},"content":"1. Type the command: `exit` in the command box.","lastModifiedDate":"2021-10-26"},{"lineNumber":537,"author":{"gitId":"DesmondTo"},"content":"2. Press Enter","lastModifiedDate":"2021-10-24"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":539,"author":{"gitId":"DesmondTo"},"content":"Outcome:\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":540,"author":{"gitId":"DesmondTo"},"content":"App closes within few seconds.","lastModifiedDate":"2021-10-28"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":542,"author":{"gitId":"DesmondTo"},"content":"### Saving the data file","lastModifiedDate":"2021-10-26"},{"lineNumber":543,"author":{"gitId":"DesmondTo"},"content":"_WedFast_ data are saved in the hard disk automatically after any command that changes the data. There is no need to","lastModifiedDate":"2021-10-26"},{"lineNumber":544,"author":{"gitId":"DesmondTo"},"content":"save manually.","lastModifiedDate":"2021-10-26"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":546,"author":{"gitId":"DesmondTo"},"content":"### Editing the data file","lastModifiedDate":"2021-10-26"},{"lineNumber":547,"author":{"gitId":"DesmondTo"},"content":"_WedFast_ data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to","lastModifiedDate":"2021-10-26"},{"lineNumber":548,"author":{"gitId":"DesmondTo"},"content":"update data directly by editing that data file.","lastModifiedDate":"2021-10-26"},{"lineNumber":549,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":550,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:warning: **Caution:**","lastModifiedDate":"2021-10-26"},{"lineNumber":551,"author":{"gitId":"DesmondTo"},"content":"If your changes to the data file makes its format invalid, _WedFast_ will discard all data and start with an empty data","lastModifiedDate":"2021-10-26"},{"lineNumber":552,"author":{"gitId":"DesmondTo"},"content":"file at the next run.","lastModifiedDate":"2021-10-26"},{"lineNumber":553,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"DesmondTo"},"content":"### Redoing last change : `redo` (Coming soon)","lastModifiedDate":"2021-10-24"},{"lineNumber":556,"author":{"gitId":"DesmondTo"},"content":"_Details coming soon …_","lastModifiedDate":"2021-10-24"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":558,"author":{"gitId":"DesmondTo"},"content":"### Reminding via email : `remind` (Coming soon)","lastModifiedDate":"2021-10-24"},{"lineNumber":559,"author":{"gitId":"DesmondTo"},"content":"_Details coming soon …_","lastModifiedDate":"2021-10-24"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":561,"author":{"gitId":"DesmondTo"},"content":"[Back to top 🔝](#table-of-contents)","lastModifiedDate":"2021-10-26"},{"lineNumber":562,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":564,"author":{"gitId":"DesmondTo"},"content":"---","lastModifiedDate":"2021-10-24"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"DesmondTo"},"content":"## **FAQ**","lastModifiedDate":"2021-10-26"},{"lineNumber":567,"author":{"gitId":"DesmondTo"},"content":"### About the program","lastModifiedDate":"2021-10-26"},{"lineNumber":568,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"DesmondTo"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2021-10-24"},{"lineNumber":570,"author":{"gitId":"DesmondTo"},"content":"       the data of your previous _WedFast_ home folder.","lastModifiedDate":"2021-10-24"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"DesmondTo"},"content":"### About the command","lastModifiedDate":"2021-10-26"},{"lineNumber":573,"author":{"gitId":"DesmondTo"},"content":"**Q**: Where can I get the cheatsheet for the command syntax?\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":574,"author":{"gitId":"DesmondTo"},"content":"**A**: You will be able to get [here](#command-summary).","lastModifiedDate":"2021-10-28"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":576,"author":{"gitId":"DesmondTo"},"content":"{More will be added in the future...}","lastModifiedDate":"2021-10-26"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":578,"author":{"gitId":"DesmondTo"},"content":"[Back to top 🔝](#table-of-contents)","lastModifiedDate":"2021-10-26"},{"lineNumber":579,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":580,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":581,"author":{"gitId":"DesmondTo"},"content":"---","lastModifiedDate":"2021-10-26"},{"lineNumber":582,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":583,"author":{"gitId":"DesmondTo"},"content":"## **Command Summary**","lastModifiedDate":"2021-10-26"},{"lineNumber":584,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":585,"author":{"gitId":"DesmondTo"},"content":"**Actions**                           | **Format**                        | **Example**","lastModifiedDate":"2021-10-26"},{"lineNumber":586,"author":{"gitId":"DesmondTo"},"content":"--------------------------------------|-----------------------------------|------------","lastModifiedDate":"2021-10-26"},{"lineNumber":587,"author":{"gitId":"Linda124"},"content":"**Viewing help**                      | `help`                            | `help`","lastModifiedDate":"2021-10-29"},{"lineNumber":588,"author":{"gitId":"DesmondTo"},"content":"**Adding a person**                   | `add`                             | `add n/Jane Doherty p/1847291074 e/janedoe123@gmail.com a/Coral Street, 5th Avenue, #02-04, pr/500.00 i/none s/pending t/caterer`","lastModifiedDate":"2021-10-29"},{"lineNumber":589,"author":{"gitId":"Linda124"},"content":"**Listing all persons**               | `list`                            | `list`","lastModifiedDate":"2021-10-29"},{"lineNumber":590,"author":{"gitId":"Linda124"},"content":"**Editing a person**                  | `edit`                            | `edit 1 p/91234567 e/johndoe@example.com` or\u003cbr\u003e `edit 2 n/Betsy Crower t/`","lastModifiedDate":"2021-10-29"},{"lineNumber":591,"author":{"gitId":"DesmondTo"},"content":"**Grouping persons**                  | `group`                           | `group t/VIP n/Alex Yeoh, Bernice Yu`","lastModifiedDate":"2021-10-29"},{"lineNumber":592,"author":{"gitId":"DesmondTo"},"content":"**Locating persons**                  | `find`                            | `find t/friends t/colleagues pr/\u003e\u003d0.00`","lastModifiedDate":"2021-10-29"},{"lineNumber":593,"author":{"gitId":"DesmondTo"},"content":"**Deleting a person/persons**         | `delete INDEX` or\u003cbr\u003e`delete n/NAME` or\u003cbr\u003e `delete t/TAG` |`delete 3` or\u003cbr\u003e`delete n/Alex Yeoh` or\u003cbr\u003e`delete t/food_vendor`","lastModifiedDate":"2021-10-26"},{"lineNumber":594,"author":{"gitId":"Linda124"},"content":"**Clearing all entries**              | `clear`                           | `clear`","lastModifiedDate":"2021-10-29"},{"lineNumber":595,"author":{"gitId":"Linda124"},"content":"**Undoing last change**               | `undo`                            | `undo` ","lastModifiedDate":"2021-10-29"},{"lineNumber":596,"author":{"gitId":"DesmondTo"},"content":"**Counting down to the wedding day**  | `countdown YYYY-MM-DD`\u003cbr\u003e(To set your wedding date)\u003cbr\u003e`countdown`\u003cbr\u003e(To see the day count) |`countdown`\u003cbr\u003e\u003cbr\u003e`countdown 2021-10-26`","lastModifiedDate":"2021-10-26"},{"lineNumber":597,"author":{"gitId":"DesmondTo"},"content":"**Counting head by tag**              | `tagInfo list` or `tagInfo [t/TAG]...` | `tagInfo list` or\u003cbr\u003e `tagInfo t/male, colleagues`","lastModifiedDate":"2021-10-29"},{"lineNumber":598,"author":{"gitId":"DesmondTo"},"content":"**Calculating wedding cost**          | `price`  or\u003cbr\u003e`price t/TAG1 [t/TAG2]…​` | `price` or\u003cbr\u003e`price t/Chef` or\u003cbr\u003e`price t/Chef t/Photographer`","lastModifiedDate":"2021-10-26"},{"lineNumber":599,"author":{"gitId":"Linda124"},"content":"**Getting your wedding plan report**  | `report`                          | `report`","lastModifiedDate":"2021-10-29"},{"lineNumber":600,"author":{"gitId":"DesmondTo"},"content":"**Adding customizable shortcuts**     | `addsc`                           | `addsc f c/find t/Food`","lastModifiedDate":"2021-10-29"},{"lineNumber":601,"author":{"gitId":"DesmondTo"},"content":"**Using shortcut**                    | `sc`                              | `sc f`","lastModifiedDate":"2021-10-29"},{"lineNumber":602,"author":{"gitId":"Linda124"},"content":"**Viewing shortcut**                  | `listsc`                          | `listsc` ","lastModifiedDate":"2021-10-29"},{"lineNumber":603,"author":{"gitId":"DesmondTo"},"content":"**Deleting shortcuts**                | `removesc`                        | `removesc f`","lastModifiedDate":"2021-10-29"},{"lineNumber":604,"author":{"gitId":"Linda124"},"content":"**Exiting the program**               | `exit`                            | `exit`  ","lastModifiedDate":"2021-10-29"},{"lineNumber":605,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":606,"author":{"gitId":"DesmondTo"},"content":"[Back to top 🔝](#table-of-contents)","lastModifiedDate":"2021-10-26"},{"lineNumber":607,"author":{"gitId":"DesmondTo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":608,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":609,"author":{"gitId":"DesmondTo"},"content":"---","lastModifiedDate":"2021-10-26"},{"lineNumber":610,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":611,"author":{"gitId":"DesmondTo"},"content":"## **Glossary**","lastModifiedDate":"2021-10-26"},{"lineNumber":612,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":613,"author":{"gitId":"DesmondTo"},"content":"##### App","lastModifiedDate":"2021-10-26"},{"lineNumber":614,"author":{"gitId":"DesmondTo"},"content":"An abbreviated form of the word \"application\". An application is a software program that\u0027s designed to perform a","lastModifiedDate":"2021-10-26"},{"lineNumber":615,"author":{"gitId":"DesmondTo"},"content":"specific function directly for the user. In this user guide, it refers to _WedFast_ itself.","lastModifiedDate":"2021-10-26"},{"lineNumber":616,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":617,"author":{"gitId":"DesmondTo"},"content":"##### Command-line interface (CLI)","lastModifiedDate":"2021-10-26"},{"lineNumber":618,"author":{"gitId":"DesmondTo"},"content":"A command-line interface processes commands to a computer program in the form of lines of text.","lastModifiedDate":"2021-10-26"},{"lineNumber":619,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":620,"author":{"gitId":"DesmondTo"},"content":"##### FAQ","lastModifiedDate":"2021-10-26"},{"lineNumber":621,"author":{"gitId":"DesmondTo"},"content":"An abbreviation for the words \"frequently asked questions\".","lastModifiedDate":"2021-10-26"},{"lineNumber":622,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":623,"author":{"gitId":"DesmondTo"},"content":"##### Graphical user interface (GUI)","lastModifiedDate":"2021-10-26"},{"lineNumber":624,"author":{"gitId":"DesmondTo"},"content":"A form of user interface that allows users to interact with electronic devices through graphical icons and audio","lastModifiedDate":"2021-10-26"},{"lineNumber":625,"author":{"gitId":"DesmondTo"},"content":"indicator","lastModifiedDate":"2021-10-26"},{"lineNumber":626,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":627,"author":{"gitId":"DesmondTo"},"content":"##### JSON","lastModifiedDate":"2021-10-26"},{"lineNumber":628,"author":{"gitId":"DesmondTo"},"content":"Stands for JavaScript Object Notation. It is a lightweight data-interchange format. It is easy for humans to read and","lastModifiedDate":"2021-10-26"},{"lineNumber":629,"author":{"gitId":"DesmondTo"},"content":"write and easy for machines to parse and generate data.","lastModifiedDate":"2021-10-26"},{"lineNumber":630,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":631,"author":{"gitId":"DesmondTo"},"content":"[Back to top 🔝](#table-of-contents)","lastModifiedDate":"2021-10-26"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"DesmondTo"},"content":"---","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"sj1999-BIT":1,"Linda124":19,"DesmondTo":465,"yin72257":33,"-":105,"Banana3021":10}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"DesmondTo"},"content":"    content: \"WedFast\";","lastModifiedDate":"2021-09-25"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"DesmondTo":1,"-":294}},{"path":"docs/diagrams/DeleteByNameActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"start","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":":User executes delete-by-name command;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"if () then ([Found the name in AddressBook])","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"    :Delete all persons","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"    with the specified name;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"    :Update the person list;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"else ([else])","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    :Show person-not-found","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"    message;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"endif","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"stop","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"DesmondTo":17}},{"path":"docs/diagrams/DeleteByNameFilteredPersonList0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"title After filtering persons named John Doe","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"package \"Filtered Person List\" {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"    class Person1 as \"__Alex Yeoh:Person__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"    class Person2 as \"__John Doe:Person__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"    class Person3 as \"__Bernice Yu:Person__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"Person1 -[hidden]right-\u003e Person2","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"Person2 -[hidden]right-\u003e Person3","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"hide Person1","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"hide Person3","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"@end","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"DesmondTo":18}},{"path":"docs/diagrams/DeleteByNamePersonList0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"title Initial Address Book Person List","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"package \"Person List\" {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"    class Person1 as \"__Alex Yeoh:Person__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"    class Person2 as \"__Bernice Yu:Person__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"    class Person3 as \"__John Doe:Person__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"Person1 -[hidden]right-\u003e Person2","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"Person2 -[hidden]right-\u003e Person3","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"@end","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"DesmondTo":16}},{"path":"docs/diagrams/DeleteByNamePersonList1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"title After command \"delete n/John Doe\"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"package \"Person List\" {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"    class Person1 as \"__Alex Yeoh:Person__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"    class Person2 as \"__Bernice Yu:Person__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"    class Person3 as \"__John Doe:Person__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"Person1 -[hidden]right-\u003e Person2","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"Person2 -[hidden]right-\u003e Person3","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"hide Person3","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"@end","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"DesmondTo":17}},{"path":"docs/diagrams/DeleteByNameSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"[-\u003e LogicManager : execute(\"delete n/John Doe\")","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"activate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete n/John Doe\")","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"create DeleteCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"activate DeleteCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"n/John Doe\")","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"activate DeleteCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"create DeleteCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"activate DeleteCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"deactivate DeleteCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"activate DeleteCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"DeleteCommand -\u003e Model : deletePerson(John Doe)","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"activate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"deactivate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"create CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"activate CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"deactivate DeleteCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"DesmondTo":69}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"DesmondTo":1,"-":19}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: AddressBook Level-3","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103T-W10-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-W10-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W10-4/tp/branch/master/graph/badge.svg?token\u003dIE3JNCJLCS)](https://codecov.io/gh/AY2122S1-CS2103T-W10-4/tp)","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"**_WedFast_ is a desktop app for managing contacts of your dream wedding.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"* If you are interested in using _WedFast_, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"* If you are interested about developing _WedFast_, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"DesmondTo":4,"-":15}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.Countdown;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.ReadOnlyCountdown;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.ReadOnlyShortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.Shortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.util.SampleCountdownUtil;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.util.SampleShortcutUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"import seedu.address.storage.CountdownStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"import seedu.address.storage.JsonCountdownStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"import seedu.address.storage.JsonShortcutStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"import seedu.address.storage.ShortcutStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"        CountdownStorage countdownStorage \u003d new JsonCountdownStorage(userPrefs.getCountdownFilePath());","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"yin72257"},"content":"        ShortcutStorage shortcutStorage \u003d new JsonShortcutStorage(userPrefs.getShortcutFilePath());","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"yin72257"},"content":"        storage \u003d new StorageManager(addressBookStorage, countdownStorage, userPrefsStorage, shortcutStorage);","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"DesmondTo"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book, countdown as well as","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"DesmondTo"},"content":"     * {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"     * Same goes with the countdown.","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"DesmondTo"},"content":"        // initiate address book","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"DesmondTo"},"content":"        Optional\u003cReadOnlyCountdown\u003e countdownOptional;","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"DesmondTo"},"content":"        ReadOnlyCountdown initialCountdownData;","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"DesmondTo"},"content":"        // initiate count down","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"DesmondTo"},"content":"            countdownOptional \u003d storage.readCountdown();","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"DesmondTo"},"content":"            if (!countdownOptional.isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"DesmondTo"},"content":"                logger.info(\"Countdown data file not found. Will be starting with a sample Countdown\");","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"DesmondTo"},"content":"            initialCountdownData \u003d countdownOptional.orElseGet(SampleCountdownUtil::getSampleCountdown);","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"DesmondTo"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"DesmondTo"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Countdown\");","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"DesmondTo"},"content":"            initialCountdownData \u003d new Countdown();","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"DesmondTo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"DesmondTo"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Countdown\");","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"DesmondTo"},"content":"            initialCountdownData \u003d new Countdown();","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"yin72257"},"content":"        Optional\u003cReadOnlyShortcut\u003e shortcutOptional;","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"yin72257"},"content":"        ReadOnlyShortcut initialShortcutData;","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"yin72257"},"content":"        // initiate count down","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"yin72257"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"yin72257"},"content":"            shortcutOptional \u003d storage.readShortcut();","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"yin72257"},"content":"            if (!shortcutOptional.isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"yin72257"},"content":"                logger.info(\"Shortcut data file not found. Will be starting with a sample Shortcut\");","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"yin72257"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"yin72257"},"content":"            initialShortcutData \u003d shortcutOptional.orElseGet(SampleShortcutUtil::getSampleShortcut);","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"yin72257"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"yin72257"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Shortcut\");","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"yin72257"},"content":"            initialShortcutData \u003d new Shortcut();","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"yin72257"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"yin72257"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Shortcut\");","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"yin72257"},"content":"            initialShortcutData \u003d new Shortcut();","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"yin72257"},"content":"        return new ModelManager(initialData, initialCountdownData, userPrefs, initialShortcutData);","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yin72257":30,"DesmondTo":26,"-":179}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Banana3021"},"content":"    public static final String MESSAGE_CANNOT_UNDO_COMMAND \u003d \"Cannot undo this command!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":13,"Banana3021":1}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":12,"author":{"gitId":"Linda124"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Linda124"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":73,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"     * Returns true if {@code str} represents a name","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"     * e.g. \" n/John Doe\", \" n/Molly 3\", \" n/12345\" \u003cbr\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"     * Will return false for any other non-name string input","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", \" 2 \", \"Betsy Crowe\",","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"Linda124"},"content":"    public static boolean isName(String str) {","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"Linda124"},"content":"        Pattern pattern \u003d Pattern.compile(\"^( n/)([a-zA-Z0-9 ]*)\");","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"Linda124"},"content":"        Matcher matcher \u003d pattern.matcher(str);","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"Linda124"},"content":"        return matcher.matches();","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Linda124"},"content":"     * Returns true if {@code str} consists of tag as expected.","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Linda124"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Linda124"},"content":"     * @param str The string to be checked.","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Linda124"},"content":"     * @return true if {@code str} consists of tag, else false.","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Linda124"},"content":"    public static boolean isTag(String str) {","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Linda124"},"content":"        Pattern pattern \u003d Pattern.compile(\"^( t/)([a-zA-Z0-9 ]*)\");","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Linda124"},"content":"        Matcher matcher \u003d pattern.matcher(str);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Linda124"},"content":"        return matcher.matches();","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"DesmondTo"},"content":"     * Returns true if {@code dateStr} is a valid date string.","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"DesmondTo"},"content":"     * @param dateStr The date string to be checked.","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"DesmondTo"},"content":"     * @return true if {@code dateStr} is a valid date string","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"DesmondTo"},"content":"    public static boolean isValidDate(String dateStr) {","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"DesmondTo"},"content":"            LocalDate.parse(dateStr, DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"DesmondTo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"DesmondTo"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"DesmondTo"},"content":"        return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Linda124":22,"DesmondTo":22,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.Hashtable;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.ReadOnlyCountdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     * Returns the Countdown.","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"     * @see seedu.address.model.Model#getCountdown()","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"    ReadOnlyCountdown getCountdown();","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"sj1999-BIT"},"content":"     * Returns a list of all unique tags present in the model","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"sj1999-BIT"},"content":"    ObservableList\u003cTag\u003e getUniqueTagList();","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"sj1999-BIT"},"content":"     * Returns a HashTable of all unique tags together with the number of contact","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"sj1999-BIT"},"content":"     * labelled with the tag respectively.","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"sj1999-BIT"},"content":"    Hashtable\u003cTag, Integer\u003e getUniqueTagTable();","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"     * Returns the user prefs\u0027 countdown file path.","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"    Path getCountdownFilePath();","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"sj1999-BIT"},"content":"     * Returns the total number of contacts in the address book","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"sj1999-BIT"},"content":"    int size();","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sj1999-BIT":18,"DesmondTo":13,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.Hashtable;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.ReadOnlyCountdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"            storage.saveCountdown(model.getCountdown());","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"yin72257"},"content":"            storage.saveShortcut(model.getShortcut());","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"    public ReadOnlyCountdown getCountdown() {","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"        return model.getCountdown();","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"sj1999-BIT"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"sj1999-BIT"},"content":"    public ObservableList\u003cTag\u003e getUniqueTagList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"sj1999-BIT"},"content":"        return model.getUniqueTagList();","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"sj1999-BIT"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"sj1999-BIT"},"content":"    public Hashtable\u003cTag, Integer\u003e getUniqueTagTable() {","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"sj1999-BIT"},"content":"        return model.getUniqueTagTable();","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"DesmondTo"},"content":"    public Path getCountdownFilePath() {","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"DesmondTo"},"content":"        return model.getCountdownFilePath();","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"sj1999-BIT"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"sj1999-BIT"},"content":"    public int size() {","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"sj1999-BIT"},"content":"        return model.size();","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sj1999-BIT":17,"DesmondTo":12,"yin72257":1,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFO;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"Linda124"},"content":"            + \"[\" + PREFIX_PRICE + \"PRICE] \"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Linda124"},"content":"            + \"[\" + PREFIX_INFO + \"INFO] \"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Linda124"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"Linda124"},"content":"            + PREFIX_PRICE + \"400.00 \"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"Banana3021"},"content":"            + PREFIX_INFO + \"only contactable via whatsapp \"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Banana3021"},"content":"            + PREFIX_STATUS + \"Confirmed \"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Banana3021"},"content":"            + PREFIX_TAG + \"friends \";","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"Banana3021"},"content":"    private UndoCommand commandToUndo;","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"Banana3021"},"content":"        commandToUndo \u003d new UndoCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"Banana3021"},"content":"        commandToUndo.setPrevCommand(this);","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Linda124":4,"-":65,"Banana3021":9}},{"path":"src/main/java/seedu/address/logic/commands/AddShortcutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":" * Adds a shortcut to the shortcut list stored.","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"public class AddShortcutCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"    public static final String COMMAND_WORD \u003d \"addsc\";","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a shortcut with a specified call and function\"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"            + \"which can be called by sc to recreate the command\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"            + \"Parameters: KEYWORDS c/[Command to be executed]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"            + \"Example: \" + COMMAND_WORD + \" a c/find alice\";","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"    private final String keyword;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"    private final String commandString;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"     * Creates new {@code AddShortcutCommand}","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"     * @param keyword Key to call the command","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"     * @param commandString Command to be called","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"    public AddShortcutCommand(String keyword, String commandString) {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"        model.addShortcut(keyword, commandString);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"        return new CommandResult(\"Added \" + keyword + \": \" + commandString);","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"yin72257"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"yin72257"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"yin72257"},"content":"                || (other instanceof AddShortcutCommand // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"yin72257"},"content":"                ); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"yin72257":45}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"import seedu.address.ui.ConfirmationWindow;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":" * Warns the user with a prompt window before the actual clear command executed.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":"    // new message added to indicate if the address book is already empty","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"    public static final String MESSAGE_UNNECESSARY \u003d \"Address book is already empty!\";","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Linda124"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Linda124"},"content":"            + \"\\n\" + \"Type \u0027undo\u0027 if you would like to retract the change.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"sj1999-BIT"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Address book is not cleared!\";","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Banana3021"},"content":"    private static ReadOnlyAddressBook prevBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Banana3021"},"content":"    private UndoCommand commandToUndo;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Banana3021"},"content":"    public ReadOnlyAddressBook getPrevBook() {","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Banana3021"},"content":"        return prevBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"     * Executes will create a warning panel to give the user one more chance","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"     * to reconsider before clearing all the data.","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"sj1999-BIT"},"content":"     * @return Object CommandResult with the specific message","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"Linda124"},"content":"        boolean isClear \u003d false;","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"Banana3021"},"content":"        commandToUndo \u003d new UndoCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Banana3021"},"content":"        commandToUndo.setPrevCommand(this);","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"Banana3021"},"content":"        prevBook \u003d new AddressBook(model.getAddressBook());","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"sj1999-BIT"},"content":"        if (model.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"sj1999-BIT"},"content":"            return new CommandResult(MESSAGE_UNNECESSARY);","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"Linda124"},"content":"        ConfirmationWindow.setConfirmationMessage(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"Linda124"},"content":"        ConfirmationWindow response \u003d new ConfirmationWindow();","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"Linda124"},"content":"        response.show();","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"Linda124"},"content":"        return new CommandResult(\"Opened Confirmation Window\");","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"sj1999-BIT":14,"Linda124":9,"-":21,"Banana3021":9}},{"path":"src/main/java/seedu/address/logic/commands/CountdownCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"public class CountdownCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    public static final String COMMAND_WORD \u003d \"countdown\";","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    public static final String MESSAGE_DATE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"            + \": Set the wedding date so countdown can be tracked later.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"            + \"Parameters: YYYY-MM-DD (must be a valid date)\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2021-10-24\";","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    public static final String MESSAGE_FUTURE_DAY_COUNT \u003d \"%d day(s) left until your wedding on %s.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    public static final String MESSAGE_PAST_DAY_COUNT \u003d \"%d day(s) has passed since your wedding day on %s.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    public static final String MESSAGE_TODAY_COUNT \u003d \"Today is your wedding.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"            + \"Congratulations and WedFast wish you all of the love and happiness!! \\uD83D\\uDE00\";","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    public static final String MESSAGE_FUTURE_SUCCESS \u003d \"Wedding date has been set on %s.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"            + \"%d day(s) left from now.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    public static final String MESSAGE_PAST_SUCCESS \u003d \"Sorry, WedFast does not allow setting a passing day as wedding \"","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"            + \"date, please choose a future date instead.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"    public static final String MESSAGE_TODAY_SUCCESS \u003d \"You have set your wedding to be on today.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"            + \"Hope it is not too late to organize your wedding now and WedFast wish you all the best! \\uD83D\\uDE00\";","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    private final LocalDate dateSetByUser;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     * Creates an CountdownCommand to track the day count until the wedding date set.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"    public CountdownCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"        this.dateSetByUser \u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"     * Creates an CountdownCommand to set the wedding date.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"    public CountdownCommand(LocalDate dateSetByUser) {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        this.dateSetByUser \u003d dateSetByUser;","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"     * Returns the day count based on the wedding date set by user.","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"     * @param model The app model used to retrieve the wedding date set by user.","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"     * @return the day count based on the wedding date set by user.","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"    public static int getCountdown(Model model) {","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"        LocalDate weddingDate \u003d model.getCountdown().getDate();","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"        return (int) LocalDate.now().until(weddingDate, ChronoUnit.DAYS);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"    /** Calculates and shows the day count before the wedding day. */","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"    private CommandResult executeShowCountDown(Model model) {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"        LocalDate weddingDate \u003d model.getCountdown().getDate();","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"        int numDays \u003d (int) LocalDate.now().until(weddingDate, ChronoUnit.DAYS);","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"        if (numDays \u003c 0) {","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"            return new CommandResult(String.format(MESSAGE_PAST_DAY_COUNT, Math.abs(numDays), weddingDate));","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"        if (numDays \u003e 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"            return new CommandResult(String.format(MESSAGE_FUTURE_DAY_COUNT, numDays, weddingDate));","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"        return new CommandResult(MESSAGE_TODAY_COUNT);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"    /** Set the wedding day then shows the day count before the day. */","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"    private CommandResult executeSetWeddingDate(Model model) {","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"        assert dateSetByUser !\u003d null : \"The wedding set by user should not be null.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"        int numDays \u003d (int) LocalDate.now().until(dateSetByUser, ChronoUnit.DAYS);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"DesmondTo"},"content":"        if (numDays \u003c 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"DesmondTo"},"content":"            return new CommandResult(MESSAGE_PAST_SUCCESS);","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"DesmondTo"},"content":"        model.setDate(dateSetByUser);","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"DesmondTo"},"content":"        if (numDays \u003e 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"DesmondTo"},"content":"            return new CommandResult(String.format(MESSAGE_FUTURE_SUCCESS, dateSetByUser, numDays));","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"DesmondTo"},"content":"        return new CommandResult(MESSAGE_TODAY_SUCCESS);","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"DesmondTo"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"DesmondTo"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"DesmondTo"},"content":"        if (dateSetByUser \u003d\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"DesmondTo"},"content":"            return executeShowCountDown(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"DesmondTo"},"content":"        return executeSetWeddingDate(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"DesmondTo":101}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Linda124"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"Linda124"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"Linda124"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Linda124"},"content":"    public static final String MESSAGE_INDEX_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"Linda124"},"content":"    public static final String MESSAGE_NAME_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"Linda124"},"content":"            + \": Deletes the person identified with specified {@code targetName} in the displayed person list.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"Linda124"},"content":"            + \"Parameters: NAME (must be a non-empty and non-blank string)\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Linda124"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/Alex Tan\";","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"Linda124"},"content":"    public static final String MESSAGE_TAG_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Linda124"},"content":"            + \": Deletes persons identified with specified {@code targetTag} in the displayed person list.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Linda124"},"content":"            + \"Parameters: TAG (must be a non-empty and non-blank string)\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Linda124"},"content":"            + \"Example: \" + COMMAND_WORD + \" t/photographer\";","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Linda124"},"content":"    public static final String MESSAGE_EMPTY_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"Linda124"},"content":"            + \": Deletes the person identified either by index or name.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"Linda124"},"content":"            + \"Parameters (cannot be blank/empty): n/NAME or INDEX\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"Linda124"},"content":"            + \"Example: \\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"Linda124"},"content":"            + \"1. \" + COMMAND_WORD + \" n/Alex Tan\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"Linda124"},"content":"            + \"2. \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"Linda124"},"content":"    public static final String MESSAGE_UNKNOWN_PERSON_NAME \u003d \"The person named %s is not found.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"Linda124"},"content":"    public static final String MESSAGE_UNKNOWN_PERSON_TAG \u003d \"Persons with tag %s are not found.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"Linda124"},"content":"    public static final String MESSAGE_DELETE_TAG_SUCCESS \u003d \"Deleted Contacts Under Tag: %1$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"Linda124"},"content":"    private final Name targetName;","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"Linda124"},"content":"    private final Predicate\u003cPerson\u003e targetTagPerson;","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Linda124"},"content":"    private final Tag targetTag;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Banana3021"},"content":"    private UndoCommand commandToUndo;","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"Banana3021"},"content":"    private Person personToDelete;","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"Banana3021"},"content":"    private Index nameIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Linda124"},"content":"    private ArrayList\u003cPerson\u003e deletedList;","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"Linda124"},"content":"     * Creates an DeleteCommand to delete the person identified with specified {@code targetIndex}","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"Banana3021"},"content":"        commandToUndo \u003d new UndoCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"Banana3021"},"content":"        commandToUndo.setPrevCommand(this);","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"Linda124"},"content":"        this.targetTagPerson \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Linda124"},"content":"        this.targetName \u003d null;","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"Linda124"},"content":"        this.targetTag \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Banana3021"},"content":"        this.personToDelete \u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"Linda124"},"content":"     * Creates an DeleteCommand to delete the person identified with specified {@code targetName}","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"Linda124"},"content":"    public DeleteCommand(Name targetName) {","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"Banana3021"},"content":"        commandToUndo \u003d new UndoCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"Banana3021"},"content":"        commandToUndo.setPrevCommand(this);","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"Linda124"},"content":"        this.targetName \u003d targetName;","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"Linda124"},"content":"        this.targetTagPerson \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Linda124"},"content":"        this.targetIndex \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Linda124"},"content":"        this.targetTag \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Banana3021"},"content":"        this.personToDelete \u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Linda124"},"content":"     * Creates an DeleteCommand to delete the person identified with specified {@code targetTag}","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Linda124"},"content":"    public DeleteCommand(Predicate\u003cPerson\u003e targetTagPerson, String targetTag) {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Banana3021"},"content":"        commandToUndo \u003d new UndoCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"Banana3021"},"content":"        commandToUndo.setPrevCommand(this);","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"Linda124"},"content":"        this.targetTagPerson \u003d targetTagPerson;","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Linda124"},"content":"        this.targetName \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Linda124"},"content":"        this.targetIndex \u003d null;","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"Linda124"},"content":"        this.targetTag \u003d new Tag(targetTag);","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Banana3021"},"content":"        this.personToDelete \u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"Linda124"},"content":"        if (targetName \u003d\u003d null \u0026\u0026 targetIndex \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"Linda124"},"content":"            return executeDeleteByTag(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"Linda124"},"content":"        } else if (targetTag \u003d\u003d null \u0026\u0026 targetName \u003d\u003d null \u0026\u0026 targetTagPerson \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Linda124"},"content":"            return executeDeleteByIndex(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Linda124"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Linda124"},"content":"            return executeDeleteByName(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"Banana3021"},"content":"     * Deletes the persons identified with specified {@code targetTag}.","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"Linda124"},"content":"    private CommandResult executeDeleteByTag(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"Linda124"},"content":"        assert targetTag !\u003d null : \"targetTag should not be null\";","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"Linda124"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"Linda124"},"content":"        deletedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"Linda124"},"content":"        model.updateFilteredPersonList(targetTagPerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"Linda124"},"content":"        List\u003cPerson\u003e filteredList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"Linda124"},"content":"        if (filteredList.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"Linda124"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"Linda124"},"content":"            throw new CommandException(String.format(MESSAGE_UNKNOWN_PERSON_TAG, targetTag));","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Linda124"},"content":"        int originalSizeOfList \u003d filteredList.size();","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"Linda124"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"Linda124"},"content":"        for (int i \u003d 0; i \u003c originalSizeOfList; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"Linda124"},"content":"            Person personToDelete \u003d filteredList.get(index);","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"Linda124"},"content":"            deletedList.add(personToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"Linda124"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"Linda124"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"Linda124"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TAG_SUCCESS, targetTag));","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"Banana3021"},"content":"     * Deletes the person identified with specified {@code targetIndex}.","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"Linda124"},"content":"    private CommandResult executeDeleteByIndex(Model model) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"DesmondTo"},"content":"        assert targetIndex !\u003d null : \"targetIndex should not be null\";","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"Banana3021"},"content":"        personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":155,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"Banana3021"},"content":"     * Deletes the person named {@code targetName}.","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"Linda124"},"content":"    private CommandResult executeDeleteByName(Model model) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"Linda124"},"content":"        assert targetName !\u003d null : \"targetName should not be null\";","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"Linda124"},"content":"        Predicate\u003cPerson\u003e hasExactSameName \u003d (person) -\u003e person.getName().equals(targetName);","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"Linda124"},"content":"        model.updateFilteredPersonList(hasExactSameName);","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"Linda124"},"content":"        List\u003cPerson\u003e filteredList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"Linda124"},"content":"        if (filteredList.isEmpty()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"Linda124"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"Linda124"},"content":"            throw new CommandException(String.format(MESSAGE_UNKNOWN_PERSON_NAME, targetName));","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"Linda124"},"content":"        for (int i \u003d 0; i \u003c filteredList.size(); i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"Banana3021"},"content":"            personToDelete \u003d filteredList.get(i);","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"Linda124"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"Banana3021"},"content":"            nameIndex \u003d Index.fromZeroBased(i);","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"Linda124"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"Linda124"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, targetName));","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"Banana3021"},"content":"    public Person getPersonToDelete() {","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"Banana3021"},"content":"        return personToDelete;","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"Banana3021"},"content":"    public Index getTargetIndex() {","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"Banana3021"},"content":"        return targetIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"Banana3021"},"content":"    public Name getTargetName() {","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"Banana3021"},"content":"        return targetName;","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"Banana3021"},"content":"    public Index getIndexName() {","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"Banana3021"},"content":"        return nameIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"Linda124"},"content":"    public Tag getTargetTag() {","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"Linda124"},"content":"        return targetTag;","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"Linda124"},"content":"    public ArrayList\u003cPerson\u003e getDeletedList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"Linda124"},"content":"        return deletedList;","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":205,"author":{"gitId":"Linda124"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"Linda124"},"content":"            return true; // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":208,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":209,"author":{"gitId":"Linda124"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":210,"author":{"gitId":"Linda124"},"content":"            return false; // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":211,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":212,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":213,"author":{"gitId":"Linda124"},"content":"        // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":214,"author":{"gitId":"Linda124"},"content":"        if (targetIndex \u003d\u003d null \u0026\u0026 targetTag \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"Linda124"},"content":"            assert targetName !\u003d null : \"targetName should not be null\";","lastModifiedDate":"2021-10-08"},{"lineNumber":216,"author":{"gitId":"Linda124"},"content":"            return targetName.equals(((DeleteCommand) other).targetName);","lastModifiedDate":"2021-10-08"},{"lineNumber":217,"author":{"gitId":"Linda124"},"content":"        } else if (targetIndex \u003d\u003d null \u0026\u0026 targetName \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"Linda124"},"content":"            assert targetTag !\u003d null : \"targetTag should not be null\";","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"Linda124"},"content":"            return targetTag.equals(((DeleteCommand) other).targetTag);","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"Linda124"},"content":"        } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":221,"author":{"gitId":"Linda124"},"content":"            assert targetIndex !\u003d null : \"targetIndex should not be null\";","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"Linda124"},"content":"            return targetIndex.equals(((DeleteCommand) other).targetIndex);","lastModifiedDate":"2021-10-08"},{"lineNumber":223,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Linda124":134,"DesmondTo":1,"-":50,"Banana3021":40}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFO;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"Linda124"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"Linda124"},"content":"import seedu.address.model.person.Info;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"Linda124"},"content":"import seedu.address.model.person.Price;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"Linda124"},"content":"            + \"[\" + PREFIX_PRICE + \"PRICE] \"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"Linda124"},"content":"            + \"[\" + PREFIX_INFO + \"INFO] \"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"Banana3021"},"content":"            + \"[\" + PREFIX_STATUS + \"INFO] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"Banana3021"},"content":"    private UndoCommand commandToUndo;","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"Banana3021"},"content":"    private Person originalPerson;","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"Banana3021"},"content":"    private Person editedPerson;","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"Banana3021"},"content":"        commandToUndo \u003d new UndoCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"Banana3021"},"content":"        commandToUndo.setPrevCommand(this);","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"Banana3021"},"content":"        originalPerson \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"Banana3021"},"content":"        editedPerson \u003d createEditedPerson(originalPerson, editPersonDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"Banana3021"},"content":"        if (!originalPerson.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"Banana3021"},"content":"        model.setPerson(originalPerson, editedPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"Banana3021"},"content":"        // originalPerson \u003d personToEdit;","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"Linda124"},"content":"        Price updatedPrice \u003d editPersonDescriptor.getPrice().orElse(personToEdit.getPrice());","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"Linda124"},"content":"        Info updatedInfo \u003d editPersonDescriptor.getInfo().orElse(personToEdit.getInfo());","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"Banana3021"},"content":"        Status updatedStatus \u003d editPersonDescriptor.getStatus().orElse(personToEdit.getStatus());","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"Linda124"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"Banana3021"},"content":"                updatedPrice, updatedInfo, updatedStatus, updatedTags);","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"Banana3021"},"content":"    public Person getOriginalPerson() {","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"Banana3021"},"content":"        return originalPerson;","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"Banana3021"},"content":"    public Person getEditedPerson() {","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"Banana3021"},"content":"        return editedPerson;","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"Linda124"},"content":"        private Price price;","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"Linda124"},"content":"        private Info info;","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"Banana3021"},"content":"        private Status status;","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"Banana3021"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":178,"author":{"gitId":"Linda124"},"content":"            setPrice(toCopy.price);","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"Linda124"},"content":"            setInfo(toCopy.info);","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"Banana3021"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"Linda124"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, price, info, status);","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"Linda124"},"content":"        public void setPrice(Price price) {","lastModifiedDate":"2021-10-08"},{"lineNumber":224,"author":{"gitId":"Linda124"},"content":"            this.price \u003d price;","lastModifiedDate":"2021-10-08"},{"lineNumber":225,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":226,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":227,"author":{"gitId":"Linda124"},"content":"        public Optional\u003cPrice\u003e getPrice() {","lastModifiedDate":"2021-10-08"},{"lineNumber":228,"author":{"gitId":"Linda124"},"content":"            return Optional.ofNullable(price);","lastModifiedDate":"2021-10-08"},{"lineNumber":229,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":230,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":231,"author":{"gitId":"Linda124"},"content":"        public void setInfo(Info info) {","lastModifiedDate":"2021-10-08"},{"lineNumber":232,"author":{"gitId":"Linda124"},"content":"            this.info \u003d info;","lastModifiedDate":"2021-10-08"},{"lineNumber":233,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":234,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":235,"author":{"gitId":"Linda124"},"content":"        public Optional\u003cInfo\u003e getInfo() {","lastModifiedDate":"2021-10-08"},{"lineNumber":236,"author":{"gitId":"Linda124"},"content":"            return Optional.ofNullable(info);","lastModifiedDate":"2021-10-08"},{"lineNumber":237,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":238,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":239,"author":{"gitId":"Banana3021"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"Banana3021"},"content":"            this.status \u003d status;","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"Banana3021"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"Banana3021"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":283,"author":{"gitId":"Linda124"},"content":"                    \u0026\u0026 getPrice().equals(e.getPrice())","lastModifiedDate":"2021-10-08"},{"lineNumber":284,"author":{"gitId":"Linda124"},"content":"                    \u0026\u0026 getInfo().equals(e.getInfo())","lastModifiedDate":"2021-10-08"},{"lineNumber":285,"author":{"gitId":"Banana3021"},"content":"                    \u0026\u0026 getStatus().equals(e.getStatus())","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Linda124":33,"-":221,"Banana3021":35}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"            + \"the specified keywords (case-insensitive) or tags and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]... t/TAG [MORE_TAGS] pr/PRICE RANGE\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie t/colleague pr/\u003c100.00\";","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"    public static final String PRICE_USAGE \u003d \"Valid prices operators are \u003d, \u003c, \u003e, \u003c\u003d, \u003e\u003d. \\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"            + \"Prices must be in 2 decimal. Eg. pr/\u003c100.00\";","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"    private final String message;","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"     * Creates FindCommand with a predicate an a message describing the query","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"     * @param predicate List filter","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"     * @param message Message of query","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate, String message) {","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"yin72257"},"content":"        return new CommandResult(\"\"","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"yin72257"},"content":"                + model.getFilteredPersonList().size() + \" person(s) listed where \" + message);","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yin72257":20,"-":33}},{"path":"src/main/java/seedu/address/logic/commands/GroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"sj1999-BIT"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":" * Add tags to a group of contacts at the same time. Command stops if one of the names is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"public class GroupCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"sj1999-BIT"},"content":"    public static final String COMMAND_WORD \u003d \"group\";","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"sj1999-BIT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds tags to all the selected contacts. \"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"sj1999-BIT"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"sj1999-BIT"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"sj1999-BIT"},"content":"            + PREFIX_NAME + \"NAME1, NAME2, NAME3, NAME4 ... no limit to number\";","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"sj1999-BIT"},"content":"    public static final String MESSAGE_ERROR_TAG \u003d \"Invalid tag inputted\";","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"sj1999-BIT"},"content":"    public static final String MESSAGE_ERROR_NAMES \u003d \"Invalid names inputted\";","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"    private static final String MESSAGE_FAILURE \u003d \"Group command has failed\";","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"sj1999-BIT"},"content":"    private boolean isFirstAdded \u003d true;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"    private String tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"    private List\u003cString\u003e nameList;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Banana3021"},"content":"    private UndoCommand commandToUndo;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"sj1999-BIT"},"content":"     * Constructs a group command based on the inputs.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"sj1999-BIT"},"content":"    public GroupCommand(String inputTag, String inputNameList) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Banana3021"},"content":"        commandToUndo \u003d new UndoCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Banana3021"},"content":"        commandToUndo.setPrevCommand(this);","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"sj1999-BIT"},"content":"        tag \u003d inputTag;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"sj1999-BIT"},"content":"        nameList \u003d Arrays.asList(inputNameList.split(\", \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Banana3021"},"content":"    public String getTagName() {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Banana3021"},"content":"        return tag;","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Banana3021"},"content":"    public List\u003cString\u003e getNameList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Banana3021"},"content":"        return nameList;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"sj1999-BIT"},"content":"     * Creates a string that indicates all the names that have been added with the tag.","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"sj1999-BIT"},"content":"     * It also indicates if all the name have been added or if some names have failed.","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"sj1999-BIT"},"content":"     * @param model is the main ModelManager class used by the current user","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"sj1999-BIT"},"content":"     * @param result is the string that contains the final message to be sent","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"sj1999-BIT"},"content":"     * @param targetName is the string name that is used to identify the target person to be edited","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"sj1999-BIT"},"content":"     * @return the message string","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"sj1999-BIT"},"content":"    private String addTagToContact(Model model, String result, String targetName) {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"sj1999-BIT"},"content":"        for (Person temp : model.getAddressBook().getPersonList()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"sj1999-BIT"},"content":"            if (temp.isSamePerson(Person.createTempFakePerson(targetName))) {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"sj1999-BIT"},"content":"                HashSet\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e(temp.getTags());","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"sj1999-BIT"},"content":"                newTags.add(new Tag(tag));","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"sj1999-BIT"},"content":"                model.setPerson(temp, new Person(temp.getName(), temp.getPhone(),","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Banana3021"},"content":"                        temp.getEmail(), temp.getAddress(), temp.getPrice(), temp.getInfo(),","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Banana3021"},"content":"                        temp.getStatus(), newTags));","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"sj1999-BIT"},"content":"                if (isFirstAdded) {","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"sj1999-BIT"},"content":"                    result +\u003d \" \" + targetName;","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"sj1999-BIT"},"content":"                    isFirstAdded \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"sj1999-BIT"},"content":"                } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"sj1999-BIT"},"content":"                    result +\u003d \", \" + targetName;","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"sj1999-BIT"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"sj1999-BIT"},"content":"        return result;","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"sj1999-BIT"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"sj1999-BIT"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"sj1999-BIT"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"sj1999-BIT"},"content":"        String nameStringLists \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"sj1999-BIT"},"content":"        boolean isTagAdded \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"sj1999-BIT"},"content":"        String returnMessage \u003d \"The tag \"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"sj1999-BIT"},"content":"                + tag","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"sj1999-BIT"},"content":"                + \" has been added to the name :\";","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"sj1999-BIT"},"content":"        for (String name : nameList) {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"sj1999-BIT"},"content":"            if (model.hasPersonName(name)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"sj1999-BIT"},"content":"                isTagAdded \u003d true;","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"sj1999-BIT"},"content":"                returnMessage \u003d addTagToContact(model, returnMessage, name);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"sj1999-BIT"},"content":"            } else if (isTagAdded) {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"sj1999-BIT"},"content":"                return new CommandResult(returnMessage","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"sj1999-BIT"},"content":"                        + nameStringLists","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"sj1999-BIT"},"content":"                        + \"\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"sj1999-BIT"},"content":"                        + MESSAGE_FAILURE);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"sj1999-BIT"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"sj1999-BIT"},"content":"                return new CommandResult(MESSAGE_FAILURE);","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"sj1999-BIT"},"content":"        return new CommandResult(returnMessage + nameStringLists);","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"sj1999-BIT":90,"Banana3021":15}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Linda124":1,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/ListShortcutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":" * Adds a shortcut to the shortcut list stored.","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"public class ListShortcutCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"    public static final String COMMAND_WORD \u003d \"listsc\";","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all your preset shortcuts \\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"            + \"Example: \" + COMMAND_WORD + \" a\";","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"     * Creates new {@code ListShortcutCommand}","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"    public ListShortcutCommand() {","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"        return new CommandResult(model.listShortcut());","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"                || (other instanceof ListShortcutCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"yin72257":36}},{"path":"src/main/java/seedu/address/logic/commands/PriceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.person.Price;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.person.predicates.StatusEqualsConfirmedPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.person.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"public class PriceCommand extends Command {","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    public static final String COMMAND_WORD \u003d \"price\";","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    public static final String MESSAGE_ARGUMENT_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"            + \": Checks the total price under specified {@code targetTag} in the displayed person list.\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"            + \"Parameters: Either empty or t/TAG\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"            + \"Example 1: \" + COMMAND_WORD + \"\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"            + \"Example 2: \" + COMMAND_WORD + \" t/photographer\";","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    public static final String MESSAGE_TAG_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"            + \": Checks the total price under specified {@code targetTag} in the displayed person list.\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"            + \"Parameters: TAG (must be a non-empty and non-blank string)\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"            + \"Example: \" + COMMAND_WORD + \" t/photographer\";","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    public static final String MESSAGE_TAG_NOT_FOUND_FAILURE \u003d \"The following tag(s) you specified is not found:\\n %s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    public static final String MESSAGE_PRICE_SUM_SUCCESS \u003d \"Your wedding overall cost is $%.2f\";","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"    public static final String MESSAGE_PRICE_SUM_UNDER_TAG_SUCCESS \u003d \"Total price for %s is $%.2f\";","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"    private static final Predicate\u003cPerson\u003e PREDICATE_STATUS_IS_CONFIRMED \u003d new StatusEqualsConfirmedPredicate();","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    private final List\u003cString\u003e targetTagKeywords;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"     * Creates a PriceCommand to calculate the price sum of persons with confirmed status","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"    public PriceCommand() {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        this.targetTagKeywords \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"     * Creates a PriceCommand to calculate the price sum of persons with confirmed status and {@code targetTagKeyword}","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"    public PriceCommand(String targetTagKeyWord) {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"        this.targetTagKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"        this.targetTagKeywords.add(targetTagKeyWord);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"     * Creates a PriceCommand to calculate the price sum of persons with confirmed status and {@code targetTagKeywords}","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"    public PriceCommand(List\u003cString\u003e targetTagKeywords) {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"        this.targetTagKeywords \u003d targetTagKeywords;","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"        if (targetTagKeywords \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"            return executeTotalSum(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"            return executeSumByTag(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"    private List\u003cPerson\u003e getConfirmedPersonList(Model model) {","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"        model.updateFilteredPersonList(PREDICATE_STATUS_IS_CONFIRMED);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"    private CommandResult executeTotalSum(Model model) {","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"        List\u003cPerson\u003e confirmedPersonList \u003d getConfirmedPersonList(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"DesmondTo"},"content":"        double totalSum \u003d sumPriceInTheList(confirmedPersonList);","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"DesmondTo"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"DesmondTo"},"content":"        return new CommandResult(String.format(MESSAGE_PRICE_SUM_SUCCESS, totalSum));","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"DesmondTo"},"content":"    private void searchPersonsWithSameTags(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"DesmondTo"},"content":"        assert targetTagKeywords !\u003d null : \"Tag keywords should not be null\";","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"DesmondTo"},"content":"        for (String targetTagKeyword : targetTagKeywords) {","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"            Tag tagToCheck \u003d new Tag(targetTagKeyword);","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"DesmondTo"},"content":"            Predicate\u003cPerson\u003e containSameTag \u003d (person) -\u003e person.getTags().contains(tagToCheck);","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"DesmondTo"},"content":"            model.updateFilteredPersonList(containSameTag);","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"DesmondTo"},"content":"            if (model.getFilteredPersonList().isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"DesmondTo"},"content":"                model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"DesmondTo"},"content":"                throw new CommandException(String.format(MESSAGE_TAG_NOT_FOUND_FAILURE, tagToCheck));","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"DesmondTo"},"content":"    private List\u003cPerson\u003e getPersonWithSameTagsList(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"DesmondTo"},"content":"        searchPersonsWithSameTags(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"DesmondTo"},"content":"        Predicate\u003cPerson\u003e containTagsPredicate \u003d new TagContainsKeywordsPredicate(targetTagKeywords);","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"DesmondTo"},"content":"        Predicate\u003cPerson\u003e containTagsAndConfirmed \u003d PREDICATE_STATUS_IS_CONFIRMED.and(containTagsPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"DesmondTo"},"content":"        model.updateFilteredPersonList(containTagsAndConfirmed);","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"DesmondTo"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"DesmondTo"},"content":"    private CommandResult executeSumByTag(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"DesmondTo"},"content":"        assert targetTagKeywords !\u003d null : \"Tag keywords should not be null\";","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"DesmondTo"},"content":"        List\u003cPerson\u003e personWithSameTagsList \u003d getPersonWithSameTagsList(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"DesmondTo"},"content":"        double totalSumByTag \u003d sumPriceInTheList(personWithSameTagsList);","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"DesmondTo"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"DesmondTo"},"content":"        return new CommandResult(String.format(MESSAGE_PRICE_SUM_UNDER_TAG_SUCCESS, targetTagKeywords, totalSumByTag));","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"DesmondTo"},"content":"    private double sumPriceInTheList(List\u003cPerson\u003e listToSum) {","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"DesmondTo"},"content":"        double totalPrice \u003d 0.00;","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"DesmondTo"},"content":"        for (int i \u003d 0; i \u003c listToSum.size(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"DesmondTo"},"content":"            Price priceToAdd \u003d listToSum.get(i).getPrice();","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"DesmondTo"},"content":"            double amountToAdd \u003d priceToAdd.toDouble();","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"DesmondTo"},"content":"            totalPrice +\u003d amountToAdd;","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"DesmondTo"},"content":"        return totalPrice;","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"DesmondTo":125}},{"path":"src/main/java/seedu/address/logic/commands/RemoveShortcutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":" * Removes a shortcut to the shortcut list stored.","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"public class RemoveShortcutCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"    public static final String COMMAND_WORD \u003d \"removesc\";","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes a shortcut with a specified call\"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"            + \"Parameters: KEYWORDS c/[Command to be executed]\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"            + \"Example: \" + COMMAND_WORD + \" a\";","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"    private final String keyword;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"     * Creates new {@code RemoveShortcutCommand}","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"     * @param keyword Key to call the command","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"    public RemoveShortcutCommand(String keyword) {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"        String commandString \u003d model.removeShortcut(keyword);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"        if (commandString \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"            return new CommandResult(\"Command with keyword \" + keyword + \" not found\");","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"        return new CommandResult(\"Removed \" + keyword + \": \" + commandString);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"yin72257"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"yin72257"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"yin72257"},"content":"                || (other instanceof RemoveShortcutCommand); // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"yin72257":43}},{"path":"src/main/java/seedu/address/logic/commands/ReportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Linda124"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"Linda124"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Linda124"},"content":"import seedu.address.model.ReportElement;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Linda124"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Linda124"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Linda124"},"content":"import seedu.address.ui.ReportWindow;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Linda124"},"content":"public class ReportCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Linda124"},"content":"    public static final String COMMAND_WORD \u003d \"report\";","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Linda124"},"content":"    public static final String SHOWING_REPORT_MESSAGE \u003d \"Opened report window.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Linda124"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows status report for contacts.\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Linda124"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Linda124"},"content":"    private static int totalConfirmedCount;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Linda124"},"content":"    private static int totalPendingCount;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Linda124"},"content":"    private static int totalDeclinedCount;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Linda124"},"content":"     * Checks for tag in the existing report arraylist. If it is present, the corresponding report element is","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Linda124"},"content":"     * updated with incremented status count and true is returned. Else, false is returned.","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Linda124"},"content":"     * @param reportArray is the arraylist with report elements","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Linda124"},"content":"     * @param tag is the tag associated with element","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Linda124"},"content":"     * @param status is the status associated with element","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Linda124"},"content":"     * @return true if tag exists and so status can be updated","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Linda124"},"content":"    public static boolean canUpdateExistingElement(ArrayList\u003cReportElement\u003e reportArray, String tag, String status) {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"Linda124"},"content":"        for (ReportElement e : reportArray) {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"Linda124"},"content":"            if (e.hasSameTag(tag)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Linda124"},"content":"                incrementStatusCount(e, status);","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"Linda124"},"content":"                return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Linda124"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Linda124"},"content":"        return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"Linda124"},"content":"     * Updates status count according to type of status detected.","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"Linda124"},"content":"     * @param element is the report element in which the count is updated","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Linda124"},"content":"     * @param currStatus is the status being used to keep count","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"Linda124"},"content":"    public static void incrementStatusCount(ReportElement element, String currStatus) {","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Linda124"},"content":"        if (currStatus.matches(\"[Cc]onfirmed|c\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"Linda124"},"content":"            element.incrementConfirmed();","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Linda124"},"content":"            totalConfirmedCount++;","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"Linda124"},"content":"        if (currStatus.matches(\"[Pp]ending|p\")) {","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"Linda124"},"content":"            element.incrementPending();","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Linda124"},"content":"            totalPendingCount++;","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"Linda124"},"content":"        if (currStatus.matches(\"[Dd]eclined|d\")) {","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"Linda124"},"content":"            element.incrementDeclined();","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Linda124"},"content":"            totalDeclinedCount++;","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Linda124"},"content":"     * Creates a report arraylist that keeps track of all the tags and the corresponding","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Linda124"},"content":"     * status count for each tag.","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Linda124"},"content":"     * @param model is the source from which the list of contacts can be obtained","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"Linda124"},"content":"     * @return report created","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"    public static String createReport(Model model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"Linda124"},"content":"        totalConfirmedCount \u003d 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Linda124"},"content":"        totalPendingCount \u003d 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Linda124"},"content":"        totalDeclinedCount \u003d 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Linda124"},"content":"        ArrayList\u003cReportElement\u003e reportArray \u003d new ArrayList\u003cReportElement\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"Linda124"},"content":"        ObservableList\u003cPerson\u003e listOfPeople \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"Linda124"},"content":"        for (Person currPerson : listOfPeople) {","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"Linda124"},"content":"            Set\u003cTag\u003e currPersonTags \u003d currPerson.getTags();","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"Linda124"},"content":"            String statusString \u003d currPerson.getStatus().toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"Linda124"},"content":"            for (Tag tagUsed : currPersonTags) {","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"Linda124"},"content":"                String tagString \u003d tagUsed.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"Linda124"},"content":"                if (!canUpdateExistingElement(reportArray, tagString, statusString)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"Linda124"},"content":"                    createNewElement(reportArray, tagString, statusString);","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"Linda124"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"Linda124"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"        String priceOverallSum \u003d new PriceCommand().execute(model).getFeedbackToUser();","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"DesmondTo"},"content":"        StringBuilder priceSumByTag \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"DesmondTo"},"content":"        for (String tagString : getListOfTag(listOfPeople)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"DesmondTo"},"content":"            priceSumByTag.append(new PriceCommand(tagString).execute(model).getFeedbackToUser())","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"DesmondTo"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"DesmondTo"},"content":"        String priceSumReport \u003d String.format(\"\\n%s\\n%s\", priceOverallSum, priceSumByTag);","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"DesmondTo"},"content":"        return provideTextReport(reportArray) + priceSumReport;","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"Linda124"},"content":"     * Creates and adds a new report element to report array.","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"Linda124"},"content":"     * @param reportArray is the arraylist storing report elements","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"Linda124"},"content":"     * @param currTag is the tag being added","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"Linda124"},"content":"     * @param currStatus is the status being used to keep count","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"Linda124"},"content":"    public static void createNewElement(ArrayList\u003cReportElement\u003e reportArray, String currTag, String currStatus) {","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"Linda124"},"content":"        if (currStatus.matches(\"[Cc]onfirmed|c\")) {","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"Linda124"},"content":"            reportArray.add(new ReportElement(currTag, 1, 0, 0));","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"Linda124"},"content":"            totalConfirmedCount++;","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"Linda124"},"content":"        } else if (currStatus.matches(\"[Pp]ending|p\")) {","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"Linda124"},"content":"            reportArray.add(new ReportElement(currTag, 0, 1, 0));","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"Linda124"},"content":"            totalPendingCount++;","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"Linda124"},"content":"        } else if (currStatus.matches(\"[Dd]eclined|d\")) {","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"Linda124"},"content":"            reportArray.add(new ReportElement(currTag, 0, 0, 1));","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"Linda124"},"content":"            totalDeclinedCount++;","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"Linda124"},"content":"     * Creates a report in an organised format.","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"Linda124"},"content":"     * @param fullReportArray is the arraylist with all report elements","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"Linda124"},"content":"     * @return final report as a string","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"Linda124"},"content":"    public static String provideTextReport(ArrayList\u003cReportElement\u003e fullReportArray) {","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"Linda124"},"content":"        String summaryOfStatus \u003d totalConfirmedCount + \" confirmed, \"","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"Linda124"},"content":"                + totalPendingCount + \" pending, \"","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"Linda124"},"content":"                + totalDeclinedCount + \" declined\";","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"Linda124"},"content":"        String reportAsString \u003d \"Current status for tags: \" + \"\\n\" + summaryOfStatus + \"\\n\";","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"Linda124"},"content":"        for (ReportElement currElement : fullReportArray) {","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"Linda124"},"content":"            reportAsString \u003d reportAsString + currElement + \"\\n\";","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"Linda124"},"content":"        return reportAsString;","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"DesmondTo"},"content":"    /** Get a list of unique existing tags */","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"DesmondTo"},"content":"    private static List\u003cString\u003e getListOfTag(ObservableList\u003cPerson\u003e listOfPeople) {","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"DesmondTo"},"content":"        Set\u003cString\u003e setOfTagString \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"DesmondTo"},"content":"        for (Person person : listOfPeople) {","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"DesmondTo"},"content":"            Set\u003cTag\u003e tagsOfCurrPerson \u003d person.getTags();","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"DesmondTo"},"content":"            addTagsToSet(tagsOfCurrPerson, setOfTagString);","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"DesmondTo"},"content":"        return new ArrayList\u003c\u003e(setOfTagString);","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"DesmondTo"},"content":"    /** Add each tag from {@code tags} to {@code setOfTagString} */","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"DesmondTo"},"content":"    private static void addTagsToSet(Set\u003cTag\u003e tags, Set\u003cString\u003e setOfTagString) {","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"DesmondTo"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"DesmondTo"},"content":"            setOfTagString.add(tag.tagName);","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"Linda124"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"DesmondTo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"Linda124"},"content":"        ReportWindow.setReportMessage(createReport(model));","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"Linda124"},"content":"        ReportWindow window \u003d new ReportWindow();","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"Linda124"},"content":"        window.show();","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"Linda124"},"content":"        return new CommandResult(SHOWING_REPORT_MESSAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"Linda124"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Linda124":126,"DesmondTo":32}},{"path":"src/main/java/seedu/address/logic/commands/ShortcutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"public class ShortcutCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"    public static final String COMMAND_WORD \u003d \"sc\";","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Calls the command tied to the keyphrase added by \"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"            + \"addsc\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"            + \"Parameters: KEYPHRASE\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"            + \"Example: \" + COMMAND_WORD + \" a\";","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"    public static final String COMMAND_INVALID \u003d \"Command invalid form: \";","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"    public static final String COMMAND_NOT_FOUND \u003d \"Command not found\";","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"    public static final String COMMAND_EXECUTE_ERROR \u003d \"Command execute error: \";","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"    private final String shortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"    public ShortcutCommand(String shortcut) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"        this.shortcut \u003d shortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"yin72257"},"content":"        String commandString \u003d model.getShortcutFromKey(shortcut);","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"yin72257"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"yin72257"},"content":"            if (commandString \u003d\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"yin72257"},"content":"                return new CommandResult(COMMAND_NOT_FOUND);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"yin72257"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"yin72257"},"content":"            Command command \u003d (new AddressBookParser()).parseCommand(commandString);","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"yin72257"},"content":"            try {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"yin72257"},"content":"                return command.execute(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"yin72257"},"content":"            } catch (CommandException ce) {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"yin72257"},"content":"                return new CommandResult(COMMAND_EXECUTE_ERROR + commandString);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"yin72257"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"yin72257"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"yin72257"},"content":"            return new CommandResult(COMMAND_INVALID + commandString);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"yin72257"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"yin72257"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"yin72257"},"content":"                || (other instanceof ShortcutCommand) // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"yin72257"},"content":"                || (shortcut.equals(((ShortcutCommand) other).shortcut)); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"yin72257":60}},{"path":"src/main/java/seedu/address/logic/commands/TagInfoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.Hashtable;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"public class TagInfoCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"    public static final String COMMAND_WORD \u003d \"tagInfo\";","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"sj1999-BIT"},"content":"    public static final String MESSAGE_NO_INPUT \u003d \"No valid tag value is inputted\";","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"            + \": Provides the number of contacts with the respective tags\"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"            + \" Methods of usage :\"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"sj1999-BIT"},"content":"            + \"1. tagInfo list : provide a list for every unique tag in the current model\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"sj1999-BIT"},"content":"            + \"2. tagInfo t/[TAG1], [TAG2] ... : provide a list for every existing tag inputted\\n \"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"sj1999-BIT"},"content":"            + \"   if the input tag is not in the model, an error message will be shown while the\\n \"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"sj1999-BIT"},"content":"            + \"   existing tags will still be in the list\";","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"sj1999-BIT"},"content":"    private HashSet\u003cTag\u003e listOfTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"sj1999-BIT"},"content":"    public TagInfoCommand(String all) {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"sj1999-BIT"},"content":"        assert all \u003d\u003d \"list\";","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"     * Returns a new TagInfoCommand Object with the inputs converted into","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"sj1999-BIT"},"content":"     * a HashSet Object","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"sj1999-BIT"},"content":"     * @param tagListInput is an array of strings containing the tag names.","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"sj1999-BIT"},"content":"     * @throws CommandException if invalid tag name is inputted","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"sj1999-BIT"},"content":"    public TagInfoCommand(String[] tagListInput) throws CommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"sj1999-BIT"},"content":"        for (String tagName : tagListInput) {","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"sj1999-BIT"},"content":"            if (tagName.equals(\"\")) {","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"sj1999-BIT"},"content":"                throw new CommandException(\"Empty tag is inputted!\");","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"sj1999-BIT"},"content":"            try {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"sj1999-BIT"},"content":"                this.listOfTags.add(new Tag(tagName));","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"sj1999-BIT"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"sj1999-BIT"},"content":"                throw new CommandException(e.getMessage());","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"sj1999-BIT"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"sj1999-BIT"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"sj1999-BIT"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"sj1999-BIT"},"content":"        String resultMessage \u003d \"tags Info:\\n\";","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"sj1999-BIT"},"content":"        String errorTags \u003d \"\";","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"sj1999-BIT"},"content":"        Hashtable\u003cTag, Integer\u003e tagInfoTable \u003d model.getUniqueTagTable();","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"sj1999-BIT"},"content":"        // empty, assumed that we are looking for every tag in the model","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"sj1999-BIT"},"content":"        if (listOfTags.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"sj1999-BIT"},"content":"            listOfTags.addAll(tagInfoTable.keySet());","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"sj1999-BIT"},"content":"        for (Tag tagsToBeChecked : listOfTags) {","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"sj1999-BIT"},"content":"            if (tagInfoTable.containsKey(tagsToBeChecked)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"sj1999-BIT"},"content":"                resultMessage +\u003d tagsToBeChecked.tagName","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"sj1999-BIT"},"content":"                        + \" used by \"","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"sj1999-BIT"},"content":"                        + tagInfoTable.get(tagsToBeChecked)","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"sj1999-BIT"},"content":"                        + \" people\\n\";","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"sj1999-BIT"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"sj1999-BIT"},"content":"                errorTags +\u003d tagsToBeChecked.tagName + \"\\n\";","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"sj1999-BIT"},"content":"        if (!errorTags.equals(\"\")) {","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"sj1999-BIT"},"content":"            resultMessage +\u003d \"following tags cannot be found:\\n\" + errorTags;","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"sj1999-BIT"},"content":"        return new CommandResult(resultMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"sj1999-BIT":81}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Banana3021"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Banana3021"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Linda124"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Banana3021"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Banana3021"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Banana3021"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Banana3021"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Banana3021"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Banana3021"},"content":" * Undoes the previous task.","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Banana3021"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Banana3021"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Banana3021"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Banana3021"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The task has been undone\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Banana3021"},"content":"    private static Command prevCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Banana3021"},"content":"    public void setPrevCommand(Command prevCommand) {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Banana3021"},"content":"        this.prevCommand \u003d prevCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Banana3021"},"content":"     * Checks whether the command can be done","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Banana3021"},"content":"     * and performs the undo operation accordingly.","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"Banana3021"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Banana3021"},"content":"     * @param model the model in use","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"Banana3021"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Banana3021"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Banana3021"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Banana3021"},"content":"        if (prevCommand \u003d\u003d null || isInstanceOf(prevCommand)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Banana3021"},"content":"            return new CommandResult(","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Banana3021"},"content":"                    String.format(Messages.MESSAGE_CANNOT_UNDO_COMMAND,","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Banana3021"},"content":"                            model.getFilteredPersonList().size()));","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Banana3021"},"content":"        List\u003cPerson\u003e currentList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Banana3021"},"content":"        if (prevCommand instanceof AddCommand) {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Banana3021"},"content":"            model.deletePerson(currentList.get(currentList.size() - 1));","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"Banana3021"},"content":"        } else if (prevCommand instanceof DeleteCommand) {","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Banana3021"},"content":"            DeleteCommand deleted \u003d (DeleteCommand) prevCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Banana3021"},"content":"            Person deletedPerson \u003d deleted.getPersonToDelete();","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"Banana3021"},"content":"            if (deleted.getTargetIndex() !\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Banana3021"},"content":"                Index index \u003d deleted.getTargetIndex();","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"Banana3021"},"content":"                shuffle(currentList, index.getZeroBased(), deletedPerson,","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"Banana3021"},"content":"                        model);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Banana3021"},"content":"            } else if (deleted.getTargetName() !\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"Banana3021"},"content":"                Index index \u003d deleted.getIndexName();","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"Banana3021"},"content":"                shuffle(currentList, index.getZeroBased(), deletedPerson,","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"Banana3021"},"content":"                        model);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Linda124"},"content":"            } else if (deleted.getTargetTag() !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Linda124"},"content":"                ArrayList\u003cPerson\u003e deletedList \u003d deleted.getDeletedList();","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Linda124"},"content":"                for (Person p : deletedList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Linda124"},"content":"                    shuffle(currentList, 0, p, model);","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"Linda124"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Banana3021"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"Banana3021"},"content":"        } else if (prevCommand instanceof ClearCommand) {","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"Banana3021"},"content":"            ClearCommand cleared \u003d (ClearCommand) prevCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"Banana3021"},"content":"            model.setAddressBook(new AddressBook(cleared.getPrevBook()));","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Banana3021"},"content":"        } else if (prevCommand instanceof EditCommand) {","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"Banana3021"},"content":"            EditCommand edited \u003d (EditCommand) prevCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"Banana3021"},"content":"            model.setPerson(edited.getEditedPerson(), edited.getOriginalPerson());","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"Banana3021"},"content":"        } else if (prevCommand instanceof GroupCommand) {","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"Banana3021"},"content":"            GroupCommand group \u003d (GroupCommand) prevCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"Banana3021"},"content":"            String tagName \u003d group.getTagName();","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"Banana3021"},"content":"            List\u003cString\u003e nameList \u003d group.getNameList();","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"Banana3021"},"content":"            removePeople(currentList, nameList, tagName, model);","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Banana3021"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"Banana3021"},"content":"                String.format(MESSAGE_SUCCESS, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"Banana3021"},"content":"     * Checks whether the command is an instance","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"Banana3021"},"content":"     * of any of the following classes.","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"Banana3021"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"Banana3021"},"content":"     * @param command the command to check","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"Banana3021"},"content":"    public boolean isInstanceOf(Command command) {","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"Banana3021"},"content":"        return (command instanceof ExitCommand)","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"Banana3021"},"content":"                || (command instanceof FindCommand)","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"Banana3021"},"content":"                || (command instanceof HelpCommand)","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"Banana3021"},"content":"                || (command instanceof ListCommand)","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"Banana3021"},"content":"                || (command instanceof CountdownCommand)","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"Banana3021"},"content":"                || (command instanceof UndoCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"Banana3021"},"content":"     * If a person has been deleted, reinstates","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"Banana3021"},"content":"     * the deleted person at the correct index","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"Banana3021"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"Banana3021"},"content":"     * @param personList the list of all people","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"Banana3021"},"content":"     * @param index      the former index of the deleted person","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"Banana3021"},"content":"     * @param newPerson  the deleted person","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"Banana3021"},"content":"     * @param model      the model in use","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"Banana3021"},"content":"    public void shuffle(List\u003cPerson\u003e personList, int index, Person newPerson, Model model) {","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"Banana3021"},"content":"        Person temp1 \u003d newPerson;","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"Banana3021"},"content":"        for (int count \u003d 0; count \u003c personList.size(); count++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"Banana3021"},"content":"            if (count \u003d\u003d index) {","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"Banana3021"},"content":"                temp1 \u003d personList.get(count);","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"Banana3021"},"content":"                model.setPerson(temp1, newPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"Banana3021"},"content":"            } else if (count \u003e index) {","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"Banana3021"},"content":"                Person temp2 \u003d personList.get(count);","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"Banana3021"},"content":"                model.setPerson(temp2, temp1);","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"Banana3021"},"content":"                temp1 \u003d temp2;","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"Banana3021"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"Banana3021"},"content":"        model.addPerson(temp1);","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"Banana3021"},"content":"     * Undoes the adding of people to a new group","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"Banana3021"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"Banana3021"},"content":"     * @param personList the list of all people","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"Banana3021"},"content":"     * @param names      the names of those who were added to a group","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"Banana3021"},"content":"     * @param tag        the group name","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"Banana3021"},"content":"     * @param model      the model in use","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"Banana3021"},"content":"    public void removePeople(List\u003cPerson\u003e personList, List\u003cString\u003e names, String tag, Model model) {","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"Banana3021"},"content":"        for (Person p : personList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"Banana3021"},"content":"            for (String name : names) {","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"Banana3021"},"content":"                if (p.getName().fullName.equals(name)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"Banana3021"},"content":"                    HashSet\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(p.getTags());","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"Banana3021"},"content":"                    tags.removeIf(t -\u003e t.toString().contains(tag));","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"Banana3021"},"content":"                    Person editedPerson \u003d new Person(p.getName(), p.getPhone(),","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"Banana3021"},"content":"                            p.getEmail(), p.getAddress(), p.getPrice(),","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"Banana3021"},"content":"                            p.getInfo(), p.getStatus(), tags);","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"Banana3021"},"content":"                    model.setPerson(p, editedPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"Banana3021"},"content":"                    break;","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"Banana3021"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"Banana3021"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"Banana3021"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Linda124":6,"Banana3021":137}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFO;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Info;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Price;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"Banana3021"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"Banana3021"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Banana3021"},"content":"                        PREFIX_ADDRESS, PREFIX_PRICE, PREFIX_INFO, PREFIX_STATUS, PREFIX_TAG);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"Banana3021"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Linda124"},"content":"                PREFIX_ADDRESS)","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"Linda124"},"content":"        Price price \u003d ParserUtil.parsePrice(argMultimap.getPriceValue(PREFIX_PRICE).get());","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Linda124"},"content":"        Info info \u003d ParserUtil.parseImportantInfo(argMultimap.getInfoValue(PREFIX_INFO).get());","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Linda124"},"content":"        Status status \u003d ParserUtil.parseStatus(argMultimap.getStatusValue(PREFIX_STATUS).get());","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"Banana3021"},"content":"        Person person \u003d new Person(name, phone, email, address, price, info, status, tagList);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Linda124":4,"-":57,"Banana3021":11}},{"path":"src/main/java/seedu/address/logic/parser/AddShortcutCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"import seedu.address.logic.commands.AddShortcutCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":" * Parses input arguments and creates a new AddShortcutCommand object","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"public class AddShortcutCommandParser implements Parser\u003cAddShortcutCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"    public AddShortcutCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShortcutCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_COMMAND);","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"        if (argMultimap.getPreamble().isBlank() || !argMultimap.getValue(PREFIX_COMMAND).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShortcutCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"        String[] splitInput \u003d trimmedArgs.split(PREFIX_COMMAND.toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"        if (splitInput.length !\u003d 2 || splitInput[1].isBlank()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddShortcutCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"        String commandString \u003d splitInput[1];","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"        String keyword \u003d argMultimap.getPreamble();","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"        return new AddShortcutCommand(keyword, commandString);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"yin72257":36}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"Linda124"},"content":"import seedu.address.logic.commands.AddShortcutCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.logic.commands.CountdownCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"import seedu.address.logic.commands.ListShortcutCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Linda124"},"content":"import seedu.address.logic.commands.PriceCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"import seedu.address.logic.commands.RemoveShortcutCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Linda124"},"content":"import seedu.address.logic.commands.ReportCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Linda124"},"content":"import seedu.address.logic.commands.ShortcutCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Linda124"},"content":"import seedu.address.logic.commands.TagInfoCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Linda124"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"sj1999-BIT"},"content":"        case GroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"sj1999-BIT"},"content":"            return new GroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"Linda124"},"content":"        case ReportCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"Linda124"},"content":"            return new ReportCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"DesmondTo"},"content":"        case CountdownCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"            return new CountdownCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":90,"author":{"gitId":"Linda124"},"content":"        case AddShortcutCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"Linda124"},"content":"            return new AddShortcutCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"Linda124"},"content":"        case ShortcutCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"Linda124"},"content":"            return new ShortcutCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"yin72257"},"content":"        case RemoveShortcutCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"yin72257"},"content":"            return new RemoveShortcutCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"yin72257"},"content":"        case ListShortcutCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"yin72257"},"content":"            return new ListShortcutCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"Linda124"},"content":"        case PriceCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"Linda124"},"content":"            return new PriceCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"Linda124"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"Linda124"},"content":"            return new UndoCommandParser().parse(userInput);","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"Linda124"},"content":"        case TagInfoCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"Linda124"},"content":"            return new TagInfoCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sj1999-BIT":4,"Linda124":24,"DesmondTo":3,"yin72257":8,"-":77}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Linda124"},"content":"     * Returns the last info value of {@code prefix}.","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"Linda124"},"content":"    public Optional\u003cString\u003e getInfoValue(Prefix prefix) {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"Linda124"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Linda124"},"content":"        return values.isEmpty() ? Optional.of(\"none\") : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"Linda124"},"content":"     * Returns the last price value of {@code prefix}.","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Linda124"},"content":"    public Optional\u003cString\u003e getPriceValue(Prefix prefix) {","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Linda124"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Linda124"},"content":"        return values.isEmpty() ? Optional.of(\"0.00\") : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Linda124"},"content":"     * Returns the last status value of {@code prefix}.","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Linda124"},"content":"    public Optional\u003cString\u003e getStatusValue(Prefix prefix) {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Linda124"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Linda124"},"content":"        return values.isEmpty() ? Optional.of(\"Pending\") : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"Linda124":24,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"Banana3021"},"content":"    public static final Prefix PREFIX_PRICE \u003d new Prefix(\"pr/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Banana3021"},"content":"    public static final Prefix PREFIX_INFO \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Banana3021"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"    public static final Prefix PREFIX_COMMAND \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yin72257":1,"-":15,"Banana3021":3}},{"path":"src/main/java/seedu/address/logic/parser/CountdownCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import static seedu.address.logic.commands.CountdownCommand.MESSAGE_DATE_USAGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.logic.commands.CountdownCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"public class CountdownCommandParser implements Parser\u003cCountdownCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"    public CountdownCommand parse(String arg) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"        String trimmedArg \u003d arg.trim();","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"        if (trimmedArg.isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"            return new CountdownCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"        } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"            boolean isNotValidDate \u003d !StringUtil.isValidDate(trimmedArg);","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"            if (isNotValidDate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"                throw new ParseException(MESSAGE_DATE_USAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"            LocalDate dateSetByUser \u003d LocalDate.parse(trimmedArg);","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"            return new CountdownCommand(dateSetByUser);","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"DesmondTo":30}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"Linda124"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Linda124"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"Linda124"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"Linda124"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Linda124"},"content":"import seedu.address.model.person.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"Linda124"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Linda124"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"Linda124"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"Linda124"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_EMPTY_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"Linda124"},"content":"        if (StringUtil.isName(args)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Linda124"},"content":"            return parseByName(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Linda124"},"content":"        } else if (StringUtil.isTag(args)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Linda124"},"content":"            return parseByTag(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Linda124"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Linda124"},"content":"            return parseByIndex(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Linda124"},"content":"    private DeleteCommand parseByTag(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Linda124"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Linda124"},"content":"            String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Linda124"},"content":"            if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Linda124"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Linda124"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_TAG_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Linda124"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Linda124"},"content":"            String[] tags \u003d trimmedArgs.replaceAll(\" \", \"\").split(PREFIX_TAG.toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"Linda124"},"content":"            if (tags.length \u003c 2) {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Linda124"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Linda124"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_TAG_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Linda124"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Linda124"},"content":"            String tagUsed \u003d tags[1];","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Linda124"},"content":"            String[] tagKeywords \u003d tagUsed.trim().split(\"\\\\s+\");","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Linda124"},"content":"            return new DeleteCommand(new TagContainsKeywordsPredicate(Arrays.asList(tagKeywords)), tagUsed);","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Linda124"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Linda124"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Linda124"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_TAG_USAGE), pe);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"Linda124"},"content":"    private DeleteCommand parseByIndex(String args) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"Linda124"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_INDEX_USAGE), pe);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"Linda124"},"content":"    private DeleteCommand parseByName(String args) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"Linda124"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"Linda124"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"Linda124"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"Linda124"},"content":"            return new DeleteCommand(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"Linda124"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"Linda124"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"Linda124"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_NAME_USAGE), pe);","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Linda124":55,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFO;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Linda124"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Linda124"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"Linda124"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"Linda124"},"content":"                        PREFIX_TAG, PREFIX_PRICE, PREFIX_INFO, PREFIX_STATUS);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"Linda124"},"content":"        if (argMultimap.getValue(PREFIX_PRICE).isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"Linda124"},"content":"            editPersonDescriptor.setPrice(ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"Linda124"},"content":"        if (argMultimap.getValue(PREFIX_INFO).isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"Linda124"},"content":"            editPersonDescriptor.setInfo(ParserUtil.parseImportantInfo(argMultimap.getValue(PREFIX_INFO).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Linda124"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Linda124"},"content":"            editPersonDescriptor.setStatus(ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Linda124"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Linda124":16,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.Price;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.predicates.PriceEqualsNumberPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.predicates.PriceGreaterThanNumberPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.predicates.PriceLessThanNumberPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.predicates.TruePredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"    private static final String OPERATOR_VALIDATION_REGEX \u003d \"^(\u003c\u003d|\u003e\u003d|\u003c|\u003e|\u003d)\";","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"    private static final Pattern OPERATOR_VALIDATION_PATTERN \u003d Pattern.compile(OPERATOR_VALIDATION_REGEX + \"(.*)\");","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"yin72257"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"yin72257"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG, PREFIX_PRICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"yin72257"},"content":"        Predicate\u003cPerson\u003e predicate \u003d new TruePredicate();","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"yin72257"},"content":"        String parameterMessage \u003d \"\";","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"yin72257"},"content":"        if (!argMultimap.getPreamble().isBlank()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"yin72257"},"content":"            String[] nameKeywords \u003d argMultimap.getPreamble().split(\"\\\\s+\");","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"yin72257"},"content":"            predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords));","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"yin72257"},"content":"            parameterMessage +\u003d \"name is in \" + Arrays.toString(nameKeywords) + \" \";","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"yin72257"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"yin72257"},"content":"            List\u003cString\u003e tagList \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"yin72257"},"content":"            if (tagList.size() \u003c 1 || tagList.get(0).trim().equals(\"\")) {","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"yin72257"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"yin72257"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"yin72257"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"yin72257"},"content":"            predicate \u003d predicate.and(new TagContainsKeywordsPredicate(tagList));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"yin72257"},"content":"            parameterMessage +\u003d \"tag is in \" + tagList + \" \";","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"yin72257"},"content":"        if (argMultimap.getValue(PREFIX_PRICE).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"yin72257"},"content":"            List\u003cString\u003e priceList \u003d argMultimap.getAllValues(PREFIX_PRICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"yin72257"},"content":"            if (priceList.size() !\u003d 1 || !isValidPrice(priceList.get(0))) {","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"yin72257"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"yin72257"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.PRICE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"yin72257"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"yin72257"},"content":"            String priceParam \u003d priceList.get(0);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"yin72257"},"content":"            Matcher m \u003d OPERATOR_VALIDATION_PATTERN.matcher(priceParam);","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"yin72257"},"content":"            if (m.matches()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"yin72257"},"content":"                String operator \u003d m.group(1);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"yin72257"},"content":"                Price price \u003d new Price(priceParam.split(OPERATOR_VALIDATION_REGEX)[1]);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"yin72257"},"content":"                predicate \u003d predicate.and(parsePricePredicate(operator, price));","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"yin72257"},"content":"                parameterMessage +\u003d \"price is \" + priceParam;","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"yin72257"},"content":"            } else {","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"yin72257"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"yin72257"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.PRICE_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"yin72257"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"yin72257"},"content":"        return new FindCommand(predicate, parameterMessage);","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"yin72257"},"content":"    private Predicate\u003cPerson\u003e parsePricePredicate(String operator, Price price) {","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"yin72257"},"content":"        Predicate\u003cPerson\u003e pricePredicate \u003d new TruePredicate().negate();","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"yin72257"},"content":"        for (char c : operator.toCharArray()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"yin72257"},"content":"            switch (c) {","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"yin72257"},"content":"            case (\u0027\u003e\u0027):","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"yin72257"},"content":"                pricePredicate \u003d pricePredicate.or(new PriceGreaterThanNumberPredicate(price));","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"yin72257"},"content":"                break;","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"yin72257"},"content":"            case (\u0027\u003c\u0027):","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"yin72257"},"content":"                pricePredicate \u003d pricePredicate.or(new PriceLessThanNumberPredicate(price));","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"yin72257"},"content":"                break;","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"yin72257"},"content":"            case (\u0027\u003d\u0027):","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"yin72257"},"content":"                pricePredicate \u003d pricePredicate.or(new PriceEqualsNumberPredicate(price));","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"yin72257"},"content":"                break;","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"yin72257"},"content":"            default:","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"yin72257"},"content":"                break;","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"yin72257"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"yin72257"},"content":"        return pricePredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"yin72257"},"content":"    private boolean isValidPrice(String input) {","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"yin72257"},"content":"        boolean validOperator \u003d input.matches(OPERATOR_VALIDATION_REGEX + \"(.*)\");","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"yin72257"},"content":"        return validOperator \u0026\u0026 Price.isValidPrice(input.split(OPERATOR_VALIDATION_REGEX)[1]);","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"yin72257":75,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/GroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":"public class GroupCommandParser implements Parser\u003cGroupCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"     * Parses the given {@code String} of arguments in the context of the GroupCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"     * and returns a GroupCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"sj1999-BIT"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":"    public GroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"sj1999-BIT"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"sj1999-BIT"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"sj1999-BIT"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"sj1999-BIT"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG, PREFIX_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"        String nameKeywords \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"sj1999-BIT"},"content":"        String tag \u003d argMultimap.getValue(PREFIX_TAG).get();","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"        if (nameKeywords.equals(\"\") \u0026\u0026 tag.equals(\"\")) {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_ERROR_TAG","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"                            + \"\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"sj1999-BIT"},"content":"                            + GroupCommand.MESSAGE_ERROR_NAMES));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"sj1999-BIT"},"content":"        if (tag.equals(\"\")) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"sj1999-BIT"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"sj1999-BIT"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_ERROR_TAG));","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"sj1999-BIT"},"content":"        if (nameKeywords.equals(\"\")) {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"sj1999-BIT"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"sj1999-BIT"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_ERROR_NAMES));","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"sj1999-BIT"},"content":"        return new GroupCommand(tag, nameKeywords);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"sj1999-BIT":50}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Info;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Price;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"Banana3021"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"Banana3021"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"Banana3021"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"Banana3021"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"Banana3021"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"Banana3021"},"content":"    public static Price parsePrice(String price) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"Banana3021"},"content":"        requireNonNull(price);","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"Banana3021"},"content":"        String trimmedPrice \u003d price.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"Banana3021"},"content":"        if (!Price.isValidPrice(trimmedPrice)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"Banana3021"},"content":"            throw new ParseException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"Banana3021"},"content":"        return new Price(trimmedPrice);","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"Banana3021"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"Banana3021"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"Banana3021"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"Banana3021"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"Banana3021"},"content":"    public static Info parseImportantInfo(String info) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"Banana3021"},"content":"        requireNonNull(info);","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"Banana3021"},"content":"        String trimmedInfo \u003d info.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"Banana3021"},"content":"        if (!Info.isValidInfo(trimmedInfo)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"Banana3021"},"content":"            throw new ParseException(Info.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"Banana3021"},"content":"        return new Info(trimmedInfo);","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"Banana3021"},"content":"     * Parses a {@code String Status} into an {@code Status}.","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"Banana3021"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"Banana3021"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"Banana3021"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"Banana3021"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"Banana3021"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"Banana3021"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"Banana3021"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"Banana3021"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"Banana3021"},"content":"        return new Status(trimmedStatus);","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":124,"Banana3021":49}},{"path":"src/main/java/seedu/address/logic/parser/PriceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import static seedu.address.logic.commands.PriceCommand.MESSAGE_ARGUMENT_USAGE;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import static seedu.address.logic.commands.PriceCommand.MESSAGE_TAG_USAGE;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.logic.commands.PriceCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":" * Parses input arguments and creates a new PriceCommand object","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"public class PriceCommandParser implements Parser\u003cPriceCommand\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"     * Parses the given {@code String} of arguments in the context of the PriceCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"     * and returns a PriceCommand object for execution.","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    public PriceCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"            return new PriceCommand();","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"        boolean isNotTag \u003d !StringUtil.isTag(args);","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"        if (isNotTag) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"            throw new ParseException(MESSAGE_ARGUMENT_USAGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"        List\u003cString\u003e tagNameList \u003d getTagNames(args);","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"        return new PriceCommand(tagNameList);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"    private List\u003cString\u003e getTagNames(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        String tagNames \u003d argMultimap.getValue(PREFIX_TAG).get();","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"        String trimmedTag \u003d tagNames.trim();","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"        if (trimmedTag.isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"            throw new ParseException(MESSAGE_TAG_USAGE);","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"        return Arrays.asList(tagNames.split(\" \"));","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"DesmondTo":50}},{"path":"src/main/java/seedu/address/logic/parser/RemoveShortcutCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import seedu.address.logic.commands.RemoveShortcutCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":" * Parses input arguments and creates a new ShortcutCommand object","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"public class RemoveShortcutCommandParser implements Parser\u003cRemoveShortcutCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"    public RemoveShortcutCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"        return new RemoveShortcutCommand(userInput.trim());","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"yin72257":15}},{"path":"src/main/java/seedu/address/logic/parser/ShortcutCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import seedu.address.logic.commands.ShortcutCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":" * Parses input arguments and creates a new ShortcutCommand object","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"public class ShortcutCommandParser implements Parser\u003cShortcutCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"    public ShortcutCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"        return new ShortcutCommand(userInput.trim());","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"yin72257":15}},{"path":"src/main/java/seedu/address/logic/parser/TagInfoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.logic.commands.TagInfoCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":" * Parses input arguments and creates a new TagInfoCommand object","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"public class TagInfoCommandParser implements Parser\u003cTagInfoCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"     * Parses the given {@code String} of arguments in the context of the TagInfoCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"     * and returns an TagInfoCommand object for execution.","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"sj1999-BIT"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"    public TagInfoCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"        if (userInput.trim().equals(\"list\")) {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"sj1999-BIT"},"content":"            return new TagInfoCommand(userInput);","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"sj1999-BIT"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"sj1999-BIT"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"sj1999-BIT"},"content":"                    ArgumentTokenizer.tokenize(userInput, PREFIX_TAG);","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"sj1999-BIT"},"content":"            if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"sj1999-BIT"},"content":"                try {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"                    return new TagInfoCommand(argMultimap.getValue(PREFIX_TAG).get().split(\", \"));","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"sj1999-BIT"},"content":"                } catch (CommandException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"sj1999-BIT"},"content":"                    throw new ParseException(e.getMessage());","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"                }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"                throw new ParseException(TagInfoCommand.MESSAGE_NO_INPUT);","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"sj1999-BIT":37}},{"path":"src/main/java/seedu/address/logic/parser/UndoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Banana3021"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Banana3021"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Banana3021"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Banana3021"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Banana3021"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Banana3021"},"content":" * Parses input arguments and creates a new UndoCommand object","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Banana3021"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Banana3021"},"content":"public class UndoCommandParser implements Parser\u003cUndoCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Banana3021"},"content":"     * Parses the given {@code String} of arguments in the context of the UndoCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Banana3021"},"content":"     * and returns an UndoCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Banana3021"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Banana3021"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Banana3021"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Banana3021"},"content":"    public UndoCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Banana3021"},"content":"        if (userInput.equals(\"undo\")) {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Banana3021"},"content":"            return new UndoCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Banana3021"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Banana3021"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Banana3021"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Banana3021"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Banana3021":32}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"sj1999-BIT"},"content":"     * Returns the current size of the internalList in the UniquePersonList variable","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"sj1999-BIT"},"content":"     * persons","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"sj1999-BIT"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"sj1999-BIT"},"content":"     * @return Integer for size of the list","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"sj1999-BIT"},"content":"    public int getPersonsSize() {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"sj1999-BIT"},"content":"        return persons.size();","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sj1999-BIT":10,"-":121}},{"path":"src/main/java/seedu/address/model/Countdown.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":" * Represents a Countdown of the wedding day.","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":" * Guarantees: details are present and not null.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"public class Countdown implements ReadOnlyCountdown {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    // Date fields","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"    private LocalDate weddingDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    public Countdown() {}","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"     * Creates a Countdown using the LocalDate in the {@code toBeCopied}","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    public Countdown(ReadOnlyCountdown toBeCopied) {","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"        this();","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"     * Resets the existing data of this {@code Countdown} with {@code newData}.","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"    public void resetData(ReadOnlyCountdown newData) {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"        setDate(newData.getDate());","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     * Replaces the contents of the date with {@code weddingDate}.","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"    public void setDate(LocalDate weddingDate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"        this.weddingDate \u003d weddingDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"     * Returns an unmodifiable view of the wedding date.","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"        return weddingDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"DesmondTo":49}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.Hashtable;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"     * Returns the user prefs\u0027 countdown file path.","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"    Path getCountdownFilePath();","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"yin72257"},"content":"     * Returns the user prefs\u0027 shortcut file path.","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"yin72257"},"content":"    Path getShortcutFilePath();","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"     * Sets the user prefs\u0027 countdown file path.","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"    void setCountdownFilePath(Path countdownFilePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"yin72257"},"content":"     * Sets the user prefs\u0027 shortcut file path","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"yin72257"},"content":"    void setShortcutFilePath(Path shortcuteFilePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"     * Replaces countdown data with the data in {@code countdown}.","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"    void setCountdown(ReadOnlyCountdown countdown);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"yin72257"},"content":"     * Replaces shortcut data with the data in {@code shortcut}.","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"yin72257"},"content":"    void setShortcut(ReadOnlyShortcut shortcut);","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"    /** Returns the Countdown */","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"DesmondTo"},"content":"    ReadOnlyCountdown getCountdown();","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"yin72257"},"content":"    /** Returns the Shortcut */","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"yin72257"},"content":"    ReadOnlyShortcut getShortcut();","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"yin72257"},"content":"    /** Adds a shortcut */","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"yin72257"},"content":"    void addShortcut(String keyword, String commandString);","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"yin72257"},"content":"    /** Removes a shortcut */","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"yin72257"},"content":"    String removeShortcut(String keyword);","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"yin72257"},"content":"    /** Get shortcut from Key */","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"yin72257"},"content":"    String getShortcutFromKey(String keyword);","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"yin72257"},"content":"    /** Lists all shortcuts */","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"yin72257"},"content":"    String listShortcut();","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"sj1999-BIT"},"content":"     * Returns the size of the address book","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"sj1999-BIT"},"content":"    int size();","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"sj1999-BIT"},"content":"     * Returns true if a person with the same name as {@code name} exists in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"sj1999-BIT"},"content":"    boolean hasPersonName(String name);","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":141,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"DesmondTo"},"content":"     * Replaces the contents of the date with {@code weddingDate}.","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"DesmondTo"},"content":"    void setDate(LocalDate newDate);","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"sj1999-BIT"},"content":"     * Returns a HashSet of the unique Tags in the model, with the number of contacts labelled with","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"sj1999-BIT"},"content":"     * each respective tags as the value.","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"sj1999-BIT"},"content":"    Hashtable\u003cTag, Integer\u003e getUniqueTagTable();","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"sj1999-BIT"},"content":"     * Returns an observable list of the unique Tags in the model","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"sj1999-BIT"},"content":"    ObservableList\u003cTag\u003e getUniqueTagList();","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sj1999-BIT":24,"DesmondTo":24,"yin72257":30,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.Hashtable;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"    private final Countdown countdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"    private final Shortcut shortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     * Initializes a ModelManager with the given addressBook, countdown and userPrefs.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyCountdown countdown,","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"yin72257"},"content":"                        ReadOnlyUserPrefs userPrefs, ReadOnlyShortcut shortcut) {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"        requireAllNonNull(addressBook, countdown, userPrefs);","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \", countdown: \" + countdown","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"        this.countdown \u003d new Countdown(countdown);","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"yin72257"},"content":"        this.shortcut \u003d new Shortcut(shortcut);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"yin72257"},"content":"        this(new AddressBook(), new Countdown(), new UserPrefs(), new Shortcut());","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"DesmondTo"},"content":"    public Path getCountdownFilePath() {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"DesmondTo"},"content":"        return userPrefs.getCountdownFilePath();","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"yin72257"},"content":"    public Path getShortcutFilePath() {","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"yin72257"},"content":"        return userPrefs.getShortcutFilePath();","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"DesmondTo"},"content":"    public void setCountdownFilePath(Path countdownFilePath) {","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"DesmondTo"},"content":"        requireNonNull(countdownFilePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"DesmondTo"},"content":"        userPrefs.setCountdownFilePath(countdownFilePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"yin72257"},"content":"    public void setShortcutFilePath(Path shortcutFilePath) {","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"yin72257"},"content":"        requireNonNull(shortcutFilePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"yin72257"},"content":"        userPrefs.setShortcutFilePath(shortcutFilePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"sj1999-BIT"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"sj1999-BIT"},"content":"    public int size() {","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"sj1999-BIT"},"content":"        return addressBook.getPersonsSize();","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"sj1999-BIT"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"sj1999-BIT"},"content":"    public boolean hasPersonName(String name) {","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"sj1999-BIT"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"sj1999-BIT"},"content":"        return addressBook.hasPerson(Person.createTempFakePerson(name));","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":160,"author":{"gitId":"sj1999-BIT"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"sj1999-BIT"},"content":"    public ObservableList\u003cTag\u003e getUniqueTagList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"sj1999-BIT"},"content":"        ObservableList\u003cPerson\u003e contactList \u003d this.addressBook.getPersonList();","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"sj1999-BIT"},"content":"        ArrayList\u003cTag\u003e tagList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"sj1999-BIT"},"content":"        for (Person contact : contactList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"sj1999-BIT"},"content":"            Set\u003cTag\u003e curContactTagSet \u003d contact.getTags();","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"sj1999-BIT"},"content":"            for (Tag tag : curContactTagSet) {","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"sj1999-BIT"},"content":"                if (!tagList.contains(tag)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"sj1999-BIT"},"content":"                    tagList.add(tag);","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"sj1999-BIT"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"sj1999-BIT"},"content":"        return FXCollections.observableList(tagList);","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"sj1999-BIT"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"sj1999-BIT"},"content":"    public Hashtable\u003cTag, Integer\u003e getUniqueTagTable() {","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"sj1999-BIT"},"content":"        ObservableList\u003cPerson\u003e contactList \u003d this.addressBook.getPersonList();","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"sj1999-BIT"},"content":"        Hashtable\u003cTag, Integer\u003e uniqueTagSet \u003d new Hashtable\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"sj1999-BIT"},"content":"        for (Person contact : contactList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"sj1999-BIT"},"content":"            Set\u003cTag\u003e curContactTagSet \u003d contact.getTags();","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"sj1999-BIT"},"content":"            for (Tag tag : curContactTagSet) {","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"sj1999-BIT"},"content":"                if (uniqueTagSet.containsKey(tag)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"sj1999-BIT"},"content":"                    uniqueTagSet.merge(tag, 1, Integer::sum);","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"sj1999-BIT"},"content":"                } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"sj1999-BIT"},"content":"                    uniqueTagSet.put(tag, 1);","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"sj1999-BIT"},"content":"                }","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"sj1999-BIT"},"content":"        return uniqueTagSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"DesmondTo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Countdown \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":231,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":232,"author":{"gitId":"DesmondTo"},"content":"    public void setCountdown(ReadOnlyCountdown countdown) {","lastModifiedDate":"2021-10-10"},{"lineNumber":233,"author":{"gitId":"DesmondTo"},"content":"        this.countdown.resetData(countdown);","lastModifiedDate":"2021-10-10"},{"lineNumber":234,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":235,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":236,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":237,"author":{"gitId":"DesmondTo"},"content":"    public ReadOnlyCountdown getCountdown() {","lastModifiedDate":"2021-10-10"},{"lineNumber":238,"author":{"gitId":"DesmondTo"},"content":"        return countdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":239,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":240,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":241,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":242,"author":{"gitId":"DesmondTo"},"content":"    public void setDate(LocalDate newDate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":243,"author":{"gitId":"DesmondTo"},"content":"        requireAllNonNull(newDate);","lastModifiedDate":"2021-10-10"},{"lineNumber":244,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":245,"author":{"gitId":"DesmondTo"},"content":"        countdown.setDate(newDate);","lastModifiedDate":"2021-10-10"},{"lineNumber":246,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":247,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":248,"author":{"gitId":"yin72257"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Shortcut \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"yin72257"},"content":"    public void setShortcut(ReadOnlyShortcut shortcut) {","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"yin72257"},"content":"        this.shortcut.resetData(shortcut);","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"yin72257"},"content":"    public ReadOnlyShortcut getShortcut() {","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"yin72257"},"content":"        return shortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":257,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":260,"author":{"gitId":"yin72257"},"content":"    public String removeShortcut(String keyword) {","lastModifiedDate":"2021-10-26"},{"lineNumber":261,"author":{"gitId":"yin72257"},"content":"        return shortcut.removeShortcut(keyword);","lastModifiedDate":"2021-10-26"},{"lineNumber":262,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":263,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":264,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"yin72257"},"content":"    public void addShortcut(String keyword, String commandString) {","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"yin72257"},"content":"        shortcut.addShortcut(keyword, commandString);","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":269,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":270,"author":{"gitId":"yin72257"},"content":"    public String getShortcutFromKey(String keyword) {","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"yin72257"},"content":"        return shortcut.getCommandFromKey(keyword);","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":274,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":275,"author":{"gitId":"yin72257"},"content":"    public String listShortcut() {","lastModifiedDate":"2021-10-26"},{"lineNumber":276,"author":{"gitId":"yin72257"},"content":"        return shortcut.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":277,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":278,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sj1999-BIT":48,"DesmondTo":37,"yin72257":48,"-":146}},{"path":"src/main/java/seedu/address/model/ReadOnlyCountdown.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"public interface ReadOnlyCountdown {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"     * Returns an unmodifiable view of the wedding date.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    LocalDate getDate();","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"DesmondTo":14}},{"path":"src/main/java/seedu/address/model/ReadOnlyShortcut.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":" * Unmodifiable view of a shortcut","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"public interface ReadOnlyShortcut {","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"     * Returns an unmodifiable view of the shortcut map","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"    HashMap\u003cString, String\u003e getShortcutMap();","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"yin72257":14}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    Path getCountdownFilePath();","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"    Path getShortcutFilePath();","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"DesmondTo":2,"yin72257":2,"-":16}},{"path":"src/main/java/seedu/address/model/ReportElement.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Linda124"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Linda124"},"content":" * Represents an element within the report arraylist.","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Linda124"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"public class ReportElement {","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"    private String currentTag;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"    private int confirmedCount \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Linda124"},"content":"    private int pendingCount \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Linda124"},"content":"    private int declinedCount \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Linda124"},"content":"     * Creates a report element with tag and status count.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Linda124"},"content":"    public ReportElement(String currentTag, int confirmedCount, int pendingCount, int declinedCount) {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Linda124"},"content":"        this.currentTag \u003d currentTag;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Linda124"},"content":"        this.confirmedCount \u003d confirmedCount;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Linda124"},"content":"        this.pendingCount \u003d pendingCount;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Linda124"},"content":"        this.declinedCount \u003d declinedCount;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Linda124"},"content":"     * Returns true if tags have the identical names.","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Linda124"},"content":"    public boolean hasSameTag(String tag) {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Linda124"},"content":"        return currentTag.equals(tag);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Linda124"},"content":"     * Increases confirmed count based on status.","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Linda124"},"content":"    public void incrementConfirmed() {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Linda124"},"content":"        confirmedCount++;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"Linda124"},"content":"     * Increases pending count based on status.","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"Linda124"},"content":"    public void incrementPending() {","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"Linda124"},"content":"        pendingCount++;","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"Linda124"},"content":"     * Increases declined count based on status.","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"Linda124"},"content":"    public void incrementDeclined() {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Linda124"},"content":"        declinedCount++;","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Linda124"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Linda124"},"content":"    public String toString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Linda124"},"content":"        return currentTag + \": \"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"Linda124"},"content":"                + confirmedCount + \" confirmed, \"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"Linda124"},"content":"                + pendingCount + \" pending, \"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Linda124"},"content":"                + declinedCount + \" declined\";","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Linda124"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Linda124"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"Linda124"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Linda124"},"content":"                || (other instanceof ReportElement // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Linda124"},"content":"                \u0026\u0026 this.equals(((ReportElement) other))); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Linda124"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Linda124"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Linda124"},"content":"        return this.hashCode();","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"Linda124"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Linda124":70}},{"path":"src/main/java/seedu/address/model/Shortcut.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":" * Represents shortcuts stored by the user","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"public class Shortcut implements ReadOnlyShortcut {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"    private HashMap\u003cString, String\u003e shortcutMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"    public Shortcut() {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"        shortcutMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"     * Creates a Shortcut using the data in the {@code toBeCopied}","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"    public Shortcut(ReadOnlyShortcut toBeCopied) {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"        this();","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"     * Resets the existing data of this {@code Shortcut} with {@code newData}.","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"    public void resetData(ReadOnlyShortcut newData) {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"        setShortcutMap(newData.getShortcutMap());","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"     * Replaces the contents of the shortcut map with {@code shorcutMap}.","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"yin72257"},"content":"    public void setShortcutMap(HashMap\u003cString, String\u003e shortcutMap) {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"yin72257"},"content":"        this.shortcutMap \u003d shortcutMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"yin72257"},"content":"     * Adds a shortcut to the shortcut map with a {@code keyword} and {@code commandString} key-pair value.","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"yin72257"},"content":"     * @param keyword Key to call a command","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"yin72257"},"content":"     * @param commandString Command to be called","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"yin72257"},"content":"    public void addShortcut(String keyword, String commandString) {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"yin72257"},"content":"        shortcutMap.put(keyword, commandString);","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"yin72257"},"content":"     * Fetches the command by a key.","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"yin72257"},"content":"     * @param keyword Key to call a command","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"yin72257"},"content":"     * @return Command to be called","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"yin72257"},"content":"    public String getCommandFromKey(String keyword) {","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"yin72257"},"content":"        return shortcutMap.get(keyword);","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"yin72257"},"content":"    public String removeShortcut(String keyword) {","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"yin72257"},"content":"        return shortcutMap.remove(keyword);","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"yin72257"},"content":"     * Returns an unmodifiable view of the shortcut map.","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"yin72257"},"content":"    public HashMap\u003cString, String\u003e getShortcutMap() {","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"yin72257"},"content":"        return shortcutMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"yin72257"},"content":"    public String toString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"yin72257"},"content":"        String output \u003d \"Here are the shortcuts you have: \\n\";","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"yin72257"},"content":"        for (Map.Entry\u003cString, String\u003e entry : shortcutMap.entrySet()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"yin72257"},"content":"            String key \u003d entry.getKey();","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"yin72257"},"content":"            String value \u003d entry.getValue();","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"yin72257"},"content":"            output +\u003d \"KEY \" + key + \" - COMMAND \" + value + \"\\n\";","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"yin72257"},"content":"        return output;","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"yin72257":85}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    private Path countdownFilePath \u003d Paths.get(\"data\" , \"countdown.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"    private Path shortcutFilePath \u003d Paths.get(\"data\", \"shortcut.json\");","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"        setCountdownFilePath(newUserPrefs.getCountdownFilePath());","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"    public Path getCountdownFilePath() {","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"        return countdownFilePath;","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"yin72257"},"content":"    public Path getShortcutFilePath() {","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"yin72257"},"content":"        return shortcutFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"    public void setCountdownFilePath(Path countdownFilePath) {","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"        requireNonNull(countdownFilePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"        this.countdownFilePath \u003d countdownFilePath;","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"yin72257"},"content":"    public void setShortcutFilePath(Path shortcutFilePath) {","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"yin72257"},"content":"        requireNonNull(shortcutFilePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"yin72257"},"content":"        this.shortcutFilePath \u003d shortcutFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DesmondTo":11,"yin72257":10,"-":87}},{"path":"src/main/java/seedu/address/model/person/Info.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Banana3021"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Banana3021"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Banana3021"},"content":"public class Info {","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Banana3021"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Banana3021"},"content":"            \"Important information should only contain alphanumeric \"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Banana3021"},"content":"                    + \"characters with spaces\";","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Banana3021"},"content":"    /*","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Banana3021"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Banana3021"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Banana3021"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Banana3021"},"content":"    public final String value;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Banana3021"},"content":"     * Constructs a {@code Info}.","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Banana3021"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Banana3021"},"content":"     * @param info valid information.","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Banana3021"},"content":"    public Info(String info) {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Banana3021"},"content":"        requireNonNull(info);","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Banana3021"},"content":"        checkArgument(isValidInfo(info), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Banana3021"},"content":"        value \u003d info;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Banana3021"},"content":"     * Returns true if a given string has valid information.","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Banana3021"},"content":"    public static boolean isValidInfo(String test) {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Banana3021"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Banana3021"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Banana3021"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Banana3021"},"content":"        return value;","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Banana3021"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Banana3021"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Banana3021"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Banana3021"},"content":"                || (other instanceof Info // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Banana3021"},"content":"                \u0026\u0026 value.equals(((Info) other).value)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Banana3021"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Banana3021"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Banana3021"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Banana3021"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Banana3021":58}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"                \u0026\u0026 fullName.equalsIgnoreCase((((Name) other).fullName))); // state check","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DesmondTo":1,"-":58}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"Banana3021"},"content":"    private final Price price;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Banana3021"},"content":"    private final Info info;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Banana3021"},"content":"    private final Status status;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Banana3021"},"content":"    public Person(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Banana3021"},"content":"                  Price price, Info info, Status status, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Banana3021"},"content":"        requireAllNonNull(name, phone, email, address, price, info, status, tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"Banana3021"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Banana3021"},"content":"        this.info \u003d info;","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Banana3021"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"sj1999-BIT"},"content":"     * Creates a Person with only a name string.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"sj1999-BIT"},"content":"     * Not supposed to be used by external users.","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"sj1999-BIT"},"content":"    private Person(String inputName) {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"sj1999-BIT"},"content":"        name \u003d new Name(inputName);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"sj1999-BIT"},"content":"        phone \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"sj1999-BIT"},"content":"        email \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"sj1999-BIT"},"content":"        address \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"sj1999-BIT"},"content":"        this.price \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"sj1999-BIT"},"content":"        this.info \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Banana3021"},"content":"        this.status \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"sj1999-BIT"},"content":"     * Creates a Person with only a name string.","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"sj1999-BIT"},"content":"     * Not supposed to be used by external users.","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"sj1999-BIT"},"content":"     * @param inputName","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"sj1999-BIT"},"content":"     * @return invalid Person object","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"sj1999-BIT"},"content":"    public static Person createTempFakePerson(String inputName) {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"sj1999-BIT"},"content":"        return new Person(inputName);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":87,"author":{"gitId":"Banana3021"},"content":"    public Price getPrice() {","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"Banana3021"},"content":"        return price;","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"Banana3021"},"content":"    public Info getInfo() {","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"Banana3021"},"content":"        return info;","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"Banana3021"},"content":"    public Status getStatus() {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Banana3021"},"content":"        return status;","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"DesmondTo"},"content":"     * Returns true if this person\u0027s status is same as {@code anotherStatus}","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"DesmondTo"},"content":"    public boolean hasSameStatus(Status anotherStatus) {","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"DesmondTo"},"content":"        return status.equals(anotherStatus);","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"Banana3021"},"content":"                \u0026\u0026 otherPerson.getPrice().equals(getPrice())","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"Banana3021"},"content":"                \u0026\u0026 otherPerson.getInfo().equals(getInfo())","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"Banana3021"},"content":"                \u0026\u0026 otherPerson.getStatus().equals(getStatus())","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"Banana3021"},"content":"        return Objects.hash(name, phone, email, address, price, info, status, tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":167,"author":{"gitId":"Banana3021"},"content":"                .append(getAddress())","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"Banana3021"},"content":"                .append(\"; Price: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"Banana3021"},"content":"                .append(getPrice())","lastModifiedDate":"2021-10-05"},{"lineNumber":170,"author":{"gitId":"Banana3021"},"content":"                .append(\"; Info: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":171,"author":{"gitId":"Banana3021"},"content":"                .append(getInfo())","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"Banana3021"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"Banana3021"},"content":"                .append(getStatus());","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sj1999-BIT":23,"DesmondTo":7,"-":119,"Banana3021":34}},{"path":"src/main/java/seedu/address/model/person/Price.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Banana3021"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Banana3021"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Banana3021"},"content":"public class Price {","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Banana3021"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Banana3021"},"content":"            \"Prices should be given to 2 decimal places\"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Banana3021"},"content":"                    + \"and be numerical inputs only.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Banana3021"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,}\" + \".\" + \"\\\\d{2}\";","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Banana3021"},"content":"    public final String value;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Banana3021"},"content":"     * Constructs an {@code Price}.","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Banana3021"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Banana3021"},"content":"     * @param price A valid price.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Banana3021"},"content":"    public Price(String price) {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Banana3021"},"content":"        requireNonNull(price);","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Banana3021"},"content":"        checkArgument(isValidPrice(price), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Banana3021"},"content":"        value \u003d price;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Banana3021"},"content":"     * Returns true if a given string has a valid price.","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Banana3021"},"content":"    public static boolean isValidPrice(String test) {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Banana3021"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"     * Returns true if current price is greater than parameter price","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"     * @param price Other price to be compared","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"yin72257"},"content":"     * @return Whether current price is greater than other price","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"yin72257"},"content":"    public boolean greaterThan(Price price) {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"yin72257"},"content":"        double currentPrice \u003d Double.parseDouble(value);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"yin72257"},"content":"        double otherPrice \u003d Double.parseDouble(price.value);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"yin72257"},"content":"        return currentPrice \u003e otherPrice;","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    public double toDouble() {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"        return Double.parseDouble(value);","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Banana3021"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Banana3021"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Banana3021"},"content":"        return value;","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Banana3021"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Banana3021"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Banana3021"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Banana3021"},"content":"                || (other instanceof Price // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Banana3021"},"content":"                \u0026\u0026 value.equals(((Price) other).value)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"Banana3021"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"Banana3021"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"Banana3021"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"Banana3021"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"yin72257":11,"DesmondTo":4,"Banana3021":53}},{"path":"src/main/java/seedu/address/model/person/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Banana3021"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Banana3021"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Banana3021"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Banana3021"},"content":" * Represents a Person\u0027s status in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Banana3021"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Banana3021"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Banana3021"},"content":"public class Status {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Banana3021"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Banana3021"},"content":"            \"Status should only be Confirmed, Pending or Declined\"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Banana3021"},"content":"                    + \"(short-form is acceptable)\";","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Banana3021"},"content":"    public static final String VALIDATION_REGEX \u003d \"[Cc]onfirmed|[Pp]ending|[Dd]eclined|[Cc]|[Pp]|[Dd]\";","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Banana3021"},"content":"    public final String value;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Banana3021"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Banana3021"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Banana3021"},"content":"     * @param status A valid status.","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Banana3021"},"content":"    public Status(String status) {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Banana3021"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Banana3021"},"content":"        checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Banana3021"},"content":"        value \u003d status;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Banana3021"},"content":"     * Returns true if a given string is a valid status.","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Banana3021"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Banana3021"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Banana3021"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Banana3021"},"content":"    public String toString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Banana3021"},"content":"        return value;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Banana3021"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Banana3021"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Banana3021"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Banana3021"},"content":"                || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Banana3021"},"content":"                \u0026\u0026 value.equals(((Status) other).value)); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Banana3021"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Banana3021"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Banana3021"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Banana3021"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Banana3021":55}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"     * Returns the size of the internalList size","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"    public int size() {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"sj1999-BIT"},"content":"        return internalList.size();","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sj1999-BIT":6,"-":137}},{"path":"src/main/java/seedu/address/model/person/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"yin72257":2,"-":30}},{"path":"src/main/java/seedu/address/model/person/predicates/PriceEqualsNumberPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.Price;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":" * Tests that a {@code Person}\u0027s {@code Price} is equal to a certain price","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"public class PriceEqualsNumberPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"    private Price price;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"     * Creates new PriceEqualsNumberPredicate with price","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"     * @param price Price to be compared","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"    public PriceEqualsNumberPredicate(Price price) {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"        return person.getPrice().equals(price);","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"                || (other instanceof PriceEqualsNumberPredicate); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"yin72257":32}},{"path":"src/main/java/seedu/address/model/person/predicates/PriceGreaterThanNumberPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.Price;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":" * Tests that a {@code Person}\u0027s {@code Price} is greater than to a certain price","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"public class PriceGreaterThanNumberPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"    private Price price;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"     * Creates new PriceGreaterThanNumberPredicate with price","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"     * @param price Price to be compared","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"    public PriceGreaterThanNumberPredicate(Price price) {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"        return person.getPrice().greaterThan(price);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"                || (other instanceof PriceGreaterThanNumberPredicate); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"yin72257":33}},{"path":"src/main/java/seedu/address/model/person/predicates/PriceLessThanNumberPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.Price;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":" * Tests that a {@code Person}\u0027s {@code Price} is less than to a certain price","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"public class PriceLessThanNumberPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"    private Price price;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"     * Creates new PriceLessThanNumberPredicate with price","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"     * @param price Price to be compared","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"    public PriceLessThanNumberPredicate(Price price) {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"        return price.greaterThan(person.getPrice());","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"                || (other instanceof PriceLessThanNumberPredicate); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"yin72257":33}},{"path":"src/main/java/seedu/address/model/person/predicates/StatusEqualsConfirmedPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":" * Tests that a {@code Person}\u0027s {@code Status} is equal to confirmed status","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"public class StatusEqualsConfirmedPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    private Status status;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     * Creates new StatusEqualsConfirmedPredicate with confirmed status","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    public StatusEqualsConfirmedPredicate() {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"        this.status \u003d new Status(\"Confirmed\");","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"        return person.hasSameStatus(status);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"                || (other instanceof StatusEqualsConfirmedPredicate); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"DesmondTo":32}},{"path":"src/main/java/seedu/address/model/person/predicates/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":" * Tests that a {@code Person}\u0027s {@code Tag} matches any of the keywords given.","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"                        person.getTags().stream().anyMatch(tag -\u003e tag.equals(new Tag(keyword)))","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"                );","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"                || (other instanceof TagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"                \u0026\u0026 keywords.equals(((TagContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"yin72257":34}},{"path":"src/main/java/seedu/address/model/person/predicates/TruePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":" * Default predicate that always return true","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"public class TruePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"        return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"                || (other instanceof TruePredicate); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"yin72257":22}},{"path":"src/main/java/seedu/address/model/util/SampleCountdownUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package seedu.address.model.util;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.Countdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.ReadOnlyCountdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":" * Contains utility methods for populating {@code Countdown} with sample data.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"public class SampleCountdownUtil {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"    public static LocalDate getSampleDate() {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"        return LocalDate.now();","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    public static ReadOnlyCountdown getSampleCountdown() {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"        Countdown sampleCd \u003d new Countdown();","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"        sampleCd.setDate(getSampleDate());","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"        return sampleCd;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"DesmondTo":22}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Info;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Price;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"Banana3021"},"content":"                new Price(\"0.00\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Banana3021"},"content":"                new Info(\"none\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Banana3021"},"content":"                new Status(\"Pending\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"Banana3021"},"content":"                    new Price(\"0.00\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Banana3021"},"content":"                    new Info(\"can only contact after 3pm\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Banana3021"},"content":"                    new Status(\"Confirmed\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"Banana3021"},"content":"                    new Price(\"0.00\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Banana3021"},"content":"                    new Info(\"can only text on iMessage\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Banana3021"},"content":"                    new Status(\"Declined\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"Banana3021"},"content":"                    new Price(\"0.00\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Banana3021"},"content":"                    new Info(\"none\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Banana3021"},"content":"                    new Status(\"Confirmed\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"Banana3021"},"content":"                    new Price(\"0.00\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Banana3021"},"content":"                    new Info(\"can only call in the night\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Banana3021"},"content":"                    new Status(\"Pending\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"Banana3021"},"content":"                    new Price(\"0.00\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Banana3021"},"content":"                    new Info(\"can only call during the day\"),","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Banana3021"},"content":"                    new Status(\"Pending\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":60,"Banana3021":21}},{"path":"src/main/java/seedu/address/model/util/SampleShortcutUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.model.util;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.ReadOnlyShortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.Shortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":" * Contains utility methods for populating {@code Shortcut} with sample data.","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"public class SampleShortcutUtil {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"    public static ReadOnlyShortcut getSampleShortcut() {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"        return new Shortcut();","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yin72257":15}},{"path":"src/main/java/seedu/address/storage/CountdownStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.ReadOnlyCountdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":" * Represents a storage for {@link seedu.address.model.Countdown}.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"public interface CountdownStorage {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    Path getCountdownFilePath();","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"     * Returns Countdown data as a {@link ReadOnlyCountdown}.","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    Optional\u003cReadOnlyCountdown\u003e readCountdown() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"     * @see #getCountdownFilePath()","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    Optional\u003cReadOnlyCountdown\u003e readCountdown(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"     * Saves the given {@link ReadOnlyCountdown} to the storage.","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     * @param countdown cannot be null.","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"    void saveCountdown(ReadOnlyCountdown countdown) throws IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"     * @see #saveCountdown(ReadOnlyCountdown)","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"    void saveCountdown(ReadOnlyCountdown countdown, Path filePath) throws IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"DesmondTo":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import java.time.Month;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":" * Jackson-friendly version of {@link LocalDate}.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"class JsonAdaptedDate {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    private final int year;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"    private final Month month;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    private final int day;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a {@code JsonAdaptedDate} with the given date details.","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    public JsonAdaptedDate(@JsonProperty(\"year\") int year, @JsonProperty(\"month\") Month month,","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"                             @JsonProperty(\"day\") int day) {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"        this.year \u003d year;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"        this.month \u003d month;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"        this.day \u003d day;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"     * Converts a given {@code Date} into this class for Jackson use.","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    public JsonAdaptedDate(LocalDate source) {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"        requireNonNull(source);","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"        year \u003d source.getYear();","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"        month \u003d source.getMonth();","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"        day \u003d source.getDayOfMonth();","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"     * Converts this Jackson-friendly adapted date object into the model\u0027s {@code LocalDate} object.","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"    public LocalDate toModelType() {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        return LocalDate.of(year, month, day);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"DesmondTo":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Info;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Price;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Banana3021"},"content":"    private final String price;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Banana3021"},"content":"    private final String info;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Banana3021"},"content":"    private final String status;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"Banana3021"},"content":"                             @JsonProperty(\"price\") String price,","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Banana3021"},"content":"                             @JsonProperty(\"info\") String info,","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Banana3021"},"content":"                             @JsonProperty(\"status\") String status,","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"Banana3021"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Banana3021"},"content":"        this.info \u003d info;","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Banana3021"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"Banana3021"},"content":"        price \u003d source.getPrice().value;","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"Banana3021"},"content":"        info \u003d source.getInfo().value;","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"Banana3021"},"content":"        status \u003d source.getStatus().value;","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"Banana3021"},"content":"        if (price \u003d\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"Banana3021"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName()));","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"Banana3021"},"content":"        if (!Price.isValidPrice(price)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"Banana3021"},"content":"            throw new IllegalValueException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"Banana3021"},"content":"        final Price modelPrice \u003d new Price(price);","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"Banana3021"},"content":"        if (info \u003d\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"Banana3021"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Info.class.getSimpleName()));","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"Banana3021"},"content":"        if (!Info.isValidInfo(info)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"Banana3021"},"content":"            throw new IllegalValueException(Info.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"Banana3021"},"content":"        final Info modelInfo \u003d new Info(info);","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"Banana3021"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"Banana3021"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"Banana3021"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"Banana3021"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"Banana3021"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"Banana3021"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"Banana3021"},"content":"                modelPrice, modelInfo, modelStatus, modelTags);","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":108,"Banana3021":41}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedShortcut.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.Shortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":" * Jackson-friendly version of {@link Shortcut}.","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"class JsonAdaptedShortcut {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"    private final String keyword;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"    private final String commandString;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"     * Constructs a {@code JsonAdaptedShortcut} with the given {@code keyword} and {@code command}.","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"    public JsonAdaptedShortcut(@JsonProperty(\"keyword\") String keyword, @JsonProperty(\"command\") String commandString) {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"    public String getKeyword() {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"        return keyword;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"    public String getCommandString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"        return commandString;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yin72257":33}},{"path":"src/main/java/seedu/address/storage/JsonCountdownStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.ReadOnlyCountdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":" * A class to access Countdown data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"public class JsonCountdownStorage implements CountdownStorage {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonCountdownStorage.class);","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    private Path filePath;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    public JsonCountdownStorage(Path filePath) {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    public Path getCountdownFilePath() {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"        return filePath;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"    public Optional\u003cReadOnlyCountdown\u003e readCountdown() throws DataConversionException {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"        return readCountdown(filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"     * Similar to {@link #readCountdown()}.","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"    public Optional\u003cReadOnlyCountdown\u003e readCountdown(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"        Optional\u003cJsonSerializableCountdown\u003e jsonCountdown \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"                filePath, JsonSerializableCountdown.class);","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"        if (!jsonCountdown.isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"            return Optional.of(jsonCountdown.get().toModelType());","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"    public void saveCountdown(ReadOnlyCountdown countdown) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"        saveCountdown(countdown, filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"     * Similar to {@link #saveCountdown(ReadOnlyCountdown)}.","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"    public void saveCountdown(ReadOnlyCountdown countdown, Path filePath) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"        requireNonNull(countdown);","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableCountdown(countdown), filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"DesmondTo":80}},{"path":"src/main/java/seedu/address/storage/JsonSerializableCountdown.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.Countdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.ReadOnlyCountdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":" * An Immutable Countdown that is serializable to JSON format.","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"@JsonRootName(value \u003d \"countdown\")","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"class JsonSerializableCountdown {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    private final JsonAdaptedDate date;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a {@code JsonSerializableCountdown} with the given date.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    public JsonSerializableCountdown(@JsonProperty(\"date\") JsonAdaptedDate date) {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"     * Converts a given {@code ReadOnlyCountdown} into this class for Jackson use.","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableCountdown}.","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    public JsonSerializableCountdown(ReadOnlyCountdown source) {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"        LocalDate date \u003d source.getDate();","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"        this.date \u003d new JsonAdaptedDate(date \u003d\u003d null ? LocalDate.now() : date);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"     * Converts this countdown into the model\u0027s {@code Countdown} object.","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"    public Countdown toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        Countdown countdown \u003d new Countdown();","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"        countdown.setDate(date.toModelType());","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"        return countdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"DesmondTo":50}},{"path":"src/main/java/seedu/address/storage/JsonSerializableShortcut.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.ReadOnlyShortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.Shortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":" * An Immutable Shortcut that is serializable to JSON format.","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"@JsonRootName(value \u003d \"shortcut\")","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"class JsonSerializableShortcut {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"    private final List\u003cJsonAdaptedShortcut\u003e shortcuts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"     * Constructs a {@code JsonSerializableShortcut} with the given shortcuts.","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"    public JsonSerializableShortcut(@JsonProperty(\"shortcuts\") List\u003cJsonAdaptedShortcut\u003e shortcuts) {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"        this.shortcuts.addAll(shortcuts);","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"     * Converts a given {@code ReadOnlyShortcut} into this class for Jackson use.","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableShortcut}.","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"    public JsonSerializableShortcut(ReadOnlyShortcut source) {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"        shortcuts.clear();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"yin72257"},"content":"        source.getShortcutMap().forEach((key, value)-\u003e shortcuts.add(new JsonAdaptedShortcut(key, value)));","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"yin72257"},"content":"     * Converts this shortcut list into the model\u0027s {@code Shortcut} object.","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"yin72257"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"yin72257"},"content":"    public Shortcut toModelType() {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"yin72257"},"content":"        Shortcut shortcutModel \u003d new Shortcut();","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"yin72257"},"content":"        HashMap\u003cString, String\u003e shortcutMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"yin72257"},"content":"        for (JsonAdaptedShortcut shortcut: shortcuts) {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"yin72257"},"content":"            shortcutMap.put(shortcut.getKeyword(), shortcut.getCommandString());","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"yin72257"},"content":"        shortcutModel.setShortcutMap(shortcutMap);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"yin72257"},"content":"        return shortcutModel;","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yin72257":56}},{"path":"src/main/java/seedu/address/storage/JsonShortcutStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.ReadOnlyShortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":" * A class to access Shortcut data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"public class JsonShortcutStorage implements ShortcutStorage {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonShortcutStorage.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"    private Path filePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"    public JsonShortcutStorage(Path filePath) {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"    public Path getShortcutFilePath() {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"        return filePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"    public Optional\u003cReadOnlyShortcut\u003e readShortcut() throws DataConversionException {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"        return readShortcut(filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"yin72257"},"content":"     * Similar to {@link #readShortcut()}.","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"yin72257"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"yin72257"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"yin72257"},"content":"    public Optional\u003cReadOnlyShortcut\u003e readShortcut(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"yin72257"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"yin72257"},"content":"        Optional\u003cJsonSerializableShortcut\u003e jsonShortcut \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"yin72257"},"content":"                filePath, JsonSerializableShortcut.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"yin72257"},"content":"        if (!jsonShortcut.isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"yin72257"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"yin72257"},"content":"        return Optional.of(jsonShortcut.get().toModelType());","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"yin72257"},"content":"    public void saveShortcut(ReadOnlyShortcut shortcut) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"yin72257"},"content":"        saveShortcut(shortcut, filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"yin72257"},"content":"     * Similar to {@link #saveShortcut(ReadOnlyShortcut)}.","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"yin72257"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"yin72257"},"content":"    public void saveShortcut(ReadOnlyShortcut shortcut, Path filePath) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"yin72257"},"content":"        requireNonNull(shortcut);","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"yin72257"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"yin72257"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"yin72257"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableShortcut(shortcut), filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yin72257":74}},{"path":"src/main/java/seedu/address/storage/ShortcutStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.ReadOnlyShortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":" * Represents a storage for {@link seedu.address.model.Shortcut}.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"public interface ShortcutStorage {","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"    Path getShortcutFilePath();","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"     * Returns Shortcut data as a {@link ReadOnlyShortcut}.","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"    Optional\u003cReadOnlyShortcut\u003e readShortcut() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"     * @see #getShortcutFilePath()","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"    Optional\u003cReadOnlyShortcut\u003e readShortcut(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"     * Saves the given {@link ReadOnlyShortcut} to the storage.","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"     * @param shortcut cannot be null.","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"yin72257"},"content":"    void saveShortcut(ReadOnlyShortcut shortcut) throws IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"yin72257"},"content":"     * @see #saveShortcut(ReadOnlyShortcut)","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"yin72257"},"content":"    void saveShortcut(ReadOnlyShortcut shortcut, Path filePath) throws IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"yin72257":45}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.ReadOnlyCountdown;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.ReadOnlyShortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"public interface Storage extends AddressBookStorage, CountdownStorage, UserPrefsStorage, ShortcutStorage {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    Path getCountdownFilePath();","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"    Path getShortcutFilePath();","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    Optional\u003cReadOnlyCountdown\u003e readCountdown() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"yin72257"},"content":"    Optional\u003cReadOnlyShortcut\u003e readShortcut() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"    void saveCountdown(ReadOnlyCountdown countdown) throws IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"yin72257"},"content":"    void saveShortcut(ReadOnlyShortcut shortcut) throws IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yin72257":12,"DesmondTo":9,"-":32}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.ReadOnlyCountdown;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.ReadOnlyShortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    private CountdownStorage countdownStorage;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"    private ShortcutStorage shortcutStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, CountdownStorage countdownStorage,","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"                          UserPrefsStorage userPrefsStorage, ShortcutStorage shortcutStorage) {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"        this.countdownStorage \u003d countdownStorage;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"        this.shortcutStorage \u003d shortcutStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"DesmondTo"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Countdown methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"DesmondTo"},"content":"    public Path getCountdownFilePath() {","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"DesmondTo"},"content":"        return countdownStorage.getCountdownFilePath();","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"DesmondTo"},"content":"    public Optional\u003cReadOnlyCountdown\u003e readCountdown() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"DesmondTo"},"content":"        return readCountdown(countdownStorage.getCountdownFilePath());","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"DesmondTo"},"content":"    public Optional\u003cReadOnlyCountdown\u003e readCountdown(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"DesmondTo"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"DesmondTo"},"content":"        return countdownStorage.readCountdown(filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"DesmondTo"},"content":"    public void saveCountdown(ReadOnlyCountdown countdown) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"DesmondTo"},"content":"        saveCountdown(countdown, countdownStorage.getCountdownFilePath());","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"DesmondTo"},"content":"    public void saveCountdown(ReadOnlyCountdown countdown, Path filePath) throws IOException {","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"DesmondTo"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"DesmondTo"},"content":"        countdownStorage.saveCountdown(countdown, filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"yin72257"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Shortcut methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"yin72257"},"content":"    public Path getShortcutFilePath() {","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"yin72257"},"content":"        return countdownStorage.getCountdownFilePath();","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"yin72257"},"content":"    public Optional\u003cReadOnlyShortcut\u003e readShortcut() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"yin72257"},"content":"        return readShortcut(shortcutStorage.getShortcutFilePath());","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"yin72257"},"content":"    public Optional\u003cReadOnlyShortcut\u003e readShortcut(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"yin72257"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"yin72257"},"content":"        return shortcutStorage.readShortcut(filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"yin72257"},"content":"    public void saveShortcut(ReadOnlyShortcut shortcut) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"yin72257"},"content":"        saveShortcut(shortcut, shortcutStorage.getShortcutFilePath());","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"yin72257"},"content":"    public void saveShortcut(ReadOnlyShortcut shortcut, Path filePath) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"yin72257"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"yin72257"},"content":"        shortcutStorage.saveShortcut(shortcut, filePath);","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yin72257":34,"DesmondTo":33,"-":77}},{"path":"src/main/java/seedu/address/ui/ConfirmationWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Linda124"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"Linda124"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"Linda124"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"Linda124"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"Linda124"},"content":" * Controller for a confirmation message","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"Linda124"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"Linda124"},"content":"public class ConfirmationWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"Linda124"},"content":"    private static String message \u003d \"\";","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"Linda124"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ConfirmationWindow.class);","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"Linda124"},"content":"    private static final String FXML \u003d \"ConfirmationWindow.fxml\";","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"Linda124"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"Linda124"},"content":"    private Button confirmationButton;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"Linda124"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"Linda124"},"content":"    private Label confirmationMessage;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"Linda124"},"content":"     * Creates a new ConfirmationWindow.","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"Linda124"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"Linda124"},"content":"     * @param root Stage to use as the root of the ConfirmationWindow.","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"Linda124"},"content":"    public ConfirmationWindow(Stage root) {","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"Linda124"},"content":"        super(FXML, root);","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"Linda124"},"content":"        confirmationMessage.setText(message);","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"Linda124"},"content":"     * Creates a new ConfirmationWindow.","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"Linda124"},"content":"    public ConfirmationWindow() {","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"Linda124"},"content":"        this(new Stage());","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"Linda124"},"content":"     * Shows the confirmation window.","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"Linda124"},"content":"    public void show() {","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"Linda124"},"content":"        logger.fine(\"Showing confirmation window about the clearing.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"Linda124"},"content":"        getRoot().show();","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"Linda124"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"Linda124"},"content":"     * Hides the help window.","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"Linda124"},"content":"    public void hide() {","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"Linda124"},"content":"        getRoot().hide();","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"Linda124"},"content":"     * Obtains the ok button for confirmation.","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"Linda124"},"content":"    public Button getConfirmationButton() {","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"Linda124"},"content":"        return this.confirmationButton;","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"Linda124"},"content":"     * Creates confirmation message informing user that address book has or has","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"Linda124"},"content":"     * not been cleared.","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"Linda124"},"content":"    public static void setConfirmationMessage(String messageInput) {","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"Linda124"},"content":"        message \u003d messageInput;","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"Linda124"},"content":"     * Closes the confirmation Window.","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"Linda124"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"Linda124"},"content":"    private void exitTheWindow() {","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"Linda124"},"content":"        this.hide();","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"Linda124"},"content":"}","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"Linda124":82}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"    public static final String USERGUIDE_URL \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"            \"https://ay2122s1-cs2103t-w10-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yin72257":2,"-":100}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"sj1999-BIT"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"sj1999-BIT"},"content":"    private StackPane tagListPanelPlaceholder;","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"sj1999-BIT"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"sj1999-BIT"},"content":"    private StackPane userInfoPlaceHolder;","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"sj1999-BIT"},"content":"    private UserInfo userInfo;","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"sj1999-BIT"},"content":"    private TagListPanel tagListPanel;","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"sj1999-BIT"},"content":"        userInfo \u003d new UserInfo(logic);","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"sj1999-BIT"},"content":"        userInfoPlaceHolder.getChildren().add(userInfo.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"sj1999-BIT"},"content":"        personListPanelPlaceholder.setBackground(new Background(","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"sj1999-BIT"},"content":"                new BackgroundFill(Color.WHITE, new CornerRadii(10), Insets.EMPTY)));","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"sj1999-BIT"},"content":"        tagListPanel \u003d new TagListPanel(logic.getUniqueTagTable(), logic.getUniqueTagList());","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"sj1999-BIT"},"content":"        tagListPanelPlaceholder.setBackground(new Background(","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"sj1999-BIT"},"content":"                new BackgroundFill(Color.WHITE, new CornerRadii(10), Insets.EMPTY)));","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"sj1999-BIT"},"content":"        tagListPanelPlaceholder.getChildren().add(tagListPanel.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"sj1999-BIT"},"content":"        resultDisplay \u003d new ResultDisplay(\"All the command feedback/result will be displayed here\");","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"Linda124"},"content":"        System.exit(0);","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":198,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"sj1999-BIT"},"content":"     * Updates the GUI elements based on the changes in the model","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"sj1999-BIT"},"content":"    private void updateGui() {","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"sj1999-BIT"},"content":"        userInfo \u003d new UserInfo(logic);","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"sj1999-BIT"},"content":"        userInfoPlaceHolder.getChildren().add(userInfo.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"sj1999-BIT"},"content":"        tagListPanel \u003d new TagListPanel(logic.getUniqueTagTable(), logic.getUniqueTagList());","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"sj1999-BIT"},"content":"        tagListPanelPlaceholder.getChildren().add(tagListPanel.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"sj1999-BIT"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"sj1999-BIT"},"content":"            Platform.runLater(new Runnable() {","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"sj1999-BIT"},"content":"                @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"sj1999-BIT"},"content":"                public void run() {","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"sj1999-BIT"},"content":"                    updateGui();","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"sj1999-BIT"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"sj1999-BIT"},"content":"            });","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sj1999-BIT":47,"Linda124":1,"-":195}},{"path":"src/main/java/seedu/address/ui/ModelInfo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.Border;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.BorderStroke;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.BorderStrokeStyle;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.BorderWidths;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"public class ModelInfo extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"    private static final String FXML \u003d \"ModelInfo.fxml\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"sj1999-BIT"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"sj1999-BIT"},"content":"    private VBox mainContainer;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"sj1999-BIT"},"content":"     * Creates a ModelInfo Object.","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"sj1999-BIT"},"content":"     * @param val is an integer value to be displayed in bold","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"     * @param info is the description of the integer val","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"sj1999-BIT"},"content":"    public ModelInfo(int val, String info) {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"        super(FXML);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"        mainContainer.setBackground(new Background(","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"                new BackgroundFill(Color.web(\"#383838\"), CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"        mainContainer.setBorder(new Border(new BorderStroke(Color.BLACK,","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"sj1999-BIT"},"content":"                BorderStrokeStyle.SOLID, CornerRadii.EMPTY, new BorderWidths(0.5))));","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"sj1999-BIT"},"content":"        Text value \u003d new Text(Integer.toString(val));","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"sj1999-BIT"},"content":"        value.setFont(Font.font(40));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"sj1999-BIT"},"content":"        value.setFill(Color.color(0.3, 1, 0.6));","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"sj1999-BIT"},"content":"        value.setStyle(\"-fx-font-weight: bold\");","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"sj1999-BIT"},"content":"        value.setTextAlignment(TextAlignment.CENTER);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"sj1999-BIT"},"content":"        Text infoText \u003d new Text(info);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"sj1999-BIT"},"content":"        infoText.setFont(Font.font(15));","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"sj1999-BIT"},"content":"        infoText.setFill(Color.WHITE);","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"sj1999-BIT"},"content":"        infoText.setTextAlignment(TextAlignment.CENTER);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"sj1999-BIT"},"content":"        if (val \u003d\u003d 0) {","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"sj1999-BIT"},"content":"            value.setText(\"-\");","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"sj1999-BIT"},"content":"        mainContainer.getChildren().addAll(value, infoText);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"sj1999-BIT":54}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"Banana3021"},"content":"    private Label price;","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Banana3021"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Banana3021"},"content":"    private Label info;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Banana3021"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Banana3021"},"content":"    private Label status;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Banana3021"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"Banana3021"},"content":"        phone.setText(\"Phone: \" + person.getPhone().value);","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"Banana3021"},"content":"        address.setText(\"Address: \" + person.getAddress().value);","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"Banana3021"},"content":"        email.setText(\"Email: \" + person.getEmail().value);","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"Banana3021"},"content":"        price.setText(\"Price: $\" + person.getPrice().value);","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"Banana3021"},"content":"        info.setText(\"Important info: \" + person.getInfo().value);","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"Banana3021"},"content":"        status \u003d setStatus(status, person.getStatus().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":66,"author":{"gitId":"Banana3021"},"content":"                .forEach(tag -\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Banana3021"},"content":"                    Label lab \u003d new Label(tag.tagName);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Banana3021"},"content":"                    tags.getChildren().add(lab);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Banana3021"},"content":"                });","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Banana3021"},"content":"     * Sets the text and background of the status Label.","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Banana3021"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Banana3021"},"content":"     * @param status the Label","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Banana3021"},"content":"     * @param text the status info","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Banana3021"},"content":"     * @return the label with the text and background","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Banana3021"},"content":"    public Label setStatus(Label status, String text) {","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Banana3021"},"content":"        String newText \u003d text.toUpperCase();","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Banana3021"},"content":"        if (newText.equals(\"CONFIRMED\")","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Banana3021"},"content":"                || newText.equals(\"C\")) {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Banana3021"},"content":"            text \u003d \"Confirmed\";","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Banana3021"},"content":"            status.setStyle(\"-fx-background-color : #0CA70A;\");","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Banana3021"},"content":"        } else if (newText.equals(\"PENDING\")","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Banana3021"},"content":"                || newText.equals(\"P\")) {","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Banana3021"},"content":"            text \u003d \"Pending\";","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Banana3021"},"content":"            status.setStyle(\"-fx-background-color : #E1C10B;\");","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Banana3021"},"content":"        } else if (newText.equals(\"DECLINED\")","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Banana3021"},"content":"                || newText.equals(\"D\")) {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Banana3021"},"content":"            text \u003d \"Declined\";","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Banana3021"},"content":"            status.setStyle(\"-fx-background-color : #FF3232;\");","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Banana3021"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Banana3021"},"content":"        status.setText(\"Status: \" + text);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Banana3021"},"content":"        return status;","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":73,"Banana3021":42}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.geometry.Orientation;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"    private final StackPane listLimit;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"    private final StackPane personTitle;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"sj1999-BIT"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"sj1999-BIT"},"content":"    private FlowPane personListContainer;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"sj1999-BIT"},"content":"        personListContainer.setBackground(new Background(","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"sj1999-BIT"},"content":"                new BackgroundFill(Color.WHITE, new CornerRadii(30), new Insets(10))));","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"sj1999-BIT"},"content":"        Text personTitleText \u003d new Text();","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"sj1999-BIT"},"content":"        personTitleText.setText(\"Contacts\");","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"sj1999-BIT"},"content":"        personTitleText.setFont(Font.font (\"Verdana\", 40));","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"sj1999-BIT"},"content":"        personTitleText.setFill(Color.BLACK);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"sj1999-BIT"},"content":"        personTitleText.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"sj1999-BIT"},"content":"        personTitle \u003d new StackPane();","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"sj1999-BIT"},"content":"        personTitle.getChildren().add(personTitleText);","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"sj1999-BIT"},"content":"        personTitle.setBackground(new Background(new BackgroundFill(Color.WHITE, new CornerRadii(5), new Insets(5))));","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"sj1999-BIT"},"content":"        personListView \u003d new ListView\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"sj1999-BIT"},"content":"        personListView.setMinWidth(550);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"sj1999-BIT"},"content":"        listLimit \u003d new StackPane();","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"sj1999-BIT"},"content":"        listLimit.getChildren().add(personListView);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"sj1999-BIT"},"content":"        listLimit.setMaxSize(500, 330);","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"sj1999-BIT"},"content":"        personListContainer.setOrientation(Orientation.VERTICAL);","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"sj1999-BIT"},"content":"        personListContainer.setVgap(5);","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"sj1999-BIT"},"content":"        personListContainer.getChildren().addAll(personTitle, listLimit);","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sj1999-BIT":39,"-":48,"Banana3021":1}},{"path":"src/main/java/seedu/address/ui/ReportWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Linda124"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Linda124"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Linda124"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Linda124"},"content":" * Controller for a report page","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Linda124"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Linda124"},"content":"public class ReportWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Linda124"},"content":"    private static String message;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Linda124"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ReportWindow.class);","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Linda124"},"content":"    private static final String FXML \u003d \"ReportWindow.fxml\";","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Linda124"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Linda124"},"content":"    private Label reportMessage;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Linda124"},"content":"     * Creates a new ReportWindow.","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Linda124"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Linda124"},"content":"     * @param root Stage to use as the root of the ReportWindow.","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Linda124"},"content":"    public ReportWindow(Stage root) {","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Linda124"},"content":"        super(FXML, root);","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Linda124"},"content":"        reportMessage.setText(message);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Linda124"},"content":"     * Creates a new ReportWindow.","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Linda124"},"content":"    public ReportWindow() {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Linda124"},"content":"        this(new Stage());","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"Linda124"},"content":"    public static void setReportMessage(String messageInput) {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"Linda124"},"content":"        message \u003d messageInput;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"Linda124"},"content":"     * Shows the report window.","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"Linda124"},"content":"    public void show() {","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Linda124"},"content":"        logger.fine(\"Displaying the current report for the application.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Linda124"},"content":"        getRoot().show();","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Linda124"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"Linda124"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Linda124":52}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"     * Creates a {@code ResultDisplay} instance with a defaultText","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"sj1999-BIT"},"content":"     * @param defaultText to be displayed at the initialisation of the class","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"sj1999-BIT"},"content":"    public ResultDisplay(String defaultText) {","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"sj1999-BIT"},"content":"        resultDisplay.setText(defaultText);","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sj1999-BIT":6,"-":27}},{"path":"src/main/java/seedu/address/ui/TagCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":"public class TagCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":"    private static final String FXML \u003d \"TagListCard.fxml\";","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"    public final Tag tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"sj1999-BIT"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"    private Label tagName;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"sj1999-BIT"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"sj1999-BIT"},"content":"    private Label description;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"sj1999-BIT"},"content":"     * Creates a new TagCard Object","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"sj1999-BIT"},"content":"    public TagCard(Tag tag, int numOfContacts) {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"        super(FXML);","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"sj1999-BIT"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"sj1999-BIT"},"content":"        tagName.setText(tag.tagName);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"        description.setText(\"Contacts under this tag : \\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"                + numOfContacts);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"sj1999-BIT"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"sj1999-BIT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"sj1999-BIT"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"sj1999-BIT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"sj1999-BIT"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"sj1999-BIT"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"sj1999-BIT"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"sj1999-BIT"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"sj1999-BIT"},"content":"        // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"sj1999-BIT"},"content":"        TagCard card \u003d (TagCard) other;","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"sj1999-BIT"},"content":"        return tagName.getText().equals(card.tagName.getText())","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"sj1999-BIT"},"content":"                \u0026\u0026 tag.equals(card.tag);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"sj1999-BIT":52}},{"path":"src/main/java/seedu/address/ui/TagListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.Hashtable;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.geometry.Orientation;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"sj1999-BIT"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"sj1999-BIT"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"sj1999-BIT"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"public class TagListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"sj1999-BIT"},"content":"    private static final String FXML \u003d \"TagListPanel.fxml\";","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TagListPanel.class);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"    private final Hashtable\u003cTag, Integer\u003e tagInfoHashTable;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"    private final StackPane listLimit;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"sj1999-BIT"},"content":"    private final StackPane tagTitle;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"sj1999-BIT"},"content":"    private final ListView\u003cTag\u003e tagListView;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"sj1999-BIT"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"sj1999-BIT"},"content":"    private FlowPane tagListContainer;","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"sj1999-BIT"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"sj1999-BIT"},"content":"    public TagListPanel(Hashtable\u003cTag, Integer\u003e tagInfoHashTable,","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"sj1999-BIT"},"content":"                        ObservableList\u003cTag\u003e tagList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"sj1999-BIT"},"content":"        super(FXML);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"sj1999-BIT"},"content":"        this.tagInfoHashTable \u003d tagInfoHashTable;","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"sj1999-BIT"},"content":"        tagListContainer.setBackground(new Background(new BackgroundFill(Color.WHITE,","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"sj1999-BIT"},"content":"                new CornerRadii(30), new Insets(10))));","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"sj1999-BIT"},"content":"        Text tagTitleText \u003d new Text();","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"sj1999-BIT"},"content":"        tagTitleText.setText(\"Tags\");","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"sj1999-BIT"},"content":"        tagTitleText.setFont(Font.font (\"Verdana\", 40));","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"sj1999-BIT"},"content":"        tagTitleText.setFill(Color.BLACK);","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"sj1999-BIT"},"content":"        tagTitleText.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"sj1999-BIT"},"content":"        tagTitle \u003d new StackPane();","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"sj1999-BIT"},"content":"        tagTitle.getChildren().add(tagTitleText);","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"sj1999-BIT"},"content":"        tagTitle.setBackground(new Background(new BackgroundFill(Color.WHITE, new CornerRadii(2), new Insets(5))));","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"sj1999-BIT"},"content":"        tagTitle.setMaxHeight(40);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"sj1999-BIT"},"content":"        tagListView \u003d new ListView\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"sj1999-BIT"},"content":"        tagListView.setItems(tagList);","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"sj1999-BIT"},"content":"        tagListView.setBackground(new Background(new BackgroundFill(Color.WHITE, new CornerRadii(2), new Insets(5))));","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"sj1999-BIT"},"content":"        tagListView.setCellFactory(listView -\u003e new TagListViewCell());","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"sj1999-BIT"},"content":"        tagListView.setMinWidth(350);","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"sj1999-BIT"},"content":"        listLimit \u003d new StackPane();","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"sj1999-BIT"},"content":"        listLimit.getChildren().add(tagListView);","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"sj1999-BIT"},"content":"        listLimit.setMaxSize(500, 330);","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"sj1999-BIT"},"content":"        tagListContainer.setOrientation(Orientation.VERTICAL);","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"sj1999-BIT"},"content":"        tagListContainer.setVgap(5);","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"sj1999-BIT"},"content":"        tagListContainer.getChildren().addAll(tagTitle, listLimit);","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"sj1999-BIT"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"sj1999-BIT"},"content":"    class TagListViewCell extends ListCell\u003cTag\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"sj1999-BIT"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"sj1999-BIT"},"content":"        protected void updateItem(Tag tag, boolean empty) {","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"sj1999-BIT"},"content":"            super.updateItem(tag, empty);","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"sj1999-BIT"},"content":"            if (empty || tag \u003d\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"sj1999-BIT"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"sj1999-BIT"},"content":"                setText(null);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"sj1999-BIT"},"content":"            } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"sj1999-BIT"},"content":"                setGraphic(new TagCard(tag, tagInfoHashTable.get(tag)).getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"sj1999-BIT"},"content":"                setBackground(new Background(new BackgroundFill(Color.WHITE, new CornerRadii(2), Insets.EMPTY)));","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"sj1999-BIT":95}},{"path":"src/main/java/seedu/address/ui/UserInfo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.Border;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.BorderStroke;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.BorderStrokeStyle;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.BorderWidths;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"sj1999-BIT"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"sj1999-BIT"},"content":"public class UserInfo extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"sj1999-BIT"},"content":"    private static final String FXML \u003d \"UserInfo.fxml\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"sj1999-BIT"},"content":"    private HBox mainContainer;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"    private VBox leftHeader;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"sj1999-BIT"},"content":"    private VBox totalContactsContainer;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"sj1999-BIT"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"sj1999-BIT"},"content":"    private VBox daysTillWeddingContainer;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"sj1999-BIT"},"content":"     * Creates an UserInfo object","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"sj1999-BIT"},"content":"    public UserInfo(Logic logic) {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"sj1999-BIT"},"content":"        super(FXML);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"sj1999-BIT"},"content":"        Text userName \u003d new Text(\" Welcome to WedFast! \");","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"sj1999-BIT"},"content":"        userName.setStyle(\"-fx-font-weight: bold\");","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"sj1999-BIT"},"content":"        userName.setFont(Font.font(30));","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"sj1999-BIT"},"content":"        userName.setFill(Color.color(1, 1, 1));","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"sj1999-BIT"},"content":"        String date \u003d \"  \".concat(new SimpleDateFormat(\"dd-MM-yyyy\").format(new Date()));","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"sj1999-BIT"},"content":"        Text dateText \u003d new Text(date);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"sj1999-BIT"},"content":"        dateText.setFont(Font.font(15));","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"sj1999-BIT"},"content":"        dateText.setFill(Color.color(0.3, 1, 0.6));","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"sj1999-BIT"},"content":"        leftHeader.setBackground(new Background(","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"sj1999-BIT"},"content":"                new BackgroundFill(Color.web(\"#383838\"), CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"sj1999-BIT"},"content":"        leftHeader.getChildren().addAll(userName, dateText);","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"sj1999-BIT"},"content":"        leftHeader.setBorder(new Border(new BorderStroke(Color.BLACK,","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"sj1999-BIT"},"content":"                BorderStrokeStyle.SOLID, CornerRadii.EMPTY, new BorderWidths(0.5))));","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"sj1999-BIT"},"content":"        // Assume dummy variables","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"sj1999-BIT"},"content":"        int contacts \u003d logic.size();","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"sj1999-BIT"},"content":"        int noOfdates \u003d (int) LocalDate.now().until(logic.getCountdown().getDate(), ChronoUnit.DAYS);","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"sj1999-BIT"},"content":"        ModelInfo totalContacts \u003d new ModelInfo(contacts, \"People in your contact\");","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"sj1999-BIT"},"content":"        totalContactsContainer.getChildren().add(totalContacts.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"sj1999-BIT"},"content":"        ModelInfo datesToWedding;","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"sj1999-BIT"},"content":"        if (noOfdates \u003c 0) {","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"sj1999-BIT"},"content":"            datesToWedding \u003d new ModelInfo(0, \"Oh no! Your Wedding day has passed!\");","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"sj1999-BIT"},"content":"        } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"sj1999-BIT"},"content":"            datesToWedding \u003d new ModelInfo(noOfdates, \"Days before Wedding day\");","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"sj1999-BIT"},"content":"        daysTillWeddingContainer.getChildren().add(datesToWedding.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"sj1999-BIT":79}},{"path":"src/main/java/seedu/address/ui/WarningWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"Linda124"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"Linda124"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"Linda124"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"Linda124"},"content":" * Controller for a warning window","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"Linda124"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"Linda124"},"content":"public class WarningWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"Linda124"},"content":"    public static final String WARNING_MESSAGE \u003d \"Are you sure you want to clear all data?\";","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"Linda124"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(WarningWindow.class);","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"Linda124"},"content":"    private static final String FXML \u003d \"WarningWindow.fxml\";","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"Linda124"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"Linda124"},"content":"    private Button yesButton;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"Linda124"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"Linda124"},"content":"    private Button noButton;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"Linda124"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"Linda124"},"content":"    private Label warningMessage;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Linda124"},"content":"     * Creates a new WarningWindow.","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"Linda124"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"Linda124"},"content":"     * @param root Stage to use as the root of the WarningWindow.","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Linda124"},"content":"    public WarningWindow(Stage root) {","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"Linda124"},"content":"        super(FXML, root);","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"Linda124"},"content":"        warningMessage.setText(WARNING_MESSAGE);","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"Linda124"},"content":"     * Creates a new WarningWindow.","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"Linda124"},"content":"    public WarningWindow() {","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"Linda124"},"content":"        this(new Stage());","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"Linda124"},"content":"     * Shows the warning window.","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Linda124"},"content":"    public void show() {","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"Linda124"},"content":"        logger.fine(\"Showing warning window about the clearing.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"Linda124"},"content":"        getRoot().show();","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"Linda124"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"Linda124"},"content":"     * Hides the help window.","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"Linda124"},"content":"    public void hide() {","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"Linda124"},"content":"        getRoot().hide();","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"Linda124"},"content":"     * Obtains the button for yes.","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"Linda124"},"content":"    public Button getYesButton() {","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"Linda124"},"content":"        return this.yesButton;","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"Linda124"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"Linda124"},"content":"     * Obtains the button for no.","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"Linda124"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"Linda124"},"content":"    public Button getNoButton() {","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"Linda124"},"content":"        return this.noButton;","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"Linda124"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"Linda124"},"content":"}","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"sj1999-BIT":14,"Linda124":62}},{"path":"src/main/resources/view/ConfirmationWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Linda124"},"content":"#confirmationButton, #confirmationMessage {","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"    -fx-font-family: \"Montserrat Regular\";","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"Linda124":3}},{"path":"src/main/resources/view/ConfirmationWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Linda124"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"Linda124"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Confirmation Message\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"Linda124"},"content":"  \u003cicons\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"Linda124"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"Linda124"},"content":"  \u003cscene\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"Linda124"},"content":"    \u003cScene\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"Linda124"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"Linda124"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"Linda124"},"content":"        \u003cURL value\u003d\"@ConfirmationWindow.css\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"Linda124"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"Linda124"},"content":"      \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"Linda124"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"Linda124"},"content":"          \u003cLabel fx:id\u003d\"confirmationMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"Linda124"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"Linda124"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"Linda124"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"Linda124"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"Linda124"},"content":"          \u003cButton fx:id\u003d\"confirmationButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#exitTheWindow\" text\u003d\"Ok\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"Linda124"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"Linda124"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"Linda124"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"Linda124"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"Linda124"},"content":"        \u003c/children\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"Linda124"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"Linda124"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"Linda124"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"Linda124"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"Linda124"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"Linda124"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"Linda124"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"Linda124"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"Linda124"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"Linda124"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"Linda124":42}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"    -fx-font-family: \"Montserrat Semibold\";","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"Linda124"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"Linda124"},"content":"    -fx-font-family: \"Montserrat Semibold\";","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"Linda124"},"content":"    -fx-font-size: 30pt;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"Linda124"},"content":"    -fx-font-family: \"Montserrat Light\";","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"Linda124"},"content":"    -fx-font-family: \"Montserrat Semibold\";","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"Linda124"},"content":"    -fx-size: 32;","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"Linda124"},"content":"    -fx-font-size: 18pt;","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"Linda124"},"content":"    -fx-font-family: \"Montserrat Light\";","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"Linda124"},"content":"    -fx-background-color: #fbfaf5;","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"Linda124"},"content":"    -fx-background-color: #e8e8e8;","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"Linda124"},"content":"    -fx-background-color: #d7f1fa;","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"Linda124"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"Linda124"},"content":"    -fx-font-family: \"Montserrat Semibold\";","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"Linda124"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"Linda124"},"content":"    -fx-font-family: \"Montserrat Regular\";","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"Linda124"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"Linda124"},"content":"    -fx-font-family: \"Montserrat Light\";","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"Linda124"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"Linda124"},"content":"    -fx-font-family: \"Montserrat Light\";","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"Linda124"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"Linda124"},"content":"    -fx-font-family: \"Montserrat Light\";","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"Linda124"},"content":"    -fx-font-family: \"Montserrat Regular\";","lastModifiedDate":"2021-10-08"},{"lineNumber":223,"author":{"gitId":"Linda124"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2021-10-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"Linda124"},"content":"    -fx-font-size: 17px;","lastModifiedDate":"2021-10-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"Linda124"},"content":"    -fx-font-family: \"Montserrat Light\";","lastModifiedDate":"2021-10-08"},{"lineNumber":328,"author":{"gitId":"Linda124"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"Linda124"},"content":"    -fx-background-color: #008AB8;","lastModifiedDate":"2021-10-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"Linda124"},"content":"    -fx-font-size: 10;","lastModifiedDate":"2021-10-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"sj1999-BIT":1,"Linda124":30,"-":322}},{"path":"src/main/resources/view/Fonts.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"    font-family: \"Montserrat Regular\";","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"    src: url(\"/fonts/montserrat/Montserrat-Regular.ttf\");","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"    font-family: \"Montserrat SemiBold\";","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"    src: url(\"/fonts/montserrat/Montserrat-SemiBold.ttf\");","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Linda124"},"content":"    font-family: \"Montserrat Light\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Linda124"},"content":"    src: url(\"/fonts/montserrat/Montserrat-Light.ttf\");","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Linda124"},"content":"    font-family: \"Montserrat Bold Italic\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"Linda124"},"content":"    src: url(\"/fonts/montserrat/Montserrat-BoldItalic.ttf\");","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Linda124"},"content":"    font-family: \"Montserrat Extra Bold\";","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Linda124"},"content":"    src: url(\"/fonts/montserrat/Montserrat-ExtraBold.ttf\");","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Linda124"},"content":"    font-family: \"Montserrat Extra Bold Italic\";","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Linda124"},"content":"    src: url(\"/fonts/montserrat/Montserrat-ExtraBoldItalic.ttf\");","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Linda124"},"content":"    font-family: \"Montserrat Italic\";","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Linda124"},"content":"    src: url(\"/fonts/montserrat/Montserrat-Italic.ttf\");","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Linda124"},"content":"    font-family: \"Montserrat Light Italic\";","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"Linda124"},"content":"    src: url(\"/fonts/montserrat/Montserrat-LightItalic.ttf\");","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"Linda124"},"content":"    font-family: \"Montserrat SemiBold Italic\";","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"Linda124"},"content":"    src: url(\"/fonts/montserrat/Montserrat-SemiBoldItalic.ttf\");","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Linda124":18,"-":26}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"    -fx-font-family: \"Montserrat Regular\";","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Linda124":1,"-":2}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"         title\u003d\"WedFast\" minWidth\u003d\"1100\" minHeight\u003d\"715\" maxWidth\u003d\"1100\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"Linda124"},"content":"    \u003cImage url\u003d\"@/images/wedfast_icon.png\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"sj1999-BIT"},"content":"        \u003cStackPane fx:id\u003d\"userInfoPlaceHolder\" minHeight\u003d\"70\" maxHeight\u003d\"70\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"sj1999-BIT"},"content":"        \u003cHBox fx:id\u003d\"personList\" maxHeight\u003d\"230\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":41,"author":{"gitId":"sj1999-BIT"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"50\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":43,"author":{"gitId":"sj1999-BIT"},"content":"          \u003cStackPane fx:id\u003d\"tagListPanelPlaceholder\" minWidth\u003d\"400\" VBox.vgrow\u003d\"NEVER\" maxHeight\u003d\"270\"/\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"sj1999-BIT"},"content":"          \u003cStackPane id\u003d\"middleSeparator\" minWidth\u003d\"30\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"sj1999-BIT"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" minWidth\u003d\"600\" VBox.vgrow\u003d\"ALWAYS\" maxHeight\u003d\"270\"/\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"sj1999-BIT"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"sj1999-BIT"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"sj1999-BIT"},"content":"                   minHeight\u003d\"80\" prefHeight\u003d\"100\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"sj1999-BIT"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" minHeight\u003d\"50\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"sj1999-BIT"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"sj1999-BIT"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"sj1999-BIT":14,"Linda124":1,"-":48}},{"path":"src/main/resources/view/ModelInfo.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"\u003cVBox fx:id\u003d\"mainContainer\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":"            prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\"  alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"sj1999-BIT":12}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"100\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Banana3021"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Banana3021"},"content":"      \u003cLabel fx:id\u003d\"price\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$price\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Banana3021"},"content":"      \u003cLabel fx:id\u003d\"info\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$info\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Banana3021"},"content":"      \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sj1999-BIT":1,"-":34,"Banana3021":4}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"\u003cFlowPane fx:id\u003d\"personListContainer\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"          alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"\u003c/FlowPane\u003e","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"sj1999-BIT":4,"-":5}},{"path":"src/main/resources/view/ReportWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Linda124"},"content":"#reportMessage {","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"    -fx-font-family: \"Montserrat Regular\";","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Linda124":3}},{"path":"src/main/resources/view/ReportWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Linda124"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Linda124"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Report\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Linda124"},"content":"  \u003cicons\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Linda124"},"content":"    \u003cImage url\u003d\"@/images/report_icon.png\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Linda124"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Linda124"},"content":"  \u003cscene\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Linda124"},"content":"    \u003cScene\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Linda124"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Linda124"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Linda124"},"content":"        \u003cURL value\u003d\"@ReportWindow.css\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Linda124"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Linda124"},"content":"      \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Linda124"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Linda124"},"content":"          \u003cLabel fx:id\u003d\"reportMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Linda124"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Linda124"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Linda124"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Linda124"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Linda124"},"content":"        \u003c/children\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Linda124"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Linda124"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Linda124"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Linda124"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Linda124"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Linda124"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Linda124"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Linda124"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Linda124"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"Linda124"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Linda124":38}},{"path":"src/main/resources/view/TagListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"    \u003cGridPane prefHeight\u003d\"65.0\" prefWidth\u003d\"150.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"sj1999-BIT"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"80\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"sj1999-BIT"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"sj1999-BIT"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"sj1999-BIT"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"sj1999-BIT"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"sj1999-BIT"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"sj1999-BIT"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"sj1999-BIT"},"content":"                \u003cLabel fx:id\u003d\"tagName\" prefHeight\u003d\"39.0\" prefWidth\u003d\"43.0\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" minWidth\u003d\"150\"/\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"sj1999-BIT"},"content":"            \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" minWidth\u003d\"100\"/\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"sj1999-BIT"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"sj1999-BIT"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"sj1999-BIT":34,"yin72257":1}},{"path":"src/main/resources/view/TagListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"\u003cFlowPane fx:id\u003d\"tagListContainer\" stylesheets\u003d\"@Extensions.css\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"          alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"\u003c/FlowPane\u003e","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"sj1999-BIT":6,"yin72257":1}},{"path":"src/main/resources/view/UserInfo.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":"\u003cHBox fx:id\u003d\"mainContainer\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml\"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"      prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"    \u003cVBox fx:id\u003d\"leftHeader\" minHeight\u003d\"85\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"sj1999-BIT"},"content":"    \u003cVBox fx:id\u003d\"totalContactsContainer\" minHeight\u003d\"85\"/\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"    \u003cVBox fx:id\u003d\"daysTillWeddingContainer\" minHeight\u003d\"85\"/\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"sj1999-BIT":18}},{"path":"src/main/resources/view/WarningWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Linda124"},"content":"#yesButton, #noButton, #warningMessage {","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"    -fx-font-family: \"Montserrat Regular\";","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"Linda124":3}},{"path":"src/main/resources/view/WarningWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Linda124"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"Linda124"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"Linda124"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"Linda124"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"Linda124"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Warning\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"Linda124"},"content":"  \u003cicons\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"Linda124"},"content":"    \u003cImage url\u003d\"@/images/warning_icon.png\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"Linda124"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"Linda124"},"content":"  \u003cscene\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"Linda124"},"content":"    \u003cScene\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"Linda124"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"Linda124"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"Linda124"},"content":"        \u003cURL value\u003d\"@WarningWindow.css\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"Linda124"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"Linda124"},"content":"      \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"Linda124"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"Linda124"},"content":"          \u003cLabel fx:id\u003d\"warningMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"Linda124"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"Linda124"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"Linda124"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"Linda124"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"Linda124"},"content":"          \u003cButton fx:id\u003d\"yesButton\" mnemonicParsing\u003d\"false\" text\u003d\"Yes\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"Linda124"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"Linda124"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"Linda124"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"Linda124"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"Linda124"},"content":"          \u003cButton fx:id\u003d\"noButton\" mnemonicParsing\u003d\"false\" text\u003d\"No\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"Linda124"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"Linda124"},"content":"              \u003cInsets left\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"Linda124"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"Linda124"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"Linda124"},"content":"        \u003c/children\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"Linda124"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"Linda124"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"Linda124"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"Linda124"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"Linda124"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"Linda124"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"Linda124"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"Linda124"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"Linda124"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"Linda124"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"Linda124":49}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INFO_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRICE_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"import seedu.address.storage.JsonCountdownStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"import seedu.address.storage.JsonShortcutStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"        JsonCountdownStorage countdownStorage \u003d new JsonCountdownStorage(temporaryFolder.resolve(\"countdown.json\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"yin72257"},"content":"        JsonShortcutStorage shortcutStorage \u003d new JsonShortcutStorage(temporaryFolder.resolve(\"shortcut.json\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"yin72257"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, countdownStorage,","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"yin72257"},"content":"                userPrefsStorage, shortcutStorage);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"DesmondTo"},"content":"        JsonCountdownStorage countdownStorage \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"DesmondTo"},"content":"                new JsonCountdownStorage(temporaryFolder.resolve(\"ioExceptionCountdown.json\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"yin72257"},"content":"        JsonShortcutStorage shortcutStorage \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"yin72257"},"content":"                new JsonShortcutStorage(temporaryFolder.resolve(\"ioExceptionShortcut.json\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":90,"author":{"gitId":"yin72257"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, countdownStorage, userPrefsStorage,","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"yin72257"},"content":"                shortcutStorage);","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"Banana3021"},"content":"                + ADDRESS_DESC_AMY + PRICE_DESC_AMY + INFO_DESC_AMY + STATUS_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"yin72257"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getCountdown(),","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"yin72257"},"content":"                new UserPrefs(), model.getShortcut());","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yin72257":11,"DesmondTo":3,"-":158,"Banana3021":4}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import static seedu.address.testutil.TypicalDate.getTypicalCountdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.Shortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalCountdown(), new UserPrefs(), new Shortcut());","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getCountdown(),","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"                new UserPrefs(), new Shortcut());","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"DesmondTo":1,"yin72257":4,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.Hashtable;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.ReadOnlyCountdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.ReadOnlyShortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"sj1999-BIT"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"sj1999-BIT"},"content":"        public int size() {","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"sj1999-BIT"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"DesmondTo"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"DesmondTo"},"content":"        public Path getCountdownFilePath() {","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"DesmondTo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"yin72257"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"yin72257"},"content":"        public Path getShortcutFilePath() {","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"yin72257"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"DesmondTo"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"DesmondTo"},"content":"        public void setCountdownFilePath(Path countdownFilePath) {","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"DesmondTo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"yin72257"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"yin72257"},"content":"        public void setShortcutFilePath(Path shortcutFilePath) {","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"yin72257"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"yin72257"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"yin72257"},"content":"        public void addShortcut(String keyword, String command) {","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"yin72257"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"DesmondTo"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"DesmondTo"},"content":"        public void setCountdown(ReadOnlyCountdown countdown) {","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"DesmondTo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"yin72257"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"yin72257"},"content":"        public void setShortcut(ReadOnlyShortcut shortcut) {","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"yin72257"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"DesmondTo"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"DesmondTo"},"content":"        public ReadOnlyCountdown getCountdown() {","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"DesmondTo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"yin72257"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"yin72257"},"content":"        public ReadOnlyShortcut getShortcut() {","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"yin72257"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"yin72257"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"yin72257"},"content":"        public String listShortcut() {","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"yin72257"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"yin72257"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"yin72257"},"content":"        public String removeShortcut(String keyword) {","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"yin72257"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"yin72257"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"yin72257"},"content":"        public String getShortcutFromKey(String keyword) {","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"yin72257"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":201,"author":{"gitId":"sj1999-BIT"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"sj1999-BIT"},"content":"        public boolean hasPersonName(String name) {","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"sj1999-BIT"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"DesmondTo"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"DesmondTo"},"content":"        public void setDate(LocalDate newDate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"DesmondTo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"sj1999-BIT"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":232,"author":{"gitId":"sj1999-BIT"},"content":"        public Hashtable\u003cTag, Integer\u003e getUniqueTagTable() {","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"sj1999-BIT"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"sj1999-BIT"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"sj1999-BIT"},"content":"        public ObservableList\u003cTag\u003e getUniqueTagList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"sj1999-BIT"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":239,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"sj1999-BIT":22,"DesmondTo":27,"yin72257":41,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_UNNECESSARY, expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"sj1999-BIT":1,"-":20}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFO;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"import java.time.Month;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"Banana3021"},"content":"    public static final String VALID_INFO_AMY \u003d \"none\";","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Banana3021"},"content":"    public static final String VALID_INFO_BOB \u003d \"none\";","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Banana3021"},"content":"    public static final String VALID_PRICE_AMY \u003d \"0.00\";","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Banana3021"},"content":"    public static final String VALID_PRICE_BOB \u003d \"0.00\";","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"Banana3021"},"content":"    public static final String VALID_STATUS_AMY \u003d \"Pending\";","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Banana3021"},"content":"    public static final String VALID_STATUS_BOB \u003d \"Confirmed\";","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"    public static final LocalDate VALID_DATE \u003d LocalDate.of(2022, Month.APRIL, 29);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"Banana3021"},"content":"    public static final String INFO_DESC_AMY \u003d \" \" + PREFIX_INFO + VALID_INFO_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Banana3021"},"content":"    public static final String INFO_DESC_BOB \u003d \" \" + PREFIX_INFO + VALID_INFO_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"Banana3021"},"content":"    public static final String PRICE_DESC_AMY \u003d \" \" + PREFIX_PRICE + VALID_PRICE_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"Banana3021"},"content":"    public static final String PRICE_DESC_BOB \u003d \" \" + PREFIX_PRICE + VALID_PRICE_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"Banana3021"},"content":"    public static final String STATUS_DESC_AMY \u003d \" \" + PREFIX_STATUS + VALID_STATUS_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Banana3021"},"content":"    public static final String STATUS_DESC_BOB \u003d \" \" + PREFIX_STATUS + VALID_STATUS_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"Banana3021"},"content":"    public static final String INVALID_INFO_DESC \u003d \" \" + PREFIX_INFO + \"\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"Banana3021"},"content":"    public static final String INVALID_PRICE_DESC \u003d \" \" + PREFIX_PRICE + \"8uh\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"Banana3021"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \" + PREFIX_STATUS + \"0\"; // \u00270\u0027 not allowed in status","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"Banana3021"},"content":"                .withInfo(VALID_INFO_AMY).withPrice(VALID_PRICE_AMY).withStatus(VALID_STATUS_AMY)","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"Banana3021"},"content":"                .withInfo(VALID_INFO_BOB).withPrice(VALID_PRICE_BOB).withStatus(VALID_STATUS_BOB)","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"DesmondTo":3,"yin72257":1,"-":127,"Banana3021":20}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import static seedu.address.testutil.TypicalDate.getTypicalCountdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.Shortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalCountdown(),","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"            new UserPrefs(), new Shortcut());","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"yin72257"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getCountdown(),","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"yin72257"},"content":"                new UserPrefs(), new Shortcut());","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"yin72257"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getCountdown(),","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"yin72257"},"content":"                new UserPrefs(), new Shortcut());","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"DesmondTo":1,"yin72257":7,"-":106}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"import static seedu.address.testutil.TypicalDate.getTypicalCountdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.Countdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.Shortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"yin72257"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalCountdown(),","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"yin72257"},"content":"            new UserPrefs(), new Shortcut());","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"yin72257"},"content":"                new Countdown(model.getCountdown()), new UserPrefs(), new Shortcut());","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"yin72257"},"content":"                new Countdown(model.getCountdown()), new UserPrefs(), new Shortcut());","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"DesmondTo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"yin72257"},"content":"                new Countdown(model.getCountdown()), new UserPrefs(), new Shortcut());","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"DesmondTo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"yin72257"},"content":"                new Countdown(model.getCountdown()), new UserPrefs(), new Shortcut());","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"DesmondTo":6,"yin72257":7,"-":168}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import static seedu.address.testutil.TypicalDate.getTypicalCountdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.Shortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalCountdown(),","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"            new UserPrefs(), new Shortcut());","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalCountdown(),","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"            new UserPrefs(), new Shortcut());","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"yin72257"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate, \"\");","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"yin72257"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate, \"\");","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"yin72257"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate, \"\");","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"yin72257"},"content":"        String expectedMessage \u003d \"0 person(s) listed where \";","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"yin72257"},"content":"        FindCommand command \u003d new FindCommand(predicate, \"\");","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"yin72257"},"content":"        String expectedMessage \u003d \"3 person(s) listed where name is in [Kurz, Elle, Kunz] \";","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"yin72257"},"content":"        FindCommand command \u003d new FindCommand(predicate, \"name is in [Kurz, Elle, Kunz] \");","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"DesmondTo":1,"yin72257":13,"-":72}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import static seedu.address.testutil.TypicalDate.getTypicalCountdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.Shortcut;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalCountdown(), new UserPrefs(), new Shortcut());","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getCountdown(), new UserPrefs(), new Shortcut());","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"DesmondTo":1,"yin72257":3,"-":37}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INFO_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INFO_DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INFO_DESC;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRICE_DESC;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":24,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRICE_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRICE_DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INFO_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRICE_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Info;","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Price;","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"Banana3021"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"Banana3021"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"Banana3021"},"content":"                + ADDRESS_DESC_BOB + PRICE_DESC_BOB + INFO_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"Banana3021"},"content":"                + STATUS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Banana3021"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"Banana3021"},"content":"                + ADDRESS_DESC_BOB + PRICE_DESC_BOB + INFO_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"Banana3021"},"content":"                + STATUS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Banana3021"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"Banana3021"},"content":"                + ADDRESS_DESC_BOB + PRICE_DESC_BOB + INFO_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"Banana3021"},"content":"                + STATUS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Banana3021"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"Banana3021"},"content":"                + ADDRESS_DESC_BOB + PRICE_DESC_BOB + INFO_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"Banana3021"},"content":"                + STATUS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Banana3021"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"Banana3021"},"content":"                + ADDRESS_DESC_BOB + PRICE_DESC_BOB + INFO_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"Banana3021"},"content":"                + STATUS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Banana3021"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Banana3021"},"content":"        // multiple statuses - last status accepted","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Banana3021"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Banana3021"},"content":"                + ADDRESS_DESC_BOB + PRICE_DESC_BOB + INFO_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Banana3021"},"content":"                + STATUS_DESC_AMY + STATUS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Banana3021"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"Banana3021"},"content":"                + PRICE_DESC_BOB + INFO_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"Banana3021"},"content":"                + STATUS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":115,"author":{"gitId":"Banana3021"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"Banana3021"},"content":"                        + PRICE_DESC_AMY + INFO_DESC_AMY + STATUS_DESC_AMY,","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"Banana3021"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"Banana3021"},"content":"                        + PRICE_DESC_BOB + INFO_DESC_BOB + STATUS_DESC_BOB,","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"Banana3021"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"Banana3021"},"content":"                        + PRICE_DESC_BOB + INFO_DESC_BOB + STATUS_DESC_BOB,","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"Banana3021"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"Banana3021"},"content":"                        + PRICE_DESC_BOB + INFO_DESC_BOB + STATUS_DESC_BOB,","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"Banana3021"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"Banana3021"},"content":"                        + PRICE_DESC_BOB + INFO_DESC_BOB + STATUS_DESC_BOB,","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"Banana3021"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"Banana3021"},"content":"                        + VALID_PRICE_BOB + VALID_INFO_BOB + VALID_STATUS_BOB,","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"Banana3021"},"content":"                + PRICE_DESC_BOB + INFO_DESC_BOB + STATUS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"Banana3021"},"content":"                + PRICE_DESC_BOB + INFO_DESC_BOB + STATUS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":164,"author":{"gitId":"Banana3021"},"content":"                + PRICE_DESC_BOB + INFO_DESC_BOB + STATUS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"Banana3021"},"content":"                + PRICE_DESC_BOB + INFO_DESC_BOB + STATUS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":172,"author":{"gitId":"Banana3021"},"content":"        // invalid price","lastModifiedDate":"2021-10-05"},{"lineNumber":173,"author":{"gitId":"Banana3021"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":174,"author":{"gitId":"Banana3021"},"content":"                + INVALID_PRICE_DESC + INFO_DESC_BOB + STATUS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"Banana3021"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":176,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":177,"author":{"gitId":"Banana3021"},"content":"        // invalid info","lastModifiedDate":"2021-10-05"},{"lineNumber":178,"author":{"gitId":"Banana3021"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-05"},{"lineNumber":179,"author":{"gitId":"Banana3021"},"content":"                + PRICE_DESC_BOB + INVALID_INFO_DESC + STATUS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"Banana3021"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Info.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"Banana3021"},"content":"        // invalid status","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"Banana3021"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"Banana3021"},"content":"                + PRICE_DESC_BOB + INFO_DESC_BOB + INVALID_STATUS_DESC","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"Banana3021"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"Banana3021"},"content":"                + PRICE_DESC_BOB + INFO_DESC_BOB + STATUS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"Banana3021"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-10-05"},{"lineNumber":194,"author":{"gitId":"Banana3021"},"content":"                        + PRICE_DESC_BOB + INFO_DESC_BOB + STATUS_DESC_BOB,","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":199,"author":{"gitId":"Banana3021"},"content":"                        + ADDRESS_DESC_BOB + PRICE_DESC_BOB + INFO_DESC_BOB + STATUS_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"Banana3021"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":128,"Banana3021":75}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"yin72257"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords), \"\"), command);","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"yin72257":2,"-":99}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"                DeleteCommand.MESSAGE_INDEX_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"DesmondTo":2,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"Linda124"},"content":"        assertParseFailure(parser, \"1 j/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Linda124":1,"-":210}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")), \"\");","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"yin72257":2,"-":32}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"DesmondTo"},"content":"        Countdown countdown \u003d new Countdown();","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"DesmondTo"},"content":"        countdown.setDate(VALID_DATE);","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"DesmondTo"},"content":"        Countdown differentCountdown \u003d new Countdown();","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"yin72257"},"content":"        Shortcut shortcut \u003d new Shortcut();","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"yin72257"},"content":"        modelManager \u003d new ModelManager(addressBook, countdown, userPrefs, shortcut);","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"yin72257"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, countdown, userPrefs, shortcut);","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"yin72257"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, differentCountdown, userPrefs,","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"yin72257"},"content":"                shortcut)));","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":128,"author":{"gitId":"yin72257"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, countdown, userPrefs, shortcut)));","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":136,"author":{"gitId":"yin72257"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, countdown, differentUserPrefs, shortcut)));","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"DesmondTo":4,"yin72257":8,"-":126}},{"path":"src/test/java/seedu/address/model/person/InfoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Banana3021"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Banana3021"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Banana3021"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Banana3021"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Banana3021"},"content":"public class InfoTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Banana3021"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Banana3021"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Banana3021"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Info(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Banana3021"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Banana3021"},"content":"    public void constructor_invalidInfo_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Banana3021"},"content":"        String invalidInfo \u003d \"\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Banana3021"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Info(invalidInfo));","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Banana3021"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Banana3021"},"content":"    public void isValidImportantInfo() {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Banana3021"},"content":"        // null price","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Banana3021"},"content":"        assertThrows(NullPointerException.class, () -\u003e Info.isValidInfo(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Banana3021"},"content":"        // invalid price","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Banana3021"},"content":"        assertFalse(Info.isValidInfo(\"\")); // empty string","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Banana3021"},"content":"        assertFalse(Info.isValidInfo(\" \")); // spaces only","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Banana3021"},"content":"        // valid price","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Banana3021"},"content":"        assertTrue(Info.isValidInfo(\"only contactable via whatsapp\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Banana3021"},"content":"        assertTrue(Info.isValidInfo(\"none\")); // no important info","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Banana3021"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Banana3021":36}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"Banana3021"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withPrice(\"0.00\")","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"Banana3021"},"content":"                .withInfo(\"none\").withStatus(\"Pending\").build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"yin72257":1,"-":74,"Banana3021":2}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"DesmondTo":2,"-":89}},{"path":"src/test/java/seedu/address/model/person/PriceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Banana3021"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Banana3021"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Banana3021"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Banana3021"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Banana3021"},"content":"public class PriceTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Banana3021"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Banana3021"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Banana3021"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Price(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Banana3021"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Banana3021"},"content":"    public void constructor_invalidPrice_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Banana3021"},"content":"        String invalidPrice \u003d \"\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Banana3021"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Price(invalidPrice));","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Banana3021"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Banana3021"},"content":"    public void isValidPrice() {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Banana3021"},"content":"        // null price","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Banana3021"},"content":"        assertThrows(NullPointerException.class, () -\u003e Price.isValidPrice(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Banana3021"},"content":"        // invalid price","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Banana3021"},"content":"        assertFalse(Price.isValidPrice(\"\")); // empty string","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Banana3021"},"content":"        assertFalse(Price.isValidPrice(\" \")); // spaces only","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Banana3021"},"content":"        assertFalse(Price.isValidPrice(\"price\")); // contains non-numerical characters","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Banana3021"},"content":"        assertFalse(Price.isValidPrice(\".11\")); // invalid numerical input","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Banana3021"},"content":"        assertFalse(Price.isValidPrice(\"0.\")); // incorrect price formatting","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Banana3021"},"content":"        assertFalse(Price.isValidPrice(\"123.334\")); // too many decimal places","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Banana3021"},"content":"        // valid price","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Banana3021"},"content":"        assertTrue(Price.isValidPrice(\"500.12\")); // numbers to two decimal places only","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Banana3021"},"content":"        assertTrue(Price.isValidPrice(\"14.03\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Banana3021"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Banana3021":40}},{"path":"src/test/java/seedu/address/model/person/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Banana3021"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Banana3021"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Banana3021"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Banana3021"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Banana3021"},"content":"public class StatusTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Banana3021"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Banana3021"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Banana3021"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Banana3021"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Banana3021"},"content":"    public void constructor_invalidStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Banana3021"},"content":"        String invalidStatus \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Banana3021"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Status(invalidStatus));","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Banana3021"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Banana3021"},"content":"    public void isValidStatus() {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Banana3021"},"content":"        // null status","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Banana3021"},"content":"        assertThrows(NullPointerException.class, () -\u003e Status.isValidStatus(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Banana3021"},"content":"        // invalid status","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Banana3021"},"content":"        assertFalse(Status.isValidStatus(\"\")); // empty string","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Banana3021"},"content":"        assertFalse(Status.isValidStatus(\" \")); // spaces only","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Banana3021"},"content":"        assertFalse(Status.isValidStatus(\"random\")); // invalid status","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Banana3021"},"content":"        assertFalse(Status.isValidStatus(\"77gbsk3\")); // contains numbers","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Banana3021"},"content":"        // valid status","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Banana3021"},"content":"        assertTrue(Status.isValidStatus(\"Confirmed\")); // valid status","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Banana3021"},"content":"        assertTrue(Status.isValidStatus(\"Pending\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Banana3021"},"content":"        assertTrue(Status.isValidStatus(\"Declined\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Banana3021"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Banana3021":39}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Info;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Price;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Banana3021"},"content":"    private static final String INVALID_PRICE \u003d \"5r2\";","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Banana3021"},"content":"    private static final String INVALID_INFO \u003d \" \";","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Banana3021"},"content":"    private static final String INVALID_STATUS \u003d \"78camp\";","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Banana3021"},"content":"    private static final String VALID_PRICE \u003d BENSON.getPrice().toString();","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Banana3021"},"content":"    private static final String VALID_INFO \u003d BENSON.getInfo().toString();","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Banana3021"},"content":"    private static final String VALID_STATUS \u003d BENSON.getStatus().toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"Banana3021"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_PRICE,","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Banana3021"},"content":"                        VALID_INFO, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Banana3021"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"Banana3021"},"content":"                VALID_PRICE, VALID_INFO, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Banana3021"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"Banana3021"},"content":"                        VALID_PRICE, VALID_INFO, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"Banana3021"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"Banana3021"},"content":"                VALID_PRICE, VALID_INFO, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"Banana3021"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"Banana3021"},"content":"                        VALID_PRICE, VALID_INFO, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"Banana3021"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"Banana3021"},"content":"                VALID_PRICE, VALID_INFO, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"Banana3021"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"Banana3021"},"content":"                        VALID_PRICE, VALID_INFO, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"Banana3021"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"Banana3021"},"content":"                VALID_PRICE, VALID_INFO, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"Banana3021"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"Banana3021"},"content":"    public void toModelType_invalidPrice_throwsIllegalValueException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"Banana3021"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"Banana3021"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"Banana3021"},"content":"                        INVALID_PRICE, VALID_INFO, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"Banana3021"},"content":"        String expectedMessage \u003d Price.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"Banana3021"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"Banana3021"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"Banana3021"},"content":"    public void toModelType_nullPrice_throwsIllegalValueException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"Banana3021"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"Banana3021"},"content":"                null, VALID_INFO, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"Banana3021"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Price.class.getSimpleName());","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"Banana3021"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"Banana3021"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"Banana3021"},"content":"    public void toModelType_invalidInfo_throwsIllegalValueException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"Banana3021"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"Banana3021"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"Banana3021"},"content":"                        VALID_PRICE, INVALID_INFO, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"Banana3021"},"content":"        String expectedMessage \u003d Info.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"Banana3021"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"Banana3021"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"Banana3021"},"content":"    public void toModelType_nullInfo_throwsIllegalValueException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"Banana3021"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"Banana3021"},"content":"                VALID_PRICE, null, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"Banana3021"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Info.class.getSimpleName());","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"Banana3021"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"Banana3021"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"Banana3021"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"Banana3021"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"Banana3021"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"Banana3021"},"content":"                        VALID_PRICE, VALID_INFO, INVALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"Banana3021"},"content":"        String expectedMessage \u003d Status.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"Banana3021"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"Banana3021"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"Banana3021"},"content":"    public void toModelType_nullStatus_throwsIllegalValueException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"Banana3021"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"Banana3021"},"content":"                VALID_PRICE, VALID_INFO, null, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"Banana3021"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName());","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"Banana3021"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"Banana3021"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-05"},{"lineNumber":175,"author":{"gitId":"Banana3021"},"content":"                        VALID_PRICE, VALID_INFO, VALID_STATUS, invalidTags);","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":101,"Banana3021":78}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"        JsonCountdownStorage countdownStorage \u003d new JsonCountdownStorage(getTempFilePath(\"cd\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"        JsonShortcutStorage shortcutStorage \u003d new JsonShortcutStorage(getTempFilePath(\"sc\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, countdownStorage, userPrefsStorage, shortcutStorage);","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DesmondTo":1,"yin72257":2,"-":67}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Info;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Price;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"Banana3021"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"Banana3021"},"content":"    public EditPersonDescriptorBuilder withPrice(String price) {","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"Banana3021"},"content":"        descriptor.setPrice(new Price(price));","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"Banana3021"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"Banana3021"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"Banana3021"},"content":"    public EditPersonDescriptorBuilder withInfo(String info) {","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"Banana3021"},"content":"        descriptor.setInfo(new Info(info));","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"Banana3021"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Banana3021"},"content":"     * Sets the {@code Status} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Banana3021"},"content":"    public EditPersonDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Banana3021"},"content":"        descriptor.setStatus(new Status(status));","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Banana3021"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":114,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":87,"Banana3021":28}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Info;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Price;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Banana3021"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"Banana3021"},"content":"    public static final String DEFAULT_PRICE \u003d \"0.00\";","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Banana3021"},"content":"    public static final String DEFAULT_INFO \u003d \"none\";","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Banana3021"},"content":"    public static final String DEFAULT_STATUS \u003d \"Pending\";","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"Banana3021"},"content":"    private Price price;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Banana3021"},"content":"    private Info info;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Banana3021"},"content":"    private Status status;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"Banana3021"},"content":"        price \u003d new Price(DEFAULT_PRICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Banana3021"},"content":"        info \u003d new Info(DEFAULT_INFO);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Banana3021"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"Banana3021"},"content":"        price \u003d personToCopy.getPrice();","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"Banana3021"},"content":"        info \u003d personToCopy.getInfo();","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"Banana3021"},"content":"        status \u003d personToCopy.getStatus();","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"Banana3021"},"content":"     * Sets the {@code Price} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"Banana3021"},"content":"    public PersonBuilder withPrice(String price) {","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"Banana3021"},"content":"        this.price \u003d new Price(price);","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"Banana3021"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"Banana3021"},"content":"     * Sets the {@code Info} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"Banana3021"},"content":"    public PersonBuilder withInfo(String info) {","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"Banana3021"},"content":"        this.info \u003d new Info(info);","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"Banana3021"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"Banana3021"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"Banana3021"},"content":"     * Sets the {@code Status} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Banana3021"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"Banana3021"},"content":"    public PersonBuilder withStatus(String status) {","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"Banana3021"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"Banana3021"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"Banana3021"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"Banana3021"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":133,"author":{"gitId":"Banana3021"},"content":"        return new Person(name, phone, email, address, price, info, status, tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":95,"Banana3021":41}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFO;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"Banana3021"},"content":"        sb.append(PREFIX_PRICE + person.getPrice().value + \" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Banana3021"},"content":"        sb.append(PREFIX_INFO + person.getInfo().value + \" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"Banana3021"},"content":"        sb.append(PREFIX_STATUS + person.getStatus().value + \" \");","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"Banana3021"},"content":"        descriptor.getPrice().ifPresent(price -\u003e sb.append(PREFIX_PRICE).append(price.value).append(\" \"));","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"Banana3021"},"content":"        descriptor.getInfo().ifPresent(info -\u003e sb.append(PREFIX_INFO).append(info.value).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Banana3021"},"content":"        descriptor.getStatus().ifPresent(status -\u003e sb.append(PREFIX_STATUS).append(status.value).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":62,"Banana3021":9}},{"path":"src/test/java/seedu/address/testutil/TypicalDate.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import seedu.address.model.Countdown;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"public class TypicalDate {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"    public static final LocalDate MY_WEDDING_DATE \u003d VALID_DATE;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    private TypicalDate() {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     * Returns a {@code Countdown} with the typical wedding date.","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    public static Countdown getTypicalCountdown() {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"        Countdown cd \u003d new Countdown();","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"        cd.setDate(MY_WEDDING_DATE);","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"        return cd;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"DesmondTo":25}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INFO_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRICE_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Banana3021"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"Banana3021"},"content":"            .withPhone(\"94351253\").withPrice(\"0.00\").withInfo(\"none\").withStatus(\"Pending\")","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":36,"author":{"gitId":"Banana3021"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withPrice(\"0.00\").withInfo(\"none\")","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Banana3021"},"content":"            .withStatus(\"Pending\")","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"Banana3021"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withPrice(\"0.00\").withInfo(\"none\")","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Banana3021"},"content":"            .withStatus(\"Confirmed\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"Banana3021"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Banana3021"},"content":"            .withPrice(\"0.00\").withInfo(\"none\").withStatus(\"Declined\").withTags(\"friends\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"Banana3021"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withPrice(\"0.00\").withInfo(\"none\")","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Banana3021"},"content":"            .withStatus(\"Declined\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"Banana3021"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withPrice(\"0.00\").withInfo(\"none\")","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Banana3021"},"content":"            .withStatus(\"Confirmed\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"Banana3021"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withPrice(\"0.00\").withInfo(\"none\")","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Banana3021"},"content":"            .withStatus(\"Confirmed\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"Banana3021"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withPrice(\"0.00\").withInfo(\"none\")","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Banana3021"},"content":"            .withStatus(\"Confirmed\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"Banana3021"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withPrice(\"0.00\").withInfo(\"none\")","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Banana3021"},"content":"            .withStatus(\"Pending\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"Banana3021"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"Banana3021"},"content":"            .withInfo(VALID_INFO_AMY).withPrice(VALID_PRICE_AMY).withStatus(VALID_STATUS_AMY).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"Banana3021"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withInfo(VALID_INFO_AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"Banana3021"},"content":"            .withPrice(VALID_PRICE_AMY).withStatus(VALID_STATUS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"Banana3021"},"content":"    private TypicalPersons() {","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"Banana3021"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"-":64,"Banana3021":27}}]
