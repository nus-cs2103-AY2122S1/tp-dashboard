[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W12-3/tp/branch/master/graph/badge.svg?token\u003d0389OOQRT8)](https://codecov.io/gh/AY2122S1-CS2103T-W12-3/tp)","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"Pocket Hotel (PH) is a **desktop app for hotel managers that provides a centralized location to manage their staff and guests, improving workflow.** It is optimized for use via a Command Line Interface (CLI) whilst still witholding some of the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"For detailed **documentation**, please refer to the [PH Website](https://ay2122s1-cs2103t-w12-3.github.io/tp/)","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"_This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)._","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"calvintanwj":5,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"alyssa-savier"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"alyssa-savier"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.7.0\u0027","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"    archiveName \u003d \u0027PH.jar\u0027","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"calvintanwj":1,"alyssa-savier":2,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"alyssa-savier"},"content":"### Alyssa Savier","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"\u003cimg src\u003d\"images/alyssa-savier.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"alyssa-savier"},"content":"[[github](https://github.com/alyssa-savier)]","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"[[portfolio](team/alyssa-savier.md)]","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"* Role:","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"### Jeremy Yeo Zhi Chen","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"\u003cimg src\u003d\"images/rgbpokka.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"[[github](https://github.com/rgbpokka)]","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"[[portfolio](team/rgbpokka.md)]","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"* Role:","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"### Calvin Tan","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"\u003cimg src\u003d\"images/calvintanwj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"[[github](https://github.com/calvintanwj)]","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"[[portfolio](team/calvintanwj.md)]","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"* Role:","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"NicolasCwy"},"content":"### Nicolas Chang","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"\u003cimg src\u003d\"images/nicolascwy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"NicolasCwy"},"content":"[[github](https://github.com/NicolasCwy)]","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"[[portfolio](team/nicolascwy.md)]","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"NicolasCwy"},"content":"* Role:","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"NicolasCwy"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"### Toh Bing Cheng","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"\u003cimg src\u003d\"images/bingcheng45.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"[[github](http://github.com/bingcheng45)]","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"[[portfolio](team/bingcheng45.md)]","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"* Role:","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rgbpokka":3,"calvintanwj":17,"alyssa-savier":2,"bingcheng45":4,"-":32,"NicolasCwy":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"## **Table of Contents**","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"  original source as well}","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"diagrams.","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"**`Main`** has two classes","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"is responsible for,","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"NicolasCwy"},"content":"the command `delete sid/123`.","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"The **API** of this component is specified","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":", `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"is specified","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"**","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"   executed by the `LogicManager`.","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"NicolasCwy"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete sid/123\")` API","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"call.","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"  a `Command` object.","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"**","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2021-09-25"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2021-09-25"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"**","lastModifiedDate":"2021-09-25"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding","lastModifiedDate":"2021-09-25"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"  objects.","lastModifiedDate":"2021-09-25"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2021-09-25"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2021-09-25"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2021-09-25"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"  that belong to the `Model`)","lastModifiedDate":"2021-09-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"calvintanwj"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2021-09-25"},{"lineNumber":203,"author":{"gitId":"calvintanwj"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2021-09-25"},{"lineNumber":204,"author":{"gitId":"calvintanwj"},"content":"following operations:","lastModifiedDate":"2021-09-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"calvintanwj"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2021-09-25"},{"lineNumber":207,"author":{"gitId":"calvintanwj"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2021-09-25"},{"lineNumber":208,"author":{"gitId":"calvintanwj"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2021-09-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"calvintanwj"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2021-09-25"},{"lineNumber":211,"author":{"gitId":"calvintanwj"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2021-09-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"calvintanwj"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2021-09-25"},{"lineNumber":216,"author":{"gitId":"calvintanwj"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2021-09-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"calvintanwj"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command","lastModifiedDate":"2021-09-25"},{"lineNumber":221,"author":{"gitId":"calvintanwj"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2021-09-25"},{"lineNumber":222,"author":{"gitId":"calvintanwj"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2021-09-25"},{"lineNumber":223,"author":{"gitId":"calvintanwj"},"content":"state.","lastModifiedDate":"2021-09-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"calvintanwj"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`","lastModifiedDate":"2021-09-25"},{"lineNumber":228,"author":{"gitId":"calvintanwj"},"content":", causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-09-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"calvintanwj"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing","lastModifiedDate":"2021-09-25"},{"lineNumber":237,"author":{"gitId":"calvintanwj"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2021-09-25"},{"lineNumber":238,"author":{"gitId":"calvintanwj"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-09-25"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"calvintanwj"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2021-09-25"},{"lineNumber":256,"author":{"gitId":"calvintanwj"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2021-09-25"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"calvintanwj"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2021-09-25"},{"lineNumber":263,"author":{"gitId":"calvintanwj"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2021-09-25"},{"lineNumber":264,"author":{"gitId":"calvintanwj"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2021-09-25"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"calvintanwj"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2021-09-25"},{"lineNumber":269,"author":{"gitId":"calvintanwj"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2021-09-25"},{"lineNumber":270,"author":{"gitId":"calvintanwj"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2021-09-25"},{"lineNumber":271,"author":{"gitId":"calvintanwj"},"content":"desktop applications follow.","lastModifiedDate":"2021-09-25"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"calvintanwj"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by itself.","lastModifiedDate":"2021-09-25"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"calvintanwj"},"content":"**Target user profile**: Hotel managers (or individuals in hotel management)","lastModifiedDate":"2021-09-25"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"calvintanwj"},"content":"* has a need to manage a significant number of contacts (both staff and guests)","lastModifiedDate":"2021-09-25"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":320,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"calvintanwj"},"content":"**Value proposition**: Manage and keep track of guests and staff members in the hotel, improving workflow.","lastModifiedDate":"2021-09-25"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"| Priority | As a …​            | I want to …​                                     | So that I can…​                                                                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"calvintanwj"},"content":"| -------- | ----------------------| --------------------------------------------------- | ------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-09-25"},{"lineNumber":330,"author":{"gitId":"calvintanwj"},"content":"| `* * *`  | user                  | add contact details of staff and guests             | keep in contact with them                                                             |","lastModifiedDate":"2021-09-25"},{"lineNumber":331,"author":{"gitId":"calvintanwj"},"content":"| `* * *`  | user                  | edit contact details of staff and guests            | have the most updated information.                                                    |","lastModifiedDate":"2021-09-25"},{"lineNumber":332,"author":{"gitId":"calvintanwj"},"content":"| `* * *`  | user                  | view profile page of a specified staff or guest     | see all their information and any notes about them                                    |","lastModifiedDate":"2021-09-25"},{"lineNumber":333,"author":{"gitId":"calvintanwj"},"content":"| `* * *`  | user                  | delete guests/staff                                 | keep track of only current guests and staff members within the hotel.                 |","lastModifiedDate":"2021-09-25"},{"lineNumber":334,"author":{"gitId":"calvintanwj"},"content":"| `* * *`  | user                  | see help instructions                               | get help on how to use the app                                                        |","lastModifiedDate":"2021-09-25"},{"lineNumber":335,"author":{"gitId":"calvintanwj"},"content":"| `* * *`  | user                  | save the details I enter                            |                                                                                       |","lastModifiedDate":"2021-09-25"},{"lineNumber":336,"author":{"gitId":"calvintanwj"},"content":"| `* *  `  | new user              | clear all current data                              | get rid of sample data                                                                |","lastModifiedDate":"2021-09-25"},{"lineNumber":337,"author":{"gitId":"calvintanwj"},"content":"| `* *  `  | potential user        | see app populated with sample contacts              | easily learn and get a feel for the app                                               |","lastModifiedDate":"2021-09-25"},{"lineNumber":338,"author":{"gitId":"calvintanwj"},"content":"| `* *`    | expert user           | export staff/guest details out from the system      | transfer data to the next manager who takes over me or import data into other systems |","lastModifiedDate":"2021-09-25"},{"lineNumber":339,"author":{"gitId":"calvintanwj"},"content":"| `* *`    | user                  | add tags to contacts                                | easily categorize and filter contacts                                                 |","lastModifiedDate":"2021-09-25"},{"lineNumber":340,"author":{"gitId":"calvintanwj"},"content":"| `* *`    | user                  | filter contacts by tags                             | look at contacts in  more manageable lists.                                           |","lastModifiedDate":"2021-10-01"},{"lineNumber":341,"author":{"gitId":"calvintanwj"},"content":"| `* *`    | CLI user              | be reminded of the commands available as a quick tip| quickly get a reminder of how to use a specific command.                              |","lastModifiedDate":"2021-09-25"},{"lineNumber":342,"author":{"gitId":"calvintanwj"},"content":"| `* *`    | user                  | view certain statistics of my guests/staff          | improve hotel experience depending on the data I can see.                             |","lastModifiedDate":"2021-10-16"},{"lineNumber":343,"author":{"gitId":"calvintanwj"},"content":"| `* *`    | user                  | sort the staff/guests by a certain criteria         | so that I can find people quicker, based on whichever sorting criteria I set          |","lastModifiedDate":"2021-10-16"},{"lineNumber":344,"author":{"gitId":"calvintanwj"},"content":"| `* *`    | CLI user              | undo commands                                       | so that I can undo a command if I choose to do so.                                    |","lastModifiedDate":"2021-10-16"},{"lineNumber":345,"author":{"gitId":"calvintanwj"},"content":"| `*`      | expert user           | personalize my GUI to my liking                     | optimise the layout to cater to my needs                                              |","lastModifiedDate":"2021-09-25"},{"lineNumber":346,"author":{"gitId":"calvintanwj"},"content":"| `*`      | CLI user              | add aliases to my commands                          | execute commands quickly with shorter syntax                                          |","lastModifiedDate":"2021-09-25"},{"lineNumber":347,"author":{"gitId":"calvintanwj"},"content":"| `*`      | new user              | import staff/guest details from an existing system  | use data that is being kept track from other systems into the app                     |","lastModifiedDate":"2021-10-16"},{"lineNumber":348,"author":{"gitId":"calvintanwj"},"content":"| `*`      | new user              | learn how to use the app (Tutorial)                 | get more familiar with the features they offer and how I can use it better            |","lastModifiedDate":"2021-10-16"},{"lineNumber":349,"author":{"gitId":"calvintanwj"},"content":"| `*  `    | user                  | add images to my contacts                           | recognize them in real life to greet them; improve guest experience; recognize staff  |","lastModifiedDate":"2021-10-16"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"calvintanwj"},"content":"(For all use cases below, the **System** is the `PH` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-10-16"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":355,"author":{"gitId":"calvintanwj"},"content":"#### UC1: Clearing all details from the app","lastModifiedDate":"2021-10-01"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":357,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":359,"author":{"gitId":"calvintanwj"},"content":"1. User requests to clear all the data.","lastModifiedDate":"2021-09-25"},{"lineNumber":360,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":361,"author":{"gitId":"calvintanwj"},"content":"2. **PH** prompts user with a confirmation message.","lastModifiedDate":"2021-10-01"},{"lineNumber":362,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":363,"author":{"gitId":"calvintanwj"},"content":"3. User confirms to proceed with the clear.","lastModifiedDate":"2021-09-25"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":365,"author":{"gitId":"calvintanwj"},"content":"4. **PH** clears all the data.","lastModifiedDate":"2021-10-01"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"bingcheng45"},"content":"5. `data\\addressbook.json` becomes empty","lastModifiedDate":"2021-10-22"},{"lineNumber":368,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":369,"author":{"gitId":"calvintanwj"},"content":"   Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":371,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-25"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":373,"author":{"gitId":"NicolasCwy"},"content":"* 2a. User does not confirm to clearing entries.","lastModifiedDate":"2021-10-20"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":375,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":377,"author":{"gitId":"calvintanwj"},"content":"#### UC2: Saving data","lastModifiedDate":"2021-10-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"calvintanwj"},"content":"1. User enters a valid command with valid arguments","lastModifiedDate":"2021-09-25"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":383,"author":{"gitId":"calvintanwj"},"content":"2. Contact list which is modified gets saved and replaces existing save file.","lastModifiedDate":"2021-09-25"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":385,"author":{"gitId":"calvintanwj"},"content":"3. **PH** shows a success message to user indicating command has been executed successfully.","lastModifiedDate":"2021-10-01"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"NicolasCwy"},"content":"* 1a. Error occurs when saving new contact list","lastModifiedDate":"2021-10-20"},{"lineNumber":392,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":393,"author":{"gitId":"calvintanwj"},"content":"    * 2a1. **PH** reverts to old contact list before the execution of the command.","lastModifiedDate":"2021-10-01"},{"lineNumber":394,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":395,"author":{"gitId":"rgbpokka"},"content":"    * 2a2. **PH** informs the user that saving the new contact list was unsuccessful.","lastModifiedDate":"2021-10-08"},{"lineNumber":396,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":397,"author":{"gitId":"calvintanwj"},"content":"      Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":398,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":399,"author":{"gitId":"NicolasCwy"},"content":"#### UC3: Searching for a guest","lastModifiedDate":"2021-10-20"},{"lineNumber":400,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":401,"author":{"gitId":"calvintanwj"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":402,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":403,"author":{"gitId":"NicolasCwy"},"content":"1. User keys in command to search for a specified guest.","lastModifiedDate":"2021-10-20"},{"lineNumber":404,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":405,"author":{"gitId":"NicolasCwy"},"content":"2. **PH** shows the specified guest that matches the user\u0027s query.","lastModifiedDate":"2021-10-20"},{"lineNumber":406,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":407,"author":{"gitId":"calvintanwj"},"content":"   Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":408,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":409,"author":{"gitId":"calvintanwj"},"content":"**Extensions**","lastModifiedDate":"2021-09-25"},{"lineNumber":410,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":411,"author":{"gitId":"calvintanwj"},"content":"* 1a. Contact list is empty.","lastModifiedDate":"2021-09-25"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"NicolasCwy"},"content":"* 1b. No guest found that matches user\u0027s query.","lastModifiedDate":"2021-10-20"},{"lineNumber":416,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":417,"author":{"gitId":"NicolasCwy"},"content":"    * 1b1. **PH** shows message indicating no such guest exists in the list.","lastModifiedDate":"2021-10-20"},{"lineNumber":418,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":419,"author":{"gitId":"calvintanwj"},"content":"      Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":420,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":421,"author":{"gitId":"NicolasCwy"},"content":"#### UC4: Searching for a staff","lastModifiedDate":"2021-10-20"},{"lineNumber":422,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":423,"author":{"gitId":"NicolasCwy"},"content":"Same as UC3 except that guest is replaced with staff.","lastModifiedDate":"2021-10-20"},{"lineNumber":424,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":425,"author":{"gitId":"NicolasCwy"},"content":"#### UC4: Searching for a staff","lastModifiedDate":"2021-10-20"},{"lineNumber":426,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":427,"author":{"gitId":"NicolasCwy"},"content":"**MSS**","lastModifiedDate":"2021-10-20"},{"lineNumber":428,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":429,"author":{"gitId":"NicolasCwy"},"content":"1. User keys in command to search for a specified guest.","lastModifiedDate":"2021-10-20"},{"lineNumber":430,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":431,"author":{"gitId":"NicolasCwy"},"content":"2. **PH** shows the specified guest that matches the user\u0027s query.","lastModifiedDate":"2021-10-20"},{"lineNumber":432,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":433,"author":{"gitId":"NicolasCwy"},"content":"   Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":434,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":435,"author":{"gitId":"NicolasCwy"},"content":"**Extensions**","lastModifiedDate":"2021-10-20"},{"lineNumber":436,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":437,"author":{"gitId":"NicolasCwy"},"content":"* 1a. Contact list is empty.","lastModifiedDate":"2021-10-20"},{"lineNumber":438,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":439,"author":{"gitId":"NicolasCwy"},"content":"  Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":440,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":441,"author":{"gitId":"NicolasCwy"},"content":"* 1b. No guest found that matches user\u0027s query.","lastModifiedDate":"2021-10-20"},{"lineNumber":442,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":443,"author":{"gitId":"NicolasCwy"},"content":"    * 1b1. **PH** shows message indicating no such guest exists in the list.","lastModifiedDate":"2021-10-20"},{"lineNumber":444,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":445,"author":{"gitId":"NicolasCwy"},"content":"      Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":446,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":447,"author":{"gitId":"NicolasCwy"},"content":"#### UC5: Editing fields of guest","lastModifiedDate":"2021-10-20"},{"lineNumber":448,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":449,"author":{"gitId":"rgbpokka"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":450,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":451,"author":{"gitId":"NicolasCwy"},"content":"1. User keys in command to edit a particular field of a specified guest.","lastModifiedDate":"2021-10-20"},{"lineNumber":452,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":453,"author":{"gitId":"NicolasCwy"},"content":"2. **PH** shows a success message to user which displays the new details of the guest.","lastModifiedDate":"2021-10-20"},{"lineNumber":454,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":455,"author":{"gitId":"rgbpokka"},"content":"   Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":456,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":457,"author":{"gitId":"rgbpokka"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":458,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":459,"author":{"gitId":"rgbpokka"},"content":"* 1a. Contact list is empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":460,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":461,"author":{"gitId":"rgbpokka"},"content":"  Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":462,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":463,"author":{"gitId":"NicolasCwy"},"content":"* 1b. No guest found that matches user\u0027s query.","lastModifiedDate":"2021-10-20"},{"lineNumber":464,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":465,"author":{"gitId":"NicolasCwy"},"content":"    * 1b1. **PH** shows message indicating no such guest exists in the list.","lastModifiedDate":"2021-10-20"},{"lineNumber":466,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":467,"author":{"gitId":"calvintanwj"},"content":"      Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":468,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":469,"author":{"gitId":"calvintanwj"},"content":"* 1c. The field that the user wishes to edit does not exist.","lastModifiedDate":"2021-10-01"},{"lineNumber":470,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":471,"author":{"gitId":"calvintanwj"},"content":"    * 1c1. **PH** shows message indicating no such field exists.","lastModifiedDate":"2021-10-01"},{"lineNumber":472,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":473,"author":{"gitId":"calvintanwj"},"content":"      Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"NicolasCwy"},"content":"#### UC6: Editing fields of staff","lastModifiedDate":"2021-10-20"},{"lineNumber":476,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":477,"author":{"gitId":"NicolasCwy"},"content":"Same as UC5 except that guest is replaced with staff.","lastModifiedDate":"2021-10-20"},{"lineNumber":478,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":479,"author":{"gitId":"NicolasCwy"},"content":"#### UC7: Adding guests","lastModifiedDate":"2021-10-20"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"alyssa-savier"},"content":"**MSS**","lastModifiedDate":"2021-10-01"},{"lineNumber":482,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":483,"author":{"gitId":"NicolasCwy"},"content":"1. User keys in command to add a guest.","lastModifiedDate":"2021-10-20"},{"lineNumber":484,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":485,"author":{"gitId":"NicolasCwy"},"content":"2. **PH** shows a success message to user which displays the added guest in the list.","lastModifiedDate":"2021-10-20"},{"lineNumber":486,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":487,"author":{"gitId":"alyssa-savier"},"content":"   Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":488,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":489,"author":{"gitId":"alyssa-savier"},"content":"**Extensions**","lastModifiedDate":"2021-10-01"},{"lineNumber":490,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":491,"author":{"gitId":"alyssa-savier"},"content":"* 1a. Name, passport number or staff field is left blank.","lastModifiedDate":"2021-10-01"},{"lineNumber":492,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":493,"author":{"gitId":"calvintanwj"},"content":"    * 1a1. **PH** shows message indicating a blank name, passport number or staff field is not allowed for both guests","lastModifiedDate":"2021-10-16"},{"lineNumber":494,"author":{"gitId":"calvintanwj"},"content":"      and staff.","lastModifiedDate":"2021-10-16"},{"lineNumber":495,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":496,"author":{"gitId":"calvintanwj"},"content":"      Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":497,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":498,"author":{"gitId":"calvintanwj"},"content":"* 1b. Both passport number and staff ID fields are filled in.","lastModifiedDate":"2021-10-01"},{"lineNumber":499,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":500,"author":{"gitId":"calvintanwj"},"content":"    * 1b1. **PH** shows message indicating an entry cannot contain both a passport number and staff ID.","lastModifiedDate":"2021-10-01"},{"lineNumber":501,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":502,"author":{"gitId":"calvintanwj"},"content":"      Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":503,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":504,"author":{"gitId":"calvintanwj"},"content":"* 1c. Non-alphanumeric characters are used in the name field.","lastModifiedDate":"2021-10-01"},{"lineNumber":505,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":506,"author":{"gitId":"calvintanwj"},"content":"    * 1c1. **PH** shows message indicating only alphanumeric characters are to be used for names.","lastModifiedDate":"2021-10-01"},{"lineNumber":507,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":508,"author":{"gitId":"calvintanwj"},"content":"      Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"NicolasCwy"},"content":"#### UC8: Adding staff","lastModifiedDate":"2021-10-20"},{"lineNumber":511,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":512,"author":{"gitId":"NicolasCwy"},"content":"Same as UC7 except that guest is replaced with staff.","lastModifiedDate":"2021-10-20"},{"lineNumber":513,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":514,"author":{"gitId":"NicolasCwy"},"content":"#### UC9: Deleting guest","lastModifiedDate":"2021-10-20"},{"lineNumber":515,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":516,"author":{"gitId":"NicolasCwy"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":517,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":518,"author":{"gitId":"NicolasCwy"},"content":"1. User asks **PH** to delete a guest","lastModifiedDate":"2021-10-20"},{"lineNumber":519,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":520,"author":{"gitId":"NicolasCwy"},"content":"2. **PH** informs user that guest is deleted","lastModifiedDate":"2021-10-20"},{"lineNumber":521,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":522,"author":{"gitId":"NicolasCwy"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":523,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":524,"author":{"gitId":"NicolasCwy"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":525,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":526,"author":{"gitId":"NicolasCwy"},"content":"* 2a. No guest found that matches user\u0027s query","lastModifiedDate":"2021-10-20"},{"lineNumber":527,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":528,"author":{"gitId":"NicolasCwy"},"content":"    * 2a1. **PH** informs user that the guest does not exist","lastModifiedDate":"2021-10-20"},{"lineNumber":529,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":530,"author":{"gitId":"calvintanwj"},"content":"      Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":531,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":532,"author":{"gitId":"NicolasCwy"},"content":"#### UC10: Deleting staff","lastModifiedDate":"2021-10-20"},{"lineNumber":533,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":534,"author":{"gitId":"NicolasCwy"},"content":"Same as UC9 except that guest is replaced with staff.","lastModifiedDate":"2021-10-20"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":537,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"calvintanwj"},"content":"1. Should work on any **Mainstream OS** as long as it has Java `11` or above installed.","lastModifiedDate":"2021-10-01"},{"lineNumber":542,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"calvintanwj"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2021-09-25"},{"lineNumber":544,"author":{"gitId":"calvintanwj"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-25"},{"lineNumber":545,"author":{"gitId":"calvintanwj"},"content":"4. **PH** should retain all functionalities even without a connection to the internet.","lastModifiedDate":"2021-10-01"},{"lineNumber":546,"author":{"gitId":"calvintanwj"},"content":"5. **PH** is meant to be used by single user at any given time.","lastModifiedDate":"2021-10-01"},{"lineNumber":547,"author":{"gitId":"-"},"content":"   *{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"calvintanwj"},"content":"* **PH**: Acronym for Pocket Hotel","lastModifiedDate":"2021-09-25"},{"lineNumber":552,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"rgbpokka"},"content":"* **Guest**: A person staying in Pocket Hotel","lastModifiedDate":"2021-10-08"},{"lineNumber":555,"author":{"gitId":"rgbpokka"},"content":"* **Staff**: An employee of Pocket Hotel","lastModifiedDate":"2021-10-08"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"calvintanwj"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2021-09-25"},{"lineNumber":575,"author":{"gitId":"calvintanwj"},"content":"       optimum.","lastModifiedDate":"2021-09-25"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"calvintanwj"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2021-09-25"},{"lineNumber":594,"author":{"gitId":"calvintanwj"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2021-09-25"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"calvintanwj"},"content":"   i. Test case: go to `data\\addressbook.json` and corrupt the file. On bootup of the program, there should be a","lastModifiedDate":"2021-10-16"},{"lineNumber":609,"author":{"gitId":"calvintanwj"},"content":"   notification in the command box saying","lastModifiedDate":"2021-10-16"},{"lineNumber":610,"author":{"gitId":"bingcheng45"},"content":"   \"File corrupted! Restored a new file.\" and the program will delete and load a fresh new file.","lastModifiedDate":"2021-10-01"},{"lineNumber":611,"author":{"gitId":"bingcheng45"},"content":"    ","lastModifiedDate":"2021-10-22"},{"lineNumber":612,"author":{"gitId":"bingcheng45"},"content":"    ii. Rename `data\\addressbook.json` to something else like `data\\addressbook.json` would cause the addressbook","lastModifiedDate":"2021-10-22"},{"lineNumber":613,"author":{"gitId":"bingcheng45"},"content":"    to be not found and load the sample contacts into the addressbook.","lastModifiedDate":"2021-10-22"},{"lineNumber":614,"author":{"gitId":"bingcheng45"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"rgbpokka":17,"calvintanwj":188,"alyssa-savier":11,"bingcheng45":7,"-":323,"NicolasCwy":68}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"\u003ch3\u003e\u003ci\u003eWelcome to the Pocket Hotel User Guide!\u003c/i\u003e\u003c/h3\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"**Pocket Hotel (PH)** is a specialized contact management desktop app targeted towards hotel front office staff such as front desk staff who","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"frequently interact with guests.","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"**PH** provides a centralized location to store, organize and manage information linked to your guests and vendors employed by the hotel. **PH**","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"streamlines your workflow and is optimized for use via the _Command Line Interface_ (**CLI**), whilst still embodying","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"the benefits of a _Graphical User Interface_ (**GUI**).","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"This user guide serves as an entry point for users to get oriented with how **PH** operates and how you may utilize it","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"fully to integrate it within your hotel management system.","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"## **Table of Contents**","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"  {:toc}","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"## **Quick start**","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"NicolasCwy"},"content":"1. Ensure you have Java `11` or above installed in your Computer ([Instructions on how to check Java version](#faq)).","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"2. Download the latest `PH.jar` from [here](https://github.com/AY2122S1-CS2103T-W12-3/tp/releases).","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for **PH**.","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"4. To start the application, you may either:","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"  1. Double-click the `PH.jar` file to boot up the app.","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"  2. Open up your shell terminal in the directory where **PH** resides, and run the command `java -jar PH.jar`.","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"     The **GUI** similar to the below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"NicolasCwy"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"\u003cp align\u003d\"center\"\u003e\u003ci\u003eFigure 1. Pocket Hotel GUI\u003c/i\u003e\u003c/p\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"NicolasCwy"},"content":"5. Type any command in the command box (Denoted by \"Enter command here\" text) and press Enter to execute it. e.g. typing `help` and pressing Enter will","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"NicolasCwy"},"content":"   open the help window. Click the tab for the list that you would like to view e.g click vendor to view vendors in stored in **PH**\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"    * **`checkin`**`n/John Doe pn/X12345678F r/123 e/johnd@example.com t/Senior Citizen` : Adds a guest","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"      named `John Doe` to the Address Book.","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"NicolasCwy"},"content":"    * **`deleteguest`**`pn/X12345678F` : Deletes the guest with passport number X12345678F.","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"NicolasCwy"},"content":"    * **`clearguest`** : Deletes all guests from guest list.","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"NicolasCwy"},"content":"    * **`addvendor`**","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"NicolasCwy"},"content":"You may refer to the [features](#features) below for details of each command and to get familiarized with the syntax of","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"the commands.","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"## **Features**","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"NicolasCwy"},"content":"**PH**’s features revolve around managing your guests and vendors. For each command, a short description of its use is","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"given which is then followed by the format and a short example to help ensure that you have executed the command","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"correctly.","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"NicolasCwy"},"content":"A quick overview of all the commands can be found in the [command summary](#command-summary).","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"NicolasCwy"},"content":"Certain commands require parameters, which may have constraints. A quick overview of all the underlying","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"constraints can be found in the [parameter constraints.](#parameter-constraints-summary)","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"* Words in `UPPER_CASE` are the parameters to be entered by the user.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"* Parameter prefixes such as `n/` and `pn/` are special keywords that indicate a start of a parameter.","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"* Fields with square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"NicolasCwy"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/Bing Cheng t/VIP` or as `n/Bing Cheng`.","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"  e.g. if the command specifies `n/NAME pn/PASSPORT_NUMBER`, `pn/PASSPORT_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit`) will be","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":96,"author":{"gitId":"NicolasCwy"},"content":"* All fields cannot be empty","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"NicolasCwy"},"content":"* The tag field is optional and can be omitted entirely","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"NicolasCwy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"NicolasCwy"},"content":"### Contacts in Pocket Hotel","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"NicolasCwy"},"content":"There are 2 types of contacts in **PH**, guests and vendors. Guests represent guests of the hotel, and vendors represent external companies employed by a hotel for services hotel. Guest are identified by their `PASSPORT_NUMBER`","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"NicolasCwy"},"content":"and Vendors are identified by their `VENDOR_ID`. These fields are their unique identifier, and no two contacts can have the same unique identifier.","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"NicolasCwy"},"content":"It is possible for guests and vendors to have the same unique identifier for example, `VENDOR_ID` of a vendor is 111 and `PASSPORT_NUMBER` for a guest is 111, as they represent 2 different entities.","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"NicolasCwy"},"content":"Guests and vendors have different parameters, which can be found in the [parameter constraints table](#parameter-constraints-summary) or in the command instructions.","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"NicolasCwy"},"content":"### Navigating between guest and vendor list","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"NicolasCwy"},"content":"To navigate between the guest and vendor list, click the button on the **GUI** to view the different lists","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"NicolasCwy"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"NicolasCwy"},"content":"* Regardless of the list currently being viewed, you are able to execute any command. e.g While viewing the guest list,","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"NicolasCwy"},"content":"  you are able to add a vendor. Toggle back to the vendor list to see the reflected changes.","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"NicolasCwy"},"content":"# Commands","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"NicolasCwy"},"content":"## Manage Guests","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"NicolasCwy"},"content":"### Checking in a new guest: `checkin`","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"NicolasCwy"},"content":"Checks in a new **guest** by adding their contact details into **PH**.","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`checkin pn/\u003cPASSPORT_NUMBER\u003e n/\u003cNAME\u003e e/\u003cEMAIL\u003e r/\u003cROOM_NUMBER\u003e [t/\u003cTAG\u003e]`","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"NicolasCwy"},"content":"Example:","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"NicolasCwy"},"content":"![addGuest.png](images/addGuest.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"NicolasCwy"},"content":"* `checkin n/Bing Cheng pn/T0134568D e/bc@gmail.com r/69` , adds a new guest, Bing Cheng to **PH** and shows the new contact","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"  list.","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"NicolasCwy"},"content":"* `PASSPORT_NUMBER`: Should only contain alphanumeric characters.","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"NicolasCwy"},"content":"* `EMAIL`: A valid email address should be used.","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"NicolasCwy"},"content":"* `ROOM_NUMBER`: Only numbers greater than 0 are valid.\u003cbr\u003eExample","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"NicolasCwy"},"content":"* `TAG`: An optional field, more than one can be included in the command.","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":148,"author":{"gitId":"NicolasCwy"},"content":"### Checking in a returning guest: `checkin`","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"NicolasCwy"},"content":"Checks in a returning **guest** into **PH**, by retrieving their details from the archive.","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`checkin pn/\u003cPASSPORT_NUMBER\u003e r/\u003cROOM_NUMBER\u003e`","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"NicolasCwy"},"content":"* `ROOM_NUMBER`: Only numbers greater than 0 are valid.\u003cbr\u003eExample","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"NicolasCwy"},"content":"### Checking out a guest: `checkout`","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"bingcheng45"},"content":"Checks out a **guest** by archiving their details and generating an invoice of all the services used by the guest.","lastModifiedDate":"2021-10-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"rgbpokka"},"content":"Format:","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`checkout pn/\u003cPASSPORT_NUMBER\u003e`","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"bingcheng45"},"content":"Parameters:","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":167,"author":{"gitId":"bingcheng45"},"content":"* `PASSPORT_NUMBER`: Blank inputs are not allowed. Should only contain alphanumeric characters.","lastModifiedDate":"2021-10-28"},{"lineNumber":168,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"NicolasCwy"},"content":"Example:","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"bingcheng45"},"content":"* `checkout pn/X12345678A` checks out the guest Bing Cheng, whose passport number is X12345678A.","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-28"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":175,"author":{"gitId":"NicolasCwy"},"content":"### Editing fields of a guest : `editguest`","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"bingcheng45"},"content":"Edits a **guest**\u0027s contact details. Only edits the fields that have been passed in as parameters (See example for further ","lastModifiedDate":"2021-10-28"},{"lineNumber":178,"author":{"gitId":"bingcheng45"},"content":"elaboration).","lastModifiedDate":"2021-10-28"},{"lineNumber":179,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"NicolasCwy"},"content":"`editguest pn/\u003cPASSPORT_NUMBER\u003e \u003cFIELD_NAME\u003e/\u003cNEW_FIELD_DETAILS\u003e`","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"bingcheng45"},"content":"Parameters:","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"bingcheng45"},"content":"* `PASSPORT_NUMBER`: Blank inputs are not allowed. Should only contain alphanumeric characters.","lastModifiedDate":"2021-10-28"},{"lineNumber":187,"author":{"gitId":"bingcheng45"},"content":"* `NAME`: Blank inputs are not allowed.","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"bingcheng45"},"content":"* `EMAIL`:  Blanks inputs are not allowed. A valid email address should be used.","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"bingcheng45"},"content":"* `ROOM_NUMBER`: Blank inputs are not allowed. Only numbers greater than 0 are valid. ","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"bingcheng45"},"content":"* `TAG`: Blank inputs are not allowed. An optional field, more than one can be included in each command.","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":192,"author":{"gitId":"bingcheng45"},"content":"Example:","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"bingcheng45"},"content":"* `editguest pn/X12345678A r/123` locates the guest Bing Cheng, by his passport number X12345678A and overwrites the","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"bingcheng45"},"content":"  room number field with the new room number provided. All his other fields (**NAME**, **EMAIL**, **PASSPORT_NUMBER**, **TAG**)","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"bingcheng45"},"content":"  will remain unchanged.","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":197,"author":{"gitId":"bingcheng45"},"content":"* `editguest pn/X87654321A t/VIP t/LoyalGuest e/jj@mailer.com` locates the guest Jeremy, by his passport number X87654321A and overwrites his existing tags with the new tags provided, ","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"bingcheng45"},"content":"  and overwrites the old email field with the new email provided. All his other fields (**NAME**, **PASSPORT_NUMBER**, **ROOM_NUMBER**) will remain unchanged.","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":200,"author":{"gitId":"bingcheng45"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"bingcheng45"},"content":"**:information_source: Notes:**\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"bingcheng45"},"content":"* Existing field values will be overwritten by the newly provided field values.","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"bingcheng45"},"content":"* You need to specify at least one field to edit.","lastModifiedDate":"2021-10-28"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"bingcheng45"},"content":"* You can edit more than one field at a time (See example above).","lastModifiedDate":"2021-10-28"},{"lineNumber":208,"author":{"gitId":"bingcheng45"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"NicolasCwy"},"content":"### Deleting a guest\u0027s details: `deleteguest`","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"NicolasCwy"},"content":"Deletes an existing **guest**\u0027s contact details from **PH**. Guests deleted can be checked in or in the archive.","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`deleteguest pn/\u003cPASSPORT_NUMBER\u003e`","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"NicolasCwy"},"content":"Example:","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"NicolasCwy"},"content":"`deleteguest pn/XNOO19390` deletes the guest who has passport number XNOO19390 from **PH**.","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"NicolasCwy"},"content":"### Clear all checked in guests : `clearguest`","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"NicolasCwy"},"content":"Deletes all guests that are currently checked in.","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-09-28"},{"lineNumber":229,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`clearguest`","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":231,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"NicolasCwy"},"content":"**:information_source: Note:**\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"NicolasCwy"},"content":"* **Archived guests** are not deleted.","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"NicolasCwy"},"content":"\u003c/div\u003e    ","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"bingcheng45"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"bingcheng45"},"content":"`clearguest` command would remove all guest and this action is irreversible. ","lastModifiedDate":"2021-10-28"},{"lineNumber":237,"author":{"gitId":"bingcheng45"},"content":"Only use this command if you really need to wipe all current guest data.","lastModifiedDate":"2021-10-28"},{"lineNumber":238,"author":{"gitId":"bingcheng45"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":242,"author":{"gitId":"NicolasCwy"},"content":"### Show all guests: `listguest`","lastModifiedDate":"2021-10-24"},{"lineNumber":243,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":244,"author":{"gitId":"calvintanwj"},"content":"Shows all the guests checked into the hotel. Useful command to use after `filterguest`, ","lastModifiedDate":"2021-10-28"},{"lineNumber":245,"author":{"gitId":"calvintanwj"},"content":"it essentially removes any filter that was previously applied to the guest list. ","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`listguest`","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"NicolasCwy"},"content":"**:information_source: Notes:**\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"calvintanwj"},"content":"* Guests are not arranged in any particular order\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"calvintanwj"},"content":"* Running the command when you are on the vendor list, will switch to the guest list for you.","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"NicolasCwy"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"NicolasCwy"},"content":"### Charge a guest for a service: `chargeguest`","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"bingcheng45"},"content":"Charges a guest for a service offered by a vendor, and adds it to the invoice that will be generated upon checkout.","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"NicolasCwy"},"content":"Format:    ","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`chargeguest pn/\u003cPASSPORT_NUMBER\u003e vid/\u003cVENDOR_ID\u003e`","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"bingcheng45"},"content":"Parameters:","lastModifiedDate":"2021-10-28"},{"lineNumber":266,"author":{"gitId":"bingcheng45"},"content":"* `PASSPORT_NUMBER`: Should only contain alphanumeric characters.","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"bingcheng45"},"content":"* `VENDOR_ID`: Should only contain alphanumeric characters.","lastModifiedDate":"2021-10-28"},{"lineNumber":268,"author":{"gitId":"bingcheng45"},"content":"  * The `VENDOR_ID` must be from one of the existing vendors in the **PH**","lastModifiedDate":"2021-10-28"},{"lineNumber":269,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":270,"author":{"gitId":"bingcheng45"},"content":"Example:","lastModifiedDate":"2021-10-28"},{"lineNumber":271,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":272,"author":{"gitId":"bingcheng45"},"content":"* `chargeguest pn/T0134568D vid/001` , Charge the guest with passport number `T0134568D` with the service ","lastModifiedDate":"2021-10-28"},{"lineNumber":273,"author":{"gitId":"bingcheng45"},"content":"provided by the vendor with the vendor id of `001`.","lastModifiedDate":"2021-10-28"},{"lineNumber":274,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":275,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":277,"author":{"gitId":"NicolasCwy"},"content":"### Filter guest list: `filterguest`","lastModifiedDate":"2021-10-24"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":279,"author":{"gitId":"calvintanwj"},"content":"Displays only the guests that meet your requirements, as specified by what you wrote in your filter. This helps you ","lastModifiedDate":"2021-10-28"},{"lineNumber":280,"author":{"gitId":"calvintanwj"},"content":"easily find and search through smaller and more manageable lists, instead of scrolling through the entire guest list.","lastModifiedDate":"2021-10-28"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":282,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":283,"author":{"gitId":"NicolasCwy"},"content":"`filterguest \u003cFILTER_FIELD_NAME\u003e/\u003cFILTER_FIELD_VALUE\u003e`","lastModifiedDate":"2021-10-24"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":285,"author":{"gitId":"calvintanwj"},"content":"Parameters:","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"calvintanwj"},"content":"* `PASSPORT_NUMBER`: Should only contain alphanumeric characters.","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"calvintanwj"},"content":"  * The passport number specified by you must match the guest passport\u0027s number exactly to be filtered. Passport numbers are case-sensitive.","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a guest with a `PASSPORT_NUMBER` of `SE1239182` will not be shown in your **GUI** if you run the command `filterguest pn/SE123`","lastModifiedDate":"2021-10-28"},{"lineNumber":289,"author":{"gitId":"calvintanwj"},"content":"* `NAME`: Should only contain alphabetical characters","lastModifiedDate":"2021-10-28"},{"lineNumber":290,"author":{"gitId":"calvintanwj"},"content":"  * The name specified by you simply needs to match the guest\u0027s name partially to be filtered. Names are case-insensitive.","lastModifiedDate":"2021-10-28"},{"lineNumber":291,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a guest with a `NAME` of `Jeremy Tan` will be shown in the **GUI** if you run the command `filterguest n/jeremy` or `filterguest n/remy`","lastModifiedDate":"2021-10-28"},{"lineNumber":292,"author":{"gitId":"calvintanwj"},"content":"    * However, running the command `filterguest n/tan jeremy` will not filter the guest.","lastModifiedDate":"2021-10-28"},{"lineNumber":293,"author":{"gitId":"calvintanwj"},"content":"* `EMAIL`: A valid email address should be used.","lastModifiedDate":"2021-10-28"},{"lineNumber":294,"author":{"gitId":"calvintanwj"},"content":"  * The email specified by you simply needs to match the guest\u0027s email partially to be filtered. Emails are case-insensitive.","lastModifiedDate":"2021-10-28"},{"lineNumber":295,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a guest with a `EMAIL` of `jeremytan@example.com` will be shown in the **GUI** if you run the command `filterguest e/tan`","lastModifiedDate":"2021-10-28"},{"lineNumber":296,"author":{"gitId":"calvintanwj"},"content":"* `ROOM_NUMBER`: Only numbers greater than 0 are valid.","lastModifiedDate":"2021-10-28"},{"lineNumber":297,"author":{"gitId":"calvintanwj"},"content":"  * The room number specified by you needs to match with the guest\u0027s room number partially to be filtered, however the order is important, unlike `EMAIL` and `NAME`.","lastModifiedDate":"2021-10-28"},{"lineNumber":298,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a guest with a `ROOM_NUMBER` of `201` will be shown in the **GUI** if you run the command `filterguest r/2`","lastModifiedDate":"2021-10-28"},{"lineNumber":299,"author":{"gitId":"calvintanwj"},"content":"    * However, the guest will not be filtered if you run the command `filterguest r/1`. The reason for this is that hotels ","lastModifiedDate":"2021-10-28"},{"lineNumber":300,"author":{"gitId":"calvintanwj"},"content":"    generally have room numbers with its starting number as the floor level. Such as all hotel rooms on level 1, will ","lastModifiedDate":"2021-10-28"},{"lineNumber":301,"author":{"gitId":"calvintanwj"},"content":"    have their room number starting with 1. ","lastModifiedDate":"2021-10-28"},{"lineNumber":302,"author":{"gitId":"calvintanwj"},"content":"    * We felt that this would provide you a more useful filter, as running `filterguest r/2` would filter all the guest ","lastModifiedDate":"2021-10-28"},{"lineNumber":303,"author":{"gitId":"calvintanwj"},"content":"    with their room number starting with a 2, and in essence you would be filtering all the guests that are residing in ","lastModifiedDate":"2021-10-28"},{"lineNumber":304,"author":{"gitId":"calvintanwj"},"content":"    the second floor of your hotel. This would mean guests with `ROOM_NUMBER` that do not start with `2` but may have `2` ","lastModifiedDate":"2021-10-28"},{"lineNumber":305,"author":{"gitId":"calvintanwj"},"content":"    in their `ROOM_NUMBER` are not filtered. An example being `102`.","lastModifiedDate":"2021-10-28"},{"lineNumber":306,"author":{"gitId":"calvintanwj"},"content":"* `TAG`: An optional field, more than one can be included in the command. Tags are case-insensitive.","lastModifiedDate":"2021-10-28"},{"lineNumber":307,"author":{"gitId":"calvintanwj"},"content":"  * The tags specified by you need to match the guest\u0027s tags exactly to be filtered. ","lastModifiedDate":"2021-10-28"},{"lineNumber":308,"author":{"gitId":"calvintanwj"},"content":"  * E.g. guests with a `TAG` of `VIP` and guests with a `TAG` of `Deluxe` will be filtered if you run the command `filterguest t/vip t/deluxe`","lastModifiedDate":"2021-10-28"},{"lineNumber":309,"author":{"gitId":"calvintanwj"},"content":"    * Note that guest with either one of the tags gets filtered, they do not have to both tags to get filtered. The same logic applies when more than two tags are supplied by you.","lastModifiedDate":"2021-10-28"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":311,"author":{"gitId":"calvintanwj"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":312,"author":{"gitId":"calvintanwj"},"content":"`filterguest n/boon r/2`, guests with a `NAME` that contains boon and have a `ROOM_NUMBER` starting with 2, will be filtered from **PH**.","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":314,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":315,"author":{"gitId":"NicolasCwy"},"content":"**:information_source: Note:**\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":316,"author":{"gitId":"calvintanwj"},"content":"* Running the `filterguest` command always applies the filter to all your guests in **PH** and not to an already filtered guest list. ","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"NicolasCwy"},"content":"## Manage Vendors","lastModifiedDate":"2021-10-24"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":323,"author":{"gitId":"NicolasCwy"},"content":"### Adding a vendor: `addvendor`","lastModifiedDate":"2021-10-24"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":325,"author":{"gitId":"NicolasCwy"},"content":"Adds a vendors details to **PH**","lastModifiedDate":"2021-10-24"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":328,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`addvendor vid/\u003cVENDOR_ID\u003e n/\u003cNAME\u003e e/\u003cEMAIL\u003e p/\u003cPHONE_NUMBER\u003e a/\u003cADDRESS\u003e sn/\u003cSERVICE_NAME\u003e c/\u003cSERVICE_COST\u003e oh/\u003cOPERATING HOURS\u003e [t/TAG]`","lastModifiedDate":"2021-10-24"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":330,"author":{"gitId":"NicolasCwy"},"content":"Example:","lastModifiedDate":"2021-10-24"},{"lineNumber":331,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`addvendor vid/123 n/Wang\u0027s Satay e/satayMan@email.com p/84711231 a/Geylang Street 31 sn/Satay c/5 oh/1 0800-2000`","lastModifiedDate":"2021-10-24"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":334,"author":{"gitId":"NicolasCwy"},"content":"**:information_source: Note on OPERATING_HOUR format:**\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":335,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-09-30"},{"lineNumber":336,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`DAYS STARTTIME-ENDTIME`","lastModifiedDate":"2021-10-24"},{"lineNumber":337,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003eMonday is represented using a 1 and Sunday is represented by 7.\u003cbr\u003eExample:\u003cbr\u003e`1234567 0800-2359`: Monday to Sunday 8am to 11:59pm\u003cbr\u003e`1321 0800-0900`: Monday to Wednesday 7am to 9am","lastModifiedDate":"2021-10-24"},{"lineNumber":338,"author":{"gitId":"NicolasCwy"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":340,"author":{"gitId":"NicolasCwy"},"content":"* VENDOR_ID: Should only contain alphanumeric characters","lastModifiedDate":"2021-10-24"},{"lineNumber":341,"author":{"gitId":"NicolasCwy"},"content":"* NAME: Should only contain alphabetical characters","lastModifiedDate":"2021-10-24"},{"lineNumber":342,"author":{"gitId":"NicolasCwy"},"content":"* EMAIL: A valid email address should be used.","lastModifiedDate":"2021-10-24"},{"lineNumber":343,"author":{"gitId":"NicolasCwy"},"content":"* PHONE_NUMBER: At least 3 digits long, should only contain numbers.","lastModifiedDate":"2021-10-24"},{"lineNumber":344,"author":{"gitId":"NicolasCwy"},"content":"* SERVICE_NAME: Alphabetical characters and spaces are allowed.","lastModifiedDate":"2021-10-24"},{"lineNumber":345,"author":{"gitId":"NicolasCwy"},"content":"* SERVICE_COST: Number greater than 0, will be rounded to 2 decimal places.","lastModifiedDate":"2021-10-24"},{"lineNumber":346,"author":{"gitId":"NicolasCwy"},"content":"* TAG: An optional field, more than one can be included in each command.","lastModifiedDate":"2021-10-24"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":348,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"NicolasCwy"},"content":"### Editing fields of a vendor : `editvendor`","lastModifiedDate":"2021-10-24"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":352,"author":{"gitId":"bingcheng45"},"content":"Edit a **vendors**\u0027 contact details. Only edits the fields that have been passed in as parameters. (See example for further elaboration).","lastModifiedDate":"2021-10-28"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":354,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":355,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`editvendor vid/\u003cVENDOR_ID\u003e \u003cFIELD_NAME\u003e/\u003cNEW_FIELD_DETAILS\u003e`","lastModifiedDate":"2021-10-24"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":357,"author":{"gitId":"bingcheng45"},"content":"Parameters:","lastModifiedDate":"2021-10-28"},{"lineNumber":358,"author":{"gitId":"bingcheng45"},"content":"* VENDOR_ID: Blank inputs are not allowed. Should only contain alphanumeric characters.","lastModifiedDate":"2021-10-28"},{"lineNumber":359,"author":{"gitId":"bingcheng45"},"content":"* NAME: Blank inputs are not allowed. Should only contain alphabetical characters.","lastModifiedDate":"2021-10-28"},{"lineNumber":360,"author":{"gitId":"bingcheng45"},"content":"* EMAIL: Blanks inputs are not allowed. A valid email address should be used.","lastModifiedDate":"2021-10-28"},{"lineNumber":361,"author":{"gitId":"bingcheng45"},"content":"* PHONE_NUMBER: Blank inputs are not allowed. At least 3 digits long, should only contain numbers.","lastModifiedDate":"2021-10-28"},{"lineNumber":362,"author":{"gitId":"bingcheng45"},"content":"* ADDRESS: Blank inputs are not allowed.","lastModifiedDate":"2021-10-28"},{"lineNumber":363,"author":{"gitId":"bingcheng45"},"content":"* SERVICE_NAME: Blank inputs are not allowed. Alphabetical characters and spaces are allowed.","lastModifiedDate":"2021-10-28"},{"lineNumber":364,"author":{"gitId":"bingcheng45"},"content":"* SERVICE_COST: Blank inputs are not allowed. Number greater than 0, will be rounded to 2 decimal places.","lastModifiedDate":"2021-10-28"},{"lineNumber":365,"author":{"gitId":"bingcheng45"},"content":"* OPERATING_HOURS: Blank inputs are not allowed. Duplicates are allowed. \u003cbr\u003eFormat: `DAYS STARTTIME-ENDTIME`\u003cbr\u003eMonday is represented using a 1 and Sunday is represented by 7.\u003cbr\u003eExample:\u003cbr\u003e`1234567 0800-2359`: Monday to Sunday 8am to 11:59pm\u003cbr\u003e`1321 0800-0900`: Monday to Wednesday 7am to 9am","lastModifiedDate":"2021-10-28"},{"lineNumber":366,"author":{"gitId":"bingcheng45"},"content":"* TAG: Blank inputs are not allowed. An optional field, more than one can be included in each command.","lastModifiedDate":"2021-10-28"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":368,"author":{"gitId":"NicolasCwy"},"content":"Example:","lastModifiedDate":"2021-10-24"},{"lineNumber":369,"author":{"gitId":"bingcheng45"},"content":"\u003cbr\u003e`editvendor vid/123 p/99999999 e/j@mailer.com` locates the vendor, Wang\u0027s Satay, with `VENDOR_ID` 123 and overwrites the phone number","lastModifiedDate":"2021-10-28"},{"lineNumber":370,"author":{"gitId":"bingcheng45"},"content":"field with the new phone number provided, and the email field with the new email provided. All other fields of the vendor","lastModifiedDate":"2021-10-28"},{"lineNumber":371,"author":{"gitId":"bingcheng45"},"content":"(**VENDOR_ID**, **NAME**, **ADDRESS**, **SERVICE_NAME**, **SERVICE_COST**, **OPERATING_HOURS**, **TAG**) remain unchanged.","lastModifiedDate":"2021-10-28"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":373,"author":{"gitId":"bingcheng45"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":374,"author":{"gitId":"bingcheng45"},"content":"**:information_source: Notes:**\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":376,"author":{"gitId":"bingcheng45"},"content":"* Existing field values will be overwritten by the newly provided field values.","lastModifiedDate":"2021-10-28"},{"lineNumber":377,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":378,"author":{"gitId":"bingcheng45"},"content":"* You need to specify at least one field to edit.","lastModifiedDate":"2021-10-28"},{"lineNumber":379,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":380,"author":{"gitId":"bingcheng45"},"content":"* You can edit more than one field at a time (See example above).","lastModifiedDate":"2021-10-28"},{"lineNumber":381,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":382,"author":{"gitId":"bingcheng45"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":384,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-01"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":386,"author":{"gitId":"NicolasCwy"},"content":"### Deleting a vendor\u0027s details: `deletevendor`","lastModifiedDate":"2021-10-24"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":388,"author":{"gitId":"NicolasCwy"},"content":"Deletes a vendors contact details from **PH**.","lastModifiedDate":"2021-10-24"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":390,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":391,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`deletevendor vid/\u003cVENDOR_ID\u003e`","lastModifiedDate":"2021-10-24"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":393,"author":{"gitId":"NicolasCwy"},"content":"Example:","lastModifiedDate":"2021-10-24"},{"lineNumber":394,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`deletevendor vid/321`  deletes the vendor with `VENDOR_ID` 321 from **PH**.","lastModifiedDate":"2021-10-24"},{"lineNumber":395,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":396,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":397,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":398,"author":{"gitId":"NicolasCwy"},"content":"### Clear vendor list : `clearvendor`","lastModifiedDate":"2021-10-24"},{"lineNumber":399,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":400,"author":{"gitId":"bingcheng45"},"content":"Deletes all vendors that are currently in the system.","lastModifiedDate":"2021-10-28"},{"lineNumber":401,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":402,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":403,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`clearvendor`","lastModifiedDate":"2021-10-24"},{"lineNumber":404,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":405,"author":{"gitId":"bingcheng45"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-28"},{"lineNumber":406,"author":{"gitId":"bingcheng45"},"content":"`clearguest` command would remove all vendors and this action is irreversible. ","lastModifiedDate":"2021-10-28"},{"lineNumber":407,"author":{"gitId":"bingcheng45"},"content":"Only use this command if you really need to wipe all current vendors data.","lastModifiedDate":"2021-10-28"},{"lineNumber":408,"author":{"gitId":"bingcheng45"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":409,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":410,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":411,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":412,"author":{"gitId":"calvintanwj"},"content":"### Show all guests: `listvendor`","lastModifiedDate":"2021-10-28"},{"lineNumber":413,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":414,"author":{"gitId":"calvintanwj"},"content":"Shows all the vendors added by you that offers services to your hotel. Useful command to use after `filtervendor`,","lastModifiedDate":"2021-10-28"},{"lineNumber":415,"author":{"gitId":"calvintanwj"},"content":"it essentially removes any filter that was previously applied to the vendor list.","lastModifiedDate":"2021-10-28"},{"lineNumber":416,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":417,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":418,"author":{"gitId":"calvintanwj"},"content":"\u003cbr\u003e`listvendor`","lastModifiedDate":"2021-10-28"},{"lineNumber":419,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":420,"author":{"gitId":"calvintanwj"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":421,"author":{"gitId":"calvintanwj"},"content":"**:information_source: Notes:**\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":422,"author":{"gitId":"calvintanwj"},"content":"* Vendors are not arranged in any particular order\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":423,"author":{"gitId":"calvintanwj"},"content":"* Running the command when you are on the guest list, will switch to the vendor list for you.","lastModifiedDate":"2021-10-28"},{"lineNumber":424,"author":{"gitId":"calvintanwj"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":425,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":426,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-28"},{"lineNumber":427,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":428,"author":{"gitId":"calvintanwj"},"content":"### Filter vendor list: `filtervendor`","lastModifiedDate":"2021-10-28"},{"lineNumber":429,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":430,"author":{"gitId":"calvintanwj"},"content":"Displays only the vendors that meet your requirements, as specified by what you wrote in your filter. This helps you","lastModifiedDate":"2021-10-28"},{"lineNumber":431,"author":{"gitId":"calvintanwj"},"content":"easily find and search through smaller and more manageable lists, instead of scrolling through the entire vendor list.","lastModifiedDate":"2021-10-28"},{"lineNumber":432,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":433,"author":{"gitId":"calvintanwj"},"content":"Format: `filtervendor \u003cFILTER_FIELD_NAME\u003e/\u003cFILTER_FIELD_VALUE\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":434,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":435,"author":{"gitId":"calvintanwj"},"content":"Parameters:","lastModifiedDate":"2021-10-28"},{"lineNumber":436,"author":{"gitId":"calvintanwj"},"content":"* `VENDOR_ID`: Should only contain alphanumeric characters","lastModifiedDate":"2021-10-28"},{"lineNumber":437,"author":{"gitId":"calvintanwj"},"content":"  * The vendor id specified by you must match the vendor\u0027s vendor id exactly to be filtered. Vendor id\u0027s are case-sensitive.","lastModifiedDate":"2021-10-28"},{"lineNumber":438,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a vendor with a `VENDOR_ID` of `001` will not be shown in your **GUI** if you run the command `filtervendor vid/1`","lastModifiedDate":"2021-10-28"},{"lineNumber":439,"author":{"gitId":"calvintanwj"},"content":"* `NAME`: Should only contain alphabetical characters","lastModifiedDate":"2021-10-28"},{"lineNumber":440,"author":{"gitId":"calvintanwj"},"content":"  * The name specified by you simply needs to match the vendor\u0027s name partially to be filtered. Names are case-insensitive.","lastModifiedDate":"2021-10-28"},{"lineNumber":441,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a vendor with a `NAME` of `Jeremy\u0027s Massage Parlour` will be shown in the **GUI** if you run the command `filtervendor n/jeremy` or `filtervendor n/remy`","lastModifiedDate":"2021-10-28"},{"lineNumber":442,"author":{"gitId":"calvintanwj"},"content":"    * However, running the command `filtervendor n/parlour massage` will not filter the vendor.","lastModifiedDate":"2021-10-28"},{"lineNumber":443,"author":{"gitId":"calvintanwj"},"content":"* `EMAIL`: A valid email address should be used.","lastModifiedDate":"2021-10-28"},{"lineNumber":444,"author":{"gitId":"calvintanwj"},"content":"  * The email specified by you simply needs to match the vendor\u0027s email partially to be filtered. Emails are case-insensitive.","lastModifiedDate":"2021-10-28"},{"lineNumber":445,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a vendor with a `EMAIL` of `jmassage@example.com` will be shown in the **GUI** if you run the command `filtervendor e/massage`","lastModifiedDate":"2021-10-28"},{"lineNumber":446,"author":{"gitId":"calvintanwj"},"content":"* `ADDRESS`: Blank inputs are not allowed.","lastModifiedDate":"2021-10-28"},{"lineNumber":447,"author":{"gitId":"calvintanwj"},"content":"  * The address specified by you simply needs to match the vendor\u0027s address partially to be filtered. Addresses are case-insensitive.","lastModifiedDate":"2021-10-28"},{"lineNumber":448,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a vendor with a `ADDRESS` of `123 Clementi Rd` will be shown in the **GUI** if you run the command `filtervendor a/clementi`","lastModifiedDate":"2021-10-28"},{"lineNumber":449,"author":{"gitId":"calvintanwj"},"content":"* `PHONE_NUMBER`: At least 3 digits long, should only contain numbers.","lastModifiedDate":"2021-10-28"},{"lineNumber":450,"author":{"gitId":"calvintanwj"},"content":"  * The phone number specified by you needs to match with the vendor\u0027s phone number partially to be filtered, however the order is important, unlike `EMAIL` and `NAME`.","lastModifiedDate":"2021-10-28"},{"lineNumber":451,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a vendor with a `PHONE_NUMBER` of `93810282` will be shown in the **GUI** if you run the command `filtervendor r/938`","lastModifiedDate":"2021-10-28"},{"lineNumber":452,"author":{"gitId":"calvintanwj"},"content":"    * However, the vendor will not be filtered if you run the command `filtervendor r/8102`.","lastModifiedDate":"2021-10-28"},{"lineNumber":453,"author":{"gitId":"calvintanwj"},"content":"    * The phone number that you enter into the command will only filter the vendors with phone numbers that start with what you specified in the filter.","lastModifiedDate":"2021-10-28"},{"lineNumber":454,"author":{"gitId":"calvintanwj"},"content":"* `SERVICE_NAME`: Alphabetical characters and spaces are allowed.","lastModifiedDate":"2021-10-28"},{"lineNumber":455,"author":{"gitId":"calvintanwj"},"content":"  * The service name specified by you needs to match the vendor\u0027s service name exactly to be filtered. Service names are case-insensitive.","lastModifiedDate":"2021-10-28"},{"lineNumber":456,"author":{"gitId":"calvintanwj"},"content":"  * E.g. vendors with a `SERVICE_NAME` of `Massage` will be shown in the **GUI** if you run the command `filtervendor sn/massage`","lastModifiedDate":"2021-10-28"},{"lineNumber":457,"author":{"gitId":"calvintanwj"},"content":"    * However, the vendor will not be filtered if you run the command `filtervendor sn/mass`","lastModifiedDate":"2021-10-28"},{"lineNumber":458,"author":{"gitId":"calvintanwj"},"content":"* `SERVICE_COST`: Number greater than 0.","lastModifiedDate":"2021-10-28"},{"lineNumber":459,"author":{"gitId":"calvintanwj"},"content":"  * You may filter vendors by the exact cost or a range (using \"\u003c\" or \"\u003e\").","lastModifiedDate":"2021-10-28"},{"lineNumber":460,"author":{"gitId":"calvintanwj"},"content":"  * E.g. vendors with a `SERVICE_COST` greater than 10 will be shown in the **GUI** if you run the command `filtervendor c/\u003e10`","lastModifiedDate":"2021-10-28"},{"lineNumber":461,"author":{"gitId":"calvintanwj"},"content":"  * E.g. vendors with a `SERVICE_COST` of exactly 10 will be shown in the **GUI** if you run the command `filtervendor c/10`","lastModifiedDate":"2021-10-28"},{"lineNumber":462,"author":{"gitId":"calvintanwj"},"content":"* `OPERATING_HOURS`: Specified in this format `DAYS STARTTIME-ENDTIME`, Timings are in 24 hr format and days are represented using numbers, where 1 represents a Monday, and a 7 represents a Sunday.","lastModifiedDate":"2021-10-28"},{"lineNumber":463,"author":{"gitId":"calvintanwj"},"content":"  * You may filter vendors that operate on certain days, certain days and a specified time, certain days and a specified time period, and those that are currently operating.","lastModifiedDate":"2021-10-28"},{"lineNumber":464,"author":{"gitId":"calvintanwj"},"content":"  * E.g. vendors with `OPERATING_HOURS` on Monday and Wednesday will be shown in the **GUI** if you run the command `filtervendor oh/13`","lastModifiedDate":"2021-10-28"},{"lineNumber":465,"author":{"gitId":"calvintanwj"},"content":"  * E.g. vendors with `OPERATING_HOURS` on Monday and operate on 0800 will be shown in the **GUI** if you run the command `filtervendor oh/1 0800`","lastModifiedDate":"2021-10-28"},{"lineNumber":466,"author":{"gitId":"calvintanwj"},"content":"  * E.g. vendors with `OPERATING_HOURS` on Tuesday and operate **anywhere** between 0800 and 1300 will be shown in the **GUI** if you run the command `filtervendor oh/2 0800-1300`","lastModifiedDate":"2021-10-28"},{"lineNumber":467,"author":{"gitId":"calvintanwj"},"content":"  * E.g. vendors with `OPERATING_HOURS` that are currently operating will be shown in the **GUI** if you run the command `filtervendor oh/now`","lastModifiedDate":"2021-10-28"},{"lineNumber":468,"author":{"gitId":"calvintanwj"},"content":"* `TAG`: An optional field, more than one can be included in the command. Tags are case-insensitive","lastModifiedDate":"2021-10-28"},{"lineNumber":469,"author":{"gitId":"calvintanwj"},"content":"  * The tags specified by you need to match the vendor\u0027s tags exactly to be filtered. ","lastModifiedDate":"2021-10-28"},{"lineNumber":470,"author":{"gitId":"calvintanwj"},"content":"  * E.g. vendors with a `TAG` of `Cheap` and vendors with a `TAG` of `Good Rating` will be filtered if you run the command `filtervendor t/cheap t/good rating`","lastModifiedDate":"2021-10-28"},{"lineNumber":471,"author":{"gitId":"calvintanwj"},"content":"    * Note that vendors with either one of the tags gets filtered, they do not have to both tags to get filtered. The same logic applies when more than two tags are supplied by you.","lastModifiedDate":"2021-10-28"},{"lineNumber":472,"author":{"gitId":"calvintanwj"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":473,"author":{"gitId":"calvintanwj"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":474,"author":{"gitId":"calvintanwj"},"content":"`filtervendor sn/Food c/\u003e10 oh/now`, vendors with the `SERVICE_NAME` food and provide the service at a `COST` greater ","lastModifiedDate":"2021-10-28"},{"lineNumber":475,"author":{"gitId":"calvintanwj"},"content":"than 10 and have `OPERATING_HOURS` where they are currently operating now will be filtered from **PH**","lastModifiedDate":"2021-10-28"},{"lineNumber":476,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":477,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":478,"author":{"gitId":"NicolasCwy"},"content":"**:information_source: Note:**\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":479,"author":{"gitId":"calvintanwj"},"content":"* Running the `filtervendor` command always applies the filter to all your vendors in **PH** and not to an already filtered vendor list. ","lastModifiedDate":"2021-10-28"},{"lineNumber":480,"author":{"gitId":"NicolasCwy"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":482,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-10"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":484,"author":{"gitId":"NicolasCwy"},"content":"## Utility Commands","lastModifiedDate":"2021-10-24"},{"lineNumber":485,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":486,"author":{"gitId":"NicolasCwy"},"content":"### Viewing help: `help`","lastModifiedDate":"2021-10-10"},{"lineNumber":487,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":488,"author":{"gitId":"NicolasCwy"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-10-10"},{"lineNumber":489,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":490,"author":{"gitId":"NicolasCwy"},"content":"Format: `help`","lastModifiedDate":"2021-10-10"},{"lineNumber":491,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":492,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-10"},{"lineNumber":493,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":494,"author":{"gitId":"NicolasCwy"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2021-10-24"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":496,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2021-10-24"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":498,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2021-10-24"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":500,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":501,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":502,"author":{"gitId":"NicolasCwy"},"content":"## Saving your Data","lastModifiedDate":"2021-10-24"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":504,"author":{"gitId":"calvintanwj"},"content":"Your data is saved automatically to the hard disk after every command you enter. The file is saved in `.json` format,","lastModifiedDate":"2021-09-25"},{"lineNumber":505,"author":{"gitId":"NicolasCwy"},"content":"which allows you to edit the file manually without even booting up **PH**.","lastModifiedDate":"2021-10-01"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"calvintanwj"},"content":"### Editing your data directly","lastModifiedDate":"2021-09-25"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"bingcheng45"},"content":"The Json files storing guest and vendor data are found at:","lastModifiedDate":"2021-10-28"},{"lineNumber":512,"author":{"gitId":"bingcheng45"},"content":"`[JAR file location]/data/guest.json` \u0026 `[JAR file location]/data/vendor.json`","lastModifiedDate":"2021-10-28"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":514,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-09-25"},{"lineNumber":515,"author":{"gitId":"calvintanwj"},"content":"Editing the json file directly should only be done by a user experienced with .json format files. ","lastModifiedDate":"2021-09-25"},{"lineNumber":516,"author":{"gitId":"bingcheng45"},"content":"As failure to follow the correct formatting would result in a corrupted file and would be replace with an empty file.","lastModifiedDate":"2021-10-28"},{"lineNumber":517,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":519,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"NicolasCwy"},"content":"### Guest in archive data format","lastModifiedDate":"2021-10-24"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":523,"author":{"gitId":"bingcheng45"},"content":"The Json files storing archive guest data are found at:","lastModifiedDate":"2021-10-28"},{"lineNumber":524,"author":{"gitId":"bingcheng45"},"content":"`[JAR file location]/data/archive.json`","lastModifiedDate":"2021-10-28"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":526,"author":{"gitId":"bingcheng45"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":527,"author":{"gitId":"bingcheng45"},"content":"**:information_source: Note:**\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":528,"author":{"gitId":"bingcheng45"},"content":"* The archived guests would have the room number and services field emptied in the Json file.","lastModifiedDate":"2021-10-28"},{"lineNumber":529,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003eArchived guest are also not shown in the UI.","lastModifiedDate":"2021-10-24"},{"lineNumber":530,"author":{"gitId":"bingcheng45"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":533,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-25"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":535,"author":{"gitId":"NicolasCwy"},"content":"# **Command Summary**","lastModifiedDate":"2021-10-24"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":537,"author":{"gitId":"NicolasCwy"},"content":"## Guest Command Summary","lastModifiedDate":"2021-10-24"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":539,"author":{"gitId":"NicolasCwy"},"content":"Action | Format, Examples","lastModifiedDate":"2021-10-24"},{"lineNumber":540,"author":{"gitId":"NicolasCwy"},"content":"-------|------------------|","lastModifiedDate":"2021-10-24"},{"lineNumber":541,"author":{"gitId":"NicolasCwy"},"content":"**checkin(new guest)** | `checkin pn/\u003cPASSPORT_NUMBER\u003e n/\u003cNAME\u003e e/\u003cEMAIL\u003e r/\u003cROOM_NUMBER\u003e [t/\u003cTAG\u003e]`\u003cbr\u003eExample: `checkin pn/T0134568D n/Bing Cheng e/bingcheng@email.com r/101 t/VIP`","lastModifiedDate":"2021-10-24"},{"lineNumber":542,"author":{"gitId":"NicolasCwy"},"content":"**checkin(returning guest)** | `checkin pn/\u003cPASSPORT_NUMBER\u003e r/\u003cROOM_NUMBER\u003e`\u003cbr\u003eExample: `checkin pn/T0134568D r/101`","lastModifiedDate":"2021-10-24"},{"lineNumber":543,"author":{"gitId":"NicolasCwy"},"content":"**checkout** | `checkout pn/\u003cPASSPORT_NUMBER\u003e`\u003cbr\u003eExample: `checkout pn/T0134568D`","lastModifiedDate":"2021-10-24"},{"lineNumber":544,"author":{"gitId":"NicolasCwy"},"content":"**editguest** | `editguest pn/\u003cPASSPORT_NUMBER\u003e \u003cFIELD_NAME\u003e/\u003cNEW_FIELD_DETAILS\u003e`\u003cbr\u003eExample: `edit pn/X12345678A p/99999999`","lastModifiedDate":"2021-10-24"},{"lineNumber":545,"author":{"gitId":"NicolasCwy"},"content":"**deleteguest** | `deleteguest pn/\u003cPASSPORT_NUMBER\u003e`\u003cbr\u003eExample: `deleteguest pn/T0134568D`","lastModifiedDate":"2021-10-24"},{"lineNumber":546,"author":{"gitId":"NicolasCwy"},"content":"**clearguest** | `clearguest`","lastModifiedDate":"2021-10-24"},{"lineNumber":547,"author":{"gitId":"NicolasCwy"},"content":"**listguest** | `listguest`","lastModifiedDate":"2021-10-24"},{"lineNumber":548,"author":{"gitId":"NicolasCwy"},"content":"**filterguest** | `filterguest \u003cFILTER_FIELD_NAME\u003e/\u003cFILTER_FIELD_VALUE\u003e`\u003cbr\u003eExample: `filterguest n/Bing t/VIP`","lastModifiedDate":"2021-10-24"},{"lineNumber":549,"author":{"gitId":"NicolasCwy"},"content":"**chargeguest** | `chargeguest pn/\u003cPASSPORT_NUMBER\u003e vid/\u003cVENDOR_ID\u003e`\u003cbr\u003eExample: `charge pn/T0134568D vid/3`","lastModifiedDate":"2021-10-24"},{"lineNumber":550,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":551,"author":{"gitId":"NicolasCwy"},"content":"## Vendor Command Summary","lastModifiedDate":"2021-10-24"},{"lineNumber":552,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":553,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":554,"author":{"gitId":"bingcheng45"},"content":"### Guest Command Summary","lastModifiedDate":"2021-10-24"},{"lineNumber":555,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2021-10-24"},{"lineNumber":556,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2021-10-24"},{"lineNumber":557,"author":{"gitId":"bingcheng45"},"content":"**checkin(new guest)** | `checkin pn/\u003cPASSPORT_NUMBER\u003e n/\u003cNAME\u003e e/\u003cEMAIL\u003e r/\u003cROOM_NUMBER\u003e [t/\u003cTAG\u003e]`\u003cbr\u003eExample: `checkin pn/T0134568D n/Bing Cheng e/bingcheng@email.com r/101 t/VIP`","lastModifiedDate":"2021-10-24"},{"lineNumber":558,"author":{"gitId":"bingcheng45"},"content":"**checkin(returning guest)** | `checkin pn/\u003cPASSPORT_NUMBER\u003e r/\u003cROOM_NUMBER\u003e`\u003cbr\u003eExample: `checkin pn/T0134568D r/101`","lastModifiedDate":"2021-10-24"},{"lineNumber":559,"author":{"gitId":"bingcheng45"},"content":"**checkout** | `checkout pn/\u003cPASSPORT_NUMBER\u003e`\u003cbr\u003eExample: `checkout pn/T0134568D`","lastModifiedDate":"2021-10-24"},{"lineNumber":560,"author":{"gitId":"bingcheng45"},"content":"**editguest** | `editguest pn/\u003cPASSPORT_NUMBER\u003e \u003cFIELD_NAME\u003e/\u003cNEW_FIELD_DETAILS\u003e`\u003cbr\u003eExample: `edit pn/X12345678A p/99999999`","lastModifiedDate":"2021-10-24"},{"lineNumber":561,"author":{"gitId":"bingcheng45"},"content":"**deleteguest** | `deleteguest pn/\u003cPASSPORT_NUMBER\u003e`\u003cbr\u003eExample: `deleteguest pn/T0134568D`","lastModifiedDate":"2021-10-24"},{"lineNumber":562,"author":{"gitId":"bingcheng45"},"content":"**clearguest** | `clearguest`","lastModifiedDate":"2021-10-24"},{"lineNumber":563,"author":{"gitId":"bingcheng45"},"content":"**listguest** | `listguest`","lastModifiedDate":"2021-10-24"},{"lineNumber":564,"author":{"gitId":"bingcheng45"},"content":"**filterguest** | `filterguest \u003cFILTER_FIELD_NAME\u003e/\u003cFILTER_FIELD_VALUE\u003e`\u003cbr\u003eExample: `filterguest n/Bing t/VIP`","lastModifiedDate":"2021-10-24"},{"lineNumber":565,"author":{"gitId":"bingcheng45"},"content":"**chargeguest** | `chargeguest pn/\u003cPASSPORT_NUMBER\u003e vid/\u003cVENDOR_ID\u003e`\u003cbr\u003eExample: `charge pn/T0134568D vid/3`","lastModifiedDate":"2021-10-24"},{"lineNumber":566,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":567,"author":{"gitId":"bingcheng45"},"content":"### Vendor Command Summary","lastModifiedDate":"2021-10-24"},{"lineNumber":568,"author":{"gitId":"calvintanwj"},"content":"Action | Format, Examples","lastModifiedDate":"2021-09-25"},{"lineNumber":569,"author":{"gitId":"NicolasCwy"},"content":"-------|------------------","lastModifiedDate":"2021-10-24"},{"lineNumber":570,"author":{"gitId":"NicolasCwy"},"content":"**addvendor** | `addvendor vid/\u003cVENDOR_ID\u003e n/\u003cNAME\u003e e/\u003cEMAIL\u003e p/\u003cPHONE_NUMBER\u003e a/\u003cADDRESS\u003e sn/\u003cSERVICE_NAME\u003e c/\u003cSERVICE_COST\u003e oh/\u003cOPERATING HOURS\u003e [t/TAG]`\u003cbr\u003eExample: `addvendor vid/123 n/Wang\u0027s Satay e/satayMan@email.com p/84711231 a/Geylang Street 31 sn/Satay c/5 oh/1 0800-2000`","lastModifiedDate":"2021-10-24"},{"lineNumber":571,"author":{"gitId":"NicolasCwy"},"content":"**editvendor** | `editvendor vid/\u003cVENDOR_ID\u003e \u003cFIELD_NAME\u003e/\u003cNEW_FIELD_DETAILS\u003e`\u003cbr\u003eExample: `edit vid/111 sn/Laundry`","lastModifiedDate":"2021-10-24"},{"lineNumber":572,"author":{"gitId":"NicolasCwy"},"content":"**deletevendor** | `deletevendor vid/\u003cVENDOR_ID\u003e`\u003cbr\u003eExample: `deletevendor vid/112`","lastModifiedDate":"2021-10-24"},{"lineNumber":573,"author":{"gitId":"NicolasCwy"},"content":"**clearvendor** | `clearvendor`","lastModifiedDate":"2021-10-24"},{"lineNumber":574,"author":{"gitId":"NicolasCwy"},"content":"**listvendor** | `listvendor`","lastModifiedDate":"2021-10-24"},{"lineNumber":575,"author":{"gitId":"NicolasCwy"},"content":"**filtervendor** | `filtervendor vid/\u003cVENDOR_ID\u003e \u003cFILTER_FIELD_NAME\u003e/\u003cFILTER_FIELD_VALUE\u003e`\u003cbr\u003eExample: `filtervendor sn/Food t/satay`","lastModifiedDate":"2021-10-24"},{"lineNumber":576,"author":{"gitId":"NicolasCwy"},"content":"**help** | `help`","lastModifiedDate":"2021-10-24"},{"lineNumber":577,"author":{"gitId":"NicolasCwy"},"content":"**exit** | `exit`","lastModifiedDate":"2021-10-24"},{"lineNumber":578,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":579,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":580,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":581,"author":{"gitId":"calvintanwj"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-25"},{"lineNumber":582,"author":{"gitId":"NicolasCwy"},"content":"# **Parameter Constraints Section**","lastModifiedDate":"2021-10-24"},{"lineNumber":583,"author":{"gitId":"NicolasCwy"},"content":"## **Guest Parameter Constraints Summary**","lastModifiedDate":"2021-10-10"},{"lineNumber":584,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":585,"author":{"gitId":"calvintanwj"},"content":"Parameter | Prefix | Constraints, Examples","lastModifiedDate":"2021-09-25"},{"lineNumber":586,"author":{"gitId":"calvintanwj"},"content":"----------|--------|-----------------------","lastModifiedDate":"2021-09-25"},{"lineNumber":587,"author":{"gitId":"NicolasCwy"},"content":"**PASSPORT_NUMBER** | `pn/` | Blank inputs are not allowed.\u003cbr\u003eShould only contain alphanumeric characters.\u003cbr\u003eExample: `pn/X12345678A`","lastModifiedDate":"2021-10-24"},{"lineNumber":588,"author":{"gitId":"NicolasCwy"},"content":"**NAME** | `n/` | Blank inputs are not allowed.\u003cbr\u003eExample: `n/Bing Cheng`","lastModifiedDate":"2021-10-24"},{"lineNumber":589,"author":{"gitId":"NicolasCwy"},"content":"**EMAIL** | `e/` | Blanks inputs are not allowed.\u003cbr\u003eA valid email address should be used.\u003cbr\u003eExample: `e/BingCheng@email.com`","lastModifiedDate":"2021-10-24"},{"lineNumber":590,"author":{"gitId":"NicolasCwy"},"content":"**ROOM_NUMBER** | `r/` | Blank inputs are not allowed.\u003cbr\u003eOnly numbers greater than 0 are valid.\u003cbr\u003eExample: `r/500`","lastModifiedDate":"2021-10-24"},{"lineNumber":591,"author":{"gitId":"NicolasCwy"},"content":"**TAG** | `t/` | Blank inputs are not allowed.\u003cbr\u003eAn optional field, more than one can be included in each command.\u003cbr\u003eExample: `t/Vaccinated t/Vegetarian`","lastModifiedDate":"2021-10-24"},{"lineNumber":592,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":593,"author":{"gitId":"NicolasCwy"},"content":"## **Vendor Parameter Constraints Summary**","lastModifiedDate":"2021-10-24"},{"lineNumber":594,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":595,"author":{"gitId":"calvintanwj"},"content":"Parameter | Prefix | Constraints, Examples","lastModifiedDate":"2021-09-25"},{"lineNumber":596,"author":{"gitId":"calvintanwj"},"content":"----------|--------|-----------------------","lastModifiedDate":"2021-09-25"},{"lineNumber":597,"author":{"gitId":"NicolasCwy"},"content":"**VENDOR_ID** | `vid/` |  Blank inputs are not allowed.\u003cbr\u003eShould only contain alphanumeric characters.\u003cbr\u003eExample: `vid/2131`","lastModifiedDate":"2021-10-24"},{"lineNumber":598,"author":{"gitId":"NicolasCwy"},"content":"**NAME** | `n/` | Blank inputs are not allowed.\u003cbr\u003eShould only contain alphabetical characters.\u003cbr\u003eExample: `n/Wang\u0027s Satay`","lastModifiedDate":"2021-10-24"},{"lineNumber":599,"author":{"gitId":"NicolasCwy"},"content":"**EMAIL** | `e/` | Blanks inputs are not allowed.\u003cbr\u003eA valid email address should be used.\u003cbr\u003eExample: `e/satayMan@email.com`","lastModifiedDate":"2021-10-24"},{"lineNumber":600,"author":{"gitId":"NicolasCwy"},"content":"**PHONE_NUMBER** | `p/` | Blank inputs are not allowed.\u003cbr\u003eAt least 3 digits long, should only contain numbers\u003cbr\u003eExample: `p/84711231`","lastModifiedDate":"2021-10-24"},{"lineNumber":601,"author":{"gitId":"NicolasCwy"},"content":"**ADDRESS** | `a/` | Blank inputs are not allowed.\u003cbr\u003eExample: `a/Geylang Street 31`","lastModifiedDate":"2021-10-24"},{"lineNumber":602,"author":{"gitId":"NicolasCwy"},"content":"**SERVICE_NAME** | `sn/` | Blank inputs are not allowed.\u003cbr\u003eAlphabetical characters and spaces are allowed.\u003cbr\u003eExample: `sn/Satay`","lastModifiedDate":"2021-10-24"},{"lineNumber":603,"author":{"gitId":"NicolasCwy"},"content":"**SERVICE_COST** | `c/` | Blank inputs are not allowed.\u003cbr\u003eNumber greater than 0, will be rounded to 2 decimal places.\u003cbr\u003eExample: `c/5`","lastModifiedDate":"2021-10-24"},{"lineNumber":604,"author":{"gitId":"NicolasCwy"},"content":"**OPERATING_HOURS** | `oh/` | Blank inputs are not allowed.\u003cbr\u003eDuplicates are allowed.\u003cbr\u003eFormat: `DAYS STARTTIME-ENDTIME`\u003cbr\u003eMonday is represented using a 1 and Sunday is represented by 7.\u003cbr\u003eExample:\u003cbr\u003e`1234567 0800-2359`: Monday to Sunday 8am to 11:59pm\u003cbr\u003e`1321 0800-0900`: Monday to Wednesday 7am to 9am","lastModifiedDate":"2021-10-24"},{"lineNumber":605,"author":{"gitId":"NicolasCwy"},"content":"**TAG** | `t/` | Blank inputs are not allowed.\u003cbr\u003eAn optional field, more than one can be included in each command.\u003cbr\u003eExample: `t/Halal t/Free flow`","lastModifiedDate":"2021-10-24"},{"lineNumber":606,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":607,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":608,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":609,"author":{"gitId":"calvintanwj"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-25"},{"lineNumber":610,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":611,"author":{"gitId":"NicolasCwy"},"content":"# **Glossary**","lastModifiedDate":"2021-10-24"},{"lineNumber":612,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":613,"author":{"gitId":"calvintanwj"},"content":"* **PH**: Acronym for Pocket Hotel","lastModifiedDate":"2021-09-25"},{"lineNumber":614,"author":{"gitId":"NicolasCwy"},"content":"* **CLI**: Command line interface","lastModifiedDate":"2021-10-09"},{"lineNumber":615,"author":{"gitId":"NicolasCwy"},"content":"* **GUI**: Graphical user interface","lastModifiedDate":"2021-10-09"},{"lineNumber":616,"author":{"gitId":"NicolasCwy"},"content":"* **Guest**: A guest at the hotel","lastModifiedDate":"2021-09-30"},{"lineNumber":617,"author":{"gitId":"NicolasCwy"},"content":"* **Vendor**: An external entity that a hotel uses for services","lastModifiedDate":"2021-10-24"},{"lineNumber":618,"author":{"gitId":"NicolasCwy"},"content":"* **Unique Identifier**: An attribute that uniquely identifies a contact in the address book.","lastModifiedDate":"2021-10-24"},{"lineNumber":619,"author":{"gitId":"NicolasCwy"},"content":"* **Archived Guests**: Guests that are not checked into the hotel and are not displayed, but whose details are stored in **PH**.","lastModifiedDate":"2021-10-24"},{"lineNumber":620,"author":{"gitId":"NicolasCwy"},"content":"* **Unarchived guests**: Guests who are currently checked into **PH** and can be viewed in the list.","lastModifiedDate":"2021-10-24"},{"lineNumber":621,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":622,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":625,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"NicolasCwy"},"content":"# **FAQ**","lastModifiedDate":"2021-10-24"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"calvintanwj"},"content":"**A**: Install the app on your other computer and run it. Overwrite the empty .json file that is created with your old","lastModifiedDate":"2021-09-25"},{"lineNumber":631,"author":{"gitId":"calvintanwj"},"content":".json file in your old computer.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":632,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":633,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":634,"author":{"gitId":"calvintanwj"},"content":"**Q**: How do I know if Java 11 is installed correctly on my computer?\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":635,"author":{"gitId":"calvintanwj"},"content":"**A**: Open up your terminal and run `java --version`. The output should be java 11, if installed correctly.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":636,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":637,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":638,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rgbpokka":1,"calvintanwj":180,"alyssa-savier":1,"bingcheng45":99,"-":130,"NicolasCwy":229}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"bingcheng45"},"content":"    content: \"Pocket Hotel\";","lastModifiedDate":"2021-09-30"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"bingcheng45":1,"-":294}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"NicolasCwy"},"content":"[-\u003e LogicManager : execute(\"delete sid/123\")","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"NicolasCwy"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete sid/123\")","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"NicolasCwy"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"sid/123\")","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"NicolasCwy"},"content":"DeleteCommand -\u003e Model : delete staff with sid \u003d 123","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":65,"NicolasCwy":4}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"title: Pocket Hotel","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"**Pocket Hotel (PH) is a desktop application for managing your contact details, specialized with a focus on hotel management.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"* If you are interested in using PH, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"* If you are interested about developing PH, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"calvintanwj":4,"-":15}},{"path":"docs/team/alyssa-savier.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NicolasCwy"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"NicolasCwy"},"content":"layout: page","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"title: Alyssa Savier\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"NicolasCwy"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"### Project: Pocket Hotel","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"**Pocket Hotel (PH)** is a specialized contact management desktop app targeted towards hotel managers who have many","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"guests and staff to handle.","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"NicolasCwy"},"content":"    * User Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"        * Added documentation for the feature `add`","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"calvintanwj":2,"NicolasCwy":13}},{"path":"docs/team/bingcheng45.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"layout: page","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"title: Toh Bing Cheng\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"### Project: Pocket Hotel","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"**Pocket Hotel (PH)** is a specialized contact management desktop app targeted towards hotel managers who have many","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"guests and staff to handle.","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"  * User Guide:","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"    * Added documentation for the feature `Saving Data`","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"bingcheng45":15}},{"path":"docs/team/calvintanwj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"layout: page","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"title: Calvin Tan\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"### Project: Pocket Hotel","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"**Pocket Hotel (PH)** is a specialized contact management desktop app targeted towards hotel managers who have many","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"guests and staff to handle.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    * User Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"      * Added documentation for features `list` and `view`","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"      * Added and tweaked user stories","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"calvintanwj":17}},{"path":"docs/team/nicolascwy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NicolasCwy"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"NicolasCwy"},"content":"layout: page","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"NicolasCwy"},"content":"title: Nicolas Chang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"NicolasCwy"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"### Project: Pocket Hotel","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"**Pocket Hotel (PH)** is a specialized contact management desktop app targeted towards hotel managers who have many","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"guests and staff to handle.","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"NicolasCwy"},"content":"  * User Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"NicolasCwy"},"content":"    * Added documentation for the feature `delete`","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"NicolasCwy":15}},{"path":"docs/team/rgbpokka.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NicolasCwy"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"NicolasCwy"},"content":"layout: page","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"title: Jeremy Yeo\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"NicolasCwy"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"### Project: Pocket Hotel","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"**Pocket Hotel (PH)** is a specialized contact management desktop app targeted towards hotel managers who have many","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"guests and staff to handle.","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"NicolasCwy"},"content":"    * User Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"        * Added documentation for the feature `edit`","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"calvintanwj":2,"NicolasCwy":13}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Pocket Hotel ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"        logger.info(\"Starting Pocket Hotel \" + MainApp.VERSION);","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Pocket Hotel ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"calvintanwj":4,"-":179}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"    public static final String MESSAGE_INVALID_PERSON_UNIQUE_IDENTIFIER \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"            \"The unique identifier of the person is invalid!\";","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"NicolasCwy"},"content":"    public static final String MESSAGE_INVALID_MULTIPLE_UNIQUE_IDENTIFIER \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"            \"Only one unique identifier should be provided!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_MISSING_ARGUMENTS \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"            \"You are missing arguments in your command. Please follow the command format!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_TOO_MANY_ARGUMENTS \u003d \"Please only specify one argument\";","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"calvintanwj":3,"-":11,"NicolasCwy":4}},{"path":"src/main/java/seedu/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"        // final ObjectMapper mapper \u003d new ObjectMapper();","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"        // final ObjectWriter writer \u003d mapper.writer().withRootName(\"person123\");","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"        // final String jsonMessage \u003d writer.writeValueAsString(objectToSerialize);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"        // FileUtil.writeToFile(jsonFile, jsonMessage);","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"        //actual writing to json file","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param filePath                   cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"bingcheng45"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + classOfObjectToDeserialize + e);","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":97,"author":{"gitId":"bingcheng45"},"content":"        System.out.println(toJsonString(jsonFile)); // prints the json, to be removed","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e      The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"calvintanwj":4,"bingcheng45":7,"-":141}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"     * Returns an unmodifiable view of the filtered list of tags","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    ObservableList\u003cTag\u003e getFilteredTagList();","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"calvintanwj":10,"-":49}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    public ObservableList\u003cTag\u003e getFilteredTagList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        return model.getFilteredTagList();","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"calvintanwj":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOM_NUMBER;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAFF_ID;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"alyssa-savier"},"content":"            + \"Guest Parameters: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"alyssa-savier"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"alyssa-savier"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"alyssa-savier"},"content":"            + PREFIX_PASSPORT_NUMBER + \"PASSPORT NUMBER \"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"alyssa-savier"},"content":"            + PREFIX_ROOM_NUMBER + \"ROOM NUMBER \"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"alyssa-savier"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"alyssa-savier"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"alyssa-savier"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"alyssa-savier"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"alyssa-savier"},"content":"            + PREFIX_ROOM_NUMBER + \"123\"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"alyssa-savier"},"content":"            + PREFIX_TAG + \"Vaccinated \"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"alyssa-savier"},"content":"            + PREFIX_TAG + \"Applied Promocode \\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"alyssa-savier"},"content":"            + \"Staff Parameters: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"alyssa-savier"},"content":"            + PREFIX_STAFF_ID + \"STAFF ID \"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"alyssa-savier"},"content":"            + PREFIX_NAME + \"Bing Cheng \"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"alyssa-savier"},"content":"            + PREFIX_STAFF_ID + \"1001 \"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"alyssa-savier"},"content":"            + PREFIX_TAG + \"New Staff \"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"alyssa-savier"},"content":"            + PREFIX_TAG + \"Vaccinated\";","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"calvintanwj":3,"alyssa-savier":18,"-":63}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.model.person.Guest;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.model.person.PassportNumber;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.model.person.StaffId;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.model.person.UniqueIdentifier;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"NicolasCwy"},"content":"            + \": Deletes the person identified by the passport number or staff id used in the displayed person list.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"NicolasCwy"},"content":"            + \"Parameters: Passport Number or Staff ID\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"NicolasCwy"},"content":"            + \"Example: \" + COMMAND_WORD + \" sid/211 or pn/A021231B\";","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"NicolasCwy"},"content":"    private final UniqueIdentifier uniqueIdentifier;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"NicolasCwy"},"content":"    public DeleteCommand(UniqueIdentifier uniqueIdentifier) {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"NicolasCwy"},"content":"        this.uniqueIdentifier \u003d uniqueIdentifier;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"NicolasCwy"},"content":"        Person personToDelete;","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"NicolasCwy"},"content":"        if (uniqueIdentifier instanceof StaffId) {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"NicolasCwy"},"content":"            personToDelete \u003d lastShownList","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"NicolasCwy"},"content":"                    .stream()","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"NicolasCwy"},"content":"                    .filter(p -\u003e p instanceof Staff \u0026\u0026 ((Staff) p).getStaffId().equals(uniqueIdentifier))","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"NicolasCwy"},"content":"                    .findAny()","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"NicolasCwy"},"content":"                    .orElse(null);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"NicolasCwy"},"content":"        } else if (uniqueIdentifier instanceof PassportNumber) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"NicolasCwy"},"content":"            personToDelete \u003d lastShownList","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"NicolasCwy"},"content":"                    .stream()","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"NicolasCwy"},"content":"                    .filter(g -\u003e g instanceof Guest \u0026\u0026 ((Guest) g).getPassportNumber().equals(uniqueIdentifier))","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"NicolasCwy"},"content":"                    .findAny()","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"NicolasCwy"},"content":"                    .orElse(null);","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"NicolasCwy"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"NicolasCwy"},"content":"            personToDelete \u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"NicolasCwy"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"NicolasCwy"},"content":"        if (personToDelete \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"NicolasCwy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_UNIQUE_IDENTIFIER);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"NicolasCwy"},"content":"                \u0026\u0026 uniqueIdentifier.equals(((DeleteCommand) other).uniqueIdentifier)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":41,"NicolasCwy":32}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOM_NUMBER;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAFF_ID;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Guest;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.PassportNumber;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.StaffId;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.UniqueIdentifier;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"rgbpokka"},"content":"            + \"by the unique identifier of the person. \"","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"            + \"Format for Staff: \"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"            + \"Parameters:  \"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"rgbpokka"},"content":"            + \"[\" + PREFIX_STAFF_ID + \"STAFF_ID\"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"rgbpokka"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"            + \"Example: \" + COMMAND_WORD + \" sid/123 \"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"rgbpokka"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"rgbpokka"},"content":"            + \"Format for Guest: \"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"            + \"Parameters:  \"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"            + \"[\" + PREFIX_PASSPORT_NUMBER + \"PASSPORT_NUMBER\"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"rgbpokka"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"            + \"[\" + PREFIX_ROOM_NUMBER + \"ROOM_NUMBER] \"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"rgbpokka"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"rgbpokka"},"content":"            + \"Example: \" + COMMAND_WORD + \" pn/A12345678 \"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"            + PREFIX_ROOM_NUMBER + \"1233\"","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"rgbpokka"},"content":"            + PREFIX_TAG + \"VIP\";","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"rgbpokka"},"content":"    // this will be a passport number/ staff id, depending on identity of person.","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"rgbpokka"},"content":"    private final UniqueIdentifier uniqueIdentifier;","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"rgbpokka"},"content":"     * @param uniqueIdentifier     of the person in the filtered person list to edit","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"rgbpokka"},"content":"    public EditCommand(UniqueIdentifier uniqueIdentifier, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"rgbpokka"},"content":"        requireNonNull(uniqueIdentifier);","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"rgbpokka"},"content":"        this.uniqueIdentifier \u003d uniqueIdentifier;","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"rgbpokka"},"content":"        this.editPersonDescriptor \u003d editPersonDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"     * Execute the edit command.","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"     * @return CommandResult","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"     * @throws CommandException","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"rgbpokka"},"content":"        Person personToEdit;","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"rgbpokka"},"content":"        // logic to decide whether this a staff or guest","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"rgbpokka"},"content":"        // will result in assertion failure later if person does not exist on list","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"rgbpokka"},"content":"        if (uniqueIdentifier instanceof StaffId) {","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"rgbpokka"},"content":"            personToEdit \u003d lastShownList","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"rgbpokka"},"content":"                    .stream()","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"rgbpokka"},"content":"                    .filter(p -\u003e p instanceof Staff \u0026\u0026 ((Staff) p).getStaffId().equals(uniqueIdentifier))","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"rgbpokka"},"content":"                    .findAny()","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"rgbpokka"},"content":"                    .orElse(null);","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"rgbpokka"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"rgbpokka"},"content":"            personToEdit \u003d lastShownList","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"rgbpokka"},"content":"                    .stream()","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"rgbpokka"},"content":"                    .filter(p -\u003e p instanceof Guest \u0026\u0026 ((Guest) p).getPassportNumber().equals(uniqueIdentifier))","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"rgbpokka"},"content":"                    .findAny()","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"rgbpokka"},"content":"                    .orElse(null);","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"rgbpokka"},"content":"        if (personToEdit \u003d\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"rgbpokka"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_UNIQUE_IDENTIFIER);","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"rgbpokka"},"content":"        Phone updatedPhone;","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"rgbpokka"},"content":"        Address updatedAddress;","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"rgbpokka"},"content":"        RoomNumber updatedRoomNumber;","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"rgbpokka"},"content":"        StaffId updatedStaffId;","lastModifiedDate":"2021-10-15"},{"lineNumber":149,"author":{"gitId":"rgbpokka"},"content":"        PassportNumber updatedPassportNumber;","lastModifiedDate":"2021-10-15"},{"lineNumber":150,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"rgbpokka"},"content":"        if (personToEdit instanceof Staff) {","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"rgbpokka"},"content":"            Staff staff \u003d (Staff) personToEdit;","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"rgbpokka"},"content":"            EditStaffDescriptor editStaffDescriptor \u003d (EditStaffDescriptor) editPersonDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":154,"author":{"gitId":"rgbpokka"},"content":"            updatedPhone \u003d editStaffDescriptor.getPhone().orElse(staff.getPhone());","lastModifiedDate":"2021-10-15"},{"lineNumber":155,"author":{"gitId":"rgbpokka"},"content":"            updatedAddress \u003d editStaffDescriptor.getAddress().orElse(staff.getAddress());","lastModifiedDate":"2021-10-15"},{"lineNumber":156,"author":{"gitId":"rgbpokka"},"content":"            updatedStaffId \u003d editStaffDescriptor.getStaffId().orElse(staff.getStaffId());","lastModifiedDate":"2021-10-15"},{"lineNumber":157,"author":{"gitId":"rgbpokka"},"content":"            return new Staff(updatedName, updatedEmail, updatedTags, updatedAddress, updatedStaffId, updatedPhone);","lastModifiedDate":"2021-10-15"},{"lineNumber":158,"author":{"gitId":"rgbpokka"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"rgbpokka"},"content":"            Guest guest \u003d (Guest) personToEdit;","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"rgbpokka"},"content":"            EditGuestDescriptor editGuestDescriptor \u003d (EditGuestDescriptor) editPersonDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":161,"author":{"gitId":"rgbpokka"},"content":"            updatedRoomNumber \u003d editGuestDescriptor.getRoomNumber().orElse(guest.getRoomNumber());","lastModifiedDate":"2021-10-15"},{"lineNumber":162,"author":{"gitId":"rgbpokka"},"content":"            updatedPassportNumber \u003d editGuestDescriptor.getPassportNumber().orElse(guest.getPassportNumber());","lastModifiedDate":"2021-10-15"},{"lineNumber":163,"author":{"gitId":"rgbpokka"},"content":"            return new Guest(updatedName, updatedEmail, updatedTags, updatedRoomNumber, updatedPassportNumber);","lastModifiedDate":"2021-10-15"},{"lineNumber":164,"author":{"gitId":"rgbpokka"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"rgbpokka"},"content":"        return uniqueIdentifier.equals(e.uniqueIdentifier)","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"    public abstract static class EditPersonDescriptor {","lastModifiedDate":"2021-10-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"calvintanwj"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2021-10-14"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-10-15"},{"lineNumber":198,"author":{"gitId":"calvintanwj"},"content":"         * Creates a edit person descriptor instance.","lastModifiedDate":"2021-10-15"},{"lineNumber":199,"author":{"gitId":"calvintanwj"},"content":"         *","lastModifiedDate":"2021-10-15"},{"lineNumber":200,"author":{"gitId":"calvintanwj"},"content":"         * @param toCopy","lastModifiedDate":"2021-10-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-10-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"rgbpokka"},"content":"            return CollectionUtil.isAnyNonNull(name, email, tags);","lastModifiedDate":"2021-10-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-10-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-10-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2021-10-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2021-10-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2021-10-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2021-10-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-10-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-10-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-10-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-10-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-10-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-10-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-10-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-10-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-10-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-10-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-15"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2021-10-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2021-10-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2021-10-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-10-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2021-10-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-10-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":269,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":270,"author":{"gitId":"rgbpokka"},"content":"     * Stores the details to edit the guest with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-15"},{"lineNumber":271,"author":{"gitId":"rgbpokka"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2021-10-15"},{"lineNumber":272,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":273,"author":{"gitId":"rgbpokka"},"content":"    public static class EditGuestDescriptor extends EditPersonDescriptor {","lastModifiedDate":"2021-10-15"},{"lineNumber":274,"author":{"gitId":"rgbpokka"},"content":"        private PassportNumber passportNumber;","lastModifiedDate":"2021-10-15"},{"lineNumber":275,"author":{"gitId":"rgbpokka"},"content":"        private RoomNumber roomNumber;","lastModifiedDate":"2021-10-15"},{"lineNumber":276,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":277,"author":{"gitId":"rgbpokka"},"content":"        public EditGuestDescriptor() {","lastModifiedDate":"2021-10-15"},{"lineNumber":278,"author":{"gitId":"rgbpokka"},"content":"            super();","lastModifiedDate":"2021-10-15"},{"lineNumber":279,"author":{"gitId":"rgbpokka"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":280,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":281,"author":{"gitId":"rgbpokka"},"content":"        /**","lastModifiedDate":"2021-10-15"},{"lineNumber":282,"author":{"gitId":"rgbpokka"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-15"},{"lineNumber":283,"author":{"gitId":"rgbpokka"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-15"},{"lineNumber":284,"author":{"gitId":"rgbpokka"},"content":"         */","lastModifiedDate":"2021-10-15"},{"lineNumber":285,"author":{"gitId":"rgbpokka"},"content":"        public EditGuestDescriptor(EditGuestDescriptor toCopy) {","lastModifiedDate":"2021-10-15"},{"lineNumber":286,"author":{"gitId":"rgbpokka"},"content":"            super(toCopy);","lastModifiedDate":"2021-10-15"},{"lineNumber":287,"author":{"gitId":"rgbpokka"},"content":"            setPassportNumber(toCopy.passportNumber);","lastModifiedDate":"2021-10-15"},{"lineNumber":288,"author":{"gitId":"rgbpokka"},"content":"            setRoomNumber(toCopy.roomNumber);","lastModifiedDate":"2021-10-15"},{"lineNumber":289,"author":{"gitId":"rgbpokka"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":290,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":291,"author":{"gitId":"rgbpokka"},"content":"        /**","lastModifiedDate":"2021-10-15"},{"lineNumber":292,"author":{"gitId":"rgbpokka"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-15"},{"lineNumber":293,"author":{"gitId":"rgbpokka"},"content":"         */","lastModifiedDate":"2021-10-15"},{"lineNumber":294,"author":{"gitId":"rgbpokka"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-15"},{"lineNumber":295,"author":{"gitId":"rgbpokka"},"content":"            return CollectionUtil.isAnyNonNull(getName(), getEmail(), getTags(), roomNumber, passportNumber);","lastModifiedDate":"2021-10-15"},{"lineNumber":296,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":297,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":298,"author":{"gitId":"calvintanwj"},"content":"        public void setPassportNumber(PassportNumber passportNumber) {","lastModifiedDate":"2021-10-14"},{"lineNumber":299,"author":{"gitId":"calvintanwj"},"content":"            this.passportNumber \u003d passportNumber;","lastModifiedDate":"2021-10-14"},{"lineNumber":300,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":301,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":302,"author":{"gitId":"calvintanwj"},"content":"        public Optional\u003cPassportNumber\u003e getPassportNumber() {","lastModifiedDate":"2021-10-14"},{"lineNumber":303,"author":{"gitId":"calvintanwj"},"content":"            return Optional.ofNullable(passportNumber);","lastModifiedDate":"2021-10-14"},{"lineNumber":304,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":305,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":306,"author":{"gitId":"calvintanwj"},"content":"        public void setRoomNumber(RoomNumber roomNumber) {","lastModifiedDate":"2021-10-14"},{"lineNumber":307,"author":{"gitId":"calvintanwj"},"content":"            this.roomNumber \u003d roomNumber;","lastModifiedDate":"2021-10-14"},{"lineNumber":308,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":309,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":310,"author":{"gitId":"calvintanwj"},"content":"        public Optional\u003cRoomNumber\u003e getRoomNumber() {","lastModifiedDate":"2021-10-14"},{"lineNumber":311,"author":{"gitId":"calvintanwj"},"content":"            return Optional.ofNullable(roomNumber);","lastModifiedDate":"2021-10-14"},{"lineNumber":312,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":313,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":314,"author":{"gitId":"rgbpokka"},"content":"        @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":315,"author":{"gitId":"rgbpokka"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-15"},{"lineNumber":316,"author":{"gitId":"rgbpokka"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-15"},{"lineNumber":317,"author":{"gitId":"rgbpokka"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-15"},{"lineNumber":318,"author":{"gitId":"rgbpokka"},"content":"                return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":319,"author":{"gitId":"rgbpokka"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":320,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":321,"author":{"gitId":"rgbpokka"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-15"},{"lineNumber":322,"author":{"gitId":"rgbpokka"},"content":"            if (!(other instanceof EditGuestDescriptor)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":323,"author":{"gitId":"rgbpokka"},"content":"                return false;","lastModifiedDate":"2021-10-15"},{"lineNumber":324,"author":{"gitId":"rgbpokka"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":325,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":326,"author":{"gitId":"rgbpokka"},"content":"            // state check","lastModifiedDate":"2021-10-15"},{"lineNumber":327,"author":{"gitId":"rgbpokka"},"content":"            EditGuestDescriptor e \u003d (EditGuestDescriptor) other;","lastModifiedDate":"2021-10-15"},{"lineNumber":328,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":329,"author":{"gitId":"rgbpokka"},"content":"            return super.equals(e)","lastModifiedDate":"2021-10-15"},{"lineNumber":330,"author":{"gitId":"rgbpokka"},"content":"                    \u0026\u0026 getPassportNumber().equals(e.getPassportNumber())","lastModifiedDate":"2021-10-15"},{"lineNumber":331,"author":{"gitId":"rgbpokka"},"content":"                    \u0026\u0026 getRoomNumber().equals(e.getRoomNumber());","lastModifiedDate":"2021-10-15"},{"lineNumber":332,"author":{"gitId":"rgbpokka"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":333,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":334,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-01-11"},{"lineNumber":336,"author":{"gitId":"rgbpokka"},"content":"     * Stores the details to edit the staff with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-15"},{"lineNumber":337,"author":{"gitId":"rgbpokka"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2021-10-15"},{"lineNumber":338,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":339,"author":{"gitId":"rgbpokka"},"content":"    public static class EditStaffDescriptor extends EditPersonDescriptor {","lastModifiedDate":"2021-10-15"},{"lineNumber":340,"author":{"gitId":"rgbpokka"},"content":"        private Phone phone;","lastModifiedDate":"2021-10-15"},{"lineNumber":341,"author":{"gitId":"rgbpokka"},"content":"        private Address address;","lastModifiedDate":"2021-10-15"},{"lineNumber":342,"author":{"gitId":"rgbpokka"},"content":"        private StaffId staffId;","lastModifiedDate":"2021-10-15"},{"lineNumber":343,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":344,"author":{"gitId":"rgbpokka"},"content":"        public EditStaffDescriptor() {","lastModifiedDate":"2021-10-15"},{"lineNumber":345,"author":{"gitId":"rgbpokka"},"content":"            super();","lastModifiedDate":"2021-10-15"},{"lineNumber":346,"author":{"gitId":"rgbpokka"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":347,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":348,"author":{"gitId":"rgbpokka"},"content":"        /**","lastModifiedDate":"2021-10-15"},{"lineNumber":349,"author":{"gitId":"rgbpokka"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":351,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":352,"author":{"gitId":"rgbpokka"},"content":"        public EditStaffDescriptor(EditStaffDescriptor toCopy) {","lastModifiedDate":"2021-10-15"},{"lineNumber":353,"author":{"gitId":"rgbpokka"},"content":"            super(toCopy);","lastModifiedDate":"2021-10-15"},{"lineNumber":354,"author":{"gitId":"rgbpokka"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2021-10-15"},{"lineNumber":355,"author":{"gitId":"rgbpokka"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2021-10-15"},{"lineNumber":356,"author":{"gitId":"rgbpokka"},"content":"            setStaffId(toCopy.staffId);","lastModifiedDate":"2021-10-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":360,"author":{"gitId":"rgbpokka"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-15"},{"lineNumber":361,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":362,"author":{"gitId":"rgbpokka"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-15"},{"lineNumber":363,"author":{"gitId":"rgbpokka"},"content":"            return CollectionUtil.isAnyNonNull(getName(), phone, getEmail(), address, getTags(), staffId);","lastModifiedDate":"2021-10-15"},{"lineNumber":364,"author":{"gitId":"rgbpokka"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":365,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":366,"author":{"gitId":"rgbpokka"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2021-10-15"},{"lineNumber":367,"author":{"gitId":"rgbpokka"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2021-10-15"},{"lineNumber":368,"author":{"gitId":"rgbpokka"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":369,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":370,"author":{"gitId":"rgbpokka"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2021-10-15"},{"lineNumber":371,"author":{"gitId":"rgbpokka"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2021-10-15"},{"lineNumber":372,"author":{"gitId":"rgbpokka"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":373,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":374,"author":{"gitId":"rgbpokka"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2021-10-15"},{"lineNumber":375,"author":{"gitId":"rgbpokka"},"content":"            this.address \u003d address;","lastModifiedDate":"2021-10-15"},{"lineNumber":376,"author":{"gitId":"rgbpokka"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":377,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":378,"author":{"gitId":"rgbpokka"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-10-15"},{"lineNumber":379,"author":{"gitId":"rgbpokka"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2021-10-15"},{"lineNumber":380,"author":{"gitId":"rgbpokka"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":381,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":382,"author":{"gitId":"rgbpokka"},"content":"        public void setStaffId(StaffId staffId) {","lastModifiedDate":"2021-10-15"},{"lineNumber":383,"author":{"gitId":"rgbpokka"},"content":"            this.staffId \u003d staffId;","lastModifiedDate":"2021-10-15"},{"lineNumber":384,"author":{"gitId":"rgbpokka"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":385,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":386,"author":{"gitId":"rgbpokka"},"content":"        public Optional\u003cStaffId\u003e getStaffId() {","lastModifiedDate":"2021-10-15"},{"lineNumber":387,"author":{"gitId":"rgbpokka"},"content":"            return Optional.ofNullable(staffId);","lastModifiedDate":"2021-10-15"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":393,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":394,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":395,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":397,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":398,"author":{"gitId":"rgbpokka"},"content":"            if (!(other instanceof EditStaffDescriptor)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":399,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":400,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":403,"author":{"gitId":"rgbpokka"},"content":"            EditStaffDescriptor e \u003d (EditStaffDescriptor) other;","lastModifiedDate":"2021-10-15"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":405,"author":{"gitId":"rgbpokka"},"content":"            return super.equals(e)","lastModifiedDate":"2021-10-15"},{"lineNumber":406,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":407,"author":{"gitId":"rgbpokka"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2021-10-15"},{"lineNumber":408,"author":{"gitId":"rgbpokka"},"content":"                    \u0026\u0026 getStaffId().equals(e.getStaffId());","lastModifiedDate":"2021-10-15"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":411,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":412,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":413,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"rgbpokka":180,"calvintanwj":26,"-":207}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters the list by tags: \"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_TAG + \"TAG\" + \"...\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_TAG + \"Staff \"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_TAG + \"Vaccinated \"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"            + \"\\n This filters the list by those that are vaccinated and are Staff.\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    private final TagContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    public FilterCommand(TagContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        model.updateFilteredTagList(getTagPredicate(predicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    private Predicate\u003cTag\u003e getTagPredicate(TagContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        return tag -\u003e predicate.getTags().contains(tag);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 predicate.equals(((FilterCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"calvintanwj":54}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TAGS;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons and tags\";","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"        model.updateFilteredTagList(PREDICATE_SHOW_ALL_TAGS);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"calvintanwj":3,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAFF_ID;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.IdentifierContainsKeywordsPredicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds the staff or guest by\"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"            + \"the specified staff ID or passport number (case-insensitive) and displays them.\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"            + \"Parameters: \" + PREFIX_PASSPORT_NUMBER + \"PASSPORT NUMBER \" + \"or\" + PREFIX_STAFF_ID + \"STAFF ID\"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"            + \"...\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"            + \"Example: \" + COMMAND_WORD + PREFIX_STAFF_ID + \" 101\";","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    private final IdentifierContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    public ViewCommand(IdentifierContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 predicate.equals(((ViewCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"calvintanwj":15,"-":30}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOM_NUMBER;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAFF_ID;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.model.person.Guest;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.PassportNumber;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.model.person.StaffId;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"                        PREFIX_STAFF_ID, PREFIX_PASSPORT_NUMBER, PREFIX_ROOM_NUMBER);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_PASSPORT_NUMBER, PREFIX_STAFF_ID)","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"alyssa-savier"},"content":"            //think of new error msg for only can have either passport number or staffid","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PASSPORT_NUMBER)","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_STAFF_ID)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"alyssa-savier"},"content":"            // new error msg for needing passport number OR staff id","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"alyssa-savier"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_PASSPORT_NUMBER)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PASSPORT_NUMBER, PREFIX_ROOM_NUMBER, PREFIX_EMAIL)","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"alyssa-savier"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"alyssa-savier"},"content":"            Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"alyssa-savier"},"content":"            Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"            tagList.add(new Tag(\"Guest\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"            RoomNumber roomNumber \u003d ParserUtil.parseRoomNumber(argMultimap.getValue(PREFIX_ROOM_NUMBER).get());","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"            PassportNumber passport \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"                    ParserUtil.parsePassportNumber(argMultimap.getValue(PREFIX_PASSPORT_NUMBER).get());","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"alyssa-savier"},"content":"            Guest guest \u003d new Guest(name, email, tagList, roomNumber, passport);","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"alyssa-savier"},"content":"            return new AddCommand(guest);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_STAFF_ID)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_STAFF_ID,","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"                    PREFIX_PHONE)","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"alyssa-savier"},"content":"                    || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"alyssa-savier"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"alyssa-savier"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"            tagList.add(new Tag(\"Staff\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"alyssa-savier"},"content":"            Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"            StaffId staffId \u003d ParserUtil.parseStaffId(argMultimap.getValue(PREFIX_STAFF_ID).get());","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"alyssa-savier"},"content":"            Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"alyssa-savier"},"content":"            Staff staff \u003d new Staff(name, email, tagList, address, staffId, phone);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"alyssa-savier"},"content":"            return new AddCommand(staff);","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"alyssa-savier"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"        StaffId staffId \u003d ParserUtil.parseStaffId(argMultimap.getValue(PREFIX_STAFF_ID).get());","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"alyssa-savier"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":99,"author":{"gitId":"alyssa-savier"},"content":"        Staff staff \u003d new Staff(name, email, tagList, address, staffId, phone);","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"alyssa-savier"},"content":"        return new AddCommand(staff);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"calvintanwj":23,"alyssa-savier":28,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"calvintanwj":7,"-":73}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"    /* Prefix definitions exclusive to Staff */","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"    public static final Prefix PREFIX_STAFF_ID \u003d new Prefix(\"sid/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"rgbpokka"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"    /* Prefix definitions exclusive to Guest */","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"    public static final Prefix PREFIX_ROOM_NUMBER \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"rgbpokka"},"content":"    public static final Prefix PREFIX_PASSPORT_NUMBER \u003d new Prefix(\"pn/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"rgbpokka":9,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"NicolasCwy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_MULTIPLE_UNIQUE_IDENTIFIER;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAFF_ID;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.model.person.UniqueIdentifier;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"NicolasCwy"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"NicolasCwy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"NicolasCwy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STAFF_ID, PREFIX_PASSPORT_NUMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"NicolasCwy"},"content":"        UniqueIdentifier uniqueIdentifier;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"NicolasCwy"},"content":"            // Identify staff or guest","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"NicolasCwy"},"content":"            if (argMultimap.getValue(PREFIX_STAFF_ID).isPresent()","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"NicolasCwy"},"content":"                    \u0026\u0026 argMultimap.getValue(PREFIX_PASSPORT_NUMBER).isPresent()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"NicolasCwy"},"content":"                throw new ParseException(MESSAGE_INVALID_MULTIPLE_UNIQUE_IDENTIFIER);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"NicolasCwy"},"content":"            } else if (argMultimap.getValue(PREFIX_STAFF_ID).isPresent()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"NicolasCwy"},"content":"                uniqueIdentifier \u003d ParserUtil.parseStaffId(argMultimap.getValue(PREFIX_STAFF_ID).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"NicolasCwy"},"content":"            } else if (argMultimap.getValue(PREFIX_PASSPORT_NUMBER).isPresent()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"NicolasCwy"},"content":"                uniqueIdentifier \u003d ParserUtil.parsePassportNumber(","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"NicolasCwy"},"content":"                        argMultimap.getValue(PREFIX_PASSPORT_NUMBER).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"NicolasCwy"},"content":"            } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"NicolasCwy"},"content":"                // Message left blank as the catch statements message is already sufficient","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"NicolasCwy"},"content":"                throw new ParseException(\"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"NicolasCwy"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"NicolasCwy"},"content":"            return new DeleteCommand(uniqueIdentifier);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"-":25,"NicolasCwy":26}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_UNIQUE_IDENTIFIER;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOM_NUMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAFF_ID;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.logic.commands.EditCommand.EditGuestDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.EditCommand.EditStaffDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.PassportNumber;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.StaffId;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.UniqueIdentifier;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"                        PREFIX_STAFF_ID, PREFIX_PASSPORT_NUMBER, PREFIX_ROOM_NUMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"rgbpokka"},"content":"        // will be assigned staff id or guest passport number depending on identity of person.","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"rgbpokka"},"content":"        UniqueIdentifier uniqueIdentifier;","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"        // determine if person is staff or guest based on whether staff id or passport number is present","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"rgbpokka"},"content":"        if (argMultimap.getValue(PREFIX_STAFF_ID).isPresent()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"rgbpokka"},"content":"            StaffId staffId \u003d ParserUtil.parseStaffId(argMultimap.getValue(PREFIX_STAFF_ID).get());","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"rgbpokka"},"content":"            EditStaffDescriptor editStaffDescriptor \u003d new EditStaffDescriptor();","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"rgbpokka"},"content":"            editStaffDescriptor.setStaffId(staffId);","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"                editStaffDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"                editStaffDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"rgbpokka"},"content":"            parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editStaffDescriptor::setTags);","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"rgbpokka"},"content":"            if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"rgbpokka"},"content":"                editStaffDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"            if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"rgbpokka"},"content":"                editStaffDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"rgbpokka"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"rgbpokka"},"content":"            if (!editStaffDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"rgbpokka"},"content":"                throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"rgbpokka"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"rgbpokka"},"content":"            uniqueIdentifier \u003d staffId;","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"rgbpokka"},"content":"            return new EditCommand(uniqueIdentifier, editStaffDescriptor);","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"rgbpokka"},"content":"        } else if (argMultimap.getValue(PREFIX_PASSPORT_NUMBER).isPresent()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"            PassportNumber passportNumber \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"                    ParserUtil.parsePassportNumber(argMultimap.getValue(PREFIX_PASSPORT_NUMBER).get());","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"rgbpokka"},"content":"            EditGuestDescriptor editGuestDescriptor \u003d new EditGuestDescriptor();","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"rgbpokka"},"content":"            editGuestDescriptor.setPassportNumber(passportNumber);","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"rgbpokka"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"rgbpokka"},"content":"                editGuestDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"rgbpokka"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"rgbpokka"},"content":"            if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"rgbpokka"},"content":"                editGuestDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"rgbpokka"},"content":"            parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editGuestDescriptor::setTags);","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"rgbpokka"},"content":"            if (argMultimap.getValue(PREFIX_ROOM_NUMBER).isPresent()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"rgbpokka"},"content":"                editGuestDescriptor.setRoomNumber(","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"                        ParserUtil.parseRoomNumber(argMultimap.getValue(PREFIX_ROOM_NUMBER).get()));","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"rgbpokka"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"rgbpokka"},"content":"            if (!editGuestDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"rgbpokka"},"content":"            uniqueIdentifier \u003d passportNumber;","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"rgbpokka"},"content":"            return new EditCommand(uniqueIdentifier, editGuestDescriptor);","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"rgbpokka"},"content":"        } else {","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"rgbpokka"},"content":"            throw new ParseException(MESSAGE_INVALID_PERSON_UNIQUE_IDENTIFIER);","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"rgbpokka"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"rgbpokka":56,"calvintanwj":5,"-":63}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MISSING_ARGUMENTS;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"                    String.format(MESSAGE_MISSING_ARGUMENTS, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        if (!trimmedArgs.contains(PREFIX_TAG.getPrefix())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        String[] splitArguments \u003d trimmedArgs.split(PREFIX_TAG.getPrefix());","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        List\u003cTag\u003e culledArguments \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"                List.of(splitArguments).stream().filter(x -\u003e !x.isEmpty()).map(String::trim).map(Tag::new).collect(","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                        Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        if (culledArguments.isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"                    String.format(MESSAGE_MISSING_ARGUMENTS, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        return new FilterCommand(new TagContainsKeywordsPredicate(culledArguments));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"calvintanwj":52}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.PassportNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.StaffId;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"     * Parses a {@code String staffId} into a {@code staffId}.","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the given {@code staffId} is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"    public static StaffId parseStaffId(String staffId) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(staffId);","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        String trimmedStaffId \u003d staffId.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"        if (!StaffId.isValidStaffId(trimmedStaffId)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(StaffId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"        return new StaffId(staffId);","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"     * Parses a {@code String roomNumber} into a {@code roomNumber}.","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the given {@code roomNumber} is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"    public static RoomNumber parseRoomNumber(String roomNumber) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(roomNumber);","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"        String trimmedRoomNumber \u003d roomNumber.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"        if (!RoomNumber.isValidRoomNumber(trimmedRoomNumber)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(RoomNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"        return new RoomNumber(roomNumber);","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"     * Parses a {@code String passportNumber} into a {@code passportNumber}.","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the given {@code passportNumber} is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"    public static PassportNumber parsePassportNumber(String passportNumber) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(passportNumber);","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"        String trimmedPassportNumber \u003d passportNumber.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"        if (!PassportNumber.isValidPassportNumber(trimmedPassportNumber)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(PassportNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"        return new PassportNumber(passportNumber);","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"calvintanwj":50,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MISSING_ARGUMENTS;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_TOO_MANY_ARGUMENTS;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAFF_ID;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.IdentifierContainsKeywordsPredicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"                    String.format(MESSAGE_MISSING_ARGUMENTS, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        String[] splitArguments \u003d trimmedArgs.split(String.format(\"%s|%s\", PREFIX_STAFF_ID, PREFIX_PASSPORT_NUMBER));","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        if (splitArguments.length \u003e 2) { // Need to fix empty string inside String[]","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"                    String.format(MESSAGE_TOO_MANY_ARGUMENTS, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STAFF_ID, PREFIX_PASSPORT_NUMBER);","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_STAFF_ID)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"            trimmedArgs \u003d argMultimap.getValue(PREFIX_STAFF_ID).get();","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_PASSPORT_NUMBER)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"            trimmedArgs \u003d argMultimap.getValue(PREFIX_PASSPORT_NUMBER).get();","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        return new ViewCommand(new IdentifierContainsKeywordsPredicate(Arrays.asList(trimmedArgs)));","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"calvintanwj":38,"-":25}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.UniqueTagList;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    private final UniqueTagList tags;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        tags \u003d new UniqueTagList();","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    public AddressBook() {","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"     * Replaces the contents of the tag list with {@code tags}.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"     * {@code tags} must not contain duplicate tags.","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    public void setTags(List\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        this.tags.setTags(tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        setTags(newData.getTagList());","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"    //// tag-level operations","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if a tag with the same identity as {@code tag} exists in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(tag);","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"        return tags.contains(tag);","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"    public Tag getTag(Tag tag) {","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(tag);","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"        return tags.get(tag);","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"     * Adds a tag to the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"     * The tag must not already exist in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"    public void addTag(Tag t) {","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"        tags.add(t);","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"     * Replaces the given tag {@code target} in the list with {@code editedTag}.","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"     * The tag identity of {@code editedTag} must not be the same as another existing tag in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"    public void setTag(Tag target, Tag editedTag) {","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(editedTag);","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"        tags.setTag(target, editedTag);","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"    public void removeTag(Tag key) {","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"        tags.remove(key);","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\"","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"                + tags.asUnmodifiableObservableList().size() + \"tags\";","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"    public ObservableList\u003cTag\u003e getTagList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"        return tags.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 tags.equals(((AddressBook) other).tags));","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"        return Objects.hash(persons, tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"calvintanwj":67,"-":115}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    Predicate\u003cTag\u003e PREDICATE_SHOW_ALL_TAGS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"     * Returns the AddressBook","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if a tag with the same identity as {@code tag} exists in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"    boolean hasTag(Tag tag);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"     * Deletes the given tag.","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"     * The tag must exist in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"    void deleteTag(Tag target);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"     * Adds the given tag.","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"     * {@code tag} must not already exist in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"    void addTag(Tag tag);","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"     * Gets the given tag inside the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"     * @param tag","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"    Tag getTag(Tag tag);","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"     * Replaces the given tag {@code target} with {@code editedTag}.","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"     * The tag identity of {@code editedTag} must not be the same as another existing tag in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"    void setTag(Tag target, Tag editedTag);","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"     * Returns an unmodifiable view of the filtered tag list","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"    ObservableList\u003cTag\u003e getFilteredTagList();","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"     * Updates the filter of the filtered tag list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"    void updateFilteredTagList(Predicate\u003cTag\u003e predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"calvintanwj":56,"-":84}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    private final FilteredList\u003cTag\u003e filteredTags;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        filteredTags \u003d new FilteredList\u003c\u003e(this.addressBook.getTagList());","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"NicolasCwy"},"content":"        deleteTagAssociatedToPerson(target);","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"NicolasCwy"},"content":"    private void deleteTagAssociatedToPerson(Person target) {","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"NicolasCwy"},"content":"        Set\u003cTag\u003e tags \u003d target.getTags();","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"NicolasCwy"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"NicolasCwy"},"content":"            tag.removePerson(target);","lastModifiedDate":"2021-10-15"},{"lineNumber":113,"author":{"gitId":"NicolasCwy"},"content":"            if (tag.noTaggedPerson()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"NicolasCwy"},"content":"                this.deleteTag(tag);","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"NicolasCwy"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"NicolasCwy"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"        addTagAssociatedToPerson(person);","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"    private void addTagAssociatedToPerson(Person toAdd) {","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"        Set\u003cTag\u003e tags \u003d toAdd.getTags();","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"            if (!addressBook.hasTag(tag)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"                addressBook.addTag(tag);","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"                newTags.add(tag);","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"                newTags.add(addressBook.getTag(tag));","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"        toAdd.setTags(newTags);","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"        for (Tag tag : newTags) {","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"            tag.addPerson(toAdd);","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"        setTagsAssociatedToPerson(target, editedPerson);","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"    private void setTagsAssociatedToPerson(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"        Set\u003cTag\u003e tags \u003d editedPerson.getTags();","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"            if (!addressBook.hasTag(tag)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"                addressBook.addTag(tag);","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"                newTags.add(tag);","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"                newTags.add(addressBook.getTag(tag));","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"        for (Tag tag : newTags) {","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"            tag.addPerson(editedPerson);","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"        editedPerson.setTags(newTags);","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"        Set\u003cTag\u003e deletedTags \u003d personToEdit.getTags();","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"        for (Tag tag : deletedTags) {","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"            tag.removePerson(personToEdit);","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"            if (tag.noTaggedPerson()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"                addressBook.removeTag(tag);","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(tag);","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"        return addressBook.hasTag(tag);","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"    public void deleteTag(Tag target) {","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"calvintanwj"},"content":"        addressBook.removeTag(target);","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"calvintanwj"},"content":"    public void addTag(Tag tag) {","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"        addressBook.addTag(tag);","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"calvintanwj"},"content":"        updateFilteredTagList(PREDICATE_SHOW_ALL_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"calvintanwj"},"content":"    public Tag getTag(Tag tag) {","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"calvintanwj"},"content":"        return addressBook.getTag(tag);","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"calvintanwj"},"content":"    public void setTag(Tag target, Tag editedTag) {","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"calvintanwj"},"content":"        requireAllNonNull(target, editedTag);","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"calvintanwj"},"content":"        addressBook.setTag(target, editedTag);","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"calvintanwj"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person/Tag List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":221,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"calvintanwj"},"content":"    public ObservableList\u003cTag\u003e getFilteredTagList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"calvintanwj"},"content":"        return filteredTags;","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":232,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"calvintanwj"},"content":"    public void updateFilteredTagList(Predicate\u003cTag\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"calvintanwj"},"content":"        filteredTags.setPredicate(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":255,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 filteredTags.equals(other.filteredTags);","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rgbpokka":1,"calvintanwj":96,"-":151,"NicolasCwy":11}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    ObservableList\u003cTag\u003e getTagList();","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"calvintanwj":7,"-":17}},{"path":"src/main/java/seedu/address/model/person/Guest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"public class Guest extends Person {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"    private final RoomNumber roomNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    private final PassportNumber passportNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"     * @param name","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"     * @param email","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"     * @param tags","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"     * @param roomNumber","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"     * @param passportNumber","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    public Guest(Name name, Email email, Set\u003cTag\u003e tags, RoomNumber roomNumber, PassportNumber passportNumber) {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"        super(name, email, tags);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        this.roomNumber \u003d roomNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        this.passportNumber \u003d passportNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    public RoomNumber getRoomNumber() {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        return roomNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public PassportNumber getPassportNumber() {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        return passportNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"            return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        if (otherPerson instanceof Guest) {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"            Guest otherGuest \u003d (Guest) otherPerson;","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"            return otherGuest.getPassportNumber().equals(getPassportNumber());","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        if (!(other instanceof Guest)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        Guest otherPerson \u003d (Guest) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherPerson.getRoomNumber().equals(getRoomNumber())","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherPerson.getPassportNumber().equals(getPassportNumber())","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        return Objects.hash(getName(), getEmail(), getRoomNumber(), getPassportNumber(), getTags());","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"                .append(getEmail())","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"                .append(\"; RoomNumber: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"                .append(getRoomNumber())","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"                .append(\"; PassportNumber: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"                .append(getPassportNumber());","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"calvintanwj":97}},{"path":"src/main/java/seedu/address/model/person/IdentifierContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":" * Tests that a {@code Person}\u0027s {@code Identifier} matches any of the keywords given.","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"public class IdentifierContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    public IdentifierContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"        if (person instanceof Staff) {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"            Staff staff \u003d (Staff) person;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(staff.getStaffId().value, keyword));","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"            Guest guest \u003d (Guest) person;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"            return keywords.stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(guest.getPassportNumber().value, keyword));","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof IdentifierContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 keywords.equals(((IdentifierContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"calvintanwj":13,"-":25}},{"path":"src/main/java/seedu/address/model/person/PassportNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"rgbpokka"},"content":"public class PassportNumber extends UniqueIdentifier {","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Passport Number must be alphanumeric.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    public final String value;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"     * Constructs an {@code RoomNumber}.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"     * @param passportNumber A valid room number.","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    public PassportNumber(String passportNumber) {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(passportNumber);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"        checkArgument(isValidPassportNumber(passportNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"        this.value \u003d passportNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if a given string is a valid room number.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    public static boolean isValidPassportNumber(String test) {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        return value;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof PassportNumber// instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 value.equals(((PassportNumber) other).value)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rgbpokka":1,"calvintanwj":50}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"public abstract class Person {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"     * Every field must be present and not null. hehe","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    public Person(Name name, Email email, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        requireAllNonNull(name, email, tags);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    public void setTags(Set\u003cTag\u003e newTags) {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        tags \u003d newTags;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"    public abstract boolean isSamePerson(Person otherPerson);","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"    public abstract int hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    public abstract String toString();","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"calvintanwj":12,"bingcheng45":1,"-":57}},{"path":"src/main/java/seedu/address/model/person/RoomNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"public class RoomNumber {","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Room numbers must be a number greater than 0.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[1-9][0-9]*$\";","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    public final String value;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"     * Constructs an {@code RoomNumber}.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"     * @param roomNumber A valid room number.","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    public RoomNumber(String roomNumber) {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(roomNumber);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"        checkArgument(isValidRoomNumber(roomNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"        this.value \u003d roomNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if a given string is a valid room number.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    public static boolean isValidRoomNumber(String test) {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        return value;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof RoomNumber // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 value.equals(((RoomNumber) other).value)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"calvintanwj":48}},{"path":"src/main/java/seedu/address/model/person/Staff.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"public class Staff extends Person {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"    private final Address address;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    private final StaffId staffId;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    private final Phone phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"     * @param name","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"     * @param email","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"     * @param tags","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    public Staff(Name name, Email email, Set\u003cTag\u003e tags, Address address, StaffId staffId, Phone phone) {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"        super(name, email, tags);","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        this.staffId \u003d staffId;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    public Phone getPhone() {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        return phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public StaffId getStaffId() {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        return staffId;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    public Address getAddress() {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        return address;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"            return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        if (otherPerson instanceof Staff) {","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"            Staff otherStaff \u003d (Staff) otherPerson;","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"            return otherStaff.getStaffId().equals(getStaffId());","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        if (!(other instanceof Staff)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        Staff otherPerson \u003d (Staff) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherPerson.getStaffId().equals(getStaffId())","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        return Objects.hash(getName(), getEmail(), getTags(), address, staffId, phone);","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"                .append(getEmail())","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"                .append(\"; Staff ID: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"                .append(getStaffId())","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"                .append(getPhone())","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"                .append(getAddress());","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"calvintanwj":104}},{"path":"src/main/java/seedu/address/model/person/StaffId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"rgbpokka"},"content":"public class StaffId extends UniqueIdentifier {","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"StaffID must be alphanumeric and non-empty.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9_][a-zA-Z0-9_ ]+$\";","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    public final String value;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"     * Constructs an {@code StaffId}.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"     * @param staffId A valid staffId","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    public StaffId(String staffId) {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(staffId);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"        checkArgument(isValidStaffId(staffId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"        this.value \u003d staffId;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if a given string is a valid staff ID.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    public static boolean isValidStaffId(String staffId) {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        return staffId.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        return value;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof StaffId // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 value.equals(((StaffId) other).value)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"rgbpokka":1,"calvintanwj":48}},{"path":"src/main/java/seedu/address/model/person/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":" * Tests that a {@code Person}\u0027s {@code Identifier} matches any of the keywords given.","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"    private final List\u003cTag\u003e tags;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    public TagContainsKeywordsPredicate(List\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        if (person instanceof Staff) {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"            Staff staff \u003d (Staff) person;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"            return tags.stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"                    .filter(tag -\u003e staff.getTags().contains(tag)).collect(Collectors.toList()).size() \u003d\u003d tags.size();","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"            Guest guest \u003d (Guest) person;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"            return tags.stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"                    .filter(tag -\u003e guest.getTags().contains(tag)).collect(Collectors.toList()).size() \u003d\u003d tags.size();","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof TagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 tags.equals(((TagContainsKeywordsPredicate) other).tags)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    public List\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        return tags;","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"calvintanwj":47}},{"path":"src/main/java/seedu/address/model/person/UniqueIdentifier.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rgbpokka"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"rgbpokka"},"content":"public abstract class UniqueIdentifier {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"rgbpokka"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"rgbpokka":4}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"bingcheng45"},"content":"        return Objects.hash(internalList, internalUnmodifiableList);","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"calvintanwj":1,"bingcheng45":2,"-":135}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[\\\\w\\\\-\\\\s]+$\";","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    private List\u003cPerson\u003e taggedPeople;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        this.taggedPeople \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        taggedPeople.add(person);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"    public void removePerson(Person person) {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        taggedPeople.remove(person);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    public boolean noTaggedPerson() {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        return taggedPeople.isEmpty();","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"calvintanwj":18,"bingcheng45":1,"-":54}},{"path":"src/main/java/seedu/address/model/tag/UniqueTagList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"public class UniqueTagList implements Iterable\u003cTag\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    private final ObservableList\u003cTag\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    private final ObservableList\u003cTag\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if the list contains an equivalent tag as the given argument.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    public boolean contains(Tag toCheck) {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    public Tag get(Tag tag) {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        return internalList.stream().filter(tag::equals).findFirst().get();","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"     * Adds a tag to the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"     * The tag must not already exist in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    public void add(Tag toAdd) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"     * Replaces the tag {@code target} in the list with {@code editedTag}.","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"     * The tag identity of {@code editedTag} must not be the same as another existing tag in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    public void setTag(Tag target, Tag editedTag) {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        requireAllNonNull(target, editedTag);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        if (!target.equals(editedTag) \u0026\u0026 contains(editedTag)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        internalList.set(index, editedTag);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"     * Removes the equivalent tag from the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"     * The tag must exist in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    public void remove(Tag toRemove) {","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    public void setTags(UniqueTagList replacement) {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"     * Replaces the contents of this list with {@code tags}.","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"     * {@code tags} must not contain duplicate tags.","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"    public void setTags(List\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        requireAllNonNull(tags);","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        if (!tagsAreUnique(tags)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        internalList.setAll(tags);","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"    public ObservableList\u003cTag\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"    public Iterator\u003cTag\u003e iterator() {","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof UniqueTagList // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 internalList.equals(((UniqueTagList) other).internalList));","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"bingcheng45"},"content":"        return Objects.hash(internalList, internalUnmodifiableList);","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if {@code tags} contains only unique tags.","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"    private boolean tagsAreUnique(List\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"        for (int i \u003d 0; i \u003c tags.size() - 1; i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"            for (int j \u003d i + 1; j \u003c tags.size(); j++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"                if (tags.get(i).equals(tags.get(j))) {","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"                    return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"                }","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"        return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"calvintanwj":130,"bingcheng45":2}},{"path":"src/main/java/seedu/address/model/tag/exceptions/DuplicateTagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.tag.exceptions;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"public class DuplicateTagException extends RuntimeException {","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"    public DuplicateTagException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"        super(\"Operation would result in duplicate tags\");","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"calvintanwj":8}},{"path":"src/main/java/seedu/address/model/tag/exceptions/TagNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.tag.exceptions;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"public class TagNotFoundException extends RuntimeException{","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"calvintanwj":4}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.Guest;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.PassportNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.StaffId;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"            new Guest(new Name(\"Alex Yeoh\"), new Email(\"alexyeoh@example.com\"), getTagSet(\"friends\", \"Guest\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"                    new RoomNumber(\"123\"), new PassportNumber(\"EC4744643\")),","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"            new Guest(new Name(\"Bernice Yu\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"                    getTagSet(\"colleagues\", \"friends\", \"Guest\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"                    new RoomNumber(\"456\"), new PassportNumber(\"FG4741690\")),","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"            new Staff(new Name(\"Charlotte Oliveiro\"), new Email(\"charlotteo@example.com\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"                    getTagSet(\"neighbours\", \"Staff\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new StaffId(\"001\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"                    new Phone(\"93210283\")","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"            )","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"            for (Tag tag : samplePerson.getTags()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"                tagSet.add(tag);","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        for (Tag sampleTag : tagSet) {","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"            sampleAb.addTag(sampleTag);","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"calvintanwj":23,"-":42}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGuest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.Guest;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.PassportNumber;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":" * Jackson-friendly version of {@link Guest}.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"class JsonAdaptedGuest {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Guest\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"    private final String name;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"    private final String email;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    private final String roomNumber;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    private final String passportNumber;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    public JsonAdaptedGuest(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                            @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"                            @JsonProperty(\"roomNumber\") String roomNumber,","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                            @JsonProperty(\"passportNumber\") String passportNumber) {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        this.roomNumber \u003d roomNumber;","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        this.passportNumber \u003d passportNumber;","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"    public JsonAdaptedGuest(Person source) {","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"bingcheng45"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        Guest guest \u003d (Guest) source;","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        roomNumber \u003d guest.getRoomNumber().value;","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        passportNumber \u003d guest.getPassportNumber().value;","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"bingcheng45"},"content":"    public String getName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"bingcheng45"},"content":"        return name;","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"bingcheng45"},"content":"    public String getEmail() {","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"        return email;","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"bingcheng45"},"content":"    public List\u003cJsonAdaptedTag\u003e getTags() {","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"bingcheng45"},"content":"        return tagged;","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"bingcheng45"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"bingcheng45"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"bingcheng45"},"content":"    // @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"bingcheng45"},"content":"    public Guest toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"bingcheng45"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        for (JsonAdaptedTag tag : getTags()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"bingcheng45"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"        if (getName() \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"        if (!Name.isValidName(getName())) {","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"        final Name modelName \u003d new Name(getName());","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        if (getEmail() \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"        if (!Email.isValidEmail(getEmail())) {","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"        final Email modelEmail \u003d new Email(getEmail());","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"        if (roomNumber \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, RoomNumber.class.getSimpleName()));","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        if (!RoomNumber.isValidRoomNumber(roomNumber)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(RoomNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"        final RoomNumber modelRoomNumber \u003d new RoomNumber(roomNumber);","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"        if (passportNumber \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, PassportNumber.class.getSimpleName()));","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"        if (!PassportNumber.isValidPassportNumber(passportNumber)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(PassportNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"        final PassportNumber modelPassportNumber \u003d new PassportNumber(passportNumber);","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"bingcheng45"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"        return new Guest(modelName, modelEmail, modelTags, modelRoomNumber, modelPassportNumber);","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"calvintanwj":37,"bingcheng45":91}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"//package seedu.address.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"//import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"//import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"//import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"///**","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"// * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"// */","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"//abstract class JsonAdaptedPerson {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"//    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"//    private final String name;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"//    private final String email;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"//    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"//    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"//     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"//     */","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"//    @JsonCreator","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"//    public JsonAdaptedPerson(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"//                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"//                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"//        this.name \u003d name;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"//        this.email \u003d email;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"//        if (tagged !\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"//            this.tagged.addAll(tagged);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"//        }","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"//    }","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"//    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"//     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"//     */","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"//    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"//        name \u003d source.getName().fullName;","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"//        email \u003d source.getEmail().value;","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"//        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"//                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"//                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"//    }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"//    public String getName() {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"//        return name;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"//    }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"//    public String getEmail() {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"//        return email;","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"//    }","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"//    public List\u003cJsonAdaptedTag\u003e getTags() {","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"//        return tagged;","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"//    }","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"//    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"//     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"//     *","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"//     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"//     */","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"//    public abstract Person toModelType() throws IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"//}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"calvintanwj":68}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedStaff.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.StaffId;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":" * Jackson-friendly version of {@link Staff}.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"class JsonAdaptedStaff {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Staff\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"    private final String name;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"    private final String email;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"    private final String phone;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"    private final String address;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    private final String staffId;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    public JsonAdaptedStaff(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"                            @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"                            @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"                            @JsonProperty(\"staffId\") String staffId,","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"                            @JsonProperty(\"phone\") String phone) {","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        this.staffId \u003d staffId;","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"    public JsonAdaptedStaff(Person source) {","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"bingcheng45"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"bingcheng45"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"bingcheng45"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        Staff staff \u003d (Staff) source;","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        phone \u003d staff.getPhone().value;","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        address \u003d staff.getAddress().value;","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        staffId \u003d staff.getStaffId().value;","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"    public String getName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"bingcheng45"},"content":"        return name;","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"bingcheng45"},"content":"    public String getEmail() {","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"bingcheng45"},"content":"        return email;","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"bingcheng45"},"content":"    public List\u003cJsonAdaptedTag\u003e getTags() {","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"bingcheng45"},"content":"        return tagged;","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"bingcheng45"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"bingcheng45"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"bingcheng45"},"content":"    // @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"bingcheng45"},"content":"    public Staff toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"bingcheng45"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        for (JsonAdaptedTag tag : getTags()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"bingcheng45"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"        if (getName() \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        if (!Name.isValidName(getName())) {","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"        final Name modelName \u003d new Name(getName());","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"        if (getEmail() \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"        if (!Email.isValidEmail(getEmail())) {","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"        final Email modelEmail \u003d new Email(getEmail());","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"bingcheng45"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"bingcheng45"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"bingcheng45"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"        if (staffId \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, StaffId.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"        if (!StaffId.isValidStaffId(staffId)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(StaffId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"        final StaffId modelStaffId \u003d new StaffId(staffId);","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"bingcheng45"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"        return new Staff(modelName, modelEmail, modelTags, modelAddress, modelStaffId, modelPhone);","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"calvintanwj":39,"bingcheng45":100}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"bingcheng45"},"content":"                || (other instanceof JsonAdaptedTag // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"                \u0026\u0026 tagName.equals(((JsonAdaptedTag) other).getTagName())); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"        return Objects.hash(tagName);","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"calvintanwj":2,"bingcheng45":12,"-":48}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"import com.fasterxml.jackson.databind.type.CollectionType;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"    // private final List\u003cJsonAdaptedGuest\u003e guests \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"    // private final List\u003cJsonAdaptedStaff\u003e staffs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"    // variable names here will become the key value pair for the json","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"    private final List\u003cMap\u003cString, List\u003c? extends Object\u003e\u003e\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"bingcheng45"},"content":"     * The json property here reads from the addressbook.json for the header staff","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cMap\u003cString, List\u003c? extends Object\u003e\u003e\u003e persons) {","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"        List\u003cJsonAdaptedStaff\u003e jsonStaff \u003d (List\u003cJsonAdaptedStaff\u003e) persons.get(0).get(\"staff\");","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"        List\u003cJsonAdaptedGuest\u003e jsonGuest \u003d (List\u003cJsonAdaptedGuest\u003e) persons.get(0).get(\"guest\");","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"        List\u003cTag\u003e jsonTags \u003d (List\u003cTag\u003e) persons.get(0).get(\"tags\");","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"        Map\u003cString, List\u003c? extends Object\u003e\u003e jsonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"        jsonMap.put(\"staff\", jsonStaff);","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"        jsonMap.put(\"guest\", jsonGuest);","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"        jsonMap.put(\"tags\", jsonTags);","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"        this.persons.add(jsonMap);","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"     * This code saves the data in this format","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"bingcheng45"},"content":"        List\u003cJsonAdaptedGuest\u003e guests \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"bingcheng45"},"content":"        List\u003cJsonAdaptedStaff\u003e staffs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        guests.addAll(source.getPersonList().stream().filter(x -\u003e x.getTags().contains(new Tag(\"Guest\"))).map(","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"                JsonAdaptedGuest::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        staffs.addAll(source.getPersonList().stream().filter(x -\u003e x.getTags().contains(new Tag(\"Staff\"))).map(","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"                JsonAdaptedStaff::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"        Map\u003cString, List\u003c? extends Object\u003e\u003e jsonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"bingcheng45"},"content":"        Set\u003cJsonAdaptedTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"bingcheng45"},"content":"        guests.forEach(x -\u003e tags.addAll(x.getTags()));","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"bingcheng45"},"content":"        staffs.forEach(x -\u003e tags.addAll(x.getTags()));","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"bingcheng45"},"content":"        jsonMap.put(\"staff\", staffs);","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"bingcheng45"},"content":"        jsonMap.put(\"guest\", guests);","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"        jsonMap.put(\"tags\", new ArrayList\u003c\u003e(tags));","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"bingcheng45"},"content":"        persons.add(jsonMap);","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"bingcheng45"},"content":"     * This code loads the data into the system.","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"bingcheng45"},"content":"        Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"bingcheng45"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"            List\u003cJsonAdaptedGuest\u003e guests \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"                    jsonArrayToObjectList(toJsonString(persons.get(0).get(\"guest\")), JsonAdaptedGuest.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"            List\u003cJsonAdaptedStaff\u003e staffs \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"                    jsonArrayToObjectList(toJsonString(persons.get(0).get(\"staff\")), JsonAdaptedStaff.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"bingcheng45"},"content":"            // loop thru guest and add them into the address book","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"bingcheng45"},"content":"            for (JsonAdaptedGuest jsonAdaptedGuest : guests) {","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"bingcheng45"},"content":"                Person person \u003d jsonAdaptedGuest.toModelType();","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"bingcheng45"},"content":"                if (addressBook.hasPerson(person)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"bingcheng45"},"content":"                    throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"bingcheng45"},"content":"                }","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"bingcheng45"},"content":"                tagSet.addAll(person.getTags());","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"bingcheng45"},"content":"                addressBook.addPerson(person);","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"bingcheng45"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"bingcheng45"},"content":"            for (JsonAdaptedStaff jsonAdaptedStaff : staffs) {","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"bingcheng45"},"content":"                Person person \u003d jsonAdaptedStaff.toModelType();","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                    throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"bingcheng45"},"content":"                tagSet.addAll(person.getTags());","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"bingcheng45"},"content":"            addressBook.setTags(new ArrayList\u003c\u003e(tagSet));","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"bingcheng45"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"bingcheng45"},"content":"            System.out.println(\"error\");","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"bingcheng45"},"content":"    public \u003cT\u003e List\u003cT\u003e jsonArrayToObjectList(String json, Class\u003cT\u003e tClass) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"bingcheng45"},"content":"        ObjectMapper mapper \u003d new ObjectMapper();","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"bingcheng45"},"content":"        CollectionType listType \u003d mapper.getTypeFactory().constructCollectionType(ArrayList.class, tClass);","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"bingcheng45"},"content":"        List\u003cT\u003e ts \u003d mapper.readValue(json, listType);","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"bingcheng45"},"content":"        System.out.println((\"class name: {}\" + ts.get(0).getClass().getName()));","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"bingcheng45"},"content":"        return ts;","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"bingcheng45"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"bingcheng45"},"content":"        ObjectMapper objectMapper \u003d new ObjectMapper();","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"bingcheng45"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"calvintanwj":8,"bingcheng45":68,"-":59}},{"path":"src/main/java/seedu/address/ui/GuestCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.Guest;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":" * An UI component that displays information of a {@code Guest}.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"public class GuestCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    private static final String FXML \u003d \"GuestCard.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    public final Guest guest;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    private Label name;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    private Label email;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    private Label roomNumber;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    private Label passportNumber;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    private ImageView roomNumberIcon;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    private ImageView emailIcon;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    private ImageView passportNumberIcon;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"     * Creates a {@code GuestCode} with the given {@code Guest} and index to display.","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"    public GuestCard(Guest guest) {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        super(FXML);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        this.guest \u003d guest;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        passportNumber.setText(\"[\" + guest.getPassportNumber().value + \"]\");","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        name.setText(guest.getName().fullName);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        email.setText(\" \" + guest.getEmail().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        roomNumber.setText(\" \" + guest.getRoomNumber().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        passportNumberIcon.setImage(new Image(getClass().getResourceAsStream(\"/images/passport_number_icon.png\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        emailIcon.setImage(new Image(getClass().getResourceAsStream(\"/images/email_icon.png\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        roomNumberIcon.setImage(new Image(getClass().getResourceAsStream(\"/images/room_number_icon.png\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        guest.getTags().stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        if (!(other instanceof GuestCard)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        GuestCard card \u003d (GuestCard) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        return passportNumber.getText().equals(card.passportNumber.getText())","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 guest.equals(card.guest);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"calvintanwj":87}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"NicolasCwy"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-w12-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StatisticsWindow.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"calvintanwj":1,"-":100,"NicolasCwy":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    private TagListPanel tagListPanel;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    private StatisticsWindow statisticsWindow;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    private StackPane tagListPanelPlaceholder;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        statisticsWindow \u003d new StatisticsWindow();","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"        tagListPanel \u003d new TagListPanel(logic.getFilteredTagList());","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"        tagListPanelPlaceholder.getChildren().add(tagListPanel.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"        statisticsWindow.hide();","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"    private void handleStatistics() {","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"        if (!statisticsWindow.isShowing()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"            statisticsWindow.show();","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"            statisticsWindow.focus();","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"calvintanwj":20,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.Guest;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"                if (person instanceof Staff) {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"                    Staff staff \u003d (Staff) person;","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"                    setGraphic(new StaffCard(staff).getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"                } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"                    Guest guest \u003d (Guest) person;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"                    setGraphic(new GuestCard(guest).getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"calvintanwj":9,"-":48}},{"path":"src/main/java/seedu/address/ui/StaffCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"public class StaffCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    private static final String FXML \u003d \"StaffCard.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    public final Staff staff;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    private Label email;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    private Label staffId;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    private ImageView addressIcon;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    private ImageView emailIcon;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    private ImageView phoneIcon;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    private ImageView staffIdIcon;","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"     * Creates a {@code StaffCode} with the given {@code Staff} and index to display.","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    public StaffCard(Staff staff) {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        this.staff \u003d staff;","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        staffId.setText(\"[\" + staff.getStaffId().value + \"]\");","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        name.setText(staff.getName().fullName);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        email.setText(\" \" + staff.getEmail().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        address.setText(\" \" + staff.getAddress().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        phone.setText(\" \" + staff.getPhone().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        staffIdIcon.setImage(new Image(getClass().getResourceAsStream(\"/images/staff_id_icon.png\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        emailIcon.setImage(new Image(getClass().getResourceAsStream(\"/images/email_icon.png\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        addressIcon.setImage(new Image(getClass().getResourceAsStream(\"/images/address_icon.png\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        phoneIcon.setImage(new Image(getClass().getResourceAsStream(\"/images/phone_icon.png\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        staff.getTags().stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"        if (!(other instanceof StaffCard)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"        StaffCard card \u003d (StaffCard) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        return staffId.getText().equals(card.staffId.getText())","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 staff.equals(card.staff);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"calvintanwj":38,"-":56}},{"path":"src/main/java/seedu/address/ui/StatisticsWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":" * Controller for a stats page","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"public class StatisticsWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    public static final String STATS_MESSAGE \u003d \"To be implemented.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StatisticsWindow.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    private static final String FXML \u003d \"StatisticsWindow.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    private Label statsMessage;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"     * Creates a new StatisticsWindow.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    public StatisticsWindow(Stage root) {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        super(FXML, root);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        statsMessage.setText(STATS_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"     * Creates a new StatisticsWindow.","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    public StatisticsWindow() {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        this(new Stage());","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"     * Shows the stats window.","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    public void show() {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        logger.fine(\"Showing stats page about the application.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        getRoot().show();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if the stats window is currently being shown.","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    public boolean isShowing() {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"     * Hides the stats window.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    public void hide() {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        getRoot().hide();","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"     * Focuses on the stats window.","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"    public void focus() {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"calvintanwj":70}},{"path":"src/main/java/seedu/address/ui/TagCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"public class TagCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    private static final String FXML \u003d \"TagListCard.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    public final Tag tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    private Label tagName;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"     * Creates a {@code TagCode} with the given {@code Tag}","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    public TagCard(Tag tag) {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        super(FXML);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        tagName.setText(tag.toString());","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        if (!(other instanceof TagCard)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        TagCard card \u003d (TagCard) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        return tagName.getText().equals(card.tagName.getText())","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 tag.equals(card.tag);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"calvintanwj":55}},{"path":"src/main/java/seedu/address/ui/TagListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"public class TagListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    private static final String FXML \u003d \"TagListPanel.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TagListPanel.class);","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    private ListView\u003cTag\u003e tagListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"     * Creates a {@code TagListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    public TagListPanel(ObservableList\u003cTag\u003e tagList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        super(FXML);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"        tagListView.setItems(tagList);","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        tagListView.setCellFactory(listView -\u003e new TagListViewCell());","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Tag} using a {@code TagCard}.","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    static class TagListViewCell extends ListCell\u003cTag\u003e {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        protected void updateItem(Tag tag, boolean empty) {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"            super.updateItem(tag, empty);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"            if (empty || tag \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                setText(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"            } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                setGraphic(new TagCard(tag).getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"calvintanwj":47}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/pocket_hotel_32.png\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"calvintanwj":1,"-":88}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":".label-column-header {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":".cell_unique_identifer {","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"    -fx-font-family: \"Open Sans Bold\";","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"calvintanwj":11,"-":352}},{"path":"src/main/resources/view/GuestCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"                \u003cImageView fx:id\u003d\"passportNumberIcon\" fitWidth\u003d\"16\" fitHeight\u003d\"18\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"passportNumber\" styleClass\u003d\"cell_unique_identifier\" text\u003d\"\\$passportNumber\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"                    \u003cInsets bottom\u003d\"3.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"                \u003cImageView fx:id\u003d\"emailIcon\" fitWidth\u003d\"15\" fitHeight\u003d\"13\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"                    \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"                \u003cImageView fx:id\u003d\"roomNumberIcon\" fitWidth\u003d\"15\" fitHeight\u003d\"13\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"roomNumber\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$roomNumber\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"                    \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"calvintanwj":53}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"         title\u003d\"Pocket Hotel\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"        \u003cImage url\u003d\"@/images/pocket_hotel_32.png\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Statistics\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"                        \u003cMenuItem fx:id\u003d\"StatisticsItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleStatistics\"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"                                  text\u003d\"Statistics\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"                \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"                    \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"                          VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                        \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"                    \u003cVBox fx:id\u003d\"tagList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"200\" prefWidth\u003d\"200\"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"                          VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"                        \u003cStackPane fx:id\u003d\"tagListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"calvintanwj":19,"-":57}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"  \u003cLabel text\u003d\"Contacts\" styleClass\u003d\"label-column-header\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"calvintanwj":2,"-":8}},{"path":"src/main/resources/view/StaffCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"                \u003cImageView fx:id\u003d\"staffIdIcon\" fitHeight\u003d\"18\" fitWidth\u003d\"16\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"staffId\" styleClass\u003d\"cell_unique_identifier\" text\u003d\"\\$staffId\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"               \u003cInsets bottom\u003d\"3.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                \u003cImageView fx:id\u003d\"emailIcon\" fitHeight\u003d\"13\" fitWidth\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"               \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"                \u003cImageView fx:id\u003d\"phoneIcon\" fitHeight\u003d\"15\" fitWidth\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"               \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"                \u003cImageView fx:id\u003d\"addressIcon\" fitHeight\u003d\"15\" fitWidth\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"               \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"calvintanwj":64}},{"path":"src/main/resources/view/StatisticsWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Statistics\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"                    \u003cLabel fx:id\u003d\"statsMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"                            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"                \u003c/children\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"calvintanwj":29}},{"path":"src/main/resources/view/TagListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"20\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"tagName\" text\u003d\"\\$tagName\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"calvintanwj":24}},{"path":"src/main/resources/view/TagListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"    \u003cLabel text\u003d\"Tags\" styleClass\u003d\"label-column-header\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"    \u003cListView fx:id\u003d\"tagListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"calvintanwj":10}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateGuestAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"{","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"  \"persons\" : [ {","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"    \"guest\" : [ {","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"      \"name\" : \"Bill\",","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"      \"email\" : \"bill@example.com\",","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"      \"tagged\" : [ \"Guest\" ],","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"      \"roomNumber\" : \"123\",","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"      \"passportNumber\" : \"111111D\"","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"    }, {","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"      \"name\" : \"Bill2\",","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"      \"email\" : \"bill@example.com\",","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"      \"tagged\" : [ \"Guest\" ],","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"      \"roomNumber\" : \"1234\",","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"      \"passportNumber\" : \"111111D\"","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"    } ]","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"  } ]","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"bingcheng45":17}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateStaffAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"{","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"  \"persons\" : [ {","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"    \"staff\" : [ {","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"      \"name\" : \"bob\",","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"      \"email\" : \"bob@example.com\",","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"      \"tagged\" : [ \"Staff\" ],","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"      \"address\" : \"22 street\",","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"      \"staffId\" : \"123\",","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"      \"phone\" : \"12341234\"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"    }, {","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"      \"name\" : \"bob2\",","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"      \"email\" : \"bob@example.com\",","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"      \"tagged\" : [ \"Staff\" ],","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"      \"address\" : \"22 street\",","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"      \"staffId\" : \"123\",","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"      \"phone\" : \"12341234\"","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"    } ]","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"  } ]","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"bingcheng45":19}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_UNIQUE_IDENTIFIER;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_ALICE;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_ALICE;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PASSPORT_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROOM_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_ALICE;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_UNUSED;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_GUEST;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_UNUSED;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.testutil.GuestBuilder;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"NicolasCwy"},"content":"    public void execute_staffIdCommandExecutionError_throwsCommandException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"NicolasCwy"},"content":"        // checks if deleting an unused staff id is possible","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"NicolasCwy"},"content":"        String deleteCommand \u003d \"delete sid/\" + STAFF_ID_UNUSED.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"NicolasCwy"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_UNIQUE_IDENTIFIER);","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"NicolasCwy"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"NicolasCwy"},"content":"    public void execute_passportNumberCommandExecutionError_throwsCommandException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"NicolasCwy"},"content":"        // checks if deleting an unused passport number is possible","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"NicolasCwy"},"content":"        String deleteCommand \u003d \"delete pn/\" + PASSPORT_NUMBER_UNUSED.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"NicolasCwy"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_UNIQUE_IDENTIFIER);","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"NicolasCwy"},"content":"        String addCommand \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"NicolasCwy"},"content":"                AddCommand.COMMAND_WORD + PASSPORT_NUMBER_DESC_ALICE + NAME_DESC_ALICE + ROOM_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"NicolasCwy"},"content":"                        + EMAIL_DESC_ALICE + TAG_DESC_ALICE;","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"NicolasCwy"},"content":"        Person expectedPerson \u003d new GuestBuilder(ALICE_GUEST).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"NicolasCwy"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"NicolasCwy"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"NicolasCwy"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"-":146,"NicolasCwy":33}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandGuestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.Guest;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.testutil.GuestBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"public class AddCommandGuestTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"alyssa-savier"},"content":"    public void execute_guestAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"alyssa-savier"},"content":"        Person validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"alyssa-savier"},"content":"        CommandResult commandResult \u003d new AddCommand(validGuest).execute(modelStub);","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"alyssa-savier"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validGuest), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"alyssa-savier"},"content":"        assertEquals(Arrays.asList(validGuest), modelStub.personsAdded);","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"alyssa-savier"},"content":"    public void execute_duplicateGuest_throwsCommandException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"alyssa-savier"},"content":"        Person validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"alyssa-savier"},"content":"        AddCommand addCommand \u003d new AddCommand(validGuest);","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"alyssa-savier"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validGuest);","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"alyssa-savier"},"content":"        Guest alice \u003d new GuestBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"alyssa-savier"},"content":"        Guest bob \u003d new GuestBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"        public boolean hasTag(Tag tag) {","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"            return false;","lastModifiedDate":"2021-10-14"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"        public void deleteTag(Tag target) {","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"        public void addTag(Tag tag) {","lastModifiedDate":"2021-10-14"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"        public Tag getTag(Tag tag) {","lastModifiedDate":"2021-10-14"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"            return null;","lastModifiedDate":"2021-10-14"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"        public void setTag(Tag target, Tag editedTag) {","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"        public ObservableList\u003cTag\u003e getFilteredTagList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"            return null;","lastModifiedDate":"2021-10-14"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"        public void updateFilteredTagList(Predicate\u003cTag\u003e predicate) {","lastModifiedDate":"2021-10-14"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":187,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2021-10-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2021-10-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2021-10-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2021-10-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2021-10-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2021-10-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2021-10-14"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2021-10-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-14"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-14"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-14"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"calvintanwj":38,"alyssa-savier":13,"-":181}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.StaffBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        Person validPerson \u003d new StaffBuilder().build();","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"calvintanwj":2,"-":41}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandStaffTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alyssa-savier"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"alyssa-savier"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"alyssa-savier"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"alyssa-savier"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"alyssa-savier"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"alyssa-savier"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"alyssa-savier"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"alyssa-savier"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"alyssa-savier"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"alyssa-savier"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"alyssa-savier"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.testutil.StaffBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"public class AddCommandStaffTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"alyssa-savier"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"alyssa-savier"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"alyssa-savier"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"alyssa-savier"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"alyssa-savier"},"content":"    public void execute_staffAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"alyssa-savier"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"alyssa-savier"},"content":"        Person validStaff \u003d new StaffBuilder().build();","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"alyssa-savier"},"content":"        CommandResult commandResult \u003d new AddCommand(validStaff).execute(modelStub);","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"alyssa-savier"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validStaff), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"alyssa-savier"},"content":"        assertEquals(Arrays.asList(validStaff), modelStub.personsAdded);","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"alyssa-savier"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"alyssa-savier"},"content":"    public void execute_duplicateStaff_throwsCommandException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"alyssa-savier"},"content":"        Person validStaff \u003d new StaffBuilder().build();","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"alyssa-savier"},"content":"        AddCommand addCommand \u003d new AddCommand(validStaff);","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"alyssa-savier"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validStaff);","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"alyssa-savier"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"alyssa-savier"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"alyssa-savier"},"content":"    public void equals() {","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"alyssa-savier"},"content":"        Staff alice \u003d new StaffBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"alyssa-savier"},"content":"        Staff bob \u003d new StaffBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"alyssa-savier"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"alyssa-savier"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"alyssa-savier"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"alyssa-savier"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"alyssa-savier"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"alyssa-savier"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"alyssa-savier"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"alyssa-savier"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"alyssa-savier"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"alyssa-savier"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"alyssa-savier"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"alyssa-savier"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"alyssa-savier"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"alyssa-savier"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"alyssa-savier"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"alyssa-savier"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"alyssa-savier"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"alyssa-savier"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"alyssa-savier"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"alyssa-savier"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"alyssa-savier"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"alyssa-savier"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"alyssa-savier"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"alyssa-savier"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"alyssa-savier"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"alyssa-savier"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"alyssa-savier"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"alyssa-savier"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"alyssa-savier"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"alyssa-savier"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"alyssa-savier"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"alyssa-savier"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"alyssa-savier"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"alyssa-savier"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"alyssa-savier"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"alyssa-savier"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"alyssa-savier"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"alyssa-savier"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"alyssa-savier"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":140,"author":{"gitId":"alyssa-savier"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-14"},{"lineNumber":141,"author":{"gitId":"alyssa-savier"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":142,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":143,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"        public boolean hasTag(Tag tag) {","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"            return false;","lastModifiedDate":"2021-10-14"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"        public void deleteTag(Tag target) {","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"        public void addTag(Tag tag) {","lastModifiedDate":"2021-10-14"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"        public Tag getTag(Tag tag) {","lastModifiedDate":"2021-10-14"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"            return null;","lastModifiedDate":"2021-10-14"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"        public void setTag(Tag target, Tag editedTag) {","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":169,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":170,"author":{"gitId":"alyssa-savier"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":171,"author":{"gitId":"alyssa-savier"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":172,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":173,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"        public ObservableList\u003cTag\u003e getFilteredTagList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"            return null;","lastModifiedDate":"2021-10-14"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":179,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":180,"author":{"gitId":"alyssa-savier"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-14"},{"lineNumber":181,"author":{"gitId":"alyssa-savier"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":182,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"        public void updateFilteredTagList(Predicate\u003cTag\u003e predicate) {","lastModifiedDate":"2021-10-14"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":187,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":188,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":189,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":190,"author":{"gitId":"alyssa-savier"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":191,"author":{"gitId":"alyssa-savier"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2021-10-14"},{"lineNumber":192,"author":{"gitId":"alyssa-savier"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":193,"author":{"gitId":"alyssa-savier"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2021-10-14"},{"lineNumber":194,"author":{"gitId":"alyssa-savier"},"content":"        private final Person person;","lastModifiedDate":"2021-10-14"},{"lineNumber":195,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":196,"author":{"gitId":"alyssa-savier"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2021-10-14"},{"lineNumber":197,"author":{"gitId":"alyssa-savier"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":198,"author":{"gitId":"alyssa-savier"},"content":"            this.person \u003d person;","lastModifiedDate":"2021-10-14"},{"lineNumber":199,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":200,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":201,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":202,"author":{"gitId":"alyssa-savier"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-14"},{"lineNumber":203,"author":{"gitId":"alyssa-savier"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":204,"author":{"gitId":"alyssa-savier"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":205,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":206,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":207,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":208,"author":{"gitId":"alyssa-savier"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":209,"author":{"gitId":"alyssa-savier"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2021-10-14"},{"lineNumber":210,"author":{"gitId":"alyssa-savier"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":211,"author":{"gitId":"alyssa-savier"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2021-10-14"},{"lineNumber":212,"author":{"gitId":"alyssa-savier"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":213,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":214,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":215,"author":{"gitId":"alyssa-savier"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-14"},{"lineNumber":216,"author":{"gitId":"alyssa-savier"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":217,"author":{"gitId":"alyssa-savier"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2021-10-14"},{"lineNumber":218,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":219,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":220,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":221,"author":{"gitId":"alyssa-savier"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-14"},{"lineNumber":222,"author":{"gitId":"alyssa-savier"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":223,"author":{"gitId":"alyssa-savier"},"content":"            personsAdded.add(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":224,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":225,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":226,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":227,"author":{"gitId":"alyssa-savier"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-14"},{"lineNumber":228,"author":{"gitId":"alyssa-savier"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-14"},{"lineNumber":229,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":230,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":231,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":232,"author":{"gitId":"alyssa-savier"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"calvintanwj":38,"alyssa-savier":194}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOM_NUMBER;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAFF_ID;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_SECOND_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_THIRD_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_FOURTH_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_SECOND_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_THIRD_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Guest;","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.IdentifierContainsKeywordsPredicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.testutil.EditGuestDescriptorBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.testutil.EditStaffDescriptorBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"NicolasCwy"},"content":"    // Guests","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_NAME_ALICE \u003d \"Alice Pauline\";","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_EMAIL_ALICE \u003d \"alice@example.com\";","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_TAG_ALICE \u003d \"VIP\";","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_ROOM_NUMBER_ALICE \u003d \"20202\";","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_PASSPORT_NUMBER_ALICE \u003d PASSPORT_NUMBER_FIRST_PERSON.toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    public static final String NAME_DESC_ALICE \u003d \" \" + PREFIX_NAME + VALID_NAME_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    public static final String ROOM_NUMBER_DESC_ALICE \u003d \" \" + PREFIX_ROOM_NUMBER + VALID_ROOM_NUMBER_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    public static final String EMAIL_DESC_ALICE \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    public static final String PASSPORT_NUMBER_DESC_ALICE \u003d \" \" + PREFIX_PASSPORT_NUMBER + VALID_PASSPORT_NUMBER_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    public static final String TAG_DESC_ALICE \u003d \" \" + PREFIX_TAG + VALID_TAG_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_NAME_BENSON \u003d \"Benson Meier\";","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_EMAIL_BENSON \u003d \"benson@example.com\";","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_TAG_BENSON \u003d \"NORMALROOM\";","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_ROOM_NUMBER_BENSON \u003d \"20201\";","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_PASSPORT_NUMBER_BENSON \u003d PASSPORT_NUMBER_SECOND_PERSON.toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"NicolasCwy"},"content":"    public static final String NAME_DESC_BENSON \u003d \" \" + PREFIX_NAME + VALID_NAME_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"NicolasCwy"},"content":"    public static final String ROOM_NUMBER_DESC_BENSON \u003d \" \" + PREFIX_ROOM_NUMBER + VALID_ROOM_NUMBER_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"NicolasCwy"},"content":"    public static final String EMAIL_DESC_BENSON \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"NicolasCwy"},"content":"    public static final String PASSPORT_NUMBER_DESC_BENSON \u003d \" \" + PREFIX_PASSPORT_NUMBER","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"NicolasCwy"},"content":"            + VALID_PASSPORT_NUMBER_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"NicolasCwy"},"content":"    public static final String TAG_DESC_BENSON \u003d \" \" + PREFIX_TAG + VALID_TAG_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_NAME_CARL \u003d \"Carl Kurz\";","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_EMAIL_CARL \u003d \"carl@example.com\";","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_TAG_CARL \u003d \"DELUXESUITE\";","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_ROOM_NUMBER_CARL \u003d \"12321\";","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_PASSPORT_NUMBER_CARL \u003d PASSPORT_NUMBER_THIRD_PERSON.toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"NicolasCwy"},"content":"    public static final String NAME_DESC_CARL \u003d \" \" + PREFIX_NAME + VALID_NAME_CARL;","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"NicolasCwy"},"content":"    public static final String ROOM_NUMBER_DESC_CARL \u003d \" \" + PREFIX_ROOM_NUMBER + VALID_ROOM_NUMBER_CARL;","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"NicolasCwy"},"content":"    public static final String EMAIL_DESC_CARL \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_CARL;","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"NicolasCwy"},"content":"    public static final String PASSPORT_NUMBER_DESC_CARL \u003d \" \" + PREFIX_PASSPORT_NUMBER + VALID_PASSPORT_NUMBER_CARL;","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"NicolasCwy"},"content":"    public static final String TAG_DESC_CARL \u003d \" \" + PREFIX_TAG + VALID_TAG_CARL;","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"NicolasCwy"},"content":"    // Staff","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"alyssa-savier"},"content":"    public static final String VALID_STAFF_TAG \u003d \"Staff\";","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_NAME_DANIEL \u003d \"Daniel Meier\";","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_EMAIL_DANIEL \u003d \"cornelia@example.com\";","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_TAG_DANIEL \u003d \"COUNTER STAFF\";","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_ADDRESS_DANIEL \u003d \"10th street\";","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_PHONE_DANIEL \u003d \"87652533\";","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_STAFF_ID_DANIEL \u003d STAFF_ID_FIRST_PERSON.toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"    public static final String NAME_DESC_DANIEL \u003d \" \" + PREFIX_NAME + VALID_NAME_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    public static final String EMAIL_DESC_DANIEL \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"    public static final String ADDRESS_DESC_DANIEL \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"alyssa-savier"},"content":"    public static final String TAG_DESC_DANIEL \u003d \" \" + PREFIX_TAG + VALID_TAG_DANIEL;","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"    public static final String PHONE_DESC_DANIEL \u003d \" \" + PREFIX_PHONE + VALID_PHONE_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"    public static final String STAFF_ID_DESC_DANIEL \u003d \" \" + PREFIX_STAFF_ID + VALID_STAFF_ID_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"alyssa-savier"},"content":"    public static final String TAG_DESC_DANIEL_TWO \u003d \" \" + PREFIX_TAG + VALID_TAG_DANIEL + PREFIX_TAG + VALID_STAFF_TAG;","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_NAME_ELLE \u003d \"Elle Meyer\";","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_EMAIL_ELLE \u003d \"elle@example.com\";","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_TAG_ELLE \u003d \"MANAGER\";","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_ADDRESS_ELLE \u003d \"michegan ave\";","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_PHONE_ELLE \u003d \"9482224\";","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_STAFF_ID_ELLE \u003d STAFF_ID_SECOND_PERSON.toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"NicolasCwy"},"content":"    public static final String NAME_DESC_ELLE \u003d \" \" + PREFIX_NAME + VALID_NAME_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"NicolasCwy"},"content":"    public static final String EMAIL_DESC_ELLE \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"NicolasCwy"},"content":"    public static final String ADDRESS_DESC_ELLE \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"NicolasCwy"},"content":"    public static final String PHONE_DESC_ELLE \u003d \" \" + PREFIX_PHONE + VALID_PHONE_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"NicolasCwy"},"content":"    public static final String STAFF_ID_DESC_ELLE \u003d \" \" + PREFIX_STAFF_ID + VALID_STAFF_ID_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_NAME_FIONA \u003d \"Fiona Kunz\";","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_EMAIL_FIONA \u003d \"fiona@example.com\";","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_TAG_FIONA \u003d \"Waitress\";","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_ADDRESS_FIONA \u003d \"little tokyo\";","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_PHONE_FIONA \u003d \"9482427\";","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_STAFF_ID_FIONA \u003d STAFF_ID_THIRD_PERSON.toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"NicolasCwy"},"content":"    public static final String NAME_DESC_FIONA \u003d \" \" + PREFIX_NAME + VALID_NAME_FIONA;","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"NicolasCwy"},"content":"    public static final String EMAIL_DESC_FIONA \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_FIONA;","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"NicolasCwy"},"content":"    public static final String ADDRESS_DESC_FIONA \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_FIONA;","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"NicolasCwy"},"content":"    public static final String PHONE_DESC_FIONA \u003d \" \" + PREFIX_PHONE + VALID_PHONE_FIONA;","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"NicolasCwy"},"content":"    public static final String STAFF_ID_DESC_FIONA \u003d \" \" + PREFIX_STAFF_ID + VALID_STAFF_ID_FIONA;","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_NAME_GEORGE \u003d \"George Best\";","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_EMAIL_GEORGE \u003d \"george@example.com\";","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_TAG_GEORGE \u003d \"Head of Staff\";","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_ADDRESS_GEORGE \u003d \"4th street\";","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_PHONE_GEORGE \u003d \"9482442\";","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_STAFF_ID_GEORGE \u003d STAFF_ID_FOURTH_PERSON.toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"NicolasCwy"},"content":"    public static final String NAME_DESC_GEORGE \u003d \" \" + PREFIX_NAME + VALID_NAME_GEORGE;","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"NicolasCwy"},"content":"    public static final String EMAIL_DESC_GEORGE \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_GEORGE;","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"NicolasCwy"},"content":"    public static final String ADDRESS_DESC_GEORGE \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_GEORGE;","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"NicolasCwy"},"content":"    public static final String PHONE_DESC_GEORGE \u003d \" \" + PREFIX_PHONE + VALID_PHONE_GEORGE;","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"NicolasCwy"},"content":"    public static final String STAFF_ID_DESC_GEORGE \u003d \" \" + PREFIX_STAFF_ID + VALID_STAFF_ID_GEORGE;","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"NicolasCwy"},"content":"    // Guest Tags","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_TAG_VIP \u003d \"VIP\";","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_TAG_DELUXE_ROOM \u003d \"Deluxe Room\";","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"NicolasCwy"},"content":"    public static final String TAG_DESC_VIP \u003d \" \" + PREFIX_TAG + VALID_TAG_VIP;","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"NicolasCwy"},"content":"    public static final String TAG_DESC_DELUXE_ROOM \u003d \" \" + PREFIX_TAG + VALID_TAG_DELUXE_ROOM;","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"NicolasCwy"},"content":"    // Staff Tags","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_TAG_SENIOR_STAFF \u003d \"Senior Staff\";","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_TAG_CHEF \u003d \"Chef\";","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"NicolasCwy"},"content":"    public static final String TAG_DESC_SENIOR_STAFF \u003d \" \" + PREFIX_TAG + VALID_TAG_SENIOR_STAFF;","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"NicolasCwy"},"content":"    public static final String TAG_DESC_CHEF \u003d \" \" + PREFIX_TAG + VALID_TAG_CHEF;","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"NicolasCwy"},"content":"    // Invalid fields","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":147,"author":{"gitId":"rgbpokka"},"content":"    public static final String INVALID_STAFF_ID_DESC \u003d \" \" + PREFIX_STAFF_ID + \"1#2\"; //\u0027#\u0027 not allowed in staff id","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"    public static final String INVALID_ROOM_NUMBER_DESC \u003d \" \" + PREFIX_ROOM_NUMBER + \"-1\";","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"    //\u0027 room numbers must be a number greater than 0.","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"    public static final String INVALID_PASSPORT_NUMBER_DESC \u003d \" \" + PREFIX_PASSPORT_NUMBER + \"@3333\";","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"    // passport numbers should be alphanumeric","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"    public static final EditCommand.EditGuestDescriptor DESC_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":157,"author":{"gitId":"NicolasCwy"},"content":"    public static final EditCommand.EditGuestDescriptor DESC_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"    public static final EditCommand.EditStaffDescriptor DESC_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":159,"author":{"gitId":"NicolasCwy"},"content":"    public static final EditCommand.EditStaffDescriptor DESC_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"        DESC_ALICE \u003d new EditGuestDescriptorBuilder()","lastModifiedDate":"2021-10-15"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"                .withName(VALID_NAME_ALICE)","lastModifiedDate":"2021-10-15"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(VALID_EMAIL_ALICE)","lastModifiedDate":"2021-10-15"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"                .withTags(VALID_TAG_ALICE)","lastModifiedDate":"2021-10-15"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"                .withRoomNumber(VALID_ROOM_NUMBER_ALICE)","lastModifiedDate":"2021-10-15"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"                .withPassportNumber(VALID_PASSPORT_NUMBER_ALICE)","lastModifiedDate":"2021-10-15"},{"lineNumber":168,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-15"},{"lineNumber":169,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"NicolasCwy"},"content":"        DESC_BENSON \u003d new EditGuestDescriptorBuilder()","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"NicolasCwy"},"content":"                .withName(VALID_NAME_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"NicolasCwy"},"content":"                .withEmail(VALID_EMAIL_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"NicolasCwy"},"content":"                .withTags(VALID_TAG_VIP, VALID_TAG_DELUXE_ROOM)","lastModifiedDate":"2021-10-17"},{"lineNumber":174,"author":{"gitId":"NicolasCwy"},"content":"                .withRoomNumber(VALID_ROOM_NUMBER_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":175,"author":{"gitId":"NicolasCwy"},"content":"                .withPassportNumber(VALID_PASSPORT_NUMBER_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":176,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-15"},{"lineNumber":177,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"        DESC_DANIEL \u003d new EditStaffDescriptorBuilder()","lastModifiedDate":"2021-10-15"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"                .withName(VALID_NAME_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(VALID_EMAIL_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"                .withTags(VALID_TAG_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"                .withAddress(VALID_ADDRESS_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"                .withPhone(VALID_PHONE_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"                .withStaffId(VALID_STAFF_ID_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":185,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-15"},{"lineNumber":186,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":187,"author":{"gitId":"NicolasCwy"},"content":"        DESC_ELLE \u003d new EditStaffDescriptorBuilder()","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"NicolasCwy"},"content":"                .withName(VALID_NAME_ELLE)","lastModifiedDate":"2021-10-17"},{"lineNumber":189,"author":{"gitId":"NicolasCwy"},"content":"                .withEmail(VALID_EMAIL_ELLE)","lastModifiedDate":"2021-10-17"},{"lineNumber":190,"author":{"gitId":"NicolasCwy"},"content":"                .withTags(VALID_TAG_SENIOR_STAFF)","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"NicolasCwy"},"content":"                .withAddress(VALID_ADDRESS_ELLE)","lastModifiedDate":"2021-10-17"},{"lineNumber":192,"author":{"gitId":"NicolasCwy"},"content":"                .withPhone(VALID_PHONE_ELLE)","lastModifiedDate":"2021-10-17"},{"lineNumber":193,"author":{"gitId":"NicolasCwy"},"content":"                .withStaffId(VALID_STAFF_ID_ELLE)","lastModifiedDate":"2021-10-17"},{"lineNumber":194,"author":{"gitId":"NicolasCwy"},"content":"                .build();","lastModifiedDate":"2021-10-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":239,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":241,"author":{"gitId":"calvintanwj"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIdentifier} in the","lastModifiedDate":"2021-10-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":248,"author":{"gitId":"rgbpokka"},"content":"        String uniqueIdentifier;","lastModifiedDate":"2021-10-15"},{"lineNumber":249,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":250,"author":{"gitId":"rgbpokka"},"content":"        if (person instanceof Guest) {","lastModifiedDate":"2021-10-15"},{"lineNumber":251,"author":{"gitId":"rgbpokka"},"content":"            Guest guest \u003d (Guest) person;","lastModifiedDate":"2021-10-15"},{"lineNumber":252,"author":{"gitId":"rgbpokka"},"content":"            uniqueIdentifier \u003d guest.getPassportNumber().value;","lastModifiedDate":"2021-10-15"},{"lineNumber":253,"author":{"gitId":"rgbpokka"},"content":"        } else {","lastModifiedDate":"2021-10-15"},{"lineNumber":254,"author":{"gitId":"rgbpokka"},"content":"            Staff staff \u003d (Staff) person;","lastModifiedDate":"2021-10-15"},{"lineNumber":255,"author":{"gitId":"rgbpokka"},"content":"            uniqueIdentifier \u003d staff.getStaffId().value;","lastModifiedDate":"2021-10-15"},{"lineNumber":256,"author":{"gitId":"rgbpokka"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":257,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":258,"author":{"gitId":"rgbpokka"},"content":"        model.updateFilteredPersonList(new IdentifierContainsKeywordsPredicate(Arrays.asList(uniqueIdentifier)));","lastModifiedDate":"2021-10-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"rgbpokka":19,"calvintanwj":45,"alyssa-savier":3,"-":94,"NicolasCwy":102}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandGuestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_SECOND_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_UNUSED;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.person.Guest;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"public class DeleteCommandGuestTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"    public void execute_validPassportNumber_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"        Guest guestToDelete \u003d (Guest) model.getFilteredPersonList()","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"                .stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"                .filter(g -\u003e g instanceof Guest","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"                        \u0026\u0026 ((Guest) g).getPassportNumber().equals(PASSPORT_NUMBER_FIRST_PERSON))","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"                .findAny()","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"                .orElse(null);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(PASSPORT_NUMBER_FIRST_PERSON);","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, guestToDelete);","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"bingcheng45"},"content":"        expectedModel.deletePerson(guestToDelete);","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"    public void execute_invalidPassportNumber_throwsCommandException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(PASSPORT_NUMBER_UNUSED);","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_UNIQUE_IDENTIFIER);","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"    public void equals() {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(PASSPORT_NUMBER_FIRST_PERSON);","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(PASSPORT_NUMBER_SECOND_PERSON);","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"bingcheng45"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"bingcheng45"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(PASSPORT_NUMBER_FIRST_PERSON);","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"bingcheng45"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"bingcheng45"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"bingcheng45"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"bingcheng45"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"bingcheng45"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"bingcheng45"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"bingcheng45"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"bingcheng45"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"bingcheng45"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"bingcheng45"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"bingcheng45":83}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandStaffTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NicolasCwy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"NicolasCwy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"NicolasCwy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_SECOND_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_UNUSED;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"NicolasCwy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"NicolasCwy"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"NicolasCwy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"NicolasCwy"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"NicolasCwy"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"NicolasCwy"},"content":"public class DeleteCommandStaffTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"NicolasCwy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"NicolasCwy"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"NicolasCwy"},"content":"    public void execute_validStaffId_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"NicolasCwy"},"content":"        Staff staffToDelete \u003d (Staff) model.getFilteredPersonList()","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"NicolasCwy"},"content":"                .stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"NicolasCwy"},"content":"                .filter(p -\u003e p instanceof Staff \u0026\u0026 ((Staff) p).getStaffId().equals(STAFF_ID_FIRST_PERSON))","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"NicolasCwy"},"content":"                .findAny()","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"NicolasCwy"},"content":"                .orElse(null);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"NicolasCwy"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(STAFF_ID_FIRST_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"NicolasCwy"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, staffToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"NicolasCwy"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"NicolasCwy"},"content":"        expectedModel.deletePerson(staffToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"NicolasCwy"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"NicolasCwy"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"NicolasCwy"},"content":"    public void execute_invalidStaffId_throwsCommandException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"NicolasCwy"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(STAFF_ID_UNUSED);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"NicolasCwy"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_UNIQUE_IDENTIFIER);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"NicolasCwy"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"NicolasCwy"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"NicolasCwy"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(STAFF_ID_FIRST_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"NicolasCwy"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(STAFF_ID_SECOND_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"NicolasCwy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"NicolasCwy"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"NicolasCwy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"NicolasCwy"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(STAFF_ID_FIRST_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"NicolasCwy"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"NicolasCwy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"NicolasCwy"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"NicolasCwy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"NicolasCwy"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"NicolasCwy"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"NicolasCwy"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"NicolasCwy"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"NicolasCwy"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"NicolasCwy"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"NicolasCwy"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"NicolasCwy"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"NicolasCwy"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"NicolasCwy"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"NicolasCwy":82}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandGuestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rgbpokka"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"rgbpokka"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"rgbpokka"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_SECOND_PERSON;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_UNUSED;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_GUEST;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON_GUEST;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"rgbpokka"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.logic.commands.EditCommand.EditGuestDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Guest;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.testutil.EditGuestDescriptorBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.testutil.GuestBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"rgbpokka"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"rgbpokka"},"content":"public class EditCommandGuestTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"rgbpokka"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"        Guest guest \u003d ALICE_GUEST;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"        Guest editedGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"rgbpokka"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder(editedGuest).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"rgbpokka"},"content":"        EditCommand editCommand \u003d new EditCommand(guest.getPassportNumber(), descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedGuest);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"rgbpokka"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"rgbpokka"},"content":"        expectedModel.setPerson(guest, editedGuest);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"rgbpokka"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"rgbpokka"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"rgbpokka"},"content":"        Guest guest \u003d ALICE_GUEST;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"        GuestBuilder guestBuilder \u003d new GuestBuilder(guest);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"        Person editedGuest \u003d guestBuilder","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"NicolasCwy"},"content":"                .withName(VALID_NAME_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"NicolasCwy"},"content":"                .withEmail(VALID_EMAIL_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"rgbpokka"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder()","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"NicolasCwy"},"content":"                .withName(VALID_NAME_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"NicolasCwy"},"content":"                .withEmail(VALID_EMAIL_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"rgbpokka"},"content":"        EditCommand editCommand \u003d new EditCommand(guest.getPassportNumber(), descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"rgbpokka"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedGuest);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"rgbpokka"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"rgbpokka"},"content":"        expectedModel.setPerson(guest, editedGuest);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"rgbpokka"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"rgbpokka"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"rgbpokka"},"content":"        // no fields are changed, so the edited guest stays exactly the same","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"rgbpokka"},"content":"        Guest editedGuest \u003d ALICE_GUEST;","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"rgbpokka"},"content":"        EditCommand editCommand \u003d new EditCommand(editedGuest.getPassportNumber(), new EditGuestDescriptor());","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"rgbpokka"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedGuest);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"rgbpokka"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"rgbpokka"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"rgbpokka"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"rgbpokka"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"rgbpokka"},"content":"        Guest personInFilteredList \u003d ALICE_GUEST;","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"rgbpokka"},"content":"        Person editedGuest \u003d new GuestBuilder(personInFilteredList)","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"NicolasCwy"},"content":"                .withName(VALID_NAME_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"rgbpokka"},"content":"        EditCommand editCommand \u003d new EditCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"rgbpokka"},"content":"                personInFilteredList.getPassportNumber(),","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"NicolasCwy"},"content":"                new EditGuestDescriptorBuilder().withName(VALID_NAME_BENSON).build()","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"rgbpokka"},"content":"        );","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"rgbpokka"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedGuest);","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"rgbpokka"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"rgbpokka"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedGuest);","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"rgbpokka"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"rgbpokka"},"content":"    public void execute_duplicateGuestUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"rgbpokka"},"content":"        Guest guest \u003d ALICE_GUEST;","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"rgbpokka"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder(guest).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":119,"author":{"gitId":"rgbpokka"},"content":"        EditCommand editCommand \u003d new EditCommand(BENSON_GUEST.getPassportNumber(), descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"rgbpokka"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"rgbpokka"},"content":"    public void execute_duplicateGuestFilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"rgbpokka"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"rgbpokka"},"content":"        Guest personInList \u003d BENSON_GUEST;","lastModifiedDate":"2021-10-15"},{"lineNumber":129,"author":{"gitId":"rgbpokka"},"content":"        EditCommand editCommand \u003d new EditCommand(ALICE_GUEST.getPassportNumber(),","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"rgbpokka"},"content":"                new EditGuestDescriptorBuilder(personInList).build());","lastModifiedDate":"2021-10-15"},{"lineNumber":131,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"rgbpokka"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"rgbpokka"},"content":"    public void execute_invalidPassportNumberUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"rgbpokka"},"content":"        EditCommand editCommand \u003d new EditCommand(PASSPORT_NUMBER_UNUSED, new EditGuestDescriptor());","lastModifiedDate":"2021-10-15"},{"lineNumber":138,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"rgbpokka"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_UNIQUE_IDENTIFIER);","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"rgbpokka"},"content":"    //    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"rgbpokka"},"content":"    //    public void execute_invalidPassportNumberFilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"rgbpokka"},"content":"    //        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"rgbpokka"},"content":"    //        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"rgbpokka"},"content":"    //        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"rgbpokka"},"content":"    //        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"rgbpokka"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"rgbpokka"},"content":"    //        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"NicolasCwy"},"content":"    //                new EditPersonDescriptorBuilder().withName(VALID_NAME_BENSON).build());","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"rgbpokka"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"rgbpokka"},"content":"    //        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"rgbpokka"},"content":"    //    }","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"rgbpokka"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"        final EditCommand standardCommand \u003d new EditCommand(PASSPORT_NUMBER_FIRST_PERSON, DESC_ALICE);","lastModifiedDate":"2021-10-15"},{"lineNumber":158,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"rgbpokka"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"        EditGuestDescriptor copyDescriptor \u003d new EditGuestDescriptor(DESC_ALICE);","lastModifiedDate":"2021-10-15"},{"lineNumber":161,"author":{"gitId":"rgbpokka"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(PASSPORT_NUMBER_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"rgbpokka"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"rgbpokka"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"rgbpokka"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"rgbpokka"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"rgbpokka"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"rgbpokka"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"rgbpokka"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"rgbpokka"},"content":"        // different passport number -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(standardCommand.equals(new EditCommand(PASSPORT_NUMBER_SECOND_PERSON, DESC_ALICE)));","lastModifiedDate":"2021-10-15"},{"lineNumber":175,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"rgbpokka"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"NicolasCwy"},"content":"        assertFalse(standardCommand.equals(new EditCommand(PASSPORT_NUMBER_FIRST_PERSON, DESC_BENSON)));","lastModifiedDate":"2021-10-17"},{"lineNumber":178,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"rgbpokka"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"rgbpokka":165,"calvintanwj":4,"NicolasCwy":11}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandStaffTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rgbpokka"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"rgbpokka"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"rgbpokka"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_ELLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_DANIEL;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DANIEL;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAFF_ID_DANIEL;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL_STAFF;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE_STAFF;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_SECOND_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_UNUSED;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"rgbpokka"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.logic.commands.EditCommand.EditStaffDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.StaffId;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.UniqueIdentifier;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.testutil.EditStaffDescriptorBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.testutil.StaffBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"rgbpokka"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"rgbpokka"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"rgbpokka"},"content":"public class EditCommandStaffTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"rgbpokka"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"rgbpokka"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"rgbpokka"},"content":"        Staff staff \u003d DANIEL_STAFF;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"rgbpokka"},"content":"        Staff editedStaff \u003d new StaffBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"        EditStaffDescriptor descriptor \u003d new EditStaffDescriptorBuilder(editedStaff).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"        EditCommand editCommand \u003d new EditCommand(staff.getStaffId(), descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"rgbpokka"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedStaff);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"rgbpokka"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"rgbpokka"},"content":"        expectedModel.setPerson(staff, editedStaff);","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"        Staff staff \u003d DANIEL_STAFF;","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"rgbpokka"},"content":"        StaffBuilder staffBuilder \u003d new StaffBuilder(staff);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"        Person editedStaff \u003d staffBuilder","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"NicolasCwy"},"content":"                .withName(VALID_NAME_DANIEL)","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"NicolasCwy"},"content":"                .withEmail(VALID_EMAIL_DANIEL)","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"rgbpokka"},"content":"        EditStaffDescriptor descriptor \u003d new EditStaffDescriptorBuilder()","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"NicolasCwy"},"content":"                .withName(VALID_NAME_DANIEL)","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"NicolasCwy"},"content":"                .withEmail(VALID_EMAIL_DANIEL)","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"rgbpokka"},"content":"        EditCommand editCommand \u003d new EditCommand(staff.getStaffId(), descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"rgbpokka"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedStaff);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"rgbpokka"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"rgbpokka"},"content":"        expectedModel.setPerson(staff, editedStaff);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"rgbpokka"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"rgbpokka"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"rgbpokka"},"content":"        // no fields are changed, so the edited staff stays exactly the same","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        UniqueIdentifier targetIdentifier \u003d new StaffId(VALID_STAFF_ID_DANIEL);","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        EditStaffDescriptor editStaffDescriptor \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"                new EditStaffDescriptorBuilder().withStaffId(VALID_STAFF_ID_DANIEL).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"        EditCommand editCommand \u003d new EditCommand(targetIdentifier, editStaffDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, DANIEL_STAFF);","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"rgbpokka"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"rgbpokka"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"rgbpokka"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"rgbpokka"},"content":"        // Hard-coded to show first Staff in TypicalPersons list","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"rgbpokka"},"content":"        showPersonAtIndex(model, Index.fromZeroBased(3));","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"rgbpokka"},"content":"        Staff personInFilteredList \u003d DANIEL_STAFF;","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"rgbpokka"},"content":"        Person editedStaff \u003d new StaffBuilder(personInFilteredList)","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"NicolasCwy"},"content":"                .withName(VALID_NAME_DANIEL)","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"rgbpokka"},"content":"        EditCommand editCommand \u003d new EditCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"rgbpokka"},"content":"                personInFilteredList.getStaffId(),","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"NicolasCwy"},"content":"                new EditStaffDescriptorBuilder().withName(VALID_NAME_DANIEL).build()","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"rgbpokka"},"content":"        );","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"rgbpokka"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedStaff);","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"rgbpokka"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"rgbpokka"},"content":"        expectedModel.setPerson(personInFilteredList, editedStaff);","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"rgbpokka"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"rgbpokka"},"content":"    public void execute_duplicateStaffUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"rgbpokka"},"content":"        Staff staff \u003d DANIEL_STAFF;","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"rgbpokka"},"content":"        EditStaffDescriptor descriptor \u003d new EditStaffDescriptorBuilder(staff).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":123,"author":{"gitId":"rgbpokka"},"content":"        EditCommand editCommand \u003d new EditCommand(ELLE_STAFF.getStaffId(), descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"rgbpokka"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"rgbpokka"},"content":"    public void execute_duplicateStaffFilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"rgbpokka"},"content":"        // Hard-coded to show first Staff in TypicalPersons list","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"rgbpokka"},"content":"        showPersonAtIndex(model, Index.fromZeroBased(3));","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"rgbpokka"},"content":"        Staff personInList \u003d ELLE_STAFF;","lastModifiedDate":"2021-10-15"},{"lineNumber":134,"author":{"gitId":"rgbpokka"},"content":"        EditCommand editCommand \u003d new EditCommand(DANIEL_STAFF.getStaffId(),","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"rgbpokka"},"content":"                new EditStaffDescriptorBuilder(personInList).build());","lastModifiedDate":"2021-10-15"},{"lineNumber":136,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"rgbpokka"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"rgbpokka"},"content":"    public void execute_invalidStaffIdUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"rgbpokka"},"content":"        EditCommand editCommand \u003d new EditCommand(STAFF_ID_UNUSED, new EditStaffDescriptor());","lastModifiedDate":"2021-10-15"},{"lineNumber":143,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"rgbpokka"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_UNIQUE_IDENTIFIER);","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"rgbpokka"},"content":"    //    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"rgbpokka"},"content":"    //    public void execute_invalidPassportNumberFilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"rgbpokka"},"content":"    //        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"rgbpokka"},"content":"    //        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"rgbpokka"},"content":"    //        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"rgbpokka"},"content":"    //        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"rgbpokka"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"rgbpokka"},"content":"    //        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"NicolasCwy"},"content":"    //                new EditPersonDescriptorBuilder().withName(VALID_NAME_DANIEL).build());","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"rgbpokka"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"rgbpokka"},"content":"    //        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"rgbpokka"},"content":"    //    }","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"rgbpokka"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"NicolasCwy"},"content":"        // Something needs to be done about DESC_ELLE?? Change to something else??","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"NicolasCwy"},"content":"        final EditCommand standardCommand \u003d new EditCommand(STAFF_ID_FIRST_PERSON, DESC_ELLE);","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"rgbpokka"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"NicolasCwy"},"content":"        EditStaffDescriptor copyDescriptor \u003d new EditStaffDescriptor(DESC_ELLE);","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"rgbpokka"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(STAFF_ID_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"rgbpokka"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"rgbpokka"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"rgbpokka"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"rgbpokka"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"rgbpokka"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"rgbpokka"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"rgbpokka"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"rgbpokka"},"content":"        // different staff id -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":180,"author":{"gitId":"NicolasCwy"},"content":"        assertFalse(standardCommand.equals(new EditCommand(STAFF_ID_SECOND_PERSON, DESC_ELLE)));","lastModifiedDate":"2021-10-17"},{"lineNumber":181,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"rgbpokka"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(standardCommand.equals(new EditCommand(STAFF_ID_FIRST_PERSON, DESC_DANIEL)));","lastModifiedDate":"2021-10-15"},{"lineNumber":184,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"rgbpokka"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"rgbpokka":162,"calvintanwj":11,"NicolasCwy":13}},{"path":"src/test/java/seedu/address/logic/commands/EditGuestDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PASSPORT_NUMBER_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOM_NUMBER_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BENSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.logic.commands.EditCommand.EditGuestDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.testutil.EditGuestDescriptorBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"public class EditGuestDescriptorTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"        EditGuestDescriptor descriptorWithSameValues \u003d new EditGuestDescriptor(DESC_ALICE);","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(DESC_ALICE.equals(descriptorWithSameValues));","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(DESC_ALICE.equals(DESC_ALICE));","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ALICE.equals(null));","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ALICE.equals(5));","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"NicolasCwy"},"content":"        assertFalse(DESC_ALICE.equals(DESC_BENSON));","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"NicolasCwy"},"content":"        EditGuestDescriptor editedAmy \u003d new EditGuestDescriptorBuilder(DESC_ALICE).withName(VALID_NAME_BENSON).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ALICE.equals(editedAmy));","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"NicolasCwy"},"content":"        editedAmy \u003d new EditGuestDescriptorBuilder(DESC_ALICE).withEmail(VALID_EMAIL_BENSON).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ALICE.equals(editedAmy));","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"rgbpokka"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"        editedAmy \u003d new EditGuestDescriptorBuilder(DESC_ALICE).withTags(VALID_TAG_BENSON).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ALICE.equals(editedAmy));","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"rgbpokka"},"content":"        // different passport number -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"NicolasCwy"},"content":"        editedAmy \u003d new EditGuestDescriptorBuilder(DESC_ALICE).withPassportNumber(VALID_PASSPORT_NUMBER_BENSON).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ALICE.equals(editedAmy));","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"        // different room number -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"NicolasCwy"},"content":"        editedAmy \u003d new EditGuestDescriptorBuilder(DESC_ALICE).withRoomNumber(VALID_ROOM_NUMBER_BENSON).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ALICE.equals(editedAmy));","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"rgbpokka":10,"calvintanwj":11,"-":28,"NicolasCwy":10}},{"path":"src/test/java/seedu/address/logic/commands/EditStaffDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rgbpokka"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"rgbpokka"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"rgbpokka"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_ELLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAFF_ID_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DANIEL;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.logic.commands.EditCommand.EditStaffDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.testutil.EditStaffDescriptorBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"public class EditStaffDescriptorTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"    public void equals() {","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"NicolasCwy"},"content":"        EditStaffDescriptor descriptorWithSameValues \u003d new EditStaffDescriptor(DESC_ELLE);","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"NicolasCwy"},"content":"        assertTrue(DESC_ELLE.equals(descriptorWithSameValues));","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"NicolasCwy"},"content":"        assertTrue(DESC_ELLE.equals(DESC_ELLE));","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"NicolasCwy"},"content":"        assertFalse(DESC_ELLE.equals(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"NicolasCwy"},"content":"        assertFalse(DESC_ELLE.equals(5));","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"rgbpokka"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"NicolasCwy"},"content":"        assertFalse(DESC_ELLE.equals(DESC_DANIEL));","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"rgbpokka"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        EditStaffDescriptor editedElle \u003d new EditStaffDescriptorBuilder(DESC_ELLE)","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"rgbpokka"},"content":"                .withName(VALID_NAME_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ELLE.equals(editedElle));","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"rgbpokka"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        editedElle \u003d new EditStaffDescriptorBuilder(DESC_ELLE).withEmail(VALID_EMAIL_DANIEL).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ELLE.equals(editedElle));","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"rgbpokka"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        editedElle \u003d new EditStaffDescriptorBuilder(DESC_ELLE).withTags(VALID_TAG_DANIEL).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ELLE.equals(editedElle));","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"rgbpokka"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        editedElle \u003d new EditStaffDescriptorBuilder(DESC_ELLE).withAddress(VALID_ADDRESS_DANIEL).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ELLE.equals(editedElle));","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"rgbpokka"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        editedElle \u003d new EditStaffDescriptorBuilder(DESC_ELLE).withPhone(VALID_PHONE_DANIEL).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ELLE.equals(editedElle));","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"        // different staff id -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        editedElle \u003d new EditStaffDescriptorBuilder(DESC_ELLE).withStaffId(VALID_STAFF_ID_DANIEL).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ELLE.equals(editedElle));","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"rgbpokka"},"content":"}","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"rgbpokka":42,"calvintanwj":19,"NicolasCwy":6}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"public class FilterCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(new Tag(\"123\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(new Tag(\"123456121D\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        FilterCommand findFirstCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(filterFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    public void execute_noTags_noPersonFiltered() {","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        TagContainsKeywordsPredicate predicate \u003d preparePredicate(\"  \");","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.updateFilteredTagList(prepareTagPredicate(predicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    private TagContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        return new TagContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")).stream().map(Tag::new).collect(","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"                Collectors.toList()));","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"    private Predicate\u003cTag\u003e prepareTagPredicate(TagContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        return tag -\u003e predicate.getTags().contains(tag);","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"calvintanwj":78}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.IdentifierContainsKeywordsPredicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":" * Contains integration tests (interaction with the Model) for {@code ViewCommand}.","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"public class ViewCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        IdentifierContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"                new IdentifierContainsKeywordsPredicate(Collections.singletonList(\"123\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        IdentifierContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"                new IdentifierContainsKeywordsPredicate(Collections.singletonList(\"123456121D\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        ViewCommand findFirstCommand \u003d new ViewCommand(firstPredicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        ViewCommand findSecondCommand \u003d new ViewCommand(secondPredicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        ViewCommand findFirstCommandCopy \u003d new ViewCommand(firstPredicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    public void execute_noIdentifier_noPersonFound() {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        IdentifierContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        ViewCommand command \u003d new ViewCommand(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    private IdentifierContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        return new IdentifierContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"calvintanwj":15,"-":55}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STAFF_ID_DESC;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STAFF_ID_DESC_DANIEL;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STAFF_ID_DESC_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CHEF;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_SENIOR_STAFF;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAFF_TAG;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CHEF;","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SENIOR_STAFF;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL_STAFF;","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.model.person.StaffId;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.StaffBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"alyssa-savier"},"content":"        Person expectedPerson \u003d new StaffBuilder(DANIEL_STAFF).withTags(VALID_TAG_CHEF, VALID_STAFF_TAG).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_DANIEL + PHONE_DESC_DANIEL + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"alyssa-savier"},"content":"                + ADDRESS_DESC_DANIEL + TAG_DESC_CHEF + STAFF_ID_DESC_DANIEL, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"NicolasCwy"},"content":"        assertParseSuccess(parser, NAME_DESC_ELLE + NAME_DESC_DANIEL + PHONE_DESC_DANIEL + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"alyssa-savier"},"content":"                + ADDRESS_DESC_DANIEL + TAG_DESC_CHEF + STAFF_ID_DESC_DANIEL, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"NicolasCwy"},"content":"        assertParseSuccess(parser, NAME_DESC_DANIEL + PHONE_DESC_ELLE + PHONE_DESC_DANIEL + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"alyssa-savier"},"content":"                + ADDRESS_DESC_DANIEL + TAG_DESC_CHEF + STAFF_ID_DESC_DANIEL, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"NicolasCwy"},"content":"        assertParseSuccess(parser, NAME_DESC_DANIEL + PHONE_DESC_DANIEL + EMAIL_DESC_ELLE + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"alyssa-savier"},"content":"                + ADDRESS_DESC_DANIEL + TAG_DESC_CHEF + STAFF_ID_DESC_DANIEL, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"NicolasCwy"},"content":"        assertParseSuccess(parser, NAME_DESC_DANIEL + PHONE_DESC_DANIEL + EMAIL_DESC_DANIEL + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"alyssa-savier"},"content":"                + ADDRESS_DESC_DANIEL + TAG_DESC_CHEF + STAFF_ID_DESC_DANIEL, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"alyssa-savier"},"content":"        Person expectedPersonMultipleTags \u003d new StaffBuilder(DANIEL_STAFF).withTags(VALID_TAG_CHEF,","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"alyssa-savier"},"content":"                        VALID_TAG_SENIOR_STAFF, VALID_STAFF_TAG).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, NAME_DESC_DANIEL + PHONE_DESC_DANIEL + EMAIL_DESC_DANIEL + ADDRESS_DESC_DANIEL","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"alyssa-savier"},"content":"                        + TAG_DESC_SENIOR_STAFF + TAG_DESC_CHEF + STAFF_ID_DESC_DANIEL,","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"alyssa-savier"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"alyssa-savier"},"content":"        Person expectedPerson \u003d new StaffBuilder(DANIEL_STAFF).withTags(VALID_STAFF_TAG).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"alyssa-savier"},"content":"        assertParseSuccess(parser, NAME_DESC_DANIEL + PHONE_DESC_DANIEL + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"alyssa-savier"},"content":"                        + ADDRESS_DESC_DANIEL + STAFF_ID_DESC_DANIEL,","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, VALID_NAME_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"NicolasCwy"},"content":"                        + STAFF_ID_DESC_ELLE, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + VALID_PHONE_ELLE + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"NicolasCwy"},"content":"                        + STAFF_ID_DESC_ELLE, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + VALID_EMAIL_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"NicolasCwy"},"content":"                        + STAFF_ID_DESC_ELLE, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + VALID_ADDRESS_ELLE","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"NicolasCwy"},"content":"                        + STAFF_ID_DESC_ELLE, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"alyssa-savier"},"content":"        // missing staff id prefix","lastModifiedDate":"2021-10-15"},{"lineNumber":117,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + VALID_ADDRESS_ELLE","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"NicolasCwy"},"content":"                + STAFF_ID_DESC_ELLE, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, VALID_NAME_ELLE + VALID_PHONE_ELLE + VALID_EMAIL_ELLE + VALID_ADDRESS_ELLE,","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"NicolasCwy"},"content":"                + TAG_DESC_SENIOR_STAFF + TAG_DESC_CHEF + STAFF_ID_DESC_ELLE, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + INVALID_PHONE_DESC + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"NicolasCwy"},"content":"                + TAG_DESC_SENIOR_STAFF + TAG_DESC_CHEF + STAFF_ID_DESC_ELLE, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + INVALID_EMAIL_DESC + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"NicolasCwy"},"content":"                + TAG_DESC_SENIOR_STAFF + TAG_DESC_CHEF + STAFF_ID_DESC_ELLE, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"NicolasCwy"},"content":"                + TAG_DESC_SENIOR_STAFF + TAG_DESC_CHEF + STAFF_ID_DESC_ELLE, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"rgbpokka"},"content":"                + INVALID_TAG_DESC + TAG_DESC_CHEF + STAFF_ID_DESC_ELLE, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":147,"author":{"gitId":"alyssa-savier"},"content":"        // invalid staff id","lastModifiedDate":"2021-10-15"},{"lineNumber":148,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"rgbpokka"},"content":"                + TAG_DESC_SENIOR_STAFF + TAG_DESC_CHEF + INVALID_STAFF_ID_DESC, StaffId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"NicolasCwy"},"content":"                        + STAFF_ID_DESC_ELLE, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"NicolasCwy"},"content":"                + ADDRESS_DESC_ELLE + TAG_DESC_SENIOR_STAFF + TAG_DESC_CHEF + STAFF_ID_DESC_ELLE,","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"rgbpokka":3,"calvintanwj":9,"alyssa-savier":23,"-":83,"NicolasCwy":42}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAFF_ID;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_DEFAULT;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_DEFAULT;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.logic.commands.EditCommand.EditGuestDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.logic.commands.EditCommand.EditStaffDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Guest;","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.IdentifierContainsKeywordsPredicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.testutil.EditGuestDescriptorBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.testutil.EditStaffDescriptorBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.GuestBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.testutil.GuestUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.StaffBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.testutil.StaffUtil;","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_addGuest() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"rgbpokka"},"content":"        Guest guest \u003d new GuestBuilder().build();","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(GuestUtil.getAddCommand(guest));","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"        assertEquals(new AddCommand(guest), command);","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_addStaff() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"rgbpokka"},"content":"        Staff staff \u003d new StaffBuilder().build();","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(StaffUtil.getAddCommand(staff));","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"        assertEquals(new AddCommand(staff), command);","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"NicolasCwy"},"content":"    public void parseCommand_deleteStaff() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"NicolasCwy"},"content":"                DeleteCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"NicolasCwy"},"content":"                        + PREFIX_STAFF_ID + STAFF_ID_FIRST_PERSON.toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"NicolasCwy"},"content":"        assertEquals(new DeleteCommand(STAFF_ID_FIRST_PERSON), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"NicolasCwy"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"NicolasCwy"},"content":"    public void parseCommand_deleteGuest() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"NicolasCwy"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"NicolasCwy"},"content":"                DeleteCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"NicolasCwy"},"content":"                        + PREFIX_PASSPORT_NUMBER + PASSPORT_NUMBER_FIRST_PERSON.toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"NicolasCwy"},"content":"        assertEquals(new DeleteCommand(PASSPORT_NUMBER_FIRST_PERSON), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_editGuest() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"rgbpokka"},"content":"        Guest guest \u003d new GuestBuilder().build();","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"rgbpokka"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder(guest).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"NicolasCwy"},"content":"                + PASSPORT_NUMBER_DEFAULT + \" \" + GuestUtil.getEditGuestDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"NicolasCwy"},"content":"        assertEquals(new EditCommand(PASSPORT_NUMBER_DEFAULT, descriptor), command);","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_editStaff() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"rgbpokka"},"content":"        Staff staff \u003d new StaffBuilder().build();","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"rgbpokka"},"content":"        EditStaffDescriptor descriptor \u003d new EditStaffDescriptorBuilder(staff).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"NicolasCwy"},"content":"                + STAFF_ID_DEFAULT.toString() + \" \" + StaffUtil.getEditStaffDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"NicolasCwy"},"content":"        assertEquals(new EditCommand(STAFF_ID_DEFAULT, descriptor), command);","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_view() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"        ViewCommand command \u003d (ViewCommand) parser.parseCommand(","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"                ViewCommand.COMMAND_WORD + \" \" + PREFIX_STAFF_ID + STAFF_ID_FIRST_PERSON.toString());","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"                new ViewCommand(new IdentifierContainsKeywordsPredicate(List.of(STAFF_ID_FIRST_PERSON.toString()))),","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"                command);","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"rgbpokka":17,"calvintanwj":17,"-":77,"NicolasCwy":24}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_MULTIPLE_UNIQUE_IDENTIFIER;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.model.person.StaffId;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"NicolasCwy"},"content":"    public void parse_validPassportNumberArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"NicolasCwy"},"content":"        assertParseSuccess(parser, \"delete pn/E0123122G\", new DeleteCommand(PASSPORT_NUMBER_FIRST_PERSON));","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"NicolasCwy"},"content":"    public void parse_validStaffIdArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"NicolasCwy"},"content":"        assertParseSuccess(parser, \"delete sid/123\", new DeleteCommand(STAFF_ID_FIRST_PERSON));","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"NicolasCwy"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"NicolasCwy"},"content":"    public void parse_invalidPassportNumberArgs_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, \"delete pn/\",","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"NicolasCwy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE,","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"NicolasCwy"},"content":"                        StaffId.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":44,"author":{"gitId":"NicolasCwy"},"content":"    public void parse_invalidStaffIdArgs_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, \"delete sid/\",","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"NicolasCwy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE,","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"NicolasCwy"},"content":"                        StaffId.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"NicolasCwy"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"NicolasCwy"},"content":"    public void parse_invalidDeleteCommand_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, \"delete\",","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"NicolasCwy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":55,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"NicolasCwy"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"NicolasCwy"},"content":"    public void parse_multipleUniqueIdentifiers_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, \"delete pn/E0123122G sid/123\",","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"NicolasCwy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE,","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"NicolasCwy"},"content":"                        MESSAGE_INVALID_MULTIPLE_UNIQUE_IDENTIFIER));","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, \"delete sid/123 pn/E0123122G\",","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"NicolasCwy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE,","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"NicolasCwy"},"content":"                        MESSAGE_INVALID_MULTIPLE_UNIQUE_IDENTIFIER));","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":31,"NicolasCwy":35}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_DANIEL;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_ELLE;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_DANIEL;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_ELLE;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PASSPORT_NUMBER_DESC;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ROOM_NUMBER_DESC;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BENSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_DANIEL;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PASSPORT_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PASSPORT_NUMBER_DESC_BENSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_DANIEL;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_ELLE;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROOM_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROOM_NUMBER_DESC_BENSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STAFF_ID_DESC_DANIEL;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CHEF;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DELUXE_ROOM;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_SENIOR_STAFF;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_VIP;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_DANIEL;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_DANIEL;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DANIEL;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PASSPORT_NUMBER_ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_DANIEL;","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOM_NUMBER_ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAFF_ID_DANIEL;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CHEF;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DELUXE_ROOM;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SENIOR_STAFF;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_VIP;","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAFF_ID;","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.logic.commands.EditCommand.EditGuestDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.logic.commands.EditCommand.EditStaffDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.PassportNumber;","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.StaffId;","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.UniqueIdentifier;","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.testutil.EditGuestDescriptorBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.testutil.EditStaffDescriptorBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"rgbpokka"},"content":"    public void parse_validPassportNumberArgs_returnsEditCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"rgbpokka"},"content":"        EditGuestDescriptor editGuestDescriptor \u003d new EditGuestDescriptor();","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"rgbpokka"},"content":"        editGuestDescriptor.setPassportNumber(new PassportNumber(\"E0123122G\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"rgbpokka"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"rgbpokka"},"content":"                EditCommand.COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"rgbpokka"},"content":"                        + \" \"","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"rgbpokka"},"content":"                        + PREFIX_PASSPORT_NUMBER","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"rgbpokka"},"content":"                        + PASSPORT_NUMBER_FIRST_PERSON,","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"rgbpokka"},"content":"                new EditCommand(PASSPORT_NUMBER_FIRST_PERSON, editGuestDescriptor));","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"rgbpokka"},"content":"    public void parse_validStaffIdArgs_returnsEditCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"rgbpokka"},"content":"        // why did this make a difference?","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"rgbpokka"},"content":"        EditStaffDescriptor editStaffDescriptor \u003d new EditStaffDescriptor();","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"rgbpokka"},"content":"        editStaffDescriptor.setStaffId(new StaffId(\"123\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"rgbpokka"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"rgbpokka"},"content":"                EditCommand.COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"rgbpokka"},"content":"                        + \" \"","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"rgbpokka"},"content":"                        + PREFIX_STAFF_ID","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"rgbpokka"},"content":"                        + STAFF_ID_FIRST_PERSON,","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"rgbpokka"},"content":"                new EditCommand(STAFF_ID_FIRST_PERSON, editStaffDescriptor));","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"rgbpokka"},"content":"    public void parse_invalidValueForStaff_failure() {","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"rgbpokka"},"content":"        String partialUserInput \u003d EditCommand.COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"rgbpokka"},"content":"                + \" \"","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"rgbpokka"},"content":"                + PREFIX_STAFF_ID","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"rgbpokka"},"content":"                + STAFF_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"rgbpokka"},"content":"        assertParseFailure(parser, \"edit sid/\", StaffId.MESSAGE_CONSTRAINTS); // invalid staff id","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"rgbpokka"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"rgbpokka"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"rgbpokka"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"                Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"rgbpokka"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"rgbpokka"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_PHONE_DESC + EMAIL_DESC_ALICE, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + PHONE_DESC_DANIEL + INVALID_PHONE_DESC,","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + TAG_DESC_SENIOR_STAFF + TAG_DESC_CHEF + TAG_EMPTY,","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + TAG_DESC_SENIOR_STAFF + TAG_EMPTY + TAG_DESC_CHEF,","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + TAG_EMPTY + TAG_DESC_SENIOR_STAFF + TAG_DESC_CHEF,","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"                partialUserInput + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_DANIEL + VALID_PHONE_DANIEL,","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"rgbpokka"},"content":"    public void parse_invalidValueForGuest_failure() {","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"rgbpokka"},"content":"        String partialUserInput \u003d EditCommand.COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"rgbpokka"},"content":"                + \" \"","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"rgbpokka"},"content":"                + PREFIX_PASSPORT_NUMBER","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"rgbpokka"},"content":"                + PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"rgbpokka"},"content":"        assertParseFailure(parser, \"edit pn/\", PassportNumber.MESSAGE_CONSTRAINTS); // invalid passport number","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_PASSPORT_NUMBER_DESC,","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"                PassportNumber.MESSAGE_CONSTRAINTS); // invalid room number","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"rgbpokka"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"rgbpokka"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_ROOM_NUMBER_DESC,","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"                RoomNumber.MESSAGE_CONSTRAINTS); // invalid room number","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"rgbpokka"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"rgbpokka"},"content":"        // invalid room number followed by valid email","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_ROOM_NUMBER_DESC + EMAIL_DESC_ALICE,","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"                RoomNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"        // valid room number followed by invalid room number. The test case for invalid room number followed","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"        // by valid room number","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"rgbpokka"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + VALID_ROOM_NUMBER_ALICE + INVALID_ROOM_NUMBER_DESC,","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"                RoomNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"rgbpokka"},"content":"        //        is this still relevant for us ?","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"        //                // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person}","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"        //                  being edited,","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"rgbpokka"},"content":"        //                // parsing it together with a valid tag results in error","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"        //                assertParseFailure(parser, partialUserInput + VALID_TAG_VIP + VALID_TAG_DELUXE_ROOM","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"        //                + TAG_EMPTY,","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"        //                        Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"        //        assertParseFailure(parser, partialUserInput + VALID_TAG_VIP + TAG_EMPTY + VALID_TAG_DELUXE_ROOM,","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"        //                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"        //        assertParseFailure(parser, partialUserInput + TAG_EMPTY + VALID_TAG_VIP + VALID_TAG_DELUXE_ROOM,","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"        //                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"rgbpokka"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ROOM_NUMBER_ALICE","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"                        + VALID_PASSPORT_NUMBER_ALICE,","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"rgbpokka"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"rgbpokka"},"content":"    public void parse_allFieldsSpecifiedForStaff_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"rgbpokka"},"content":"        UniqueIdentifier targetIdentifier \u003d new StaffId(VALID_STAFF_ID_DANIEL);","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"rgbpokka"},"content":"        String userInput \u003d EditCommand.COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"rgbpokka"},"content":"                + STAFF_ID_DESC_DANIEL","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"rgbpokka"},"content":"                + PHONE_DESC_DANIEL","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"rgbpokka"},"content":"                + TAG_DESC_CHEF","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"rgbpokka"},"content":"                + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"rgbpokka"},"content":"                + ADDRESS_DESC_DANIEL","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"rgbpokka"},"content":"                + NAME_DESC_DANIEL","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"rgbpokka"},"content":"                + TAG_DESC_SENIOR_STAFF;","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"rgbpokka"},"content":"        EditStaffDescriptor descriptor \u003d new EditStaffDescriptorBuilder()","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"rgbpokka"},"content":"                .withStaffId(VALID_STAFF_ID_DANIEL)","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"rgbpokka"},"content":"                .withName(VALID_NAME_DANIEL)","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"rgbpokka"},"content":"                .withPhone(VALID_PHONE_DANIEL)","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"rgbpokka"},"content":"                .withEmail(VALID_EMAIL_DANIEL)","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"rgbpokka"},"content":"                .withAddress(VALID_ADDRESS_DANIEL)","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"rgbpokka"},"content":"                .withTags(VALID_TAG_CHEF, VALID_TAG_SENIOR_STAFF).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"rgbpokka"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIdentifier, descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"rgbpokka"},"content":"    public void parse_allFieldsSpecifiedForGuest_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"rgbpokka"},"content":"        UniqueIdentifier targetIdentifier \u003d new PassportNumber(VALID_PASSPORT_NUMBER_ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"rgbpokka"},"content":"        String userInput \u003d EditCommand.COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"rgbpokka"},"content":"                + PASSPORT_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"rgbpokka"},"content":"                + TAG_DESC_DELUXE_ROOM","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"rgbpokka"},"content":"                + NAME_DESC_ALICE","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"rgbpokka"},"content":"                + EMAIL_DESC_ALICE","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"rgbpokka"},"content":"                + TAG_DESC_VIP","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"rgbpokka"},"content":"                + ROOM_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"rgbpokka"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder()","lastModifiedDate":"2021-10-19"},{"lineNumber":221,"author":{"gitId":"rgbpokka"},"content":"                .withPassportNumber(VALID_PASSPORT_NUMBER_ALICE)","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"rgbpokka"},"content":"                .withName(VALID_NAME_ALICE)","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"rgbpokka"},"content":"                .withEmail(VALID_EMAIL_ALICE)","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"rgbpokka"},"content":"                .withRoomNumber(VALID_ROOM_NUMBER_ALICE)","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"rgbpokka"},"content":"                .withTags(VALID_TAG_VIP, VALID_TAG_DELUXE_ROOM)","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"rgbpokka"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIdentifier, descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":234,"author":{"gitId":"rgbpokka"},"content":"    public void parse_someFieldsSpecifiedForStaff_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"rgbpokka"},"content":"        UniqueIdentifier targetIdentifier \u003d new StaffId(VALID_STAFF_ID_DANIEL);","lastModifiedDate":"2021-10-19"},{"lineNumber":236,"author":{"gitId":"rgbpokka"},"content":"        String userInput \u003d EditCommand.COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"rgbpokka"},"content":"                + STAFF_ID_DESC_DANIEL","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"rgbpokka"},"content":"                + ADDRESS_DESC_DANIEL;","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"rgbpokka"},"content":"        EditStaffDescriptor descriptor \u003d new EditStaffDescriptorBuilder()","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"rgbpokka"},"content":"                .withStaffId(VALID_STAFF_ID_DANIEL)","lastModifiedDate":"2021-10-19"},{"lineNumber":242,"author":{"gitId":"rgbpokka"},"content":"                .withAddress(VALID_ADDRESS_DANIEL)","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-19"},{"lineNumber":244,"author":{"gitId":"rgbpokka"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIdentifier, descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":247,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"rgbpokka"},"content":"    public void parse_someFieldsSpecifiedForGuest_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"rgbpokka"},"content":"        UniqueIdentifier targetIdentifier \u003d new PassportNumber(VALID_PASSPORT_NUMBER_ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"rgbpokka"},"content":"        String userInput \u003d EditCommand.COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"rgbpokka"},"content":"                + PASSPORT_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"rgbpokka"},"content":"                + ROOM_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"rgbpokka"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder()","lastModifiedDate":"2021-10-19"},{"lineNumber":257,"author":{"gitId":"rgbpokka"},"content":"                .withPassportNumber(VALID_PASSPORT_NUMBER_ALICE)","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"rgbpokka"},"content":"                .withRoomNumber(VALID_ROOM_NUMBER_ALICE)","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"rgbpokka"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIdentifier, descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":264,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"rgbpokka"},"content":"    public void parse_multipleRepeatedFieldsForStaff_acceptsLast() {","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"rgbpokka"},"content":"        UniqueIdentifier targetIdentifier \u003d new StaffId(VALID_STAFF_ID_DANIEL);","lastModifiedDate":"2021-10-19"},{"lineNumber":269,"author":{"gitId":"rgbpokka"},"content":"        String userInput \u003d EditCommand.COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":270,"author":{"gitId":"rgbpokka"},"content":"                + STAFF_ID_DESC_DANIEL + PHONE_DESC_DANIEL + ADDRESS_DESC_DANIEL + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"rgbpokka"},"content":"                + TAG_DESC_SENIOR_STAFF + PHONE_DESC_ELLE + ADDRESS_DESC_ELLE + EMAIL_DESC_ELLE + TAG_DESC_SENIOR_STAFF","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"rgbpokka"},"content":"                + PHONE_DESC_DANIEL + ADDRESS_DESC_DANIEL + EMAIL_DESC_DANIEL + TAG_DESC_CHEF;","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":274,"author":{"gitId":"rgbpokka"},"content":"        EditStaffDescriptor descriptor \u003d new EditStaffDescriptorBuilder().withStaffId(VALID_STAFF_ID_DANIEL)","lastModifiedDate":"2021-10-19"},{"lineNumber":275,"author":{"gitId":"rgbpokka"},"content":"                .withPhone(VALID_PHONE_DANIEL).withEmail(VALID_EMAIL_DANIEL).withAddress(VALID_ADDRESS_DANIEL)","lastModifiedDate":"2021-10-19"},{"lineNumber":276,"author":{"gitId":"rgbpokka"},"content":"                .withTags(VALID_TAG_SENIOR_STAFF, VALID_TAG_CHEF).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":277,"author":{"gitId":"rgbpokka"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIdentifier, descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"rgbpokka"},"content":"    public void parse_multipleRepeatedFieldsForGuest_acceptsLast() {","lastModifiedDate":"2021-10-19"},{"lineNumber":284,"author":{"gitId":"rgbpokka"},"content":"        UniqueIdentifier targetIdentifier \u003d new PassportNumber(VALID_PASSPORT_NUMBER_ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":285,"author":{"gitId":"rgbpokka"},"content":"        String userInput \u003d EditCommand.COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"rgbpokka"},"content":"                + PASSPORT_NUMBER_DESC_BENSON","lastModifiedDate":"2021-10-19"},{"lineNumber":287,"author":{"gitId":"rgbpokka"},"content":"                + NAME_DESC_BENSON","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"rgbpokka"},"content":"                + ROOM_NUMBER_DESC_BENSON","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"rgbpokka"},"content":"                + PASSPORT_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"rgbpokka"},"content":"                + TAG_DESC_DELUXE_ROOM","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"rgbpokka"},"content":"                + NAME_DESC_ALICE","lastModifiedDate":"2021-10-19"},{"lineNumber":292,"author":{"gitId":"rgbpokka"},"content":"                + EMAIL_DESC_ALICE","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"rgbpokka"},"content":"                + TAG_DESC_VIP","lastModifiedDate":"2021-10-19"},{"lineNumber":294,"author":{"gitId":"rgbpokka"},"content":"                + ROOM_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":295,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":296,"author":{"gitId":"rgbpokka"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder()","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"rgbpokka"},"content":"                .withPassportNumber(VALID_PASSPORT_NUMBER_ALICE)","lastModifiedDate":"2021-10-19"},{"lineNumber":298,"author":{"gitId":"rgbpokka"},"content":"                .withName(VALID_NAME_ALICE)","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"rgbpokka"},"content":"                .withEmail(VALID_EMAIL_ALICE)","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"rgbpokka"},"content":"                .withRoomNumber(VALID_ROOM_NUMBER_ALICE)","lastModifiedDate":"2021-10-19"},{"lineNumber":301,"author":{"gitId":"rgbpokka"},"content":"                .withTags(VALID_TAG_VIP, VALID_TAG_DELUXE_ROOM)","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2021-10-19"},{"lineNumber":303,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":304,"author":{"gitId":"rgbpokka"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIdentifier, descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":310,"author":{"gitId":"rgbpokka"},"content":"    public void parse_invalidValueFollowedByValidValueForStaff_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2021-10-19"},{"lineNumber":312,"author":{"gitId":"rgbpokka"},"content":"        UniqueIdentifier targetIdentifier \u003d new StaffId(VALID_STAFF_ID_DANIEL);","lastModifiedDate":"2021-10-19"},{"lineNumber":313,"author":{"gitId":"rgbpokka"},"content":"        String userInput \u003d EditCommand.COMMAND_WORD + STAFF_ID_DESC_DANIEL + INVALID_PHONE_DESC + PHONE_DESC_DANIEL;","lastModifiedDate":"2021-10-19"},{"lineNumber":314,"author":{"gitId":"rgbpokka"},"content":"        EditStaffDescriptor descriptor \u003d new EditStaffDescriptorBuilder()","lastModifiedDate":"2021-10-19"},{"lineNumber":315,"author":{"gitId":"rgbpokka"},"content":"                .withStaffId(VALID_STAFF_ID_DANIEL)","lastModifiedDate":"2021-10-19"},{"lineNumber":316,"author":{"gitId":"rgbpokka"},"content":"                .withPhone(VALID_PHONE_DANIEL)","lastModifiedDate":"2021-10-19"},{"lineNumber":317,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-19"},{"lineNumber":318,"author":{"gitId":"rgbpokka"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIdentifier, descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2021-10-19"},{"lineNumber":322,"author":{"gitId":"rgbpokka"},"content":"        userInput \u003d EditCommand.COMMAND_WORD + STAFF_ID_DESC_DANIEL + EMAIL_DESC_DANIEL + INVALID_PHONE_DESC","lastModifiedDate":"2021-10-19"},{"lineNumber":323,"author":{"gitId":"rgbpokka"},"content":"                + ADDRESS_DESC_DANIEL + PHONE_DESC_DANIEL;","lastModifiedDate":"2021-10-19"},{"lineNumber":324,"author":{"gitId":"rgbpokka"},"content":"        descriptor \u003d new EditStaffDescriptorBuilder()","lastModifiedDate":"2021-10-19"},{"lineNumber":325,"author":{"gitId":"rgbpokka"},"content":"                .withStaffId(VALID_STAFF_ID_DANIEL)","lastModifiedDate":"2021-10-19"},{"lineNumber":326,"author":{"gitId":"rgbpokka"},"content":"                .withPhone(VALID_PHONE_DANIEL)","lastModifiedDate":"2021-10-19"},{"lineNumber":327,"author":{"gitId":"rgbpokka"},"content":"                .withEmail(VALID_EMAIL_DANIEL)","lastModifiedDate":"2021-10-19"},{"lineNumber":328,"author":{"gitId":"rgbpokka"},"content":"                .withAddress(VALID_ADDRESS_DANIEL)","lastModifiedDate":"2021-10-19"},{"lineNumber":329,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-19"},{"lineNumber":330,"author":{"gitId":"rgbpokka"},"content":"        expectedCommand \u003d new EditCommand(targetIdentifier, descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":331,"author":{"gitId":"rgbpokka"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":332,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":333,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":334,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":335,"author":{"gitId":"rgbpokka"},"content":"    public void parse_invalidValueFollowedByValidValueForGuest_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":336,"author":{"gitId":"rgbpokka"},"content":"        UniqueIdentifier targetIdentifier \u003d new PassportNumber(VALID_PASSPORT_NUMBER_ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":337,"author":{"gitId":"calvintanwj"},"content":"        String userInput \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":338,"author":{"gitId":"calvintanwj"},"content":"                EditCommand.COMMAND_WORD + PASSPORT_NUMBER_DESC_ALICE + INVALID_EMAIL_DESC + ROOM_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-22"},{"lineNumber":339,"author":{"gitId":"calvintanwj"},"content":"                        + EMAIL_DESC_ALICE;","lastModifiedDate":"2021-10-22"},{"lineNumber":340,"author":{"gitId":"rgbpokka"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder()","lastModifiedDate":"2021-10-19"},{"lineNumber":341,"author":{"gitId":"rgbpokka"},"content":"                .withPassportNumber(VALID_PASSPORT_NUMBER_ALICE)","lastModifiedDate":"2021-10-19"},{"lineNumber":342,"author":{"gitId":"rgbpokka"},"content":"                .withRoomNumber(VALID_ROOM_NUMBER_ALICE)","lastModifiedDate":"2021-10-19"},{"lineNumber":343,"author":{"gitId":"rgbpokka"},"content":"                .withEmail(VALID_EMAIL_ALICE)","lastModifiedDate":"2021-10-19"},{"lineNumber":344,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-19"},{"lineNumber":345,"author":{"gitId":"calvintanwj"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIdentifier, descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":346,"author":{"gitId":"rgbpokka"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":347,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":348,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":349,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":350,"author":{"gitId":"rgbpokka"},"content":"    public void parse_resetTagsForStaff_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":351,"author":{"gitId":"rgbpokka"},"content":"        UniqueIdentifier targetIdentifier \u003d new StaffId(VALID_STAFF_ID_DANIEL);","lastModifiedDate":"2021-10-19"},{"lineNumber":352,"author":{"gitId":"rgbpokka"},"content":"        String userInput \u003d EditCommand.COMMAND_WORD + STAFF_ID_DESC_DANIEL + TAG_EMPTY;","lastModifiedDate":"2021-10-19"},{"lineNumber":353,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":354,"author":{"gitId":"calvintanwj"},"content":"        EditStaffDescriptor descriptor \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":355,"author":{"gitId":"calvintanwj"},"content":"                new EditStaffDescriptorBuilder().withStaffId(VALID_STAFF_ID_DANIEL).withTags().build();","lastModifiedDate":"2021-10-22"},{"lineNumber":356,"author":{"gitId":"rgbpokka"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIdentifier, descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":357,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":362,"author":{"gitId":"rgbpokka"},"content":"    public void parse_resetTagsForGuest_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":363,"author":{"gitId":"rgbpokka"},"content":"        UniqueIdentifier targetIdentifier \u003d new PassportNumber(VALID_PASSPORT_NUMBER_ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":364,"author":{"gitId":"rgbpokka"},"content":"        String userInput \u003d EditCommand.COMMAND_WORD + PASSPORT_NUMBER_DESC_ALICE + TAG_EMPTY;","lastModifiedDate":"2021-10-19"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":366,"author":{"gitId":"calvintanwj"},"content":"        EditGuestDescriptor descriptor \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":367,"author":{"gitId":"calvintanwj"},"content":"                new EditGuestDescriptorBuilder().withPassportNumber(VALID_PASSPORT_NUMBER_ALICE).withTags().build();","lastModifiedDate":"2021-10-22"},{"lineNumber":368,"author":{"gitId":"rgbpokka"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIdentifier, descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":372,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"rgbpokka":231,"calvintanwj":45,"-":92,"NicolasCwy":4}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MISSING_ARGUMENTS;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PASSPORT_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PASSPORT_NUMBER_DESC_CARL;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STAFF_ID_DESC_DANIEL;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STAFF_ID_DESC_ELLE;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_ALICE;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_ALICE;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_MISSING_ARGUMENTS, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    public void parse_wrongArguments_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, FilterCommand.COMMAND_WORD + \" \" + STAFF_ID_DESC_DANIEL + \" \" + STAFF_ID_DESC_ELLE,","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    public void parse_moreWrongArguments_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"                FilterCommand.COMMAND_WORD + \" \" + PASSPORT_NUMBER_DESC_ALICE + \" \" + PASSPORT_NUMBER_DESC_CARL,","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    public void parse_prefixButNoArg_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"                \" \" + PREFIX_TAG,","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"                String.format(MESSAGE_MISSING_ARGUMENTS, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"                new FilterCommand(new TagContainsKeywordsPredicate(List.of(new Tag(VALID_TAG_ALICE))));","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, TAG_DESC_ALICE, expectedFilterCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        // whitespaces between keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_TAG + \"     \" + VALID_TAG_ALICE, expectedFilterCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"calvintanwj":62}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MISSING_ARGUMENTS;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_TOO_MANY_ARGUMENTS;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PASSPORT_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PASSPORT_NUMBER_DESC_BENSON;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PASSPORT_NUMBER_DESC_CARL;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STAFF_ID_DESC_DANIEL;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STAFF_ID_DESC_ELLE;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAFF_ID_DANIEL;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAFF_ID;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.IdentifierContainsKeywordsPredicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_MISSING_ARGUMENTS, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public void parse_twoSid_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, ViewCommand.COMMAND_WORD + \" \" + STAFF_ID_DESC_DANIEL + \" \" + STAFF_ID_DESC_ELLE,","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"                String.format(MESSAGE_TOO_MANY_ARGUMENTS, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    public void parse_twoPassport_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                ViewCommand.COMMAND_WORD + \" \" + PASSPORT_NUMBER_DESC_ALICE + \" \" + PASSPORT_NUMBER_DESC_CARL,","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"                String.format(MESSAGE_TOO_MANY_ARGUMENTS, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    public void parse_oneSidOnePassport_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"                ViewCommand.COMMAND_WORD + \" \" + STAFF_ID_DESC_DANIEL + \" \" + PASSPORT_NUMBER_DESC_BENSON,","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"                String.format(MESSAGE_TOO_MANY_ARGUMENTS, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        ViewCommand expectedViewCommand \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"                new ViewCommand(new IdentifierContainsKeywordsPredicate(List.of(VALID_STAFF_ID_DANIEL)));","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, STAFF_ID_DESC_DANIEL, expectedViewCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        // whitespaces between keywords","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_STAFF_ID + \"     \" + VALID_STAFF_ID_DANIEL, expectedViewCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"calvintanwj":41,"-":21}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SENIOR_STAFF;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL_STAFF;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.StaffBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        Person editedDaniel \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"                new StaffBuilder(DANIEL_STAFF).withAddress(VALID_ADDRESS_ELLE).withTags(VALID_TAG_SENIOR_STAFF)","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                        .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(DANIEL_STAFF, editedDaniel);","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(addressBook.hasPerson(DANIEL_STAFF));","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        addressBook.addPerson(DANIEL_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(addressBook.hasPerson(DANIEL_STAFF));","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        addressBook.addPerson(DANIEL_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        Person editedAlice \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"                new StaffBuilder(DANIEL_STAFF).withAddress(VALID_ADDRESS_ELLE).withTags(VALID_TAG_SENIOR_STAFF)","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                        .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"        private final ObservableList\u003cTag\u003e tags \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"        public ObservableList\u003cTag\u003e getTagList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"            return tags;","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"calvintanwj":18,"-":91,"NicolasCwy":2}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_GUEST;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON_GUEST;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.IdentifierContainsKeywordsPredicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(modelManager.hasPerson(ALICE_GUEST));","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        modelManager.addPerson(ALICE_GUEST);","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(modelManager.hasPerson(ALICE_GUEST));","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE_GUEST).withPerson(BENSON_GUEST).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"        String[] keywords \u003d ALICE_GUEST.getPassportNumber().value.split(\"\\\\s+\");","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"        modelManager.updateFilteredPersonList(new IdentifierContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"calvintanwj":9,"-":123}},{"path":"src/test/java/seedu/address/model/person/GuestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BENSON;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BENSON;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PASSPORT_NUMBER_BENSON;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOM_NUMBER_BENSON;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SENIOR_STAFF;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_GUEST;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON_GUEST;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.GuestBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"public class GuestTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"        Person person \u003d new GuestBuilder().build();","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    public void isSamePerson() {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(ALICE_GUEST.isSamePerson(ALICE_GUEST));","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.isSamePerson(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        // same passport number, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        Person editedFiona \u003d new GuestBuilder(ALICE_GUEST)","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"                .withName(VALID_NAME_BENSON)","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(VALID_EMAIL_BENSON)","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"                .withRoomNumber(VALID_ROOM_NUMBER_BENSON)","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                .withTags(VALID_TAG_SENIOR_STAFF)","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                .build();","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(ALICE_GUEST.isSamePerson(editedFiona));","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        // different passport number, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        Person editedAlice \u003d new GuestBuilder(ALICE_GUEST).withPassportNumber(VALID_PASSPORT_NUMBER_BENSON).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        // Passport number has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        String passportWithTrailingSpaces \u003d VALID_PASSPORT_NUMBER_BENSON + \"  \";","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        editedAlice \u003d new GuestBuilder(ALICE_GUEST).withPassportNumber(passportWithTrailingSpaces).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    public void equals() {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        Person aliceCopy \u003d new GuestBuilder(ALICE_GUEST).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(ALICE_GUEST.equals(aliceCopy));","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(ALICE_GUEST.equals(ALICE_GUEST));","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.equals(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.equals(5));","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.equals(BENSON_GUEST));","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        // different passport number -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        Person editedFiona \u003d new GuestBuilder(ALICE_GUEST).withPassportNumber(VALID_PASSPORT_NUMBER_BENSON).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.equals(editedFiona));","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"        // different room number -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        editedFiona \u003d new GuestBuilder(ALICE_GUEST).withRoomNumber(VALID_ROOM_NUMBER_BENSON).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.equals(editedFiona));","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"        editedFiona \u003d new GuestBuilder(ALICE_GUEST).withEmail(VALID_EMAIL_BENSON).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.equals(editedFiona));","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"        editedFiona \u003d new GuestBuilder(ALICE_GUEST).withTags(VALID_TAG_SENIOR_STAFF).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.equals(editedFiona));","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"calvintanwj":90}},{"path":"src/test/java/seedu/address/model/person/IdentifierContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_SECOND_PERSON;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_SECOND_PERSON;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.GuestBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.StaffBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"public class IdentifierContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    public void equals() {","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"NicolasCwy"},"content":"        IdentifierContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"NicolasCwy"},"content":"                new IdentifierContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"NicolasCwy"},"content":"        IdentifierContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"NicolasCwy"},"content":"                new IdentifierContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"NicolasCwy"},"content":"        IdentifierContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"NicolasCwy"},"content":"                new IdentifierContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    public void test_identifierContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        // Test for Guest","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"NicolasCwy"},"content":"        IdentifierContainsKeywordsPredicate predicate \u003d new IdentifierContainsKeywordsPredicate(","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"NicolasCwy"},"content":"                Collections.singletonList(PASSPORT_NUMBER_FIRST_PERSON.toString()));","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"NicolasCwy"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"NicolasCwy"},"content":"                new GuestBuilder().withPassportNumber(PASSPORT_NUMBER_FIRST_PERSON.toString()).build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"NicolasCwy"},"content":"        predicate \u003d new IdentifierContainsKeywordsPredicate(","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"NicolasCwy"},"content":"                Collections.singletonList(PASSPORT_NUMBER_SECOND_PERSON.toString()));","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"NicolasCwy"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"NicolasCwy"},"content":"                new GuestBuilder().withPassportNumber(PASSPORT_NUMBER_SECOND_PERSON.toString()).build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        // Test for Staff","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"NicolasCwy"},"content":"        predicate \u003d new IdentifierContainsKeywordsPredicate(","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"NicolasCwy"},"content":"                Collections.singletonList(STAFF_ID_FIRST_PERSON.toString()));","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"NicolasCwy"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"NicolasCwy"},"content":"                new StaffBuilder().withStaffId(STAFF_ID_FIRST_PERSON.toString()).build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"NicolasCwy"},"content":"        predicate \u003d new IdentifierContainsKeywordsPredicate(","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"NicolasCwy"},"content":"                Collections.singletonList(STAFF_ID_SECOND_PERSON.toString()));","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"NicolasCwy"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"NicolasCwy"},"content":"                new StaffBuilder().withStaffId(STAFF_ID_SECOND_PERSON.toString()).build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"NicolasCwy"},"content":"        IdentifierContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"NicolasCwy"},"content":"                new IdentifierContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"NicolasCwy"},"content":"        assertFalse(predicate.test(new StaffBuilder().withStaffId(STAFF_ID_FIRST_PERSON.toString()).build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new IdentifierContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"NicolasCwy"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"NicolasCwy"},"content":"                new GuestBuilder().withPassportNumber(PASSPORT_NUMBER_FIRST_PERSON.toString()).build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"NicolasCwy"},"content":"        predicate \u003d new IdentifierContainsKeywordsPredicate(Arrays.asList(STAFF_ID_FIRST_PERSON.toString()));","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"NicolasCwy"},"content":"        assertFalse(predicate.test(new StaffBuilder().withStaffId(STAFF_ID_SECOND_PERSON.toString()).build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"NicolasCwy"},"content":"        predicate \u003d new IdentifierContainsKeywordsPredicate(","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"NicolasCwy"},"content":"                Collections.singletonList(PASSPORT_NUMBER_FIRST_PERSON.toString()));","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"NicolasCwy"},"content":"        assertFalse(predicate.test(new GuestBuilder().withPassportNumber(","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"NicolasCwy"},"content":"                PASSPORT_NUMBER_SECOND_PERSON.toString()).build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"        // Keywords match name, email and other respective fields, but does not match identifier","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"NicolasCwy"},"content":"        predicate \u003d new IdentifierContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"12345\",","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"NicolasCwy"},"content":"                \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new StaffBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withStaffId(\"123\").build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new IdentifierContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"12345\", \"alice@email.com\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new GuestBuilder().withName(\"Alice\").withRoomNumber(\"12345\")","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(\"alice@email.com\").withPassportNumber(\"T12312123E\").build()));","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"calvintanwj":66,"NicolasCwy":39}},{"path":"src/test/java/seedu/address/model/person/PassportNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"public class PassportNumberTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PassportNumber(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_invalidPassportNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"        String invalidPassportNumber \u003d \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PassportNumber(invalidPassportNumber));","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    public void isValidPassportNumber() {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        // null passport number","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e PassportNumber.isValidPassportNumber(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        // invalid passport numbers","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(PassportNumber.isValidPassportNumber(\"\")); // empty string","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(PassportNumber.isValidPassportNumber(\" \")); // spaces only","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(PassportNumber.isValidPassportNumber(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(PassportNumber.isValidPassportNumber(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        // valid passport numbers","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(PassportNumber.isValidPassportNumber(\"fdsfsdafs\")); // alphabets only","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(PassportNumber.isValidPassportNumber(\"12345312312\")); // numbers only","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(PassportNumber.isValidPassportNumber(\"fsdaf2312\")); // alphanumeric characters","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(PassportNumber.isValidPassportNumber(\"AFSRESDFDS\")); // with capital letters","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(PassportNumber.isValidPassportNumber(\"32131211D\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"calvintanwj":41}},{"path":"src/test/java/seedu/address/model/person/RoomNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"public class RoomNumberTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new RoomNumber(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_invalidRoomNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"        String invalidRoomNumber \u003d \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new RoomNumber(invalidRoomNumber));","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    public void isValidRoomNumber() {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        // null room number","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e RoomNumber.isValidRoomNumber(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        // invalid room number","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(RoomNumber.isValidRoomNumber(\"\")); // empty string","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(RoomNumber.isValidRoomNumber(\" \")); // spaces only","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(RoomNumber.isValidRoomNumber(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(RoomNumber.isValidRoomNumber(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(RoomNumber.isValidRoomNumber(\"-32131\")); // negative numbers","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(RoomNumber.isValidRoomNumber(\"2312D\")); // contains letter","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(RoomNumber.isValidRoomNumber(\"000\")); // 0","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        // valid room number","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(RoomNumber.isValidRoomNumber(\"2312312312\")); // number greater than 0","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"calvintanwj":40}},{"path":"src/test/java/seedu/address/model/person/StaffIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"public class StaffIdTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StaffId(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_invalidStaffId_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"        String invalidStaffId \u003d \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new StaffId(invalidStaffId));","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    public void isValidStaffId() {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        // null staff id","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e StaffId.isValidStaffId(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        // invalid staff id","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(StaffId.isValidStaffId(\"\")); // empty string","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(StaffId.isValidStaffId(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(StaffId.isValidStaffId(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(StaffId.isValidStaffId(\"  \")); // spaces only","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        // valid staff id","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(StaffId.isValidStaffId(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(StaffId.isValidStaffId(\"12345\")); // numbers only","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(StaffId.isValidStaffId(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(StaffId.isValidStaffId(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(StaffId.isValidStaffId(\"David Roger Jackson Ray Jr 2nd\")); // long staff id","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"calvintanwj":43}},{"path":"src/test/java/seedu/address/model/person/StaffTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_DANIEL;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_DANIEL;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DANIEL;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_DANIEL;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAFF_ID_DANIEL;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SENIOR_STAFF;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL_STAFF;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA_STAFF;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.StaffBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"public class StaffTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"        Person person \u003d new StaffBuilder().build();","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(FIONA_STAFF.isSamePerson(FIONA_STAFF));","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_STAFF.isSamePerson(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        // same SID, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"NicolasCwy"},"content":"        Person editedFiona \u003d new StaffBuilder(FIONA_STAFF)","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"NicolasCwy"},"content":"                .withName(VALID_NAME_DANIEL)","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"NicolasCwy"},"content":"                .withPhone(VALID_PHONE_DANIEL)","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"NicolasCwy"},"content":"                .withEmail(VALID_EMAIL_DANIEL)","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"NicolasCwy"},"content":"                .withAddress(VALID_ADDRESS_DANIEL)","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"NicolasCwy"},"content":"                .withTags(VALID_TAG_SENIOR_STAFF)","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"NicolasCwy"},"content":"                .build();","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(FIONA_STAFF.isSamePerson(editedFiona));","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        // different SID, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"NicolasCwy"},"content":"        editedFiona \u003d new StaffBuilder(FIONA_STAFF).withStaffId(VALID_STAFF_ID_DANIEL).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_STAFF.isSamePerson(editedFiona));","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        // SID has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        String idWithTrailingSpaces \u003d VALID_STAFF_ID_DANIEL + \"  \";","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        Person editedDaniel \u003d new StaffBuilder(DANIEL_STAFF).withStaffId(idWithTrailingSpaces).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DANIEL_STAFF.isSamePerson(editedDaniel));","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        Person aliceCopy \u003d new StaffBuilder(FIONA_STAFF).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(FIONA_STAFF.equals(aliceCopy));","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(FIONA_STAFF.equals(FIONA_STAFF));","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_STAFF.equals(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_STAFF.equals(5));","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_STAFF.equals(DANIEL_STAFF));","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"NicolasCwy"},"content":"        Person editedFiona \u003d new StaffBuilder(FIONA_STAFF).withStaffId(VALID_STAFF_ID_DANIEL).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_STAFF.equals(editedFiona));","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"NicolasCwy"},"content":"        editedFiona \u003d new StaffBuilder(FIONA_STAFF).withPhone(VALID_PHONE_DANIEL).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_STAFF.equals(editedFiona));","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"NicolasCwy"},"content":"        editedFiona \u003d new StaffBuilder(FIONA_STAFF).withEmail(VALID_EMAIL_DANIEL).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_STAFF.equals(editedFiona));","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"NicolasCwy"},"content":"        editedFiona \u003d new StaffBuilder(FIONA_STAFF).withAddress(VALID_ADDRESS_DANIEL).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_STAFF.equals(editedFiona));","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"NicolasCwy"},"content":"        editedFiona \u003d new StaffBuilder(FIONA_STAFF).withTags(VALID_TAG_SENIOR_STAFF).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_STAFF.equals(editedFiona));","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"calvintanwj":26,"-":48,"NicolasCwy":20}},{"path":"src/test/java/seedu/address/model/person/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_ALICE;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BENSON;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DANIEL;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_ELLE;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.GuestBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.StaffBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        List\u003cTag\u003e firstPredicateKeywordList \u003d Collections.singletonList(new Tag(\"first\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        List\u003cTag\u003e secondPredicateKeywordList \u003d Arrays.asList(new Tag(\"first\"), new Tag(\"second\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"                new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"                new TagContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"                new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    public void test_tagsContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        // Test for Guest","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"                Collections.singletonList(new Tag(VALID_TAG_ALICE)));","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withTags(VALID_TAG_ALICE).build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"                Collections.singletonList(new Tag(VALID_TAG_BENSON)));","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withTags(VALID_TAG_BENSON).build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        // Test for Staff","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"                Collections.singletonList(new Tag(VALID_TAG_DANIEL)));","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"                new StaffBuilder().withTags(VALID_TAG_DANIEL).build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"                Collections.singletonList(new Tag(VALID_TAG_ELLE)));","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"                new StaffBuilder().withTags(VALID_TAG_ELLE).build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    public void test_tagsDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        // Zero keywords (Empty tag t/)","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        TagContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"                new TagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new StaffBuilder().withTags(VALID_TAG_DANIEL).build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withTags(VALID_TAG_ALICE).build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"                new TagContainsKeywordsPredicate(Arrays.asList(new Tag(VALID_TAG_DANIEL)));","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new StaffBuilder().withTags(VALID_TAG_ELLE).build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"                Collections.singletonList(new Tag(VALID_TAG_ALICE)));","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new GuestBuilder().withTags(","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"                VALID_TAG_BENSON).build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"calvintanwj":97}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_DANIEL;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_SENIOR_STAFF;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL_STAFF;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA_STAFF;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.StaffBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(uniquePersonList.contains(FIONA_STAFF));","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        uniquePersonList.add(FIONA_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(uniquePersonList.contains(FIONA_STAFF));","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        uniquePersonList.add(FIONA_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        Person editedFiona \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"                new StaffBuilder(FIONA_STAFF).withAddress(VALID_ADDRESS_DANIEL).withTags(VALID_TAG_SENIOR_STAFF)","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                        .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(uniquePersonList.contains(editedFiona));","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        uniquePersonList.add(FIONA_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(FIONA_STAFF));","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, FIONA_STAFF));","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(FIONA_STAFF, null));","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(FIONA_STAFF, FIONA_STAFF));","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"        uniquePersonList.add(FIONA_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        uniquePersonList.setPerson(FIONA_STAFF, FIONA_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        expectedUniquePersonList.add(FIONA_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        uniquePersonList.add(FIONA_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"        Person editedAlice \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"                new StaffBuilder(FIONA_STAFF).withAddress(VALID_ADDRESS_DANIEL).withTags(VALID_TAG_SENIOR_STAFF)","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                        .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        uniquePersonList.setPerson(FIONA_STAFF, editedAlice);","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"        uniquePersonList.add(FIONA_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"        uniquePersonList.setPerson(FIONA_STAFF, DANIEL_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"        expectedUniquePersonList.add(DANIEL_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"        uniquePersonList.add(FIONA_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        uniquePersonList.add(DANIEL_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(FIONA_STAFF, DANIEL_STAFF));","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(FIONA_STAFF));","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"        uniquePersonList.add(FIONA_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"        uniquePersonList.remove(FIONA_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"        uniquePersonList.add(FIONA_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"        expectedUniquePersonList.add(DANIEL_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"        uniquePersonList.add(FIONA_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(DANIEL_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"        expectedUniquePersonList.add(DANIEL_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(FIONA_STAFF, FIONA_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"calvintanwj":36,"-":133,"NicolasCwy":3}},{"path":"src/test/java/seedu/address/model/tag/UniqueTagListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"public class UniqueTagListTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    public void add_duplicateTag_throwsDuplicateTagException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"        UniqueTagList tagList \u003d new UniqueTagList();","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"        tagList.add(new Tag(\"Tag\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DuplicateTagException.class, () -\u003e tagList.add(new Tag(\"Tag\")));","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    public void setTags_duplicateTags_throwsDuplicateTagException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"        UniqueTagList tagList \u003d new UniqueTagList();","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DuplicateTagException.class, () -\u003e tagList.setTags(List.of(new Tag(\"Tag\"), new Tag(\"Tag\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    public void remove_nonExistingTag_throwsTagNotFoundException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        UniqueTagList tagList \u003d new UniqueTagList();","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(TagNotFoundException.class, () -\u003e tagList.remove(new Tag(\"Tag\")));","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    public void setTag() {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        UniqueTagList tagList \u003d new UniqueTagList();","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        Tag tag \u003d new Tag(\"Tag\");","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        Tag secondTag \u003d new Tag(\"Tag2\");","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        tagList.add(tag);","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        tagList.add(secondTag);","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(TagNotFoundException.class, () -\u003e tagList.setTag(new Tag(\"newTag\"), tag));","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DuplicateTagException.class, () -\u003e tagList.setTag(tag, secondTag));","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"calvintanwj":46}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedGuestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import static seedu.address.storage.JsonAdaptedGuest.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON_GUEST;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"import java.util.List;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.person.PassportNumber;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"class JsonAdaptedGuestTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"    private static final String INVALID_PASSPORTNUMBER \u003d \"@@@@@\";","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"    private static final String INVALID_ROOMNUMBER \u003d \"@@@@@@\";","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"    private static final String VALID_PASSPORTNUMBER \u003d BENSON_GUEST.getPassportNumber().toString();","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"    private static final String VALID_NAME \u003d BENSON_GUEST.getName().toString();","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"    private static final String VALID_ROOMNUMBER \u003d BENSON_GUEST.getRoomNumber().toString();","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"    private static final String VALID_EMAIL \u003d BENSON_GUEST.getEmail().toString();","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON_GUEST.getTags().stream()","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"bingcheng45"},"content":"        assert(BENSON_GUEST !\u003d null);","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"        JsonAdaptedGuest person \u003d new JsonAdaptedGuest(BENSON_GUEST);","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"        assertEquals(BENSON_GUEST, person.toModelType());","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidPassportNumber_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"        JsonAdaptedGuest person \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ROOMNUMBER, INVALID_PASSPORTNUMBER);","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d PassportNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_nullPassportNumber_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"        JsonAdaptedGuest person \u003d new JsonAdaptedGuest(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ROOMNUMBER, null);","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, PassportNumber.class.getSimpleName());","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"bingcheng45"},"content":"        JsonAdaptedGuest person \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"bingcheng45"},"content":"                new JsonAdaptedGuest(INVALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ROOMNUMBER, VALID_PASSPORTNUMBER);","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"        JsonAdaptedGuest person \u003d new JsonAdaptedGuest(null, VALID_EMAIL, VALID_TAGS,","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"bingcheng45"},"content":"                VALID_ROOMNUMBER, VALID_PASSPORTNUMBER);","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"bingcheng45"},"content":"        assert(person !\u003d null);","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidRoomNumber_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"bingcheng45"},"content":"        JsonAdaptedGuest person \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"bingcheng45"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_EMAIL, VALID_TAGS, INVALID_ROOMNUMBER, VALID_PASSPORTNUMBER);","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d RoomNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_nullRoomNumber_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"bingcheng45"},"content":"        JsonAdaptedGuest person \u003d new JsonAdaptedGuest(VALID_NAME, VALID_EMAIL, VALID_TAGS, null, VALID_PASSPORTNUMBER);","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, RoomNumber.class.getSimpleName());","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"bingcheng45"},"content":"        JsonAdaptedGuest person \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"bingcheng45"},"content":"                new JsonAdaptedGuest(VALID_NAME, INVALID_EMAIL, VALID_TAGS, VALID_ROOMNUMBER, VALID_PASSPORTNUMBER);","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"bingcheng45"},"content":"        JsonAdaptedGuest person \u003d new JsonAdaptedGuest(VALID_NAME, null, VALID_TAGS,","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"bingcheng45"},"content":"                VALID_ROOMNUMBER, VALID_PASSPORTNUMBER);","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"bingcheng45"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"bingcheng45"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-10-15"},{"lineNumber":113,"author":{"gitId":"bingcheng45"},"content":"        JsonAdaptedGuest person \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"bingcheng45"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_EMAIL, invalidTags, VALID_ROOMNUMBER, VALID_PASSPORTNUMBER);","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":117,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"bingcheng45":117}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"//package seedu.address.storage;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"//","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"//import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"//import static seedu.address.testutil.TypicalPersons.ELLE_STAFF;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"//","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"//import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"//","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"//","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"//","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"//public class JsonAdaptedPersonTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"//    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"//    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"//    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"//    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"//    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"//","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"//    private static final String VALID_NAME \u003d ELLE_STAFF.getName().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"//    private static final String VALID_PHONE \u003d ELLE_STAFF.getPhone().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"//    private static final String VALID_EMAIL \u003d ELLE_STAFF.getEmail().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"//    private static final String VALID_ADDRESS \u003d ELLE_STAFF.getAddress().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"//    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d ELLE_STAFF.getTags().stream()","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"//            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"//            .collect(Collectors.toList());","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"//","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"//    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"//    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"bingcheng45"},"content":"//        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"//    }","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"//","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"bingcheng45"},"content":"//    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"//    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"//                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"//        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"//    }","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"//","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"//    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"//    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"//    }","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"//","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"//    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"//    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"bingcheng45"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"//                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"//        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"bingcheng45"},"content":"//    }","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"bingcheng45"},"content":"//","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"bingcheng45"},"content":"//    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"bingcheng45"},"content":"//    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"bingcheng45"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"bingcheng45"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"bingcheng45"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"bingcheng45"},"content":"//    }","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"bingcheng45"},"content":"//","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"//    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"bingcheng45"},"content":"//    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"bingcheng45"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"bingcheng45"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"bingcheng45"},"content":"//        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"bingcheng45"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"//    }","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"bingcheng45"},"content":"//","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"bingcheng45"},"content":"//    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"bingcheng45"},"content":"//    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"bingcheng45"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"bingcheng45"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"bingcheng45"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"bingcheng45"},"content":"//    }","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"bingcheng45"},"content":"//","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"bingcheng45"},"content":"//    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"bingcheng45"},"content":"//    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"bingcheng45"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"bingcheng45"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"bingcheng45"},"content":"//        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"bingcheng45"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"bingcheng45"},"content":"//    }","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"bingcheng45"},"content":"//","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"bingcheng45"},"content":"//    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"bingcheng45"},"content":"//    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"bingcheng45"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"bingcheng45"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"bingcheng45"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"bingcheng45"},"content":"//    }","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"bingcheng45"},"content":"//","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"bingcheng45"},"content":"//    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"bingcheng45"},"content":"//    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"bingcheng45"},"content":"//        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"bingcheng45"},"content":"//        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"bingcheng45"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"bingcheng45"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"bingcheng45"},"content":"//        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"bingcheng45"},"content":"//    }","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"bingcheng45"},"content":"//","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"bingcheng45"},"content":"//}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"bingcheng45":110}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedStaffTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import static seedu.address.storage.JsonAdaptedStaff.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE_STAFF;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"import java.util.List;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.person.StaffId;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"class JsonAdaptedStaffTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"    private static final String INVALID_SID \u003d \"asdas @\";","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"    private static final String VALID_SID \u003d ELLE_STAFF.getStaffId().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"    private static final String VALID_NAME \u003d ELLE_STAFF.getName().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"    private static final String VALID_PHONE \u003d ELLE_STAFF.getPhone().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"    private static final String VALID_EMAIL \u003d ELLE_STAFF.getEmail().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"    private static final String VALID_ADDRESS \u003d ELLE_STAFF.getAddress().toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d ELLE_STAFF.getTags().stream()","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"        JsonAdaptedStaff person \u003d new JsonAdaptedStaff(ELLE_STAFF);","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"        assertEquals(ELLE_STAFF, person.toModelType());","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidSId_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"        JsonAdaptedStaff person \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"                new JsonAdaptedStaff(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, INVALID_SID, VALID_PHONE);","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d StaffId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_nullSId_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedStaff person \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedStaff(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, null, VALID_PHONE);","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StaffId.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"bingcheng45"},"content":"        JsonAdaptedStaff person \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"bingcheng45"},"content":"                new JsonAdaptedStaff(INVALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, VALID_SID, VALID_PHONE);","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedStaff person \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedStaff(null, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, VALID_SID, VALID_PHONE);","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"bingcheng45"},"content":"        JsonAdaptedStaff person \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"bingcheng45"},"content":"                new JsonAdaptedStaff(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, VALID_SID, INVALID_PHONE);","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedStaff person \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedStaff(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, VALID_SID, null);","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"bingcheng45"},"content":"        JsonAdaptedStaff person \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"bingcheng45"},"content":"                new JsonAdaptedStaff(VALID_NAME, INVALID_EMAIL, VALID_TAGS, VALID_ADDRESS, VALID_SID, VALID_PHONE);","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedStaff person \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedStaff(VALID_NAME, null, VALID_TAGS, VALID_ADDRESS, VALID_SID, VALID_PHONE);","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"bingcheng45"},"content":"        JsonAdaptedStaff person \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"bingcheng45"},"content":"                new JsonAdaptedStaff(VALID_NAME, VALID_EMAIL, VALID_TAGS, INVALID_ADDRESS, VALID_SID, VALID_PHONE);","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedStaff person \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedStaff(VALID_NAME, VALID_EMAIL, VALID_TAGS, null, VALID_SID, VALID_PHONE);","lastModifiedDate":"2021-10-15"},{"lineNumber":122,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"bingcheng45"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"bingcheng45"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"bingcheng45"},"content":"        JsonAdaptedStaff person \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"bingcheng45"},"content":"                new JsonAdaptedStaff(VALID_NAME, VALID_EMAIL, invalidTags, VALID_ADDRESS, VALID_SID, VALID_PHONE);","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"bingcheng45"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"calvintanwj":15,"bingcheng45":119}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"    //    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    //    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    //        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"    //        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    //        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"    //","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    //        // Save in new file and read back","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"    //        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"    //        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    //        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    //","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    //        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"    //        original.addPerson(JEONGYEON_GUEST);","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"    //        original.removePerson(JEONGYEON_GUEST);","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    //        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"    //        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"    //        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"    //","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    //        // Save and read without specifying file path","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"    //        original.addPerson(JEONGYEON_GUEST);","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"    //        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"    //        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"    //        System.out.println(\"Original hash\" + original.hashCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"    //        System.out.println(\"new hash\" + readBack.hashCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"    //        System.out.println(original.equals(readBack));","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"    //        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"    //    }","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"calvintanwj":27,"-":80}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"//package seedu.address.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"//import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"//import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"//public class JsonSerializableAddressBookTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"//    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"//    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"//    private static final Path DUPLICATE_GUEST_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateGuestAddressBook.json\");","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"//    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"//    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"//        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"//        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"//        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"//    }","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"//    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"//    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"//        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"//    }","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"//    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"//    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_GUEST_FILE,","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"//        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"//                dataFromFile::toModelType);","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"//    }","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"//}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"calvintanwj":47}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"//package seedu.address.storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"//public class StorageManagerTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"//    @TempDir","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"//    public Path testFolder;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"//    private StorageManager storageManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"//    @BeforeEach","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"//    public void setUp() {","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"//        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"//        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"//        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"//    }","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"//    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"//        return testFolder.resolve(fileName);","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"//    }","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"//    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"//    public void prefsReadSave() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"//        /*","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"//         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"//         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"//         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"//         */","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"//        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"//        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"//        storageManager.saveUserPrefs(original);","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"//        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"//        assertEquals(original, retrieved);","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"//    }","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"//    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"//    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"//        /*","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"//         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"//         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"//         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"//         */","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"//        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"//        storageManager.saveAddressBook(original);","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"//        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"//        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"//    }","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"//    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"//    public void getAddressBookFilePath() {","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"//        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"//    }","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"//}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"calvintanwj":68}},{"path":"src/test/java/seedu/address/testutil/EditGuestDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rgbpokka"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"rgbpokka"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"rgbpokka"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"rgbpokka"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.logic.commands.EditCommand.EditGuestDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Guest;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.PassportNumber;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"rgbpokka"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"public class EditGuestDescriptorBuilder {","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"    private final EditGuestDescriptor descriptor;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptorBuilder() {","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"        descriptor \u003d new EditGuestDescriptor();","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptorBuilder(EditGuestDescriptor descriptor) {","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"        this.descriptor \u003d new EditGuestDescriptor(descriptor);","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"rgbpokka"},"content":"     * Returns an {@code EditGuestDescriptor} with fields containing {@code guest}\u0027s details","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptorBuilder(Guest guest) {","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"        descriptor \u003d new EditGuestDescriptor();","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setName(guest.getName());","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setEmail(guest.getEmail());","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setTags(guest.getTags());","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setPassportNumber(guest.getPassportNumber());","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setRoomNumber(guest.getRoomNumber());","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code Name} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code Email} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code RoomNumber} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptorBuilder withRoomNumber(String roomNumber) {","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setRoomNumber(new RoomNumber(roomNumber));","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code PassportNumber} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptorBuilder withPassportNumber(String passportNumber) {","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setPassportNumber(new PassportNumber(passportNumber));","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"rgbpokka"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditGuestDescriptor}","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"rgbpokka"},"content":"     * that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"rgbpokka"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptor build() {","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"rgbpokka"},"content":"        return descriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"rgbpokka"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"rgbpokka":86,"bingcheng45":1}},{"path":"src/test/java/seedu/address/testutil/EditStaffDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rgbpokka"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"rgbpokka"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"rgbpokka"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"rgbpokka"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.logic.commands.EditCommand.EditStaffDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.StaffId;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"rgbpokka"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":" * A utility class to help with building EditStaffDescriptor objects.","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"public class EditStaffDescriptorBuilder {","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"    private final EditStaffDescriptor descriptor;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"    public EditStaffDescriptorBuilder() {","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"        descriptor \u003d new EditStaffDescriptor();","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"    public EditStaffDescriptorBuilder(EditStaffDescriptor descriptor) {","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"        this.descriptor \u003d new EditStaffDescriptor(descriptor);","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"     * Returns an {@code EditStaffDescriptor} with fields containing {@code staff}\u0027s details","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"    public EditStaffDescriptorBuilder(Staff staff) {","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"rgbpokka"},"content":"        descriptor \u003d new EditStaffDescriptor();","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setName(staff.getName());","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setEmail(staff.getEmail());","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setTags(staff.getTags());","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setPhone(staff.getPhone());","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setAddress(staff.getAddress());","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setStaffId(staff.getStaffId());","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code Name} of the {@code EditStaffDescriptor} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"    public EditStaffDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code Phone} of the {@code EditStaffDescriptor} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"    public EditStaffDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code Email} of the {@code EditStaffDescriptor} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"    public EditStaffDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code Address} of the {@code EditStaffDescriptor} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"rgbpokka"},"content":"    public EditStaffDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code StaffId} of the {@code EditStaffDescriptor} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"rgbpokka"},"content":"    public EditStaffDescriptorBuilder withStaffId(String staffId) {","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setStaffId(new StaffId(staffId));","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"rgbpokka"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditStaffDescriptor}","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"rgbpokka"},"content":"     * that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"rgbpokka"},"content":"    public EditStaffDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"rgbpokka"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"rgbpokka"},"content":"    public EditStaffDescriptor build() {","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"rgbpokka"},"content":"        return descriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"rgbpokka"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"rgbpokka":96,"bingcheng45":1}},{"path":"src/test/java/seedu/address/testutil/GuestBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rgbpokka"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_DEFAULT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Guest;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.PassportNumber;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.RoomNumber;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"public class GuestBuilder extends PersonBuilder {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"rgbpokka"},"content":"    public static final RoomNumber DEFAULT_ROOM_NUMBER \u003d new RoomNumber(\"10101\");","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"NicolasCwy"},"content":"    public static final PassportNumber DEFAULT_PASSPORT_NUMBER \u003d new PassportNumber(PASSPORT_NUMBER_DEFAULT.toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    private static final Tag DEFAULT_TAG \u003d new Tag(\"Guest\");","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    private RoomNumber roomNumber;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    private PassportNumber passportNumber;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"     * Creates a {@code GuestBuilder} with the default details.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"    public GuestBuilder() {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"        super();","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"        roomNumber \u003d DEFAULT_ROOM_NUMBER;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"        passportNumber \u003d DEFAULT_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"        getTags().add(DEFAULT_TAG);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"     * Initializes the GuestBuilder with the data of {@code guestToCopy}.","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"rgbpokka"},"content":"    public GuestBuilder(Guest guestToCopy) {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"rgbpokka"},"content":"        super(guestToCopy);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"        roomNumber \u003d guestToCopy.getRoomNumber();","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"rgbpokka"},"content":"        passportNumber \u003d guestToCopy.getPassportNumber();","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code Name} of the {@code Guest} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"rgbpokka"},"content":"    public GuestBuilder withName(String name) {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"rgbpokka"},"content":"        setName(new Name(name));","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"rgbpokka"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Guest} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"rgbpokka"},"content":"    public GuestBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"        Set\u003cTag\u003e guestTag \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"        guestTag.add(new Tag(\"Guest\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"        setTags(guestTag);","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code Email} of the {@code Guest} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"    public GuestBuilder withEmail(String email) {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"rgbpokka"},"content":"        setEmail(new Email(email));","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code RoomNumber} of the {@code Guest} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"rgbpokka"},"content":"    public GuestBuilder withRoomNumber(String roomNumber) {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"rgbpokka"},"content":"        this.roomNumber \u003d new RoomNumber(roomNumber);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code PassportNumber} of the {@code Guest} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"rgbpokka"},"content":"    public GuestBuilder withPassportNumber(String passportNumber) {","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"rgbpokka"},"content":"        this.passportNumber \u003d new PassportNumber(passportNumber);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"rgbpokka"},"content":"    public Guest build() {","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"rgbpokka"},"content":"        return new Guest(getName(), getEmail(), getTags(), roomNumber, passportNumber);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"rgbpokka"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"rgbpokka":77,"calvintanwj":5,"bingcheng45":3,"NicolasCwy":3}},{"path":"src/test/java/seedu/address/testutil/GuestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOM_NUMBER;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.logic.commands.EditCommand.EditGuestDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Guest;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":" * A utility class for Guest.","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"public class GuestUtil {","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"     * Returns an add command string for adding the {@code guest}.","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"    public static String getAddCommand(Guest guest) {","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getGuestDetails(guest);","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"     * Returns the part of command string for the given {@code guest}\u0027s details.","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"rgbpokka"},"content":"    public static String getGuestDetails(Guest guest) {","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"        sb.append(PREFIX_NAME + guest.getName().fullName + \" \");","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"        sb.append(PREFIX_EMAIL + guest.getEmail().value + \" \");","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"NicolasCwy"},"content":"        sb.append(PREFIX_ROOM_NUMBER + guest.getRoomNumber().value + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"NicolasCwy"},"content":"        sb.append(PREFIX_PASSPORT_NUMBER + guest.getPassportNumber().value + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"        guest.getTags().stream().forEach(","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"rgbpokka"},"content":"     * Returns the part of command string for the given {@code EditGuestDescriptor}\u0027s details.","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"    public static String getEditGuestDescriptorDetails(EditGuestDescriptor descriptor) {","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        descriptor.getPassportNumber().ifPresent(","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"            passportNumber -\u003e sb.append(PREFIX_PASSPORT_NUMBER).append(passportNumber.value).append(\" \"));","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        descriptor.getRoomNumber().ifPresent(","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"            roomNumber -\u003e sb.append(PREFIX_ROOM_NUMBER).append(roomNumber.value).append(\" \"));","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"rgbpokka":16,"calvintanwj":4,"-":42,"NicolasCwy":4}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"public abstract class PersonBuilder {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"rgbpokka"},"content":"    public abstract PersonBuilder withName(String name);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"rgbpokka"},"content":"    public abstract PersonBuilder withTags(String ... tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"    public abstract PersonBuilder withEmail(String email);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"rgbpokka"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"rgbpokka"},"content":"        return name;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"    public Email getEmail() {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"        return email;","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"rgbpokka"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"rgbpokka"},"content":"        return tags;","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"rgbpokka"},"content":"    public void setName(Name name) {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"rgbpokka"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"rgbpokka"},"content":"    public void setEmail(Email email) {","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"rgbpokka"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"rgbpokka"},"content":"    public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"rgbpokka"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"rgbpokka"},"content":"    public abstract Person build();","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"rgbpokka":23,"-":58}},{"path":"src/test/java/seedu/address/testutil/StaffBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rgbpokka"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.TypicalStaffIds.STAFF_ID_DEFAULT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.StaffId;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"rgbpokka"},"content":"public class StaffBuilder extends PersonBuilder {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"    public static final Address DEFAULT_ADDRESS \u003d new Address(\"123, Jurong West Ave 6, #08-111\");","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"NicolasCwy"},"content":"    public static final StaffId DEFAULT_STAFF_ID \u003d new StaffId(STAFF_ID_DEFAULT.toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"    public static final Tag DEFAULT_TAG \u003d new Tag(\"Staff\");","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"NicolasCwy"},"content":"    public static final Phone DEFAULT_PHONE \u003d new Phone(\"85355255\");","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    private Address address;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    private StaffId staffId;","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    private Phone phone;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"     * Creates a {@code StaffBuilder} with the default details.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"    public StaffBuilder() {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"        super();","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"rgbpokka"},"content":"        address \u003d DEFAULT_ADDRESS;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"        staffId \u003d DEFAULT_STAFF_ID;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"        phone \u003d DEFAULT_PHONE;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"        getTags().add(DEFAULT_TAG);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"     * Initializes the StaffBuilder with the data of {@code staffToCopy}.","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"rgbpokka"},"content":"    public StaffBuilder(Staff staffToCopy) {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"rgbpokka"},"content":"        super(staffToCopy);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"        address \u003d staffToCopy.getAddress();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"        staffId \u003d staffToCopy.getStaffId();","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"rgbpokka"},"content":"        phone \u003d staffToCopy.getPhone();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code Name} of the {@code Staff} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"rgbpokka"},"content":"    public StaffBuilder withName(String name) {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"rgbpokka"},"content":"        setName(new Name(name));","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"rgbpokka"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Staff} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"rgbpokka"},"content":"    public StaffBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"        Set\u003cTag\u003e staffTag \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"        staffTag.add(new Tag(\"Staff\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"        setTags(staffTag);","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code Email} of the {@code Staff} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"rgbpokka"},"content":"    public StaffBuilder withEmail(String email) {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"rgbpokka"},"content":"        setEmail(new Email(email));","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code Address} of the {@code Staff} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"rgbpokka"},"content":"    public StaffBuilder withAddress(String address) {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"rgbpokka"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code StaffId} of the {@code Staff} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"rgbpokka"},"content":"    public StaffBuilder withStaffId(String staffId) {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"rgbpokka"},"content":"        this.staffId \u003d new StaffId(staffId);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code Phone} of the {@code Staff} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"rgbpokka"},"content":"    public StaffBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"rgbpokka"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"rgbpokka"},"content":"    public Staff build() {","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"rgbpokka"},"content":"        return new Staff(getName(), getEmail(), getTags(), address, staffId, phone);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"rgbpokka"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"rgbpokka":87,"calvintanwj":7,"bingcheng45":4,"NicolasCwy":2}},{"path":"src/test/java/seedu/address/testutil/StaffUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAFF_ID;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.logic.commands.EditCommand.EditStaffDescriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":" * A utility class for Staff.","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"rgbpokka"},"content":"public class StaffUtil {","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"     * Returns an add command string for adding the {@code staff}.","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"    public static String getAddCommand(Staff staff) {","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getStaffDetails(staff);","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"     * Returns the part of command string for the given {@code staff}\u0027s details.","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"    public static String getStaffDetails(Staff staff) {","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"        sb.append(PREFIX_NAME + staff.getName().fullName + \" \");","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"rgbpokka"},"content":"        sb.append(PREFIX_EMAIL + staff.getEmail().value + \" \");","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"rgbpokka"},"content":"        sb.append(PREFIX_STAFF_ID + staff.getStaffId().value + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"rgbpokka"},"content":"        sb.append(PREFIX_PHONE + staff.getPhone().value + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"        sb.append(PREFIX_ADDRESS + staff.getAddress().value + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"rgbpokka"},"content":"        staff.getTags().stream().forEach(","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"     * Returns the part of command string for the given {@code EditStaffDescriptor}\u0027s details.","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"rgbpokka"},"content":"    public static String getEditStaffDescriptorDetails(EditStaffDescriptor descriptor) {","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"        descriptor.getStaffId().ifPresent(staffId -\u003e sb.append(PREFIX_STAFF_ID).append(staffId.value).append(\" \"));","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"rgbpokka":21,"-":46}},{"path":"src/test/java/seedu/address/testutil/TypicalPassportNumbers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NicolasCwy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.model.person.PassportNumber;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"public class TypicalPassportNumbers {","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"    public static final PassportNumber PASSPORT_NUMBER_FIRST_PERSON \u003d new PassportNumber(\"E0123122G\");","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"    public static final PassportNumber PASSPORT_NUMBER_SECOND_PERSON \u003d new PassportNumber(\"T12312311A\");","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"    public static final PassportNumber PASSPORT_NUMBER_THIRD_PERSON \u003d new PassportNumber(\"M123123124D\");","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"    public static final PassportNumber PASSPORT_NUMBER_FOURTH_PERSON_NOT_ADDED \u003d new PassportNumber(\"M999123124D\");","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"    public static final PassportNumber PASSPORT_NUMBER_UNUSED \u003d new PassportNumber(\"L21312314H\");","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"    // Default passport number used in builders","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"NicolasCwy"},"content":"    public static final PassportNumber PASSPORT_NUMBER_DEFAULT \u003d new PassportNumber(\"A163812686D\");","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"bingcheng45":1,"NicolasCwy":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_DANIEL;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_ELLE;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_FIONA;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_GEORGE;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_ALICE;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BENSON;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_CARL;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_DANIEL;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_ELLE;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_FIONA;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_GEORGE;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ALICE;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BENSON;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_CARL;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DANIEL;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ELLE;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_FIONA;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_GEORGE;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PASSPORT_NUMBER_ALICE;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PASSPORT_NUMBER_BENSON;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PASSPORT_NUMBER_CARL;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_DANIEL;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_ELLE;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_FIONA;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_GEORGE;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOM_NUMBER_ALICE;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOM_NUMBER_BENSON;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOM_NUMBER_CARL;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAFF_ID_DANIEL;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAFF_ID_ELLE;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAFF_ID_FIONA;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAFF_ID_GEORGE;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_ALICE;","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BENSON;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CARL;","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DANIEL;","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_ELLE;","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FIONA;","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_GEORGE;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.TypicalPassportNumbers.PASSPORT_NUMBER_FOURTH_PERSON_NOT_ADDED;","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Guest;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"    public static final Guest ALICE_GUEST \u003d new GuestBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"            .withName(VALID_NAME_ALICE)","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"            .withEmail(VALID_EMAIL_ALICE)","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"            .withTags(VALID_TAG_ALICE)","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"            .withRoomNumber(VALID_ROOM_NUMBER_ALICE)","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"            .withPassportNumber(VALID_PASSPORT_NUMBER_ALICE)","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"rgbpokka"},"content":"            .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"    public static final Guest BENSON_GUEST \u003d new GuestBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"NicolasCwy"},"content":"            .withName(VALID_NAME_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"NicolasCwy"},"content":"            .withEmail(VALID_EMAIL_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"NicolasCwy"},"content":"            .withTags(VALID_TAG_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"NicolasCwy"},"content":"            .withRoomNumber(VALID_ROOM_NUMBER_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"NicolasCwy"},"content":"            .withPassportNumber(VALID_PASSPORT_NUMBER_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"rgbpokka"},"content":"            .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"rgbpokka"},"content":"    public static final Guest CARL_GUEST \u003d new GuestBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"NicolasCwy"},"content":"            .withName(VALID_NAME_CARL)","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"NicolasCwy"},"content":"            .withEmail(VALID_EMAIL_CARL)","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"NicolasCwy"},"content":"            .withTags(VALID_TAG_CARL)","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"NicolasCwy"},"content":"            .withRoomNumber(VALID_ROOM_NUMBER_CARL)","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"NicolasCwy"},"content":"            .withPassportNumber(VALID_PASSPORT_NUMBER_CARL)","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"rgbpokka"},"content":"            .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"bingcheng45"},"content":"    public static final Guest JEONGYEON_GUEST \u003d new GuestBuilder()","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"bingcheng45"},"content":"            .withName(\"Jeong Yeon\")","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"bingcheng45"},"content":"            .withEmail(\"jy@example.com\")","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"bingcheng45"},"content":"            .withRoomNumber(\"22233\")","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"bingcheng45"},"content":"            .withPassportNumber(PASSPORT_NUMBER_FOURTH_PERSON_NOT_ADDED.toString())","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"bingcheng45"},"content":"            .build();","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"rgbpokka"},"content":"    public static final Staff DANIEL_STAFF \u003d new StaffBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"            .withName(VALID_NAME_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"            .withEmail(VALID_EMAIL_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"            .withTags(VALID_TAG_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"            .withAddress(VALID_ADDRESS_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"            .withPhone(VALID_PHONE_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"            .withStaffId(VALID_STAFF_ID_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"rgbpokka"},"content":"            .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"rgbpokka"},"content":"    public static final Staff ELLE_STAFF \u003d new StaffBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"NicolasCwy"},"content":"            .withName(VALID_NAME_ELLE)","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"NicolasCwy"},"content":"            .withEmail(VALID_EMAIL_ELLE)","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"NicolasCwy"},"content":"            .withTags(VALID_TAG_ELLE)","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"NicolasCwy"},"content":"            .withAddress(VALID_ADDRESS_ELLE)","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"NicolasCwy"},"content":"            .withPhone(VALID_PHONE_ELLE)","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"NicolasCwy"},"content":"            .withStaffId(VALID_STAFF_ID_ELLE)","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"rgbpokka"},"content":"            .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"rgbpokka"},"content":"    public static final Staff FIONA_STAFF \u003d new StaffBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"NicolasCwy"},"content":"            .withName(VALID_NAME_FIONA)","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"NicolasCwy"},"content":"            .withEmail(VALID_EMAIL_FIONA)","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"NicolasCwy"},"content":"            .withTags(VALID_TAG_FIONA)","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"NicolasCwy"},"content":"            .withAddress(VALID_ADDRESS_FIONA)","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"NicolasCwy"},"content":"            .withPhone(VALID_PHONE_FIONA)","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"NicolasCwy"},"content":"            .withStaffId(VALID_STAFF_ID_FIONA)","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"rgbpokka"},"content":"            .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"rgbpokka"},"content":"    public static final Staff GEORGE_STAFF \u003d new StaffBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"NicolasCwy"},"content":"            .withName(VALID_NAME_GEORGE)","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"NicolasCwy"},"content":"            .withEmail(VALID_EMAIL_GEORGE)","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"NicolasCwy"},"content":"            .withTags(VALID_TAG_GEORGE)","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"NicolasCwy"},"content":"            .withAddress(VALID_ADDRESS_GEORGE)","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"NicolasCwy"},"content":"            .withPhone(VALID_PHONE_GEORGE)","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"NicolasCwy"},"content":"            .withStaffId(VALID_STAFF_ID_GEORGE)","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"    private TypicalPersons() {","lastModifiedDate":"2021-10-15"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-10-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"        ModelManager modelManager \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"            modelManager.addPerson(person);","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"        return (AddressBook) modelManager.getAddressBook();","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"rgbpokka"},"content":"        return new ArrayList\u003c\u003e(","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"rgbpokka"},"content":"                Arrays.asList(","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"rgbpokka"},"content":"                        ALICE_GUEST,","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"rgbpokka"},"content":"                        BENSON_GUEST,","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"rgbpokka"},"content":"                        CARL_GUEST,","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"rgbpokka"},"content":"                        DANIEL_STAFF,","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"rgbpokka"},"content":"                        ELLE_STAFF,","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"rgbpokka"},"content":"                        FIONA_STAFF,","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"rgbpokka"},"content":"                        GEORGE_STAFF)","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"rgbpokka"},"content":"        );","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"rgbpokka":29,"calvintanwj":19,"alyssa-savier":39,"bingcheng45":6,"-":33,"NicolasCwy":28}},{"path":"src/test/java/seedu/address/testutil/TypicalStaffIds.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NicolasCwy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.model.person.StaffId;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"public class TypicalStaffIds {","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"    public static final StaffId STAFF_ID_FIRST_PERSON \u003d new StaffId(\"123\");","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"    public static final StaffId STAFF_ID_SECOND_PERSON \u003d new StaffId(\"456\");","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"    public static final StaffId STAFF_ID_THIRD_PERSON \u003d new StaffId(\"777\");","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"    public static final StaffId STAFF_ID_FOURTH_PERSON \u003d new StaffId(\"888\");","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"    public static final StaffId STAFF_ID_UNUSED \u003d new StaffId(\"999\");","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"    // Default passport number used in builders","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"NicolasCwy"},"content":"    public static final StaffId STAFF_ID_DEFAULT \u003d new StaffId(\"98765\");","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"NicolasCwy":13}}]
