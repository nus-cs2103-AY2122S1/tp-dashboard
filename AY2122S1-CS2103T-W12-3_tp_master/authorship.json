[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NicolasCwy"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W12-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W12-3/tp/actions)","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W12-3/tp/branch/master/graph/badge.svg?token\u003d0389OOQRT8)](https://codecov.io/gh/AY2122S1-CS2103T-W12-3/tp)","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"Pocket Hotel (PH) is a **desktop app for hotel front-desk receptionists that provides a centralized location to manage their guests and vendors, and helps to automate front-desk operations.**  It is optimized for use via a Command Line Interface (CLI) whilst still witholding some of the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"For detailed **documentation**, please refer to the [PH Website](https://ay2122s1-cs2103t-w12-3.github.io/tp/)","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"_This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)._","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"calvintanwj":5,"-":4,"NicolasCwy":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"run {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"NicolasCwy"},"content":"    implementation \u0027com.itextpdf:itext7-core:7.1.16\u0027","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"alyssa-savier"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"alyssa-savier"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.7.0\u0027","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    archiveName \u003d \u0027PH.jar\u0027","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"calvintanwj":5,"alyssa-savier":2,"-":71,"NicolasCwy":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"alyssa-savier"},"content":"### Alyssa Savier","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"\u003cimg src\u003d\"images/alyssa-savier.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"alyssa-savier"},"content":"[[github](https://github.com/alyssa-savier)]","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"[[portfolio](team/alyssa-savier.md)]","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"* Role:","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"### Jeremy Yeo Zhi Chen","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"\u003cimg src\u003d\"images/rgbpokka.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"[[github](https://github.com/rgbpokka)]","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"[[portfolio](team/rgbpokka.md)]","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"* Role:","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"### Calvin Tan","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"\u003cimg src\u003d\"images/calvintanwj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"[[github](https://github.com/calvintanwj)]","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"[[portfolio](team/calvintanwj.md)]","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"* Role:","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"NicolasCwy"},"content":"### Nicolas Chang","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"\u003cimg src\u003d\"images/nicolascwy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"NicolasCwy"},"content":"[[github](https://github.com/NicolasCwy)]","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"[[portfolio](team/nicolascwy.md)]","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"NicolasCwy"},"content":"* Role:","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"NicolasCwy"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"### Toh Bing Cheng","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"\u003cimg src\u003d\"images/bingcheng45.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"[[github](http://github.com/bingcheng45)]","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"[[portfolio](team/bingcheng45.md)]","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"* Role:","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rgbpokka":3,"calvintanwj":17,"alyssa-savier":2,"bingcheng45":4,"-":32,"NicolasCwy":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"## **Table of Contents**","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"  original source as well}","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"diagrams.","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"**`Main`** has two classes","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"is responsible for,","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"the command `delete vid/123`.","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"The **API** of this component is specified","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `GuestListPanel`, `VendorListPanel`,","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":", `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"is specified","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"* depends on some classes in the `Model` component, as it displays `Guest` and `Vendor` object residing in the `Model`.","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"1. When `Logic` is called upon to execute a command, it uses the `PocketHotelParser` class to parse the user command.","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `CheckInNewGuestCommand`) which is","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"   executed by the `LogicManager`.","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to check in a guest).","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"deletevendor vid/123\")` API","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"call.","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"NicolasCwy"},"content":"![Interactions Inside the Logic Component for the `deletevendor vid/123` Command](images/DeleteSequenceDiagramVendor.png)","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteVendorCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"* When called upon to parse a user command, the `PocketHotelParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"  placeholder for the specific command name e.g., `CheckInNewGuestCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"  the user command and create a `XYZCommand` object (e.g., `CheckInNewGuestCommand`) which the `PocketHotelParser` returns back as","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"  a `Command` object.","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"* All `XYZCommandParser` classes (e.g., `CheckInNewGuestCommandParser`, `DeleteVendorCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2021-11-02"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"![Model Class Diagram](images/ModelClassDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"* stores the vendorbook and guestbook data i.e., all `Vendor` and `Guest` objects.","lastModifiedDate":"2021-11-02"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"* stores the currently \u0027selected\u0027 `Guest` or `Vendor` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2021-11-02"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cGuest\u003e` or `ObservableList\u003cVendor\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2021-11-02"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2021-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-11-02"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"* can save both vendor book data, guest book data, archive book data, and user preference data in json format, and read them back into corresponding","lastModifiedDate":"2021-11-02"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"  objects.","lastModifiedDate":"2021-09-25"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"* inherits from `GuestBookStorage`, `VendorBookStorage`, `ArchiveBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2021-11-02"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2021-09-25"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2021-09-25"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"  that belong to the `Model`)","lastModifiedDate":"2021-09-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"calvintanwj"},"content":"### Book Management","lastModifiedDate":"2021-11-03"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":196,"author":{"gitId":"calvintanwj"},"content":"**PH** allows the user to manage vendors and guests.","lastModifiedDate":"2021-11-03"},{"lineNumber":197,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":198,"author":{"gitId":"calvintanwj"},"content":"As mentioned in the `Model` section earlier, there are three different types of lists:","lastModifiedDate":"2021-11-04"},{"lineNumber":199,"author":{"gitId":"calvintanwj"},"content":"1. GuestBook (Management of guests)","lastModifiedDate":"2021-11-03"},{"lineNumber":200,"author":{"gitId":"calvintanwj"},"content":"2. VendorBook (Management of vendors)","lastModifiedDate":"2021-11-03"},{"lineNumber":201,"author":{"gitId":"calvintanwj"},"content":"3. Archive (Management of archived guests; currently not exposed to the user)","lastModifiedDate":"2021-11-04"},{"lineNumber":202,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":203,"author":{"gitId":"calvintanwj"},"content":"All the lists are managed by the `ModelManager` which supports some common operations across them, with certain","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"calvintanwj"},"content":"variations depending on which list we are currently executing the operation on.","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":206,"author":{"gitId":"calvintanwj"},"content":"Some common operations include:","lastModifiedDate":"2021-11-03"},{"lineNumber":207,"author":{"gitId":"calvintanwj"},"content":"* `addvendor` for vendors and `checkin` for guests - creates the entity and adds to the respective books.","lastModifiedDate":"2021-11-03"},{"lineNumber":208,"author":{"gitId":"calvintanwj"},"content":"* `editvendor` for vendors and `editguest` for guests - edits the entity and updates the book accordingly.","lastModifiedDate":"2021-11-03"},{"lineNumber":209,"author":{"gitId":"calvintanwj"},"content":"* `deletevendor` for vendors and `deleteguest` for guests - removes the existing entity from the respective book.","lastModifiedDate":"2021-11-03"},{"lineNumber":210,"author":{"gitId":"calvintanwj"},"content":"* `listvendor` for vendors and `listguest` for guest - renders all the entities of the respective book.","lastModifiedDate":"2021-11-03"},{"lineNumber":211,"author":{"gitId":"calvintanwj"},"content":"* `clearvendor` for vendors and `clearguest` for guest - removes all the entities from the respective book.","lastModifiedDate":"2021-11-03"},{"lineNumber":212,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":213,"author":{"gitId":"calvintanwj"},"content":"By segregating the model into its respective books/lists, we felt that this embraced **OOP** concepts, as it reduces coupling and increases cohesion.","lastModifiedDate":"2021-11-04"},{"lineNumber":214,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":215,"author":{"gitId":"calvintanwj"},"content":"The following class diagram shows the general structure of a `GuestBook`. The same concepts were applied when building the `VendorBook` and `Archive`.","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":217,"author":{"gitId":"calvintanwj"},"content":"\u003cimg src\u003d\"images/GuestBookClassDiagram.png\" width\u003d\"500\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":219,"author":{"gitId":"calvintanwj"},"content":"The `GuestBook` implements the `ReadOnlyGuestBook` interface. The `getGuestList()` method returns an `ObservableList` of guests. `ObservableList` makes use","lastModifiedDate":"2021-11-03"},{"lineNumber":220,"author":{"gitId":"calvintanwj"},"content":"of the Observer pattern, as it notifies the `ModelManager` of any changes that occur in the guest list, and reflect those changes onto the **GUI**.","lastModifiedDate":"2021-11-03"},{"lineNumber":221,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":222,"author":{"gitId":"calvintanwj"},"content":"### Toggling between vendor and guest list","lastModifiedDate":"2021-11-02"},{"lineNumber":223,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":224,"author":{"gitId":"calvintanwj"},"content":"Other than toggling between the two lists via the **GUI**. The user can make use of the commands `listguest` and `listvendor` to toggle between the two.","lastModifiedDate":"2021-11-03"},{"lineNumber":225,"author":{"gitId":"calvintanwj"},"content":"After certain commands like `filterguest` and `filtervendor`, the list also gets toggled automatically for the user. The","lastModifiedDate":"2021-11-03"},{"lineNumber":226,"author":{"gitId":"calvintanwj"},"content":"toggling is executed depending on the state of the `CommandResult`, after executing the user command.","lastModifiedDate":"2021-11-03"},{"lineNumber":227,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":228,"author":{"gitId":"calvintanwj"},"content":"`MainWindow` has a function `toggleTab()` that reads in the state of the `CommandResult` and renders the correct list accordingly.","lastModifiedDate":"2021-11-03"},{"lineNumber":229,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":230,"author":{"gitId":"calvintanwj"},"content":"The following activity diagram illustrates what happens to the `MainWindow` of the UI component when a user inputs a command.","lastModifiedDate":"2021-11-03"},{"lineNumber":231,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":232,"author":{"gitId":"calvintanwj"},"content":"\u003cimg src\u003d\"images/ToggleTabActivityDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":233,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":234,"author":{"gitId":"calvintanwj"},"content":"### Filter feature","lastModifiedDate":"2021-11-03"},{"lineNumber":235,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":236,"author":{"gitId":"calvintanwj"},"content":"#### Implementation","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":238,"author":{"gitId":"calvintanwj"},"content":"The filter feature makes use of the `Model#updateFilteredGuestList` and `Model#updateFilteredVendorList` operations,","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"calvintanwj"},"content":"where each function takes in a `Predicate\u003cGuest\u003e` and `Predicate\u003cVendor\u003e` respectively. To avoid repetition, we will cover how the","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"calvintanwj"},"content":"`filterguest` command is implemented. The `filtervendor` command follows the exact same logic with its own unique fields.","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"calvintanwj"},"content":"The `filterguest` command is facilitated by the `FilterGuestCommandParser` and `FilterGuestCommand` of **PH**. The following sequence diagram shows","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"calvintanwj"},"content":"how the `filterguest` operation works:","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"calvintanwj"},"content":"![FilterGuestSequenceDiagram](images/FilterGuestSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":246,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":247,"author":{"gitId":"calvintanwj"},"content":"Given above is an example of a user filtering guests by a tag, deluxe. The end result is a filtered list of guests with the tag, deluxe.","lastModifiedDate":"2021-11-04"},{"lineNumber":248,"author":{"gitId":"calvintanwj"},"content":"The execution of the above example follows the same flow as all the other commands. One important to take note is that, the `FilterGuestCommandParser`","lastModifiedDate":"2021-11-04"},{"lineNumber":249,"author":{"gitId":"calvintanwj"},"content":"returns a `GuestPredicate`. This `GuestPredicate` implements `Predicate\u003cGuest\u003e`, and the instance instantiated by the parser is what","lastModifiedDate":"2021-11-04"},{"lineNumber":250,"author":{"gitId":"calvintanwj"},"content":"gets passed into `Model#updateFilteredGuestList` to achieve the end result. `filtervendor` makes use of a class `VendorPredicate` that follows the same idea.","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":252,"author":{"gitId":"calvintanwj"},"content":"The following activity diagram shows what happens when a user executes a `filterguest` command, `filtervendor` follows the same flow.","lastModifiedDate":"2021-11-04"},{"lineNumber":253,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":254,"author":{"gitId":"calvintanwj"},"content":"![FilterGuestActivityDiagram](images/FilterGuestActivityDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":255,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"NicolasCwy"},"content":"### Deleting a Guest","lastModifiedDate":"2021-11-03"},{"lineNumber":257,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":258,"author":{"gitId":"NicolasCwy"},"content":"#### Implementation","lastModifiedDate":"2021-11-02"},{"lineNumber":259,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":260,"author":{"gitId":"NicolasCwy"},"content":"The implementation of the `deleteguest` command was largely based off the original AB3 implementation, with changes made","lastModifiedDate":"2021-11-03"},{"lineNumber":261,"author":{"gitId":"NicolasCwy"},"content":"to support the `Archive` and delete by the guest details instead of index in list.","lastModifiedDate":"2021-11-03"},{"lineNumber":262,"author":{"gitId":"calvintanwj"},"content":"The `deleteguest` makes use off the `GuestBook` and `Archive` class to search for the guest to be deleted.","lastModifiedDate":"2021-11-04"},{"lineNumber":263,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":264,"author":{"gitId":"NicolasCwy"},"content":"This is done through the implementation of `Model` called `ModelManager`. The operations","lastModifiedDate":"2021-11-03"},{"lineNumber":265,"author":{"gitId":"NicolasCwy"},"content":"`ModelManager#getGuest(PassportNumber passportNumber)` and`ModelManager#getArchivedGuest(PassportNumber passportNumber)`","lastModifiedDate":"2021-11-03"},{"lineNumber":266,"author":{"gitId":"NicolasCwy"},"content":"are used to check if the guests details can be found in Pocket Hotel (Either in the archive or currently checked in).","lastModifiedDate":"2021-11-03"},{"lineNumber":267,"author":{"gitId":"NicolasCwy"},"content":"If the guest details is found in either locations, it would be deleted.","lastModifiedDate":"2021-11-03"},{"lineNumber":268,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":269,"author":{"gitId":"calvintanwj"},"content":"\u003cimg src\u003d\"images/DeleteSequenceDiagramGuest.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":270,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":271,"author":{"gitId":"NicolasCwy"},"content":"### Deleting a Vendor","lastModifiedDate":"2021-11-03"},{"lineNumber":272,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":273,"author":{"gitId":"NicolasCwy"},"content":"#### Implementation","lastModifiedDate":"2021-11-02"},{"lineNumber":274,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":275,"author":{"gitId":"NicolasCwy"},"content":"The implementation of the `deletevendor` command was largely based off the original AB3 implementation, with changes to","lastModifiedDate":"2021-11-03"},{"lineNumber":276,"author":{"gitId":"NicolasCwy"},"content":"made to delete another a different model, `Vendor` and delete by the vendor details instead of index in list.","lastModifiedDate":"2021-11-03"},{"lineNumber":277,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":278,"author":{"gitId":"NicolasCwy"},"content":"The difference between the Guest and Vendor model is that Vendors cannot be archived. Therefore, the","lastModifiedDate":"2021-11-03"},{"lineNumber":279,"author":{"gitId":"NicolasCwy"},"content":"implementation of the `deletevendor` command is the same as the `deleteguest` command, but only the `VendorBook`","lastModifiedDate":"2021-11-04"},{"lineNumber":280,"author":{"gitId":"NicolasCwy"},"content":"(the `GuestBook` equivalent for vendors) has to be searched.","lastModifiedDate":"2021-11-03"},{"lineNumber":281,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":282,"author":{"gitId":"NicolasCwy"},"content":"\u003cimg src\u003d\"images/DeleteSequenceDiagramVendor.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":283,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":284,"author":{"gitId":"NicolasCwy"},"content":"### Invoice Generation","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":286,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"calvintanwj"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2021-09-25"},{"lineNumber":291,"author":{"gitId":"calvintanwj"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2021-09-25"},{"lineNumber":292,"author":{"gitId":"calvintanwj"},"content":"following operations:","lastModifiedDate":"2021-09-25"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"calvintanwj"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2021-09-25"},{"lineNumber":295,"author":{"gitId":"calvintanwj"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2021-09-25"},{"lineNumber":296,"author":{"gitId":"calvintanwj"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2021-09-25"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"calvintanwj"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2021-09-25"},{"lineNumber":299,"author":{"gitId":"calvintanwj"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2021-09-25"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"calvintanwj"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2021-09-25"},{"lineNumber":304,"author":{"gitId":"calvintanwj"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2021-09-25"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"calvintanwj"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command","lastModifiedDate":"2021-09-25"},{"lineNumber":309,"author":{"gitId":"calvintanwj"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2021-09-25"},{"lineNumber":310,"author":{"gitId":"calvintanwj"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2021-09-25"},{"lineNumber":311,"author":{"gitId":"calvintanwj"},"content":"state.","lastModifiedDate":"2021-09-25"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"calvintanwj"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`","lastModifiedDate":"2021-09-25"},{"lineNumber":316,"author":{"gitId":"calvintanwj"},"content":", causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-09-25"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"calvintanwj"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing","lastModifiedDate":"2021-09-25"},{"lineNumber":325,"author":{"gitId":"calvintanwj"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2021-09-25"},{"lineNumber":326,"author":{"gitId":"calvintanwj"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-09-25"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"calvintanwj"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2021-09-25"},{"lineNumber":344,"author":{"gitId":"calvintanwj"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2021-09-25"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"calvintanwj"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2021-09-25"},{"lineNumber":351,"author":{"gitId":"calvintanwj"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2021-09-25"},{"lineNumber":352,"author":{"gitId":"calvintanwj"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2021-09-25"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"calvintanwj"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2021-09-25"},{"lineNumber":357,"author":{"gitId":"calvintanwj"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2021-09-25"},{"lineNumber":358,"author":{"gitId":"calvintanwj"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2021-09-25"},{"lineNumber":359,"author":{"gitId":"calvintanwj"},"content":"desktop applications follow.","lastModifiedDate":"2021-09-25"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"calvintanwj"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by itself.","lastModifiedDate":"2021-09-25"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":391,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":392,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":393,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":394,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"calvintanwj"},"content":"## **Appendix A: Requirements**","lastModifiedDate":"2021-11-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"calvintanwj"},"content":"**Target user profile**: Front-desk receptionists at small-scale hotels","lastModifiedDate":"2021-11-02"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"calvintanwj"},"content":"* has a need to manage a significant number of contacts (both vendors and guests)","lastModifiedDate":"2021-11-02"},{"lineNumber":405,"author":{"gitId":"calvintanwj"},"content":"* prefers to have everything centralized in one application","lastModifiedDate":"2021-11-02"},{"lineNumber":406,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":409,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"calvintanwj"},"content":"* tired of using pen and paper to keep track of contacts","lastModifiedDate":"2021-11-02"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"calvintanwj"},"content":"**Value proposition**: Automate front-desk operations, elevating guest experience and lightens the front desk\u0027s workload.","lastModifiedDate":"2021-11-02"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"| Priority | As a …​            | I want to …​                                     | So that I can…​                                                                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"calvintanwj"},"content":"| -------- | ----------------------| --------------------------------------------------- | ------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-09-25"},{"lineNumber":420,"author":{"gitId":"calvintanwj"},"content":"| `* * *`  | user                  | add details of vendors                              | look up vendors that suit the guest\u0027s needs and phone them.                           |","lastModifiedDate":"2021-11-02"},{"lineNumber":421,"author":{"gitId":"calvintanwj"},"content":"| `* * *`  | user                  | edit contact details of vendors and guests          | have the most updated information.                                                    |","lastModifiedDate":"2021-11-02"},{"lineNumber":422,"author":{"gitId":"calvintanwj"},"content":"| `* * *`  | user                  | delete guests/vendors                               | keep track of only guests checked into the hotel and vendors working with hotel.      |","lastModifiedDate":"2021-11-02"},{"lineNumber":423,"author":{"gitId":"calvintanwj"},"content":"| `* * *`  | user                  | see help instructions                               | get help on how to use the app                                                        |","lastModifiedDate":"2021-09-25"},{"lineNumber":424,"author":{"gitId":"calvintanwj"},"content":"| `* * *`  | user                  | save the details I enter                            |                                                                                       |","lastModifiedDate":"2021-09-25"},{"lineNumber":425,"author":{"gitId":"calvintanwj"},"content":"| `* * *`  | user                  | check in new guests                                 | manage all guests currently checked into the hotel.                                   |","lastModifiedDate":"2021-11-02"},{"lineNumber":426,"author":{"gitId":"calvintanwj"},"content":"| `* * *`  | user                  | have a faster check in for returning guests         | reduce the average check-in time at the front desk                                    |","lastModifiedDate":"2021-11-02"},{"lineNumber":427,"author":{"gitId":"calvintanwj"},"content":"| `* * *`  | user                  | check out my guests                                 | archive them and generate an invoice form for them.                                   |","lastModifiedDate":"2021-11-02"},{"lineNumber":428,"author":{"gitId":"calvintanwj"},"content":"| `* *  `  | new user              | generate an invoice form                            | charge the guest for their stay.                                                      |","lastModifiedDate":"2021-11-02"},{"lineNumber":429,"author":{"gitId":"calvintanwj"},"content":"| `* *  `  | user                  | charge my guests for vendors hired                  | generate an invoice form for them when they check out.                                |","lastModifiedDate":"2021-11-02"},{"lineNumber":430,"author":{"gitId":"calvintanwj"},"content":"| `* *  `  | new user              | clear all current data                              | get rid of sample data                                                                |","lastModifiedDate":"2021-09-25"},{"lineNumber":431,"author":{"gitId":"calvintanwj"},"content":"| `* *  `  | potential user        | see app populated with sample data                  | easily learn and get a feel for the app                                               |","lastModifiedDate":"2021-11-02"},{"lineNumber":432,"author":{"gitId":"calvintanwj"},"content":"| `* *`    | user                  | filter guests and vendors                           | look at them in more manageable lists.                                                |","lastModifiedDate":"2021-11-02"},{"lineNumber":433,"author":{"gitId":"calvintanwj"},"content":"| `* *`    | user                  | add tags to vendors/guests                          | easily categorize and filter them                                                     |","lastModifiedDate":"2021-11-02"},{"lineNumber":434,"author":{"gitId":"calvintanwj"},"content":"| `*`      | expert user           | personalize my GUI to my liking                     | optimise the layout to cater to my needs                                              |","lastModifiedDate":"2021-09-25"},{"lineNumber":435,"author":{"gitId":"calvintanwj"},"content":"| `*`      | CLI user              | add aliases to my commands                          | execute commands quickly with shorter syntax                                          |","lastModifiedDate":"2021-09-25"},{"lineNumber":436,"author":{"gitId":"calvintanwj"},"content":"| `*`      | new user              | learn how to use the app (Tutorial)                 | get more familiar with the features they offer and how I can use it better            |","lastModifiedDate":"2021-10-16"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"calvintanwj"},"content":"(For all use cases below, the **System** is the `PH` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-10-16"},{"lineNumber":441,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":442,"author":{"gitId":"calvintanwj"},"content":"#### Navigation","lastModifiedDate":"2021-11-03"},{"lineNumber":443,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":444,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":445,"author":{"gitId":"calvintanwj"},"content":"UC01 - Viewing the Vendor List","lastModifiedDate":"2021-11-03"},{"lineNumber":446,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":447,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":448,"author":{"gitId":"calvintanwj"},"content":"    1. User requests to go the vendor list.","lastModifiedDate":"2021-11-03"},{"lineNumber":449,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel switches to the vendor list, where user can see all the vendors working with the hotel.","lastModifiedDate":"2021-11-03"},{"lineNumber":450,"author":{"gitId":"calvintanwj"},"content":"    Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":451,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":452,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":453,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":454,"author":{"gitId":"calvintanwj"},"content":"UC02 - Viewing the Guest List","lastModifiedDate":"2021-11-03"},{"lineNumber":455,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":456,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":457,"author":{"gitId":"calvintanwj"},"content":"    1. User requests to go the guest list.","lastModifiedDate":"2021-11-03"},{"lineNumber":458,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel switches to the guest list, where user can see all guests currently checked into the hotel.","lastModifiedDate":"2021-11-03"},{"lineNumber":459,"author":{"gitId":"calvintanwj"},"content":"    Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":460,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":461,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":462,"author":{"gitId":"calvintanwj"},"content":"#### Utility","lastModifiedDate":"2021-11-03"},{"lineNumber":463,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":464,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":465,"author":{"gitId":"calvintanwj"},"content":"UC03 - Viewing the help tab","lastModifiedDate":"2021-11-03"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":468,"author":{"gitId":"calvintanwj"},"content":"    1. User requests to go to the help tab.","lastModifiedDate":"2021-11-03"},{"lineNumber":469,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel opens the help window directing the user to a guide on how to use the application.","lastModifiedDate":"2021-11-03"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":474,"author":{"gitId":"calvintanwj"},"content":"UC04 - Exiting Pocket Hotel","lastModifiedDate":"2021-11-03"},{"lineNumber":475,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":476,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":477,"author":{"gitId":"calvintanwj"},"content":"    1. User requests to exit the app.","lastModifiedDate":"2021-11-03"},{"lineNumber":478,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel closes the application window.","lastModifiedDate":"2021-11-03"},{"lineNumber":479,"author":{"gitId":"calvintanwj"},"content":"    Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":480,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":481,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":482,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":483,"author":{"gitId":"calvintanwj"},"content":"UC05 - Saving your data","lastModifiedDate":"2021-11-03"},{"lineNumber":484,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":485,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":486,"author":{"gitId":"calvintanwj"},"content":"    1. User executes a valid action.","lastModifiedDate":"2021-11-03"},{"lineNumber":487,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel\u0027s data gets modified accordingly, and replaces the existing local save-file.","lastModifiedDate":"2021-11-03"},{"lineNumber":488,"author":{"gitId":"calvintanwj"},"content":"    3. Pocket Hotel shows a success message to user indicating action has been executed successfully.","lastModifiedDate":"2021-11-03"},{"lineNumber":489,"author":{"gitId":"calvintanwj"},"content":"    Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":490,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":491,"author":{"gitId":"calvintanwj"},"content":"Extensions:","lastModifiedDate":"2021-11-03"},{"lineNumber":492,"author":{"gitId":"calvintanwj"},"content":"    1a. Action carried out by user is invalid.","lastModifiedDate":"2021-11-03"},{"lineNumber":493,"author":{"gitId":"calvintanwj"},"content":"        1a1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"calvintanwj"},"content":"    2a. Unable to overwrite save file.","lastModifiedDate":"2021-11-03"},{"lineNumber":496,"author":{"gitId":"calvintanwj"},"content":"        2a1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":497,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":498,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":499,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":500,"author":{"gitId":"calvintanwj"},"content":"#### Managing Guests","lastModifiedDate":"2021-11-03"},{"lineNumber":501,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":502,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":503,"author":{"gitId":"calvintanwj"},"content":"UC06 - Checking in new guests","lastModifiedDate":"2021-11-03"},{"lineNumber":504,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":505,"author":{"gitId":"calvintanwj"},"content":"Preconditions: Guest must not already be currently checked into the hotel.","lastModifiedDate":"2021-11-03"},{"lineNumber":506,"author":{"gitId":"calvintanwj"},"content":"Guarantees: Guest list gets updated with the new guest checked in.","lastModifiedDate":"2021-11-03"},{"lineNumber":507,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":508,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":509,"author":{"gitId":"calvintanwj"},"content":"    1. User requests to check in a new guest.","lastModifiedDate":"2021-11-03"},{"lineNumber":510,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel adds the requested guest.","lastModifiedDate":"2021-11-03"},{"lineNumber":511,"author":{"gitId":"calvintanwj"},"content":"    3. Pocket Hotel shows a success message to user indicating guest has been successfully checked in.","lastModifiedDate":"2021-11-03"},{"lineNumber":512,"author":{"gitId":"calvintanwj"},"content":"    Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":513,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":514,"author":{"gitId":"calvintanwj"},"content":"Extensions:","lastModifiedDate":"2021-11-03"},{"lineNumber":515,"author":{"gitId":"calvintanwj"},"content":"    1a. Guest is already checked in.","lastModifiedDate":"2021-11-03"},{"lineNumber":516,"author":{"gitId":"calvintanwj"},"content":"        1a1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":517,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":518,"author":{"gitId":"calvintanwj"},"content":"    1b. Guest is a returning guest.","lastModifiedDate":"2021-11-03"},{"lineNumber":519,"author":{"gitId":"calvintanwj"},"content":"        1b1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":520,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":521,"author":{"gitId":"calvintanwj"},"content":"    1c. Given fields such as passport number, name, etc. is invalid.","lastModifiedDate":"2021-11-03"},{"lineNumber":522,"author":{"gitId":"calvintanwj"},"content":"        1c1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":523,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":524,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":525,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":526,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":527,"author":{"gitId":"calvintanwj"},"content":"UC07 - Checking in returning guests","lastModifiedDate":"2021-11-03"},{"lineNumber":528,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":529,"author":{"gitId":"calvintanwj"},"content":"Preconditions: Guest must not already be currently checked into the hotel and must be a returning guest.","lastModifiedDate":"2021-11-03"},{"lineNumber":530,"author":{"gitId":"calvintanwj"},"content":"Guarantees: Guest list gets updated with the returning guest checked in.","lastModifiedDate":"2021-11-03"},{"lineNumber":531,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":532,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":533,"author":{"gitId":"calvintanwj"},"content":"    1. User requests to check in the returning guest.","lastModifiedDate":"2021-11-03"},{"lineNumber":534,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel adds the requested guest.","lastModifiedDate":"2021-11-03"},{"lineNumber":535,"author":{"gitId":"calvintanwj"},"content":"    3. Pocket Hotel shows a success message to user indicating guest has been successfully checked in.","lastModifiedDate":"2021-11-03"},{"lineNumber":536,"author":{"gitId":"NicolasCwy"},"content":"    Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":537,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":538,"author":{"gitId":"calvintanwj"},"content":"Extensions:","lastModifiedDate":"2021-11-03"},{"lineNumber":539,"author":{"gitId":"calvintanwj"},"content":"    1a. Guest is already checked in.","lastModifiedDate":"2021-11-03"},{"lineNumber":540,"author":{"gitId":"calvintanwj"},"content":"        1a1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":541,"author":{"gitId":"NicolasCwy"},"content":"        Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":542,"author":{"gitId":"calvintanwj"},"content":"    1b. Guest is not a returning guest.","lastModifiedDate":"2021-11-03"},{"lineNumber":543,"author":{"gitId":"calvintanwj"},"content":"        1b1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":544,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":545,"author":{"gitId":"calvintanwj"},"content":"    1c. Given fields such as passport number or room number is invalid.","lastModifiedDate":"2021-11-03"},{"lineNumber":546,"author":{"gitId":"calvintanwj"},"content":"        1c1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":547,"author":{"gitId":"NicolasCwy"},"content":"        Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":548,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":549,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":550,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":551,"author":{"gitId":"calvintanwj"},"content":"UC08 - Editing guests","lastModifiedDate":"2021-11-03"},{"lineNumber":552,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":553,"author":{"gitId":"calvintanwj"},"content":"Preconditions: Guest must exist and be currently checked into the hotel.","lastModifiedDate":"2021-11-03"},{"lineNumber":554,"author":{"gitId":"calvintanwj"},"content":"Guarantees: Guest list gets updated with the guest edited.","lastModifiedDate":"2021-11-03"},{"lineNumber":555,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":556,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":557,"author":{"gitId":"calvintanwj"},"content":"    1. User requests to edit a guest.","lastModifiedDate":"2021-11-03"},{"lineNumber":558,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel updates the guest with its new details.","lastModifiedDate":"2021-11-03"},{"lineNumber":559,"author":{"gitId":"calvintanwj"},"content":"    3. Pocket Hotel shows a success message to user indicating guest has been successfully edited.","lastModifiedDate":"2021-11-03"},{"lineNumber":560,"author":{"gitId":"NicolasCwy"},"content":"    Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":561,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":562,"author":{"gitId":"calvintanwj"},"content":"Extensions:","lastModifiedDate":"2021-11-03"},{"lineNumber":563,"author":{"gitId":"calvintanwj"},"content":"    1a. Guest with given passport number is not checked in.","lastModifiedDate":"2021-11-03"},{"lineNumber":564,"author":{"gitId":"calvintanwj"},"content":"        1a1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":565,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":566,"author":{"gitId":"calvintanwj"},"content":"    1b. Given fields such as room number, name, etc. is invalid.","lastModifiedDate":"2021-11-03"},{"lineNumber":567,"author":{"gitId":"calvintanwj"},"content":"        1b1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":568,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":569,"author":{"gitId":"calvintanwj"},"content":"    1c. No field is given to edit.","lastModifiedDate":"2021-11-03"},{"lineNumber":570,"author":{"gitId":"calvintanwj"},"content":"        1c1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":571,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":572,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":573,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":574,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":575,"author":{"gitId":"calvintanwj"},"content":"UC09 - Deleting guests","lastModifiedDate":"2021-11-03"},{"lineNumber":576,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":577,"author":{"gitId":"calvintanwj"},"content":"Preconditions: Guest must exist and be currently checked into the hotel.","lastModifiedDate":"2021-11-03"},{"lineNumber":578,"author":{"gitId":"calvintanwj"},"content":"Guarantees: Guest list gets updated with the guest removed.","lastModifiedDate":"2021-11-03"},{"lineNumber":579,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":580,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":581,"author":{"gitId":"calvintanwj"},"content":"    1. User requests to delete a guest.","lastModifiedDate":"2021-11-03"},{"lineNumber":582,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel deletes the guest.","lastModifiedDate":"2021-11-03"},{"lineNumber":583,"author":{"gitId":"calvintanwj"},"content":"    3. Pocket Hotel shows a success message to user indicating guest has been successfully deleted.","lastModifiedDate":"2021-11-03"},{"lineNumber":584,"author":{"gitId":"calvintanwj"},"content":"    Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":585,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":586,"author":{"gitId":"calvintanwj"},"content":"Extensions:","lastModifiedDate":"2021-11-03"},{"lineNumber":587,"author":{"gitId":"calvintanwj"},"content":"    1a. Guest is not checked in.","lastModifiedDate":"2021-11-03"},{"lineNumber":588,"author":{"gitId":"calvintanwj"},"content":"        1a1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":589,"author":{"gitId":"rgbpokka"},"content":"        Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":590,"author":{"gitId":"calvintanwj"},"content":"    1b. Given identifier, passport number is invalid.","lastModifiedDate":"2021-11-03"},{"lineNumber":591,"author":{"gitId":"calvintanwj"},"content":"        1b1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":592,"author":{"gitId":"rgbpokka"},"content":"        Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":593,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":594,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":595,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":596,"author":{"gitId":"calvintanwj"},"content":"UC10 - Checking out guests","lastModifiedDate":"2021-11-03"},{"lineNumber":597,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":598,"author":{"gitId":"calvintanwj"},"content":"Preconditions: Guest must exist and be currently checked into the hotel.","lastModifiedDate":"2021-11-03"},{"lineNumber":599,"author":{"gitId":"calvintanwj"},"content":"Guarantees: Guest list gets updated with the guest archived and invoice form generated.","lastModifiedDate":"2021-11-03"},{"lineNumber":600,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":601,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":602,"author":{"gitId":"calvintanwj"},"content":"    1. User requests to check out a guest.","lastModifiedDate":"2021-11-03"},{"lineNumber":603,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel archives the guest and generates the invoice form.","lastModifiedDate":"2021-11-03"},{"lineNumber":604,"author":{"gitId":"calvintanwj"},"content":"    3. Pocket Hotel shows a success message to user indicating guest has been successfully checked out.","lastModifiedDate":"2021-11-03"},{"lineNumber":605,"author":{"gitId":"rgbpokka"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":606,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":607,"author":{"gitId":"calvintanwj"},"content":"Extensions:","lastModifiedDate":"2021-11-03"},{"lineNumber":608,"author":{"gitId":"calvintanwj"},"content":"    1a. Guest is not checked in.","lastModifiedDate":"2021-11-03"},{"lineNumber":609,"author":{"gitId":"calvintanwj"},"content":"        1a1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":610,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":611,"author":{"gitId":"calvintanwj"},"content":"    1b. Given identifier, passport number is invalid.","lastModifiedDate":"2021-11-03"},{"lineNumber":612,"author":{"gitId":"calvintanwj"},"content":"        1b1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":613,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":614,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":615,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":616,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":617,"author":{"gitId":"calvintanwj"},"content":"UC11 - Clearing guests","lastModifiedDate":"2021-11-03"},{"lineNumber":618,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":619,"author":{"gitId":"calvintanwj"},"content":"Preconditions: None.","lastModifiedDate":"2021-11-03"},{"lineNumber":620,"author":{"gitId":"calvintanwj"},"content":"Guarantees: Guest list gets cleared.","lastModifiedDate":"2021-11-03"},{"lineNumber":621,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":622,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":623,"author":{"gitId":"calvintanwj"},"content":"    1. User requests to clear all guest data.","lastModifiedDate":"2021-11-03"},{"lineNumber":624,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel clears all guest data.","lastModifiedDate":"2021-11-03"},{"lineNumber":625,"author":{"gitId":"calvintanwj"},"content":"    3. Pocket Hotel shows a success message to user indicating all guest data has been successfully cleared.","lastModifiedDate":"2021-11-03"},{"lineNumber":626,"author":{"gitId":"calvintanwj"},"content":"    Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":627,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":630,"author":{"gitId":"calvintanwj"},"content":"UC12 - Filtering guests","lastModifiedDate":"2021-11-03"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":632,"author":{"gitId":"calvintanwj"},"content":"Preconditions: Only guest fields are given for the filter.","lastModifiedDate":"2021-11-03"},{"lineNumber":633,"author":{"gitId":"calvintanwj"},"content":"Guarantees: Guest list gets filtered to user\u0027s specifications.","lastModifiedDate":"2021-11-03"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":635,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":636,"author":{"gitId":"calvintanwj"},"content":"    1. User requests to filter guests.","lastModifiedDate":"2021-11-03"},{"lineNumber":637,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel filters the guests, and only shows those that fit the user\u0027s specifications.","lastModifiedDate":"2021-11-03"},{"lineNumber":638,"author":{"gitId":"calvintanwj"},"content":"    3. Pocket Hotel shows a success message to user with the number of guests that have been filtered.","lastModifiedDate":"2021-11-03"},{"lineNumber":639,"author":{"gitId":"calvintanwj"},"content":"    Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":641,"author":{"gitId":"calvintanwj"},"content":"Extensions:","lastModifiedDate":"2021-11-03"},{"lineNumber":642,"author":{"gitId":"calvintanwj"},"content":"    1a. No fields are given to filter.","lastModifiedDate":"2021-11-03"},{"lineNumber":643,"author":{"gitId":"calvintanwj"},"content":"        1a1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":644,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":645,"author":{"gitId":"calvintanwj"},"content":"    1b. Fields given do not follow correct syntax.","lastModifiedDate":"2021-11-03"},{"lineNumber":646,"author":{"gitId":"calvintanwj"},"content":"        1b1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":647,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":648,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":651,"author":{"gitId":"calvintanwj"},"content":"UC13 - Charging guests","lastModifiedDate":"2021-11-03"},{"lineNumber":652,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":653,"author":{"gitId":"calvintanwj"},"content":"Preconditions: Guest must exist and be currently checked into the hotel.","lastModifiedDate":"2021-11-03"},{"lineNumber":654,"author":{"gitId":"calvintanwj"},"content":"Guarantees: Pocket Hotel keeps track of the vendors hired by the guest.","lastModifiedDate":"2021-11-03"},{"lineNumber":655,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":656,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":657,"author":{"gitId":"calvintanwj"},"content":"    1. User requests to charge a guest.","lastModifiedDate":"2021-11-03"},{"lineNumber":658,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel keeps track of the vendor hired by the guest.","lastModifiedDate":"2021-11-03"},{"lineNumber":659,"author":{"gitId":"calvintanwj"},"content":"    3. Pocket Hotel shows a success message to user indicating the guest has been successfully charged.","lastModifiedDate":"2021-11-03"},{"lineNumber":660,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":662,"author":{"gitId":"calvintanwj"},"content":"Extensions:","lastModifiedDate":"2021-11-03"},{"lineNumber":663,"author":{"gitId":"calvintanwj"},"content":"    1a. Guest is not checked in.","lastModifiedDate":"2021-11-03"},{"lineNumber":664,"author":{"gitId":"calvintanwj"},"content":"        1a1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":665,"author":{"gitId":"alyssa-savier"},"content":"        Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":666,"author":{"gitId":"calvintanwj"},"content":"    1b. Vendor hired does not exist.","lastModifiedDate":"2021-11-03"},{"lineNumber":667,"author":{"gitId":"calvintanwj"},"content":"        1b1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":668,"author":{"gitId":"alyssa-savier"},"content":"        Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":669,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":670,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":671,"author":{"gitId":"calvintanwj"},"content":"#### Managing Vendors","lastModifiedDate":"2021-11-03"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":673,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":674,"author":{"gitId":"calvintanwj"},"content":"UC14 - Adding vendors","lastModifiedDate":"2021-11-03"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":676,"author":{"gitId":"calvintanwj"},"content":"Preconditions: Vendors must not already exist in the app.","lastModifiedDate":"2021-11-03"},{"lineNumber":677,"author":{"gitId":"calvintanwj"},"content":"Guarantees: Vendor list gets updated with the new vendor added.","lastModifiedDate":"2021-11-03"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":679,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":680,"author":{"gitId":"calvintanwj"},"content":"    1. User requests to add a new vendor.","lastModifiedDate":"2021-11-03"},{"lineNumber":681,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel adds the requested vendor.","lastModifiedDate":"2021-11-03"},{"lineNumber":682,"author":{"gitId":"calvintanwj"},"content":"    3. Pocket Hotel shows a success message to user indicating the vendor has been successfully added.","lastModifiedDate":"2021-11-03"},{"lineNumber":683,"author":{"gitId":"calvintanwj"},"content":"    Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":685,"author":{"gitId":"calvintanwj"},"content":"Extensions:","lastModifiedDate":"2021-11-03"},{"lineNumber":686,"author":{"gitId":"calvintanwj"},"content":"    1a. Vendor already exists.","lastModifiedDate":"2021-11-03"},{"lineNumber":687,"author":{"gitId":"calvintanwj"},"content":"        1a1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":688,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":689,"author":{"gitId":"calvintanwj"},"content":"    1b. Given operating hour start time is after the end time.","lastModifiedDate":"2021-11-03"},{"lineNumber":690,"author":{"gitId":"calvintanwj"},"content":"        1b1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":691,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":692,"author":{"gitId":"calvintanwj"},"content":"    1c. Given fields such as vendor id, name, etc. is invalid.","lastModifiedDate":"2021-11-03"},{"lineNumber":693,"author":{"gitId":"calvintanwj"},"content":"        1c1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":694,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":695,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":698,"author":{"gitId":"calvintanwj"},"content":"UC15 - Editing vendors","lastModifiedDate":"2021-11-03"},{"lineNumber":699,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":700,"author":{"gitId":"calvintanwj"},"content":"Preconditions: Vendor must exist in the app.","lastModifiedDate":"2021-11-03"},{"lineNumber":701,"author":{"gitId":"calvintanwj"},"content":"Guarantees: Vendor list gets updated with the vendor edited.","lastModifiedDate":"2021-11-03"},{"lineNumber":702,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":703,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":704,"author":{"gitId":"calvintanwj"},"content":"    1. User requests to edit a vendor.","lastModifiedDate":"2021-11-03"},{"lineNumber":705,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel updates the vendor with its new details.","lastModifiedDate":"2021-11-03"},{"lineNumber":706,"author":{"gitId":"calvintanwj"},"content":"    3. Pocket Hotel shows a success message to user indicating vendor has been successfully edited.","lastModifiedDate":"2021-11-03"},{"lineNumber":707,"author":{"gitId":"calvintanwj"},"content":"    Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":709,"author":{"gitId":"calvintanwj"},"content":"Extensions:","lastModifiedDate":"2021-11-03"},{"lineNumber":710,"author":{"gitId":"calvintanwj"},"content":"    1a. Vendor with given vendor id does not exist.","lastModifiedDate":"2021-11-03"},{"lineNumber":711,"author":{"gitId":"calvintanwj"},"content":"        1a1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":712,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":713,"author":{"gitId":"calvintanwj"},"content":"    1b. Given fields such as email, name, etc. is invalid.","lastModifiedDate":"2021-11-03"},{"lineNumber":714,"author":{"gitId":"calvintanwj"},"content":"        1b1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":715,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":716,"author":{"gitId":"calvintanwj"},"content":"    1c. No field is given to edit.","lastModifiedDate":"2021-11-03"},{"lineNumber":717,"author":{"gitId":"calvintanwj"},"content":"        1c1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":718,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":719,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":720,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":721,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":722,"author":{"gitId":"calvintanwj"},"content":"UC16 - Deleting vendors","lastModifiedDate":"2021-11-03"},{"lineNumber":723,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":724,"author":{"gitId":"calvintanwj"},"content":"Preconditions: Vendor must exist in the app.","lastModifiedDate":"2021-11-03"},{"lineNumber":725,"author":{"gitId":"calvintanwj"},"content":"Guarantees: Vendor list gets updated with the vendor removed.","lastModifiedDate":"2021-11-03"},{"lineNumber":726,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":727,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":728,"author":{"gitId":"calvintanwj"},"content":"    1. User requests to delete a vendor.","lastModifiedDate":"2021-11-03"},{"lineNumber":729,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel deletes the vendor.","lastModifiedDate":"2021-11-03"},{"lineNumber":730,"author":{"gitId":"calvintanwj"},"content":"    3. Pocket Hotel shows a success message to user indicating vendor has been successfully deleted.","lastModifiedDate":"2021-11-03"},{"lineNumber":731,"author":{"gitId":"NicolasCwy"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":732,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":733,"author":{"gitId":"calvintanwj"},"content":"Extensions:","lastModifiedDate":"2021-11-03"},{"lineNumber":734,"author":{"gitId":"calvintanwj"},"content":"    1a. Vendor with given vendor id does not exist.","lastModifiedDate":"2021-11-03"},{"lineNumber":735,"author":{"gitId":"calvintanwj"},"content":"        1a1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":736,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":737,"author":{"gitId":"calvintanwj"},"content":"    1b. Given identifier, vendor id is invalid.","lastModifiedDate":"2021-11-03"},{"lineNumber":738,"author":{"gitId":"calvintanwj"},"content":"        1b1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":739,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":740,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":741,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":742,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":743,"author":{"gitId":"calvintanwj"},"content":"UC17 - Clearing vendors","lastModifiedDate":"2021-11-03"},{"lineNumber":744,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":745,"author":{"gitId":"calvintanwj"},"content":"Preconditions: None.","lastModifiedDate":"2021-11-03"},{"lineNumber":746,"author":{"gitId":"calvintanwj"},"content":"Guarantees: Vendor list gets cleared.","lastModifiedDate":"2021-11-03"},{"lineNumber":747,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":748,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":749,"author":{"gitId":"calvintanwj"},"content":"    1. User requests to clear all vendor data.","lastModifiedDate":"2021-11-03"},{"lineNumber":750,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel clears all vendor data.","lastModifiedDate":"2021-11-03"},{"lineNumber":751,"author":{"gitId":"calvintanwj"},"content":"    3. Pocket Hotel shows a success message to user indicating all vendor data has been successfully cleared.","lastModifiedDate":"2021-11-03"},{"lineNumber":752,"author":{"gitId":"calvintanwj"},"content":"    Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":753,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":754,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":755,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":756,"author":{"gitId":"calvintanwj"},"content":"UC18 - Filtering vendors","lastModifiedDate":"2021-11-03"},{"lineNumber":757,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":758,"author":{"gitId":"calvintanwj"},"content":"Preconditions: Only vendor fields are given for the filter.","lastModifiedDate":"2021-11-03"},{"lineNumber":759,"author":{"gitId":"calvintanwj"},"content":"Guarantees: Vendor list gets filtered to user\u0027s specifications.","lastModifiedDate":"2021-11-03"},{"lineNumber":760,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":761,"author":{"gitId":"calvintanwj"},"content":"MSS:","lastModifiedDate":"2021-11-03"},{"lineNumber":762,"author":{"gitId":"calvintanwj"},"content":"    1. User requests to filter vendors.","lastModifiedDate":"2021-11-03"},{"lineNumber":763,"author":{"gitId":"calvintanwj"},"content":"    2. Pocket Hotel filters the vendors, and only shows those that fit the user\u0027s specifications.","lastModifiedDate":"2021-11-03"},{"lineNumber":764,"author":{"gitId":"calvintanwj"},"content":"    3. Pocket Hotel shows a success message to user with the number of vendors that have been filtered.","lastModifiedDate":"2021-11-03"},{"lineNumber":765,"author":{"gitId":"calvintanwj"},"content":"    Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"calvintanwj"},"content":"Extensions:","lastModifiedDate":"2021-11-03"},{"lineNumber":768,"author":{"gitId":"calvintanwj"},"content":"    1a. No fields are given to filter.","lastModifiedDate":"2021-11-03"},{"lineNumber":769,"author":{"gitId":"calvintanwj"},"content":"        1a1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":770,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":771,"author":{"gitId":"calvintanwj"},"content":"    1b. Fields given do not follow correct syntax.","lastModifiedDate":"2021-11-03"},{"lineNumber":772,"author":{"gitId":"calvintanwj"},"content":"        1b1. Pocket Hotel shows an error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":773,"author":{"gitId":"calvintanwj"},"content":"        Use case ends.","lastModifiedDate":"2021-11-03"},{"lineNumber":774,"author":{"gitId":"calvintanwj"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":776,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":778,"author":{"gitId":"calvintanwj"},"content":"1. Should work on any **Mainstream OS** as long as it has Java `11` or above installed.","lastModifiedDate":"2021-10-01"},{"lineNumber":779,"author":{"gitId":"calvintanwj"},"content":"2. Should be able to hold up to 1000 contacts without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-11-02"},{"lineNumber":780,"author":{"gitId":"calvintanwj"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2021-09-25"},{"lineNumber":781,"author":{"gitId":"calvintanwj"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-25"},{"lineNumber":782,"author":{"gitId":"calvintanwj"},"content":"4. **PH** should retain all functionalities even without a connection to the internet.","lastModifiedDate":"2021-10-01"},{"lineNumber":783,"author":{"gitId":"calvintanwj"},"content":"5. **PH** is meant to be used by single user at any given time.","lastModifiedDate":"2021-10-01"},{"lineNumber":784,"author":{"gitId":"calvintanwj"},"content":"6. **PH** should be user-friendly for any receptionist who can use a computer, and does not require any technical knowledge or previous experience of **CLI** apps.","lastModifiedDate":"2021-11-02"},{"lineNumber":785,"author":{"gitId":"calvintanwj"},"content":"7. **PH** should not crash on any incorrect user input, this should be handled safely with exceptions. Ideally, rendering a useful error message to the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":786,"author":{"gitId":"-"},"content":"   *{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":789,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"calvintanwj"},"content":"* **PH**: Acronym for Pocket Hotel","lastModifiedDate":"2021-09-25"},{"lineNumber":792,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"rgbpokka"},"content":"* **Guest**: A person staying in Pocket Hotel","lastModifiedDate":"2021-10-08"},{"lineNumber":795,"author":{"gitId":"rgbpokka"},"content":"* **Staff**: An employee of Pocket Hotel","lastModifiedDate":"2021-10-08"},{"lineNumber":796,"author":{"gitId":"calvintanwj"},"content":"* **OOP**: Object-oriented programming. A programming paradigm that relies on the idea of designing data around objects and classes.","lastModifiedDate":"2021-11-03"},{"lineNumber":797,"author":{"gitId":"calvintanwj"},"content":"* **GUI**: Graphical user interface","lastModifiedDate":"2021-11-03"},{"lineNumber":798,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"calvintanwj"},"content":"## **Appendix B: Instructions for manual testing**","lastModifiedDate":"2021-11-02"},{"lineNumber":802,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"NicolasCwy"},"content":"    Perform one of the steps (Option 2 recommended for mac)","lastModifiedDate":"2021-10-29"},{"lineNumber":817,"author":{"gitId":"calvintanwj"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2021-09-25"},{"lineNumber":818,"author":{"gitId":"calvintanwj"},"content":"       optimum.","lastModifiedDate":"2021-09-25"},{"lineNumber":819,"author":{"gitId":"NicolasCwy"},"content":"    2. Run `java -jar PH.jar` in the directory that you placed your jar","lastModifiedDate":"2021-10-29"},{"lineNumber":820,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":822,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":823,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":824,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":827,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"NicolasCwy"},"content":"### Check in a guest","lastModifiedDate":"2021-10-29"},{"lineNumber":830,"author":{"gitId":"NicolasCwy"},"content":"1. Check in a new guest to PH","lastModifiedDate":"2021-10-29"},{"lineNumber":831,"author":{"gitId":"NicolasCwy"},"content":"   1. Test case: `checkin n/Bobby pn/S1234 e/bobby@email.com r/23 t/VIP t/Deluxe Room`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":832,"author":{"gitId":"NicolasCwy"},"content":"   Expected: A guest card will be created with the passport number S1234 with name \"Bobby\", email \"bobby@gmail.com\", room","lastModifiedDate":"2021-10-29"},{"lineNumber":833,"author":{"gitId":"NicolasCwy"},"content":"   number \"23\", and tags \"VIP\" and \"Deluxe Room\"","lastModifiedDate":"2021-10-29"},{"lineNumber":834,"author":{"gitId":"NicolasCwy"},"content":"   2. Test case: `checkin n/bobby`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":835,"author":{"gitId":"NicolasCwy"},"content":"   Expected: Invalid command format error","lastModifiedDate":"2021-10-29"},{"lineNumber":836,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":837,"author":{"gitId":"rgbpokka"},"content":"### Editing a guest","lastModifiedDate":"2021-10-29"},{"lineNumber":838,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":839,"author":{"gitId":"rgbpokka"},"content":"1. Editing a guest while all guests are being shown","lastModifiedDate":"2021-10-29"},{"lineNumber":840,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":841,"author":{"gitId":"rgbpokka"},"content":"    1. Prerequisites: List all guests using the \u0027listguest\u0027 command. Alternatively, click on the \"Guests\" tab to view the list of guests.","lastModifiedDate":"2021-10-29"},{"lineNumber":842,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":843,"author":{"gitId":"NicolasCwy"},"content":"    1. Test case: `editguest pn/S1234 n/Alexander Poon`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":844,"author":{"gitId":"NicolasCwy"},"content":"       Expected:  The guest card of the guest identified by passport number S1234 should be updated to reflect the new name, \"Alexander Poon\".","lastModifiedDate":"2021-10-29"},{"lineNumber":845,"author":{"gitId":"rgbpokka"},"content":"       The result display shows the details of the guest that has just been edited.","lastModifiedDate":"2021-10-29"},{"lineNumber":846,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":847,"author":{"gitId":"rgbpokka"},"content":"    1. Test case: `editguest pn/`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":848,"author":{"gitId":"rgbpokka"},"content":"       Expected:  No guest is edited. Error details shown in the result display.","lastModifiedDate":"2021-10-29"},{"lineNumber":849,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":850,"author":{"gitId":"NicolasCwy"},"content":"    1. Other incorrect editguest commands to try: `editguest pn/S1234`, `editguest n/Bernice Yu`.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":851,"author":{"gitId":"rgbpokka"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-10-29"},{"lineNumber":852,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":853,"author":{"gitId":"NicolasCwy"},"content":"### Charging a guest for services","lastModifiedDate":"2021-10-29"},{"lineNumber":854,"author":{"gitId":"NicolasCwy"},"content":"1. Charges a guest a service","lastModifiedDate":"2021-10-29"},{"lineNumber":855,"author":{"gitId":"NicolasCwy"},"content":"   1. Test case: `chargeguest pn/S123 vid/001`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":856,"author":{"gitId":"NicolasCwy"},"content":"      Expected: Service from \u003cVENDOR\u003e has been billed to \u003cGUEST\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":857,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":858,"author":{"gitId":"calvintanwj"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Please perform this test case twice, as it will be used in the invoice generation test case.","lastModifiedDate":"2021-11-04"},{"lineNumber":859,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":860,"author":{"gitId":"NicolasCwy"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":861,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":862,"author":{"gitId":"rgbpokka"},"content":"### Checking out a guest","lastModifiedDate":"2021-10-29"},{"lineNumber":863,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":864,"author":{"gitId":"rgbpokka"},"content":"1. Checking out a guest while all guests are being shown","lastModifiedDate":"2021-10-29"},{"lineNumber":865,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":866,"author":{"gitId":"rgbpokka"},"content":"    1. Prerequisites: List all guests using the \u0027listguest\u0027 command. Alternatively, click on the \"Guests\" tab to view the list of guests.","lastModifiedDate":"2021-10-29"},{"lineNumber":867,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":868,"author":{"gitId":"NicolasCwy"},"content":"    1. Test case: `checkout pn/S1234`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":869,"author":{"gitId":"NicolasCwy"},"content":"       Expected:  The guest card of the guest identified by passport number S1234 should no longer be visible in the guests list.","lastModifiedDate":"2021-10-29"},{"lineNumber":870,"author":{"gitId":"rgbpokka"},"content":"       The result display shows the details of the guest that has just been checked out. An invoice is generated for the guest as well.","lastModifiedDate":"2021-10-29"},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":872,"author":{"gitId":"rgbpokka"},"content":"    1. Test case: `checkout pn/`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":873,"author":{"gitId":"rgbpokka"},"content":"       Expected:  No guest is checked out. Error details shown in the result display.","lastModifiedDate":"2021-10-29"},{"lineNumber":874,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":875,"author":{"gitId":"rgbpokka"},"content":"    1. Other incorrect editguest commands to try: `checkout pn/A123`, `editguest pn/@@@@@`.","lastModifiedDate":"2021-10-29"},{"lineNumber":876,"author":{"gitId":"rgbpokka"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-10-29"},{"lineNumber":877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":878,"author":{"gitId":"NicolasCwy"},"content":"### Viewing invoice generated","lastModifiedDate":"2021-10-29"},{"lineNumber":879,"author":{"gitId":"NicolasCwy"},"content":"1. Upon performing the `checkout` command in the previous section, a PDF invoice of all the guests expenses will be generated.","lastModifiedDate":"2021-10-29"},{"lineNumber":880,"author":{"gitId":"NicolasCwy"},"content":"   1. test case: From previous step\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":881,"author":{"gitId":"NicolasCwy"},"content":"   Expected: Check directory which contains jar file for PDF named `S1234 \u003cCURRENT_TIME\u003e`, PDF should contain base price of hotel stay and the 2 charges by vendor 001","lastModifiedDate":"2021-10-29"},{"lineNumber":882,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":883,"author":{"gitId":"NicolasCwy"},"content":"### Return check in","lastModifiedDate":"2021-10-29"},{"lineNumber":884,"author":{"gitId":"NicolasCwy"},"content":"1. Return check in for guests whose details have been previously entered into the hotel","lastModifiedDate":"2021-10-29"},{"lineNumber":885,"author":{"gitId":"NicolasCwy"},"content":"   1. test case: `returncheckin pn/S1234 r/411`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":886,"author":{"gitId":"NicolasCwy"},"content":"   Expected: Checked in guest.","lastModifiedDate":"2021-10-29"},{"lineNumber":887,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":888,"author":{"gitId":"NicolasCwy"},"content":"### Filter guest","lastModifiedDate":"2021-10-29"},{"lineNumber":889,"author":{"gitId":"NicolasCwy"},"content":"1. Filter guests with fields","lastModifiedDate":"2021-10-29"},{"lineNumber":890,"author":{"gitId":"NicolasCwy"},"content":"   1. test case: `filter guest n/Ale`, filters all guest that name starts with \"Ale\"","lastModifiedDate":"2021-10-29"},{"lineNumber":891,"author":{"gitId":"NicolasCwy"},"content":"   Expected: Message saying `X guest listed`","lastModifiedDate":"2021-10-29"},{"lineNumber":892,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":893,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":894,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":895,"author":{"gitId":"NicolasCwy"},"content":"**:information_source: Note**\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":896,"author":{"gitId":"NicolasCwy"},"content":"* Name field is case sensitive","lastModifiedDate":"2021-10-29"},{"lineNumber":897,"author":{"gitId":"NicolasCwy"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":898,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":899,"author":{"gitId":"calvintanwj"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:**\u003cbr\u003e * Name field is case sensitive","lastModifiedDate":"2021-11-04"},{"lineNumber":900,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":901,"author":{"gitId":"calvintanwj"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":902,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":903,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":904,"author":{"gitId":"NicolasCwy"},"content":"### Show all guests","lastModifiedDate":"2021-10-29"},{"lineNumber":905,"author":{"gitId":"NicolasCwy"},"content":"1. Removes filters and switches to the guest list","lastModifiedDate":"2021-10-29"},{"lineNumber":906,"author":{"gitId":"NicolasCwy"},"content":"   1. test case:","lastModifiedDate":"2021-10-29"},{"lineNumber":907,"author":{"gitId":"NicolasCwy"},"content":"      1. Perform filter guest example above","lastModifiedDate":"2021-10-29"},{"lineNumber":908,"author":{"gitId":"NicolasCwy"},"content":"      2. Click on vendor list","lastModifiedDate":"2021-10-29"},{"lineNumber":909,"author":{"gitId":"NicolasCwy"},"content":"      3. `listguest`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":910,"author":{"gitId":"NicolasCwy"},"content":"   Expected: List will switch to guest and remove filters","lastModifiedDate":"2021-10-29"},{"lineNumber":911,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":912,"author":{"gitId":"NicolasCwy"},"content":"### Delete guest","lastModifiedDate":"2021-10-29"},{"lineNumber":913,"author":{"gitId":"NicolasCwy"},"content":"1. Deletes guest based on its passport number.","lastModifiedDate":"2021-10-29"},{"lineNumber":914,"author":{"gitId":"NicolasCwy"},"content":"    1. test case: `deleteguest pn/S1234`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":915,"author":{"gitId":"NicolasCwy"},"content":"    Expected: Message notifying that guest is deleted","lastModifiedDate":"2021-10-29"},{"lineNumber":916,"author":{"gitId":"NicolasCwy"},"content":"    2. test case (Deleting an archived guest):","lastModifiedDate":"2021-10-29"},{"lineNumber":917,"author":{"gitId":"NicolasCwy"},"content":"       1. `checkin n/Bobby pn/S1234 e/bobby@email.com r/23 t/VIP t/Deluxe Room`","lastModifiedDate":"2021-10-29"},{"lineNumber":918,"author":{"gitId":"NicolasCwy"},"content":"       2. `checkout pn/1234`","lastModifiedDate":"2021-10-29"},{"lineNumber":919,"author":{"gitId":"NicolasCwy"},"content":"       3. `deleteguest pn/1234`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":920,"author":{"gitId":"NicolasCwy"},"content":"   Expected: Message notifying that guest is deleted","lastModifiedDate":"2021-10-29"},{"lineNumber":921,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":922,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":923,"author":{"gitId":"NicolasCwy"},"content":"### Clear guest","lastModifiedDate":"2021-10-29"},{"lineNumber":924,"author":{"gitId":"NicolasCwy"},"content":"1. Deletes all guests from PH, even archived ones","lastModifiedDate":"2021-10-29"},{"lineNumber":925,"author":{"gitId":"NicolasCwy"},"content":"   1. test case:","lastModifiedDate":"2021-10-29"},{"lineNumber":926,"author":{"gitId":"NicolasCwy"},"content":"      1. `checkin n/Bobby pn/S1234 e/bobby@email.com r/23 t/VIP t/Deluxe Room`","lastModifiedDate":"2021-10-29"},{"lineNumber":927,"author":{"gitId":"NicolasCwy"},"content":"      2. `checkout pn/1234`","lastModifiedDate":"2021-10-29"},{"lineNumber":928,"author":{"gitId":"NicolasCwy"},"content":"      3. `clearguest`","lastModifiedDate":"2021-10-29"},{"lineNumber":929,"author":{"gitId":"NicolasCwy"},"content":"      4. `returncheckin pn/S1234 r/111`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":930,"author":{"gitId":"NicolasCwy"},"content":"   Expected: All guests from guest list will be cleared, `returncheckin` command will throw an error as guest cannot be found in archive","lastModifiedDate":"2021-10-29"},{"lineNumber":931,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":932,"author":{"gitId":"NicolasCwy"},"content":"### Adding a vendor","lastModifiedDate":"2021-10-29"},{"lineNumber":933,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":934,"author":{"gitId":"NicolasCwy"},"content":"1. Add vendor to list of vendors","lastModifiedDate":"2021-10-29"},{"lineNumber":935,"author":{"gitId":"NicolasCwy"},"content":"   1. test case:","lastModifiedDate":"2021-10-29"},{"lineNumber":936,"author":{"gitId":"NicolasCwy"},"content":"      1. `addvendor vid/123 n/Wang\u0027s Satay e/satayMan@email.com p/84711231 a/Geylang Street 31 sn/Satay c/5 oh/15 0800-2000`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":937,"author":{"gitId":"NicolasCwy"},"content":"      Expected: Adds vendor with vendor ID 123, called Wang\u0027s Satay with email address satayMan@email.com, phone number 84711231, address Geylang Street 31","lastModifiedDate":"2021-10-29"},{"lineNumber":938,"author":{"gitId":"NicolasCwy"},"content":"      , service name \"Satay\", and operating hours Monday and Friday 0800-2000.","lastModifiedDate":"2021-10-29"},{"lineNumber":939,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":940,"author":{"gitId":"rgbpokka"},"content":"### Editing a vendor","lastModifiedDate":"2021-10-29"},{"lineNumber":941,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":942,"author":{"gitId":"rgbpokka"},"content":"1. Editing a vendor while all vendors are being shown","lastModifiedDate":"2021-10-29"},{"lineNumber":943,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":944,"author":{"gitId":"rgbpokka"},"content":"    1. Prerequisites: List all vendors using the \u0027listvendor\u0027 command. Alternatively, click on the \"Vendors\" tab to view the list of vendors.","lastModifiedDate":"2021-10-29"},{"lineNumber":945,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":946,"author":{"gitId":"rgbpokka"},"content":"    1. Test case: `editvendor vid/001 n/Jeremy Western Delivery`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":947,"author":{"gitId":"rgbpokka"},"content":"       Expected:  The vendor card of the vendor identified by vendor id 001 should be updated to reflect the new name, \"Jeremy Western Delivery\".","lastModifiedDate":"2021-10-29"},{"lineNumber":948,"author":{"gitId":"rgbpokka"},"content":"       The result display shows the details of the vendor that has just been edited.","lastModifiedDate":"2021-10-29"},{"lineNumber":949,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":950,"author":{"gitId":"rgbpokka"},"content":"    1. Test case: `editvendor vid/`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":951,"author":{"gitId":"rgbpokka"},"content":"       Expected:  No vendor is edited. Error details shown in the result display.","lastModifiedDate":"2021-10-29"},{"lineNumber":952,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":953,"author":{"gitId":"rgbpokka"},"content":"    1. Other incorrect editvendor commands to try: `editvendor vid/001`, `editvendor n/Bing Massage Parlour`.\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":954,"author":{"gitId":"rgbpokka"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-10-29"},{"lineNumber":955,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":956,"author":{"gitId":"NicolasCwy"},"content":"### Filter vendor","lastModifiedDate":"2021-10-29"},{"lineNumber":957,"author":{"gitId":"NicolasCwy"},"content":"1. Filters vendors according to filter","lastModifiedDate":"2021-10-29"},{"lineNumber":958,"author":{"gitId":"NicolasCwy"},"content":"    1. Test case: `filtervendor oh/5 0800`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":959,"author":{"gitId":"NicolasCwy"},"content":"   Expected: Filters vendors that are open at 0800 and displays to the GUI","lastModifiedDate":"2021-10-29"},{"lineNumber":960,"author":{"gitId":"NicolasCwy"},"content":"    2. Test case: `filtervendor oh/5 0800-1300`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":961,"author":{"gitId":"NicolasCwy"},"content":"    Expected: Filters all vendors that operate anywhere between 0800 and 1300 on a Friday and displays them to the GUI","lastModifiedDate":"2021-10-29"},{"lineNumber":962,"author":{"gitId":"NicolasCwy"},"content":"    3. Test caseL `filtervendor sn/Food`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":963,"author":{"gitId":"NicolasCwy"},"content":"    Expected: Filters all vendors that have a service name field of food.","lastModifiedDate":"2021-10-29"},{"lineNumber":964,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":965,"author":{"gitId":"NicolasCwy"},"content":"### Show all vendors","lastModifiedDate":"2021-10-29"},{"lineNumber":966,"author":{"gitId":"NicolasCwy"},"content":"1. Removes filters and switches to the vendor list","lastModifiedDate":"2021-10-29"},{"lineNumber":967,"author":{"gitId":"NicolasCwy"},"content":"    1. test case:","lastModifiedDate":"2021-10-29"},{"lineNumber":968,"author":{"gitId":"NicolasCwy"},"content":"        1. Perform filter vendor example above","lastModifiedDate":"2021-10-29"},{"lineNumber":969,"author":{"gitId":"NicolasCwy"},"content":"        2. Click on guest list","lastModifiedDate":"2021-10-29"},{"lineNumber":970,"author":{"gitId":"NicolasCwy"},"content":"        3. `listvendor`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":971,"author":{"gitId":"NicolasCwy"},"content":"           Expected: List will switch to vendor and removes filters","lastModifiedDate":"2021-10-29"},{"lineNumber":972,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":973,"author":{"gitId":"NicolasCwy"},"content":"### Deleting a vendor","lastModifiedDate":"2021-10-29"},{"lineNumber":974,"author":{"gitId":"NicolasCwy"},"content":"1. Deletes a vendor based on its vendor ID","lastModifiedDate":"2021-10-29"},{"lineNumber":975,"author":{"gitId":"NicolasCwy"},"content":"   1. test case: `deletevendor vid/123`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":976,"author":{"gitId":"NicolasCwy"},"content":"   Expected: Deletes vendor with vid 123 from PH","lastModifiedDate":"2021-10-29"},{"lineNumber":977,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":978,"author":{"gitId":"NicolasCwy"},"content":"### Clear vendor","lastModifiedDate":"2021-10-29"},{"lineNumber":979,"author":{"gitId":"NicolasCwy"},"content":"1. Deletes all vendors from PH.","lastModifiedDate":"2021-10-29"},{"lineNumber":980,"author":{"gitId":"NicolasCwy"},"content":"    1. test case: `clearvendor`\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":981,"author":{"gitId":"NicolasCwy"},"content":"       Expected: Deletes all vendors from PH, vendor list will be empty.","lastModifiedDate":"2021-10-29"},{"lineNumber":982,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23"},{"lineNumber":983,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":984,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":985,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":986,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":987,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":988,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":989,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":990,"author":{"gitId":"calvintanwj"},"content":"   i. Test case: go to `data\\addressbook.json` and corrupt the file. On bootup of the program, there should be a","lastModifiedDate":"2021-10-16"},{"lineNumber":991,"author":{"gitId":"calvintanwj"},"content":"   notification in the command box saying","lastModifiedDate":"2021-10-16"},{"lineNumber":992,"author":{"gitId":"bingcheng45"},"content":"   \"File corrupted! Restored a new file.\" and the program will delete and load a fresh new file.","lastModifiedDate":"2021-10-01"},{"lineNumber":993,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":994,"author":{"gitId":"bingcheng45"},"content":"   ii. Rename `data\\addressbook.json` to something else like `data\\addressbook.json` would cause the addressbook","lastModifiedDate":"2021-10-22"},{"lineNumber":995,"author":{"gitId":"bingcheng45"},"content":"   to be not found and load the sample contacts into the addressbook.","lastModifiedDate":"2021-10-22"},{"lineNumber":996,"author":{"gitId":"bingcheng45"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2021-10-22"},{"lineNumber":997,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":998,"author":{"gitId":"calvintanwj"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-02"},{"lineNumber":999,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":1000,"author":{"gitId":"calvintanwj"},"content":"## **Appendix C: Effort**","lastModifiedDate":"2021-11-02"},{"lineNumber":1001,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"rgbpokka":57,"calvintanwj":486,"alyssa-savier":4,"bingcheng45":6,"-":297,"NicolasCwy":152}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"\u003ch3\u003e\u003ci\u003eWelcome to the Pocket Hotel User Guide!\u003c/i\u003e\u003c/h3\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"**Pocket Hotel (PH)** is a specialized contact management desktop app targeted towards hotel front office staff such as front desk staff who","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"frequently interact with guests.","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"**PH** provides a centralized location to store, organize and manage information linked to your guests and vendors employed by the hotel. **PH**","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"streamlines your workflow and is optimized for use via the _Command Line Interface_ (**CLI**), whilst still embodying","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"the benefits of a _Graphical User Interface_ (**GUI**). This means that faster typists would have the benefit of carrying out actions faster using our","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"NicolasCwy"},"content":"_Command Line Interface_(**CLI**) than through the _Graphical User Interface_ (**GUI**) using actions such as mouse clicks.","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"This user guide serves as an entry point for users to get oriented with how **PH** operates and how you may utilize it","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"fully to integrate it within your hotel management system.","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"Do not worry if this is your first time using a _CLI_ application, jump to our [Using this Guide](#using-this-guide) section to learn more about how","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"NicolasCwy"},"content":"you are able to use this guide as we intended and become a master in using our application!","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"NicolasCwy"},"content":"# **Table of Contents**","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"# **Using this Guide**","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"Before you start, we would like to help orientate you to some symbols and text markups that you","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"will frequently encounter throughout this guide.","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"**:information_source: This is a note:**\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"* Notes will be useful in providing additional information of a certain feature or section.","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"This is a caution.","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"Do look out for these! They warn you about any possible risks or dangers of a given action.","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"Markup | Meaning","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"-------|------------------","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"[Click me!](#using-this-guide) | These are hyperlinks, that are meant to provide you an easier time navigating this guide.","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"**PH** | Denotes glossary terms. These are words that may be confusing or too technical to you. You may refer to the [glossary](#glossary) if lost.","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"`help` | Denotes the commands and parameters used in the application.","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"NicolasCwy"},"content":"# **Quick start**","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"NicolasCwy"},"content":"1. Ensure you have Java `11` or above installed in your Computer ([Instructions on how to check Java version](#faq)).","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"   1. If you do not have Java `11` installed on your computer. ([Instructions on how to install Java 11](#faq)).","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"2. Download the latest `PH.jar` from [here](https://github.com/AY2122S1-CS2103T-W12-3/tp/releases).","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for **PH**.","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"4. To start the application, you may either:","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"   1. Double-click the `PH.jar` file to boot up the app.","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"   2. Open up your _shell terminal_ in the directory where **PH** resides, and run the command `java -jar PH.jar`.","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"NicolasCwy"},"content":"   (You may follow these guides for [Mac](https://www.macworld.com/article/221277/command-line-navigating-files-folders-mac-terminal.html) or [Windows](https://www.howtogeek.com/659411/how-to-change-directories-in-command-prompt-on-windows-10/))","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"NicolasCwy"},"content":"      The **GUI** similar to the picture below, should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"For Mac users, method 2 is the recommended way to open your files to ensure that you are able to see the save data for **PH**","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"NicolasCwy"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"NicolasCwy"},"content":"![](images/UIHighlightingCommandBox.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"\u003cp align\u003d\"center\"\u003e\u003ci\u003eFigure 1. Pocket Hotel GUI\u003c/i\u003e\u003c/p\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"5. Type any command in the command box _(Highlighted in red above)_ and press Enter to execute it. e.g. typing `help` and pressing Enter will","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"NicolasCwy"},"content":"   open the help window. Click the tab for the list that you would like to view e.g click vendor to view vendors in stored in **PH**\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"bingcheng45"},"content":"    * **`checkin`**`n/John Doe pn/X12345678F r/123 e/johnd@example.com t/Senior Citizen` : Adds a guest","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"NicolasCwy"},"content":"      named `John Doe` to the address book.","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"NicolasCwy"},"content":"    * **`deleteguest`**`pn/X12345678F` : Deletes the guest with passport number X12345678F.","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"NicolasCwy"},"content":"    * **`addvendor`**`vid/123 n/Wang\u0027s Satay e/satayMan@email.com p/84711231 a/Geylang Street 31 sn/Satay c/5 oh/1 0800-2000` : Adds a vendor","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"NicolasCwy"},"content":"        named `Wang\u0027s Satay` to the address book.","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"    * **`deletevendor`**`vid/123` : Deletes the vendor with vendor id 123.","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"NicolasCwy"},"content":"You may refer to the [features](#features) below for details of each command and to get familiarized with the syntax of","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"the commands.","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"NicolasCwy"},"content":"# **Features**","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"**PH**’s features revolve around managing your **guests** and **vendors**. For each command, a short description of its use is","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"given which is then followed by the format and a short example to help ensure that you have executed the command","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"correctly.","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"NicolasCwy"},"content":"A quick overview of all the commands can be found in the [command summary](#command-summary).","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"NicolasCwy"},"content":"Certain commands require parameters, which may have constraints. A quick overview of all the underlying","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"NicolasCwy"},"content":"constraints can be found in the [parameter constraints.](#parameter-constraints-section)","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"* Words in `UPPER_CASE` are the parameters to be entered by the user.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"  e.g. in `checkin n/NAME`, `NAME` is a parameter which can be used as `checkin n/John Doe`.","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"* Parameter prefixes such as `n/` and `pn/` are special keywords that indicate a start of a parameter.","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"* Fields with square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"NicolasCwy"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/Bing Cheng t/VIP` or as `n/Bing Cheng`.","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"  e.g. if the command specifies `n/NAME pn/PASSPORT_NUMBER`, `pn/PASSPORT_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit`) will be","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":127,"author":{"gitId":"NicolasCwy"},"content":"* All fields cannot be empty","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"NicolasCwy"},"content":"* The tag field is optional and can be omitted entirely (You can learn more about tags [here](#Tagging-a-guest-or-vendor).)","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"NicolasCwy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"NicolasCwy"},"content":"## Contacts in Pocket Hotel","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"There are 2 types of contacts in **PH**, **guests** and **vendors**. Guests represent guests of the hotel, and vendors represent external companies employed by a hotel for services. Guest are identified by their `PASSPORT_NUMBER`","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"and Vendors are identified by their `VENDOR_ID`. These fields are their **unique identifier**, and no two contacts can have the same unique identifier.","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"It is possible for **guests** and **vendors** to have the same **unique identifier** for example, `VENDOR_ID` of a vendor is 111 and `PASSPORT_NUMBER` for a guest is 111, as they represent 2 different entities.","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"NicolasCwy"},"content":"Guests and vendors have different parameters, which can be found in the [parameter constraints table](#parameter-constraints-section) or in the command instructions.","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"NicolasCwy"},"content":"## Navigating between guest and vendor list","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"You have 2 options to navigate between the **guest** and **vendor** list.","lastModifiedDate":"2021-11-02"},{"lineNumber":145,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"NicolasCwy"},"content":"Either","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"NicolasCwy"},"content":"1. Click the button on the **GUI** to view the different lists e.g To view the guest list click on the guest button.","lastModifiedDate":"2021-10-28"},{"lineNumber":148,"author":{"gitId":"NicolasCwy"},"content":"![UIHighightingGuestAndVendorListButton](images/UIHighightingGuestAndVendorListButton.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"NicolasCwy"},"content":"2. Use the `listguest` or `listvendor` command to view the respective lists.","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"NicolasCwy"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"NicolasCwy"},"content":"* Regardless of the list currently being viewed, you are able to execute any command. e.g While viewing the guest list,","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"NicolasCwy"},"content":"  you are able to add a vendor. Toggle back to the vendor list to see the reflected changes.","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"NicolasCwy"},"content":"## Tagging a guest or vendor","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"We have implemented a tagging system that allows you to attach labels to **guests** or **vendors**. You are able to see the","lastModifiedDate":"2021-11-02"},{"lineNumber":160,"author":{"gitId":"NicolasCwy"},"content":"tags attached to every guest or vendor, and the `filterguest` and `filtervendor` commands allows you to filter your lists","lastModifiedDate":"2021-10-28"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"by fields or even tags! These tags can be used in _any way you like_. One idea is to","lastModifiedDate":"2021-11-02"},{"lineNumber":162,"author":{"gitId":"NicolasCwy"},"content":"note down important details about guest such as adding a \"vegetarian\" tag to guests who are vegetarian or have other dietary","lastModifiedDate":"2021-10-28"},{"lineNumber":163,"author":{"gitId":"NicolasCwy"},"content":"restrictions.","lastModifiedDate":"2021-10-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"NicolasCwy"},"content":"Every vendor and guest can have more than one tag attached to them, so you are free to integrate your existing system of organising guests or vendors","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"right into **PH**!","lastModifiedDate":"2021-11-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":168,"author":{"gitId":"NicolasCwy"},"content":"## Archiving guest information","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"NicolasCwy"},"content":"Upon [checking out](#checking-out-a-guest-checkout) a **guest**, their contact is removed from the list, BUT their information is not deleted. It is instead moved","lastModifiedDate":"2021-11-02"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"to an archive where the information is stored. This allows you to use the `returncheckin` command to check in the **guest** on their","lastModifiedDate":"2021-11-02"},{"lineNumber":171,"author":{"gitId":"NicolasCwy"},"content":"subsequent visits and saves you the time of entering all their information again.","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":173,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":174,"author":{"gitId":"NicolasCwy"},"content":"**:information_source: Notes:**\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":175,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":176,"author":{"gitId":"NicolasCwy"},"content":"* When a guest is in the archive, the `clearguest` and `deleteguest` commands are able to delete this guest.","lastModifiedDate":"2021-10-28"},{"lineNumber":177,"author":{"gitId":"NicolasCwy"},"content":"* You are not able to edit a guest in the archive.","lastModifiedDate":"2021-10-28"},{"lineNumber":178,"author":{"gitId":"NicolasCwy"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":179,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":180,"author":{"gitId":"NicolasCwy"},"content":"## Invoice Generation","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"NicolasCwy"},"content":"Upon checking out a **guest**, a **PDF** invoice will be generated in a folder called `Invoices` in the directory that the `PH.jar` is found in. The invoice will be named in the format","lastModifiedDate":"2021-11-02"},{"lineNumber":182,"author":{"gitId":"NicolasCwy"},"content":"`GUEST_NAME YYYY-MM-DD HH-MM-SS.pdf`, where the `YYYY-MM-DD HH-MM-SS` denotes the current year, month, data, hours, minutes and seconds, at the time the invoice was generated.","lastModifiedDate":"2021-10-28"},{"lineNumber":183,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"NicolasCwy"},"content":"The invoice contains information such as the guest details and any services","lastModifiedDate":"2021-11-02"},{"lineNumber":185,"author":{"gitId":"NicolasCwy"},"content":"that have been used during the guests stay (See [chargeguest](#charge-a-guest-for-a-service-chargeguest))","lastModifiedDate":"2021-11-02"},{"lineNumber":186,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":187,"author":{"gitId":"NicolasCwy"},"content":"![](images/SampleInvoice.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"NicolasCwy"},"content":"**:information_source: Notes:**\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"calvintanwj"},"content":"* This time is based off the internal clock of your computer.","lastModifiedDate":"2021-11-02"},{"lineNumber":193,"author":{"gitId":"NicolasCwy"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"NicolasCwy"},"content":"## Commands","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"NicolasCwy"},"content":"### Manage Guests","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"NicolasCwy"},"content":"#### Checking in a new guest: `checkin`","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"NicolasCwy"},"content":"Checks in a new **guest** by adding their contact details into **PH**.","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`checkin pn/\u003cPASSPORT_NUMBER\u003e n/\u003cNAME\u003e e/\u003cEMAIL\u003e r/\u003cROOM_NUMBER\u003e [t/\u003cTAG\u003e]`","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"NicolasCwy"},"content":"Parameters:","lastModifiedDate":"2021-10-28"},{"lineNumber":209,"author":{"gitId":"calvintanwj"},"content":"* `NAME`: No constraints on name used. Cannot be left blank.","lastModifiedDate":"2021-11-01"},{"lineNumber":210,"author":{"gitId":"NicolasCwy"},"content":"* `PASSPORT_NUMBER`: Should only contain alphanumeric characters.","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"NicolasCwy"},"content":"* `EMAIL`: A valid email address should be used.","lastModifiedDate":"2021-10-28"},{"lineNumber":212,"author":{"gitId":"NicolasCwy"},"content":"* `ROOM_NUMBER`: Only numbers greater than 0 are valid.","lastModifiedDate":"2021-10-28"},{"lineNumber":213,"author":{"gitId":"NicolasCwy"},"content":"* `TAG`: An optional field, more than one can be included in the command.","lastModifiedDate":"2021-10-28"},{"lineNumber":214,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"NicolasCwy"},"content":"Example:","lastModifiedDate":"2021-10-28"},{"lineNumber":216,"author":{"gitId":"NicolasCwy"},"content":"![addGuest.png](images/addGuest.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"calvintanwj"},"content":"* `checkin n/Bing Cheng pn/T0134568D e/bc@gmail.com r/69` , adds a new **guest**, Bing Cheng to **PH** and shows the new contact","lastModifiedDate":"2021-11-02"},{"lineNumber":218,"author":{"gitId":"calvintanwj"},"content":"  list.","lastModifiedDate":"2021-10-16"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-28"},{"lineNumber":221,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":222,"author":{"gitId":"NicolasCwy"},"content":"#### Checking in a returning guest: `returncheckin`","lastModifiedDate":"2021-10-28"},{"lineNumber":223,"author":{"gitId":"calvintanwj"},"content":"Checks in a returning **guest** into **PH**, by retrieving their details from the archive and providing them a new room number to check into.","lastModifiedDate":"2021-11-02"},{"lineNumber":224,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`returncheckin pn/\u003cPASSPORT_NUMBER\u003e r/\u003cROOM_NUMBER\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"NicolasCwy"},"content":"Parameters:","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"NicolasCwy"},"content":"* `PASSPORT_NUMBER`: Should only contain alphanumeric characters.","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"NicolasCwy"},"content":"* `ROOM_NUMBER`: Only numbers greater than 0 are valid.","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":233,"author":{"gitId":"NicolasCwy"},"content":"**:information_source: What is the archive?**\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":234,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":235,"author":{"gitId":"NicolasCwy"},"content":"* Contains past records of guests who have stayed at the hotel","lastModifiedDate":"2021-11-02"},{"lineNumber":236,"author":{"gitId":"NicolasCwy"},"content":"* Guest is added to the archive by performing the `checkout` command","lastModifiedDate":"2021-11-02"},{"lineNumber":237,"author":{"gitId":"NicolasCwy"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":238,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":239,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-28"},{"lineNumber":240,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"NicolasCwy"},"content":"#### Checking out a guest: `checkout`","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"calvintanwj"},"content":"Checks out a **guest** by archiving their details and generating an invoice for all the services hired by the **guest** during their stay.","lastModifiedDate":"2021-11-02"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"rgbpokka"},"content":"Format:","lastModifiedDate":"2021-09-30"},{"lineNumber":245,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`checkout pn/\u003cPASSPORT_NUMBER\u003e`","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"bingcheng45"},"content":"Parameters:","lastModifiedDate":"2021-10-28"},{"lineNumber":248,"author":{"gitId":"NicolasCwy"},"content":"* `PASSPORT_NUMBER`: Should only contain alphanumeric characters.","lastModifiedDate":"2021-10-28"},{"lineNumber":249,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":250,"author":{"gitId":"NicolasCwy"},"content":"Example:","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"bingcheng45"},"content":"* `checkout pn/X12345678A` checks out the guest Bing Cheng, whose passport number is X12345678A.","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":255,"author":{"gitId":"NicolasCwy"},"content":"**:information_source: What is the archive?**\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":256,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":257,"author":{"gitId":"NicolasCwy"},"content":"* Contains past records of guests who have stayed at the hotel","lastModifiedDate":"2021-11-02"},{"lineNumber":258,"author":{"gitId":"NicolasCwy"},"content":"* Guest is added to the archive by performing the `checkout` command","lastModifiedDate":"2021-11-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":261,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":263,"author":{"gitId":"NicolasCwy"},"content":"#### Editing fields of a guest: `editguest`","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":265,"author":{"gitId":"bingcheng45"},"content":"Edits a **guest**\u0027s contact details. Only edits the fields that have been passed in as parameters (See example for further","lastModifiedDate":"2021-10-28"},{"lineNumber":266,"author":{"gitId":"bingcheng45"},"content":"elaboration).","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":268,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":270,"author":{"gitId":"calvintanwj"},"content":"`editguest pn/\u003cPASSPORT_NUMBER\u003e [\u003cFIELD_NAME\u003e/\u003cNEW_FIELD_DETAILS\u003e]`","lastModifiedDate":"2021-11-02"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":272,"author":{"gitId":"bingcheng45"},"content":"Parameters:","lastModifiedDate":"2021-10-28"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"NicolasCwy"},"content":"* `PASSPORT_NUMBER`: Should only contain alphanumeric characters.","lastModifiedDate":"2021-10-28"},{"lineNumber":275,"author":{"gitId":"calvintanwj"},"content":"* `NAME`: No constraints on name used. Cannot be left blank.","lastModifiedDate":"2021-11-01"},{"lineNumber":276,"author":{"gitId":"NicolasCwy"},"content":"* `EMAIL`: A valid email address should be used.","lastModifiedDate":"2021-10-28"},{"lineNumber":277,"author":{"gitId":"NicolasCwy"},"content":"* `ROOM_NUMBER`: Only numbers greater than 0 are valid.","lastModifiedDate":"2021-10-28"},{"lineNumber":278,"author":{"gitId":"NicolasCwy"},"content":"* `TAG`: An optional field, more than one can be included in each command.","lastModifiedDate":"2021-10-28"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":280,"author":{"gitId":"bingcheng45"},"content":"Example:","lastModifiedDate":"2021-10-28"},{"lineNumber":281,"author":{"gitId":"bingcheng45"},"content":"* `editguest pn/X12345678A r/123` locates the guest Bing Cheng, by his passport number X12345678A and overwrites the","lastModifiedDate":"2021-10-28"},{"lineNumber":282,"author":{"gitId":"bingcheng45"},"content":"  room number field with the new room number provided. All his other fields (**NAME**, **EMAIL**, **PASSPORT_NUMBER**, **TAG**)","lastModifiedDate":"2021-10-28"},{"lineNumber":283,"author":{"gitId":"bingcheng45"},"content":"  will remain unchanged.","lastModifiedDate":"2021-10-28"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":285,"author":{"gitId":"bingcheng45"},"content":"* `editguest pn/X87654321A t/VIP t/LoyalGuest e/jj@mailer.com` locates the guest Jeremy, by his passport number X87654321A and overwrites his existing tags with the new tags provided,","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"bingcheng45"},"content":"  and overwrites the old email field with the new email provided. All his other fields (**NAME**, **PASSPORT_NUMBER**, **ROOM_NUMBER**) will remain unchanged.","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":288,"author":{"gitId":"bingcheng45"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":289,"author":{"gitId":"bingcheng45"},"content":"**:information_source: Notes:**\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":291,"author":{"gitId":"bingcheng45"},"content":"* Existing field values will be overwritten by the newly provided field values.","lastModifiedDate":"2021-10-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":293,"author":{"gitId":"calvintanwj"},"content":"* The passport number must be provided, as it is used to identify which guest to be edited.","lastModifiedDate":"2021-11-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":295,"author":{"gitId":"bingcheng45"},"content":"* You need to specify at least one field to edit.","lastModifiedDate":"2021-10-28"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"bingcheng45"},"content":"* You can edit more than one field at a time (See example above).","lastModifiedDate":"2021-10-28"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":299,"author":{"gitId":"rgbpokka"},"content":"* You cannot edit a guest\u0027s passport number.","lastModifiedDate":"2021-10-31"},{"lineNumber":300,"author":{"gitId":"bingcheng45"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":304,"author":{"gitId":"NicolasCwy"},"content":"#### Deleting a guest\u0027s details: `deleteguest`","lastModifiedDate":"2021-10-28"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":306,"author":{"gitId":"NicolasCwy"},"content":"Deletes an existing **guest**\u0027s contact details from **PH**. Guests deleted can be checked in or in the archive.","lastModifiedDate":"2021-10-24"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":308,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":309,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`deleteguest pn/\u003cPASSPORT_NUMBER\u003e`","lastModifiedDate":"2021-10-24"},{"lineNumber":310,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":311,"author":{"gitId":"NicolasCwy"},"content":"Example:","lastModifiedDate":"2021-10-24"},{"lineNumber":312,"author":{"gitId":"NicolasCwy"},"content":"`deleteguest pn/XNOO19390` deletes the guest who has passport number XNOO19390 from **PH**.","lastModifiedDate":"2021-10-24"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"NicolasCwy"},"content":"#### Clear all checked in guests: `clearguest`","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"calvintanwj"},"content":"Deletes all **guests** that are currently checked in.","lastModifiedDate":"2021-11-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-09-28"},{"lineNumber":321,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`clearguest`","lastModifiedDate":"2021-10-24"},{"lineNumber":322,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":323,"author":{"gitId":"calvintanwj"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-11-02"},{"lineNumber":324,"author":{"gitId":"calvintanwj"},"content":"The `clearguest` command would remove all guests and is irreversible.","lastModifiedDate":"2021-11-02"},{"lineNumber":325,"author":{"gitId":"calvintanwj"},"content":"Only use this command if you are absolutely you need to wipe all guest data.","lastModifiedDate":"2021-11-02"},{"lineNumber":326,"author":{"gitId":"calvintanwj"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":327,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":328,"author":{"gitId":"NicolasCwy"},"content":"**:information_source: Note:**\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":329,"author":{"gitId":"NicolasCwy"},"content":"* **Archived guests** are not deleted.","lastModifiedDate":"2021-10-24"},{"lineNumber":330,"author":{"gitId":"NicolasCwy"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":333,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":334,"author":{"gitId":"NicolasCwy"},"content":"#### Show all guests: `listguest`","lastModifiedDate":"2021-10-28"},{"lineNumber":335,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":336,"author":{"gitId":"calvintanwj"},"content":"Shows all the **guests** checked into the hotel. Useful command to use after `filterguest`,","lastModifiedDate":"2021-11-02"},{"lineNumber":337,"author":{"gitId":"calvintanwj"},"content":"it essentially removes any filter that was previously applied to the guest list.","lastModifiedDate":"2021-10-28"},{"lineNumber":338,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":339,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":340,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`listguest`","lastModifiedDate":"2021-10-24"},{"lineNumber":341,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":342,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":343,"author":{"gitId":"NicolasCwy"},"content":"**:information_source: Notes:**\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":344,"author":{"gitId":"calvintanwj"},"content":"* Guests are not arranged in any particular order\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":345,"author":{"gitId":"calvintanwj"},"content":"* Running the command when you are on the vendor list, will switch to the guest list for you.","lastModifiedDate":"2021-10-28"},{"lineNumber":346,"author":{"gitId":"NicolasCwy"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"NicolasCwy"},"content":"#### Charge a guest for a service: `chargeguest`","lastModifiedDate":"2021-10-28"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"calvintanwj"},"content":"Charges a **guest** for a service offered by a vendor, and adds it to the invoice that will be generated upon checkout.","lastModifiedDate":"2021-11-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":355,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`chargeguest pn/\u003cPASSPORT_NUMBER\u003e vid/\u003cVENDOR_ID\u003e`","lastModifiedDate":"2021-10-24"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"bingcheng45"},"content":"Parameters:","lastModifiedDate":"2021-10-28"},{"lineNumber":358,"author":{"gitId":"bingcheng45"},"content":"* `PASSPORT_NUMBER`: Should only contain alphanumeric characters.","lastModifiedDate":"2021-10-28"},{"lineNumber":359,"author":{"gitId":"bingcheng45"},"content":"* `VENDOR_ID`: Should only contain alphanumeric characters.","lastModifiedDate":"2021-10-28"},{"lineNumber":360,"author":{"gitId":"bingcheng45"},"content":"  * The `VENDOR_ID` must be from one of the existing vendors in the **PH**","lastModifiedDate":"2021-10-28"},{"lineNumber":361,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":362,"author":{"gitId":"bingcheng45"},"content":"Example:","lastModifiedDate":"2021-10-28"},{"lineNumber":363,"author":{"gitId":"bingcheng45"},"content":"* `chargeguest pn/T0134568D vid/001` , Charge the guest with passport number `T0134568D` with the service","lastModifiedDate":"2021-10-28"},{"lineNumber":364,"author":{"gitId":"bingcheng45"},"content":"provided by the vendor with the vendor id of `001`.","lastModifiedDate":"2021-10-28"},{"lineNumber":365,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":366,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":367,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":368,"author":{"gitId":"NicolasCwy"},"content":"#### Filter guest list: `filterguest`","lastModifiedDate":"2021-10-28"},{"lineNumber":369,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":370,"author":{"gitId":"calvintanwj"},"content":"Displays only the **guests** that meet your requirements, as specified by what you wrote in your filter. This helps you","lastModifiedDate":"2021-11-02"},{"lineNumber":371,"author":{"gitId":"calvintanwj"},"content":"easily find and search through _smaller and more manageable lists_, instead of scrolling through the entire guest list.","lastModifiedDate":"2021-11-02"},{"lineNumber":372,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":373,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":374,"author":{"gitId":"calvintanwj"},"content":"`filterguest [\u003cFILTER_FIELD_NAME\u003e/\u003cFILTER_FIELD_VALUE\u003e]`","lastModifiedDate":"2021-11-02"},{"lineNumber":375,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":376,"author":{"gitId":"calvintanwj"},"content":"Parameters:","lastModifiedDate":"2021-10-28"},{"lineNumber":377,"author":{"gitId":"calvintanwj"},"content":"* `PASSPORT_NUMBER`: Should only contain alphanumeric characters.","lastModifiedDate":"2021-10-28"},{"lineNumber":378,"author":{"gitId":"calvintanwj"},"content":"  * The passport number specified by you must _match the guest passport\u0027s number exactly_ to be filtered.","lastModifiedDate":"2021-11-02"},{"lineNumber":379,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a guest with a `PASSPORT_NUMBER` of `SE1239182` will not be shown in your **GUI** if you run the command `filterguest pn/SE123`","lastModifiedDate":"2021-10-28"},{"lineNumber":380,"author":{"gitId":"calvintanwj"},"content":"* `NAME`: No constraints on name used.","lastModifiedDate":"2021-11-01"},{"lineNumber":381,"author":{"gitId":"calvintanwj"},"content":"  * The name specified by you simply needs to _match the guest\u0027s name partially_ to be filtered.","lastModifiedDate":"2021-11-02"},{"lineNumber":382,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a guest with a `NAME` of `Jeremy Tan` will be shown in the **GUI** if you run the command `filterguest n/jeremy` or `filterguest n/remy`","lastModifiedDate":"2021-10-28"},{"lineNumber":383,"author":{"gitId":"calvintanwj"},"content":"    * However, running the command `filterguest n/tan jeremy` will not filter the guest.","lastModifiedDate":"2021-10-28"},{"lineNumber":384,"author":{"gitId":"calvintanwj"},"content":"* `EMAIL`: A valid email address should be used.","lastModifiedDate":"2021-10-28"},{"lineNumber":385,"author":{"gitId":"calvintanwj"},"content":"  * The email specified by you simply needs to _match the guest\u0027s email partially_ to be filtered.","lastModifiedDate":"2021-11-02"},{"lineNumber":386,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a guest with a `EMAIL` of `jeremytan@example.com` will be shown in the **GUI** if you run the command `filterguest e/tan`","lastModifiedDate":"2021-10-28"},{"lineNumber":387,"author":{"gitId":"calvintanwj"},"content":"* `ROOM_NUMBER`: Only numbers greater than 0 are valid.","lastModifiedDate":"2021-10-28"},{"lineNumber":388,"author":{"gitId":"calvintanwj"},"content":"  * The room number specified by you needs to _match with the guest\u0027s room number partially_ to be filtered, however the _order is important_, unlike `EMAIL` and `NAME`.","lastModifiedDate":"2021-11-02"},{"lineNumber":389,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a guest with a `ROOM_NUMBER` of `201` will be shown in the **GUI** if you run the command `filterguest r/2`","lastModifiedDate":"2021-10-28"},{"lineNumber":390,"author":{"gitId":"calvintanwj"},"content":"    * However, the guest will not be filtered if you run the command `filterguest r/1`. The reason for this is that hotels","lastModifiedDate":"2021-10-28"},{"lineNumber":391,"author":{"gitId":"calvintanwj"},"content":"    generally have room numbers with its starting number as the floor level. Such as all hotel rooms on level 1, will","lastModifiedDate":"2021-10-28"},{"lineNumber":392,"author":{"gitId":"calvintanwj"},"content":"    have their room number starting with 1.","lastModifiedDate":"2021-10-28"},{"lineNumber":393,"author":{"gitId":"calvintanwj"},"content":"    * We felt that this would provide you a more _useful filter_, as running `filterguest r/2` would filter all the guest","lastModifiedDate":"2021-11-02"},{"lineNumber":394,"author":{"gitId":"calvintanwj"},"content":"    with their room number starting with a 2, and in essence you would be filtering all the guests that are residing in","lastModifiedDate":"2021-10-28"},{"lineNumber":395,"author":{"gitId":"calvintanwj"},"content":"    the second floor of your hotel. This would mean guests with `ROOM_NUMBER` that do not start with `2` but may have `2`","lastModifiedDate":"2021-10-28"},{"lineNumber":396,"author":{"gitId":"calvintanwj"},"content":"    in their `ROOM_NUMBER` are not filtered. An example being `102`.","lastModifiedDate":"2021-10-28"},{"lineNumber":397,"author":{"gitId":"calvintanwj"},"content":"* `TAG`: An optional field, more than one can be included in the command.","lastModifiedDate":"2021-11-02"},{"lineNumber":398,"author":{"gitId":"calvintanwj"},"content":"  * The tags specified by you need to _match the guest\u0027s tags exactly_ to be filtered.","lastModifiedDate":"2021-11-02"},{"lineNumber":399,"author":{"gitId":"calvintanwj"},"content":"  * E.g. guests with a `TAG` of `VIP` and guests with a `TAG` of `Deluxe` will be filtered if you run the command `filterguest t/vip t/deluxe`","lastModifiedDate":"2021-10-28"},{"lineNumber":400,"author":{"gitId":"calvintanwj"},"content":"    * Note that guest with either one of the tags gets filtered, they do not have to both tags to get filtered. The same logic applies when more than two tags are supplied by you.","lastModifiedDate":"2021-10-28"},{"lineNumber":401,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":402,"author":{"gitId":"calvintanwj"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":403,"author":{"gitId":"calvintanwj"},"content":"![FilterAlexWithRoomNumber2Example](images/FilterGuestAlex.png)","lastModifiedDate":"2021-11-01"},{"lineNumber":404,"author":{"gitId":"calvintanwj"},"content":"`filterguest n/alex r/2`, guests with a `NAME` that contains Alex and have a `ROOM_NUMBER` starting with 2, will be filtered from **PH**.","lastModifiedDate":"2021-11-01"},{"lineNumber":405,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":406,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":407,"author":{"gitId":"NicolasCwy"},"content":"**:information_source: Note:**\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":408,"author":{"gitId":"calvintanwj"},"content":"* Running the `filterguest` command always applies the filter to all your guests in **PH** and not to an already filtered guest list.","lastModifiedDate":"2021-10-28"},{"lineNumber":409,"author":{"gitId":"calvintanwj"},"content":"* All fields are case-insensitive.","lastModifiedDate":"2021-11-02"},{"lineNumber":410,"author":{"gitId":"NicolasCwy"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"NicolasCwy"},"content":"### Manage Vendors","lastModifiedDate":"2021-10-28"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":416,"author":{"gitId":"NicolasCwy"},"content":"#### Adding a vendor: `addvendor`","lastModifiedDate":"2021-10-28"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":418,"author":{"gitId":"calvintanwj"},"content":"Adds a **vendors** details to **PH**","lastModifiedDate":"2021-11-02"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":421,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`addvendor vid/\u003cVENDOR_ID\u003e n/\u003cNAME\u003e e/\u003cEMAIL\u003e p/\u003cPHONE_NUMBER\u003e a/\u003cADDRESS\u003e sn/\u003cSERVICE_NAME\u003e c/\u003cSERVICE_COST\u003e oh/\u003cOPERATING HOURS\u003e [t/TAG]`","lastModifiedDate":"2021-10-24"},{"lineNumber":422,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":423,"author":{"gitId":"NicolasCwy"},"content":"Parameters:","lastModifiedDate":"2021-10-28"},{"lineNumber":424,"author":{"gitId":"calvintanwj"},"content":"* `VENDOR_ID`: Should only contain alphanumeric characters","lastModifiedDate":"2021-11-01"},{"lineNumber":425,"author":{"gitId":"calvintanwj"},"content":"* `NAME`: No constraints on name used. Cannot be left blank.","lastModifiedDate":"2021-11-01"},{"lineNumber":426,"author":{"gitId":"calvintanwj"},"content":"* `EMAIL`: A valid email address should be used.","lastModifiedDate":"2021-11-01"},{"lineNumber":427,"author":{"gitId":"calvintanwj"},"content":"* `ADDRESS`: Blank inputs are not allowed.","lastModifiedDate":"2021-11-01"},{"lineNumber":428,"author":{"gitId":"calvintanwj"},"content":"* `PHONE_NUMBER`: At least 3 digits long, should only contain numbers.","lastModifiedDate":"2021-11-01"},{"lineNumber":429,"author":{"gitId":"calvintanwj"},"content":"* `SERVICE_NAME`: Alphabetical characters and spaces are allowed.","lastModifiedDate":"2021-11-01"},{"lineNumber":430,"author":{"gitId":"calvintanwj"},"content":"* `SERVICE_COST`: Number greater than 0, will be rounded to 2 decimal places.","lastModifiedDate":"2021-11-01"},{"lineNumber":431,"author":{"gitId":"calvintanwj"},"content":"* `OPERATING_HOURS`: Duplicates are allowed. Please refer to the note below for more details.","lastModifiedDate":"2021-11-02"},{"lineNumber":432,"author":{"gitId":"calvintanwj"},"content":"* `TAG`: An optional field, more than one can be included in each command.","lastModifiedDate":"2021-11-01"},{"lineNumber":433,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":434,"author":{"gitId":"NicolasCwy"},"content":"Example:","lastModifiedDate":"2021-10-24"},{"lineNumber":435,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`addvendor vid/123 n/Wang\u0027s Satay e/satayMan@email.com p/84711231 a/Geylang Street 31 sn/Satay c/5 oh/1 0800-2000`","lastModifiedDate":"2021-10-24"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":438,"author":{"gitId":"NicolasCwy"},"content":"**:information_source: Note on OPERATING_HOUR format:**\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":439,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-09-30"},{"lineNumber":440,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`DAYS STARTTIME-ENDTIME`","lastModifiedDate":"2021-10-24"},{"lineNumber":441,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003eMonday is represented using a 1 and Sunday is represented by 7.\u003cbr\u003eExample:\u003cbr\u003e`1234567 0800-2359`: Monday to Sunday 8am to 11:59pm\u003cbr\u003e`1321 0800-0900`: Monday to Wednesday 7am to 9am","lastModifiedDate":"2021-10-24"},{"lineNumber":442,"author":{"gitId":"NicolasCwy"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":443,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":444,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"NicolasCwy"},"content":"#### Editing fields of a vendor: `editvendor`","lastModifiedDate":"2021-10-28"},{"lineNumber":447,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":448,"author":{"gitId":"bingcheng45"},"content":"Edit a **vendors**\u0027 contact details. Only edits the fields that have been passed in as parameters. (See example for further elaboration).","lastModifiedDate":"2021-10-28"},{"lineNumber":449,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":450,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":451,"author":{"gitId":"calvintanwj"},"content":"\u003cbr\u003e`editvendor vid/\u003cVENDOR_ID\u003e [\u003cFIELD_NAME\u003e/\u003cNEW_FIELD_DETAILS\u003e]`","lastModifiedDate":"2021-11-02"},{"lineNumber":452,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":453,"author":{"gitId":"bingcheng45"},"content":"Parameters:","lastModifiedDate":"2021-10-28"},{"lineNumber":454,"author":{"gitId":"calvintanwj"},"content":"* `VENDOR_ID`: Should only contain alphanumeric characters.","lastModifiedDate":"2021-11-01"},{"lineNumber":455,"author":{"gitId":"calvintanwj"},"content":"* `NAME`: No constraints on name used. Cannot be left blank.","lastModifiedDate":"2021-11-01"},{"lineNumber":456,"author":{"gitId":"calvintanwj"},"content":"* `EMAIL`: Blanks inputs are not allowed. A valid email address should be used.","lastModifiedDate":"2021-11-01"},{"lineNumber":457,"author":{"gitId":"calvintanwj"},"content":"* `PHONE_NUMBER`: At least 3 digits long, should only contain numbers.","lastModifiedDate":"2021-11-01"},{"lineNumber":458,"author":{"gitId":"calvintanwj"},"content":"* `ADDRESS`: Blank inputs are not allowed.","lastModifiedDate":"2021-11-01"},{"lineNumber":459,"author":{"gitId":"calvintanwj"},"content":"* `SERVICE_NAME`: Alphabetical characters and spaces are allowed.","lastModifiedDate":"2021-11-01"},{"lineNumber":460,"author":{"gitId":"calvintanwj"},"content":"* `SERVICE_COST`: Number greater than 0, will be rounded to 2 decimal places.","lastModifiedDate":"2021-11-01"},{"lineNumber":461,"author":{"gitId":"calvintanwj"},"content":"* `OPERATING_HOURS`: Duplicates are allowed. \u003cbr\u003eFormat: `DAYS STARTTIME-ENDTIME`\u003cbr\u003eMonday is represented using a 1 and Sunday is represented by 7.\u003cbr\u003eExample:\u003cbr\u003e`1234567 0800-2359`: Monday to Sunday 8am to 11:59pm\u003cbr\u003e`1321 0800-0900`: Monday to Wednesday 7am to 9am","lastModifiedDate":"2021-11-01"},{"lineNumber":462,"author":{"gitId":"calvintanwj"},"content":"* `TAG`: An optional field, more than one can be included in each command.","lastModifiedDate":"2021-11-01"},{"lineNumber":463,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":464,"author":{"gitId":"NicolasCwy"},"content":"Example:","lastModifiedDate":"2021-10-24"},{"lineNumber":465,"author":{"gitId":"bingcheng45"},"content":"\u003cbr\u003e`editvendor vid/123 p/99999999 e/j@mailer.com` locates the vendor, Wang\u0027s Satay, with `VENDOR_ID` 123 and overwrites the phone number","lastModifiedDate":"2021-10-28"},{"lineNumber":466,"author":{"gitId":"bingcheng45"},"content":"field with the new phone number provided, and the email field with the new email provided. All other fields of the vendor","lastModifiedDate":"2021-10-28"},{"lineNumber":467,"author":{"gitId":"bingcheng45"},"content":"(**VENDOR_ID**, **NAME**, **ADDRESS**, **SERVICE_NAME**, **SERVICE_COST**, **OPERATING_HOURS**, **TAG**) remain unchanged.","lastModifiedDate":"2021-10-28"},{"lineNumber":468,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":469,"author":{"gitId":"bingcheng45"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":470,"author":{"gitId":"bingcheng45"},"content":"**:information_source: Notes:**\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":471,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":472,"author":{"gitId":"bingcheng45"},"content":"* Existing field values will be overwritten by the newly provided field values.","lastModifiedDate":"2021-10-28"},{"lineNumber":473,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":474,"author":{"gitId":"calvintanwj"},"content":"* The vendor id must be provided, as it is used to identify which vendor to be edited.","lastModifiedDate":"2021-11-02"},{"lineNumber":475,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":476,"author":{"gitId":"bingcheng45"},"content":"* You need to specify at least one field to edit.","lastModifiedDate":"2021-10-28"},{"lineNumber":477,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":478,"author":{"gitId":"bingcheng45"},"content":"* You can edit more than one field at a time (See example above).","lastModifiedDate":"2021-10-28"},{"lineNumber":479,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":480,"author":{"gitId":"bingcheng45"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":481,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":482,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-01"},{"lineNumber":483,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":484,"author":{"gitId":"NicolasCwy"},"content":"#### Deleting a vendor\u0027s details: `deletevendor`","lastModifiedDate":"2021-10-28"},{"lineNumber":485,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":486,"author":{"gitId":"calvintanwj"},"content":"Deletes a **vendors** contact details from **PH**.","lastModifiedDate":"2021-11-02"},{"lineNumber":487,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":488,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":489,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`deletevendor vid/\u003cVENDOR_ID\u003e`","lastModifiedDate":"2021-10-24"},{"lineNumber":490,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":491,"author":{"gitId":"NicolasCwy"},"content":"Example:","lastModifiedDate":"2021-10-24"},{"lineNumber":492,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`deletevendor vid/321`  deletes the vendor with `VENDOR_ID` 321 from **PH**.","lastModifiedDate":"2021-10-24"},{"lineNumber":493,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":494,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":495,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":496,"author":{"gitId":"NicolasCwy"},"content":"#### Clear vendor list : `clearvendor`","lastModifiedDate":"2021-10-28"},{"lineNumber":497,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":498,"author":{"gitId":"calvintanwj"},"content":"Deletes all **vendors** that are currently in **PH**.","lastModifiedDate":"2021-11-02"},{"lineNumber":499,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":500,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":501,"author":{"gitId":"NicolasCwy"},"content":"\u003cbr\u003e`clearvendor`","lastModifiedDate":"2021-10-24"},{"lineNumber":502,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":503,"author":{"gitId":"bingcheng45"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-28"},{"lineNumber":504,"author":{"gitId":"calvintanwj"},"content":"The `clearvendor` command would remove all vendors and is irreversible.","lastModifiedDate":"2021-11-02"},{"lineNumber":505,"author":{"gitId":"calvintanwj"},"content":"Only use this command if you absolutely sure you need to wipe all vendor data.","lastModifiedDate":"2021-11-02"},{"lineNumber":506,"author":{"gitId":"bingcheng45"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":507,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":508,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":509,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":510,"author":{"gitId":"NicolasCwy"},"content":"#### Show all vendors: `listvendor`","lastModifiedDate":"2021-10-28"},{"lineNumber":511,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":512,"author":{"gitId":"calvintanwj"},"content":"Shows all the **vendors** added by you that offers services to your hotel. Useful command to use after `filtervendor`,","lastModifiedDate":"2021-11-02"},{"lineNumber":513,"author":{"gitId":"calvintanwj"},"content":"it essentially removes any filter that was previously applied to the vendor list.","lastModifiedDate":"2021-10-28"},{"lineNumber":514,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":515,"author":{"gitId":"NicolasCwy"},"content":"Format:","lastModifiedDate":"2021-10-24"},{"lineNumber":516,"author":{"gitId":"calvintanwj"},"content":"\u003cbr\u003e`listvendor`","lastModifiedDate":"2021-10-28"},{"lineNumber":517,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":518,"author":{"gitId":"calvintanwj"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":519,"author":{"gitId":"calvintanwj"},"content":"**:information_source: Notes:**\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":520,"author":{"gitId":"calvintanwj"},"content":"* Vendors are not arranged in any particular order\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":521,"author":{"gitId":"calvintanwj"},"content":"* Running the command when you are on the guest list, will switch to the vendor list for you.","lastModifiedDate":"2021-10-28"},{"lineNumber":522,"author":{"gitId":"calvintanwj"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":523,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":524,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-28"},{"lineNumber":525,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":526,"author":{"gitId":"NicolasCwy"},"content":"#### Filter vendor list: `filtervendor`","lastModifiedDate":"2021-10-28"},{"lineNumber":527,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":528,"author":{"gitId":"calvintanwj"},"content":"Displays only the **vendors** that meet your requirements, as specified by what you wrote in your filter. This helps you","lastModifiedDate":"2021-11-02"},{"lineNumber":529,"author":{"gitId":"calvintanwj"},"content":"easily find and search through _smaller and more manageable lists_, instead of scrolling through the entire vendor list.","lastModifiedDate":"2021-11-02"},{"lineNumber":530,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":531,"author":{"gitId":"calvintanwj"},"content":"Format: `filtervendor \u003cFILTER_FIELD_NAME\u003e/\u003cFILTER_FIELD_VALUE\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":532,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":533,"author":{"gitId":"calvintanwj"},"content":"Parameters:","lastModifiedDate":"2021-10-28"},{"lineNumber":534,"author":{"gitId":"calvintanwj"},"content":"* `VENDOR_ID`: Should only contain alphanumeric characters","lastModifiedDate":"2021-10-28"},{"lineNumber":535,"author":{"gitId":"calvintanwj"},"content":"  * The vendor id specified by you must _match the vendor\u0027s vendor id exactly_ to be filtered.","lastModifiedDate":"2021-11-02"},{"lineNumber":536,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a vendor with a `VENDOR_ID` of `001` will not be shown in your **GUI** if you run the command `filtervendor vid/1`","lastModifiedDate":"2021-10-28"},{"lineNumber":537,"author":{"gitId":"calvintanwj"},"content":"* `NAME`: No constraints on name used. Cannot be left blank.","lastModifiedDate":"2021-11-01"},{"lineNumber":538,"author":{"gitId":"calvintanwj"},"content":"  * The name specified by you simply needs to _match the vendor\u0027s name partially_ to be filtered.","lastModifiedDate":"2021-11-02"},{"lineNumber":539,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a vendor with a `NAME` of `Jeremy\u0027s Massage Parlour` will be shown in the **GUI** if you run the command `filtervendor n/jeremy` or `filtervendor n/remy`","lastModifiedDate":"2021-10-28"},{"lineNumber":540,"author":{"gitId":"calvintanwj"},"content":"    * However, running the command `filtervendor n/parlour massage` will not filter the vendor.","lastModifiedDate":"2021-10-28"},{"lineNumber":541,"author":{"gitId":"calvintanwj"},"content":"* `EMAIL`: A valid email address should be used.","lastModifiedDate":"2021-10-28"},{"lineNumber":542,"author":{"gitId":"calvintanwj"},"content":"  * The email specified by you simply needs to _match the vendor\u0027s email partially_ to be filtered.","lastModifiedDate":"2021-11-02"},{"lineNumber":543,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a vendor with a `EMAIL` of `jmassage@example.com` will be shown in the **GUI** if you run the command `filtervendor e/massage`","lastModifiedDate":"2021-10-28"},{"lineNumber":544,"author":{"gitId":"calvintanwj"},"content":"* `ADDRESS`: Blank inputs are not allowed.","lastModifiedDate":"2021-10-28"},{"lineNumber":545,"author":{"gitId":"calvintanwj"},"content":"  * The address specified by you simply needs to _match the vendor\u0027s address partially_ to be filtered.","lastModifiedDate":"2021-11-02"},{"lineNumber":546,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a vendor with a `ADDRESS` of `123 Clementi Rd` will be shown in the **GUI** if you run the command `filtervendor a/clementi`","lastModifiedDate":"2021-10-28"},{"lineNumber":547,"author":{"gitId":"calvintanwj"},"content":"* `PHONE_NUMBER`: At least 3 digits long, should only contain numbers.","lastModifiedDate":"2021-10-28"},{"lineNumber":548,"author":{"gitId":"calvintanwj"},"content":"  * The phone number specified by you needs to _match with the vendor\u0027s phone number partially_ to be filtered, however the _order is important_, unlike `EMAIL` and `NAME`.","lastModifiedDate":"2021-11-02"},{"lineNumber":549,"author":{"gitId":"calvintanwj"},"content":"  * E.g. a vendor with a `PHONE_NUMBER` of `93810282` will be shown in the **GUI** if you run the command `filtervendor p/938`","lastModifiedDate":"2021-11-01"},{"lineNumber":550,"author":{"gitId":"calvintanwj"},"content":"    * However, the vendor will not be filtered if you run the command `filtervendor p/8102`.","lastModifiedDate":"2021-11-01"},{"lineNumber":551,"author":{"gitId":"calvintanwj"},"content":"    * The phone number that you enter into the command will only filter the vendors with phone numbers that start with what you specified in the filter.","lastModifiedDate":"2021-10-28"},{"lineNumber":552,"author":{"gitId":"calvintanwj"},"content":"* `SERVICE_NAME`: Alphabetical characters and spaces are allowed.","lastModifiedDate":"2021-10-28"},{"lineNumber":553,"author":{"gitId":"calvintanwj"},"content":"  * The service name specified by you needs to _match the vendor\u0027s service name exactly_ to be filtered.","lastModifiedDate":"2021-11-02"},{"lineNumber":554,"author":{"gitId":"calvintanwj"},"content":"  * E.g. vendors with a `SERVICE_NAME` of `Massage` will be shown in the **GUI** if you run the command `filtervendor sn/massage`","lastModifiedDate":"2021-10-28"},{"lineNumber":555,"author":{"gitId":"calvintanwj"},"content":"    * However, the vendor will not be filtered if you run the command `filtervendor sn/mass`","lastModifiedDate":"2021-10-28"},{"lineNumber":556,"author":{"gitId":"calvintanwj"},"content":"* `SERVICE_COST`: Number greater than 0.","lastModifiedDate":"2021-10-28"},{"lineNumber":557,"author":{"gitId":"calvintanwj"},"content":"  * You may filter vendors by the _exact cost or a range (using \"\u003c\" or \"\u003e\")_.","lastModifiedDate":"2021-11-02"},{"lineNumber":558,"author":{"gitId":"calvintanwj"},"content":"  * E.g. vendors with a `SERVICE_COST` greater than 10 will be shown in the **GUI** if you run the command `filtervendor c/\u003e10`","lastModifiedDate":"2021-10-28"},{"lineNumber":559,"author":{"gitId":"calvintanwj"},"content":"  * E.g. vendors with a `SERVICE_COST` of exactly 10 will be shown in the **GUI** if you run the command `filtervendor c/10`","lastModifiedDate":"2021-10-28"},{"lineNumber":560,"author":{"gitId":"calvintanwj"},"content":"* `OPERATING_HOURS`: Specified in this format `DAYS STARTTIME-ENDTIME`, Timings are in 24 hr format and days are represented using numbers, where 1 represents a Monday, and a 7 represents a Sunday.","lastModifiedDate":"2021-10-28"},{"lineNumber":561,"author":{"gitId":"calvintanwj"},"content":"  * You may filter vendors that operate _on certain days, certain days and a specified time, certain days and a specified time period, and those that are currently operating_.","lastModifiedDate":"2021-11-02"},{"lineNumber":562,"author":{"gitId":"calvintanwj"},"content":"  * E.g. vendors with `OPERATING_HOURS` on Monday and Wednesday will be shown in the **GUI** if you run the command `filtervendor oh/13`","lastModifiedDate":"2021-10-28"},{"lineNumber":563,"author":{"gitId":"calvintanwj"},"content":"  * E.g. vendors with `OPERATING_HOURS` on Monday and operate on 0800 will be shown in the **GUI** if you run the command `filtervendor oh/1 0800`","lastModifiedDate":"2021-10-28"},{"lineNumber":564,"author":{"gitId":"calvintanwj"},"content":"  * E.g. vendors with `OPERATING_HOURS` on Tuesday and operate **anywhere** between 0800 and 1300 will be shown in the **GUI** if you run the command `filtervendor oh/2 0800-1300`","lastModifiedDate":"2021-10-28"},{"lineNumber":565,"author":{"gitId":"calvintanwj"},"content":"  * E.g. vendors with `OPERATING_HOURS` that are currently operating will be shown in the **GUI** if you run the command `filtervendor oh/now`","lastModifiedDate":"2021-10-28"},{"lineNumber":566,"author":{"gitId":"calvintanwj"},"content":"* `TAG`: An optional field, more than one can be included in the command.","lastModifiedDate":"2021-11-02"},{"lineNumber":567,"author":{"gitId":"calvintanwj"},"content":"  * The tags specified by you need to _match the vendor\u0027s tags exactly_ to be filtered.","lastModifiedDate":"2021-11-02"},{"lineNumber":568,"author":{"gitId":"calvintanwj"},"content":"  * E.g. vendors with a `TAG` of `Cheap` and vendors with a `TAG` of `Good Rating` will be filtered if you run the command `filtervendor t/cheap t/good rating`","lastModifiedDate":"2021-10-28"},{"lineNumber":569,"author":{"gitId":"calvintanwj"},"content":"    * Note that vendors with either one of the tags gets filtered, they do not have to both tags to get filtered. The same logic applies when more than two tags are supplied by you.","lastModifiedDate":"2021-10-28"},{"lineNumber":570,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":571,"author":{"gitId":"calvintanwj"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":572,"author":{"gitId":"NicolasCwy"},"content":"![FilterOperatingFoodExample](images/FilterOperatingFoodVendor.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":573,"author":{"gitId":"calvintanwj"},"content":"`filtervendor sn/Food c/\u003e10 oh/now`, vendors with the `SERVICE_NAME` food and provide the service at a `COST` greater","lastModifiedDate":"2021-10-28"},{"lineNumber":574,"author":{"gitId":"calvintanwj"},"content":"than 10 and have `OPERATING_HOURS` where they are currently operating now will be filtered from **PH**","lastModifiedDate":"2021-10-28"},{"lineNumber":575,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":576,"author":{"gitId":"NicolasCwy"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":577,"author":{"gitId":"NicolasCwy"},"content":"**:information_source: Note:**\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":578,"author":{"gitId":"calvintanwj"},"content":"* Running the `filtervendor` command always applies the filter to all your vendors in **PH** and not to an already filtered vendor list.\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":579,"author":{"gitId":"calvintanwj"},"content":"* All fields are case-insensitive.","lastModifiedDate":"2021-11-02"},{"lineNumber":580,"author":{"gitId":"NicolasCwy"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":581,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":582,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-10"},{"lineNumber":583,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":584,"author":{"gitId":"NicolasCwy"},"content":"### Utility Commands","lastModifiedDate":"2021-10-28"},{"lineNumber":585,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":586,"author":{"gitId":"NicolasCwy"},"content":"#### Viewing help: `help`","lastModifiedDate":"2021-10-28"},{"lineNumber":587,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":588,"author":{"gitId":"NicolasCwy"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-10-10"},{"lineNumber":589,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":590,"author":{"gitId":"NicolasCwy"},"content":"Format: `help`","lastModifiedDate":"2021-10-10"},{"lineNumber":591,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":592,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-10"},{"lineNumber":593,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":594,"author":{"gitId":"NicolasCwy"},"content":"#### Exiting the program: `exit`","lastModifiedDate":"2021-10-28"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":596,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2021-10-24"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":598,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2021-10-24"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":600,"author":{"gitId":"NicolasCwy"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-24"},{"lineNumber":601,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":602,"author":{"gitId":"NicolasCwy"},"content":"### Saving your Data","lastModifiedDate":"2021-10-28"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":604,"author":{"gitId":"calvintanwj"},"content":"Your data is saved automatically to the hard disk after every command you enter. The file is saved in `.json` format,","lastModifiedDate":"2021-09-25"},{"lineNumber":605,"author":{"gitId":"NicolasCwy"},"content":"which allows you to edit the file manually without even booting up **PH**.","lastModifiedDate":"2021-10-01"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"NicolasCwy"},"content":"#### Editing your data directly","lastModifiedDate":"2021-10-28"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"calvintanwj"},"content":"The Json files storing **guest** and **vendor** data are found at:","lastModifiedDate":"2021-11-02"},{"lineNumber":612,"author":{"gitId":"bingcheng45"},"content":"`[JAR file location]/data/guest.json` \u0026 `[JAR file location]/data/vendor.json`","lastModifiedDate":"2021-10-28"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":614,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-09-25"},{"lineNumber":615,"author":{"gitId":"calvintanwj"},"content":"Editing the json file directly should only be done by a user experienced with .json format files.","lastModifiedDate":"2021-09-25"},{"lineNumber":616,"author":{"gitId":"bingcheng45"},"content":"As failure to follow the correct formatting would result in a corrupted file and would be replace with an empty file.","lastModifiedDate":"2021-10-28"},{"lineNumber":617,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":620,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"NicolasCwy"},"content":"#### Guest in archive data format","lastModifiedDate":"2021-10-28"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":624,"author":{"gitId":"bingcheng45"},"content":"The Json files storing archive guest data are found at:","lastModifiedDate":"2021-10-28"},{"lineNumber":625,"author":{"gitId":"bingcheng45"},"content":"`[JAR file location]/data/archive.json`","lastModifiedDate":"2021-10-28"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":627,"author":{"gitId":"bingcheng45"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":628,"author":{"gitId":"bingcheng45"},"content":"**:information_source: Note:**\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":629,"author":{"gitId":"bingcheng45"},"content":"* The archived guests would have the room number and services field emptied in the Json file.","lastModifiedDate":"2021-10-28"},{"lineNumber":630,"author":{"gitId":"rgbpokka"},"content":"\u003cbr\u003eArchived guest are also not shown in the UI. The rationale for this is that a returning guest would provide","lastModifiedDate":"2021-10-31"},{"lineNumber":631,"author":{"gitId":"rgbpokka"},"content":"his/her details to the receptionist upon checking in to the hotel, hence there is no need for the receptionist to","lastModifiedDate":"2021-10-31"},{"lineNumber":632,"author":{"gitId":"rgbpokka"},"content":"refer to details of the archived guests in the UI.","lastModifiedDate":"2021-10-31"},{"lineNumber":633,"author":{"gitId":"bingcheng45"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":634,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":635,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-11-02"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":637,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-25"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":639,"author":{"gitId":"NicolasCwy"},"content":"# **Command Summary**","lastModifiedDate":"2021-10-24"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":641,"author":{"gitId":"NicolasCwy"},"content":"## Guest Command Summary","lastModifiedDate":"2021-10-24"},{"lineNumber":642,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":643,"author":{"gitId":"NicolasCwy"},"content":"Action | Format, Examples","lastModifiedDate":"2021-10-24"},{"lineNumber":644,"author":{"gitId":"NicolasCwy"},"content":"-------|------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":645,"author":{"gitId":"NicolasCwy"},"content":"**checkin** | `checkin pn/\u003cPASSPORT_NUMBER\u003e n/\u003cNAME\u003e e/\u003cEMAIL\u003e r/\u003cROOM_NUMBER\u003e [t/\u003cTAG\u003e]`\u003cbr\u003eExample: `checkin pn/T0134568D n/Bing Cheng e/bingcheng@email.com r/101 t/VIP`","lastModifiedDate":"2021-10-28"},{"lineNumber":646,"author":{"gitId":"NicolasCwy"},"content":"**returncheckin** | `returncheckin pn/\u003cPASSPORT_NUMBER\u003e r/\u003cROOM_NUMBER\u003e`\u003cbr\u003eExample: `returncheckin pn/T0134568D r/101`","lastModifiedDate":"2021-10-28"},{"lineNumber":647,"author":{"gitId":"NicolasCwy"},"content":"**checkout** | `checkout pn/\u003cPASSPORT_NUMBER\u003e`\u003cbr\u003eExample: `checkout pn/T0134568D`","lastModifiedDate":"2021-10-24"},{"lineNumber":648,"author":{"gitId":"rgbpokka"},"content":"**editguest** | `editguest pn/\u003cPASSPORT_NUMBER\u003e \u003cFIELD_NAME\u003e/\u003cNEW_FIELD_DETAILS\u003e`\u003cbr\u003eExample: `editguest pn/X12345678A p/99999999`","lastModifiedDate":"2021-10-31"},{"lineNumber":649,"author":{"gitId":"NicolasCwy"},"content":"**deleteguest** | `deleteguest pn/\u003cPASSPORT_NUMBER\u003e`\u003cbr\u003eExample: `deleteguest pn/T0134568D`","lastModifiedDate":"2021-10-24"},{"lineNumber":650,"author":{"gitId":"NicolasCwy"},"content":"**clearguest** | `clearguest`","lastModifiedDate":"2021-10-24"},{"lineNumber":651,"author":{"gitId":"NicolasCwy"},"content":"**listguest** | `listguest`","lastModifiedDate":"2021-10-24"},{"lineNumber":652,"author":{"gitId":"NicolasCwy"},"content":"**filterguest** | `filterguest \u003cFILTER_FIELD_NAME\u003e/\u003cFILTER_FIELD_VALUE\u003e`\u003cbr\u003eExample: `filterguest n/Bing t/VIP`","lastModifiedDate":"2021-10-24"},{"lineNumber":653,"author":{"gitId":"bingcheng45"},"content":"**chargeguest** | `chargeguest pn/\u003cPASSPORT_NUMBER\u003e vid/\u003cVENDOR_ID\u003e`\u003cbr\u003eExample: `chargeguest pn/T0134568D vid/3`","lastModifiedDate":"2021-11-03"},{"lineNumber":654,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":655,"author":{"gitId":"NicolasCwy"},"content":"## Vendor Command Summary","lastModifiedDate":"2021-10-28"},{"lineNumber":656,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":657,"author":{"gitId":"calvintanwj"},"content":"Action | Format, Examples","lastModifiedDate":"2021-09-25"},{"lineNumber":658,"author":{"gitId":"NicolasCwy"},"content":"-------|------------------","lastModifiedDate":"2021-10-29"},{"lineNumber":659,"author":{"gitId":"NicolasCwy"},"content":"**addvendor** | `addvendor vid/\u003cVENDOR_ID\u003e n/\u003cNAME\u003e e/\u003cEMAIL\u003e p/\u003cPHONE_NUMBER\u003e a/\u003cADDRESS\u003e sn/\u003cSERVICE_NAME\u003e c/\u003cSERVICE_COST\u003e oh/\u003cOPERATING HOURS\u003e [t/TAG]`\u003cbr\u003eExample: `addvendor vid/123 n/Wang\u0027s Satay e/satayMan@email.com p/84711231 a/Geylang Street 31 sn/Satay c/5 oh/1 0800-2000`","lastModifiedDate":"2021-10-24"},{"lineNumber":660,"author":{"gitId":"rgbpokka"},"content":"**editvendor** | `editvendor vid/\u003cVENDOR_ID\u003e \u003cFIELD_NAME\u003e/\u003cNEW_FIELD_DETAILS\u003e`\u003cbr\u003eExample: `editvendor vid/111 sn/Laundry`","lastModifiedDate":"2021-10-31"},{"lineNumber":661,"author":{"gitId":"NicolasCwy"},"content":"**deletevendor** | `deletevendor vid/\u003cVENDOR_ID\u003e`\u003cbr\u003eExample: `deletevendor vid/112`","lastModifiedDate":"2021-10-24"},{"lineNumber":662,"author":{"gitId":"NicolasCwy"},"content":"**clearvendor** | `clearvendor`","lastModifiedDate":"2021-10-24"},{"lineNumber":663,"author":{"gitId":"NicolasCwy"},"content":"**listvendor** | `listvendor`","lastModifiedDate":"2021-10-24"},{"lineNumber":664,"author":{"gitId":"NicolasCwy"},"content":"**filtervendor** | `filtervendor vid/\u003cVENDOR_ID\u003e \u003cFILTER_FIELD_NAME\u003e/\u003cFILTER_FIELD_VALUE\u003e`\u003cbr\u003eExample: `filtervendor sn/Food t/satay`","lastModifiedDate":"2021-10-24"},{"lineNumber":665,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":666,"author":{"gitId":"NicolasCwy"},"content":"## Utility Command Summary","lastModifiedDate":"2021-10-28"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":668,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2021-10-28"},{"lineNumber":669,"author":{"gitId":"NicolasCwy"},"content":"-------|------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":670,"author":{"gitId":"NicolasCwy"},"content":"**help** | `help`","lastModifiedDate":"2021-10-24"},{"lineNumber":671,"author":{"gitId":"NicolasCwy"},"content":"**exit** | `exit`","lastModifiedDate":"2021-10-24"},{"lineNumber":672,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":673,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":674,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":675,"author":{"gitId":"calvintanwj"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-25"},{"lineNumber":676,"author":{"gitId":"NicolasCwy"},"content":"# **Parameter Constraints Section**","lastModifiedDate":"2021-10-24"},{"lineNumber":677,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":678,"author":{"gitId":"NicolasCwy"},"content":"## **Guest Parameter Constraints Summary**","lastModifiedDate":"2021-10-10"},{"lineNumber":679,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":680,"author":{"gitId":"calvintanwj"},"content":"Parameter | Prefix | Constraints, Examples","lastModifiedDate":"2021-09-25"},{"lineNumber":681,"author":{"gitId":"calvintanwj"},"content":"----------|--------|-----------------------","lastModifiedDate":"2021-09-25"},{"lineNumber":682,"author":{"gitId":"NicolasCwy"},"content":"**PASSPORT_NUMBER** | `pn/` | Blank inputs are not allowed.\u003cbr\u003eShould only contain alphanumeric characters.\u003cbr\u003eExample: `pn/X12345678A`","lastModifiedDate":"2021-10-24"},{"lineNumber":683,"author":{"gitId":"NicolasCwy"},"content":"**NAME** | `n/` | Blank inputs are not allowed.\u003cbr\u003eExample: `n/Bing Cheng`","lastModifiedDate":"2021-10-24"},{"lineNumber":684,"author":{"gitId":"NicolasCwy"},"content":"**EMAIL** | `e/` | Blanks inputs are not allowed.\u003cbr\u003eA valid email address should be used.\u003cbr\u003eExample: `e/BingCheng@email.com`","lastModifiedDate":"2021-10-24"},{"lineNumber":685,"author":{"gitId":"NicolasCwy"},"content":"**ROOM_NUMBER** | `r/` | Blank inputs are not allowed.\u003cbr\u003eOnly numbers greater than 0 are valid.\u003cbr\u003eExample: `r/500`","lastModifiedDate":"2021-10-24"},{"lineNumber":686,"author":{"gitId":"NicolasCwy"},"content":"**TAG** | `t/` | Blank inputs are not allowed.\u003cbr\u003eAn optional field, more than one can be included in each command.\u003cbr\u003eExample: `t/Vaccinated t/Vegetarian`","lastModifiedDate":"2021-10-24"},{"lineNumber":687,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":688,"author":{"gitId":"NicolasCwy"},"content":"## **Vendor Parameter Constraints Summary**","lastModifiedDate":"2021-10-24"},{"lineNumber":689,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":690,"author":{"gitId":"calvintanwj"},"content":"Parameter | Prefix | Constraints, Examples","lastModifiedDate":"2021-09-25"},{"lineNumber":691,"author":{"gitId":"calvintanwj"},"content":"----------|--------|-----------------------","lastModifiedDate":"2021-09-25"},{"lineNumber":692,"author":{"gitId":"NicolasCwy"},"content":"**VENDOR_ID** | `vid/` |  Blank inputs are not allowed.\u003cbr\u003eShould only contain alphanumeric characters.\u003cbr\u003eExample: `vid/2131`","lastModifiedDate":"2021-10-24"},{"lineNumber":693,"author":{"gitId":"calvintanwj"},"content":"**NAME** | `n/` | Blank inputs are not allowed.\u003cbr\u003eNo other constraints.\u003cbr\u003eExample: `n/Wang\u0027s Satay`","lastModifiedDate":"2021-11-01"},{"lineNumber":694,"author":{"gitId":"NicolasCwy"},"content":"**EMAIL** | `e/` | Blanks inputs are not allowed.\u003cbr\u003eA valid email address should be used.\u003cbr\u003eExample: `e/satayMan@email.com`","lastModifiedDate":"2021-10-24"},{"lineNumber":695,"author":{"gitId":"NicolasCwy"},"content":"**PHONE_NUMBER** | `p/` | Blank inputs are not allowed.\u003cbr\u003eAt least 3 digits long, should only contain numbers\u003cbr\u003eExample: `p/84711231`","lastModifiedDate":"2021-10-24"},{"lineNumber":696,"author":{"gitId":"NicolasCwy"},"content":"**ADDRESS** | `a/` | Blank inputs are not allowed.\u003cbr\u003eExample: `a/Geylang Street 31`","lastModifiedDate":"2021-10-24"},{"lineNumber":697,"author":{"gitId":"NicolasCwy"},"content":"**SERVICE_NAME** | `sn/` | Blank inputs are not allowed.\u003cbr\u003eAlphabetical characters and spaces are allowed.\u003cbr\u003eExample: `sn/Satay`","lastModifiedDate":"2021-10-24"},{"lineNumber":698,"author":{"gitId":"NicolasCwy"},"content":"**SERVICE_COST** | `c/` | Blank inputs are not allowed.\u003cbr\u003eNumber greater than 0, will be rounded to 2 decimal places.\u003cbr\u003eExample: `c/5`","lastModifiedDate":"2021-10-24"},{"lineNumber":699,"author":{"gitId":"NicolasCwy"},"content":"**OPERATING_HOURS** | `oh/` | Blank inputs are not allowed.\u003cbr\u003eDuplicates are allowed.\u003cbr\u003eFormat: `DAYS STARTTIME-ENDTIME`\u003cbr\u003eMonday is represented using a 1 and Sunday is represented by 7.\u003cbr\u003eExample:\u003cbr\u003e`1234567 0800-2359`: Monday to Sunday 8am to 11:59pm\u003cbr\u003e`1321 0800-0900`: Monday to Wednesday 7am to 9am","lastModifiedDate":"2021-10-24"},{"lineNumber":700,"author":{"gitId":"NicolasCwy"},"content":"**TAG** | `t/` | Blank inputs are not allowed.\u003cbr\u003eAn optional field, more than one can be included in each command.\u003cbr\u003eExample: `t/Halal t/Free flow`","lastModifiedDate":"2021-10-24"},{"lineNumber":701,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":702,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":703,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":704,"author":{"gitId":"calvintanwj"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-25"},{"lineNumber":705,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":706,"author":{"gitId":"NicolasCwy"},"content":"# **Glossary**","lastModifiedDate":"2021-10-24"},{"lineNumber":707,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":708,"author":{"gitId":"calvintanwj"},"content":"* **PH**: Acronym for Pocket Hotel","lastModifiedDate":"2021-09-25"},{"lineNumber":709,"author":{"gitId":"NicolasCwy"},"content":"* **CLI**: Command line interface","lastModifiedDate":"2021-10-09"},{"lineNumber":710,"author":{"gitId":"NicolasCwy"},"content":"* **GUI**: Graphical user interface","lastModifiedDate":"2021-10-09"},{"lineNumber":711,"author":{"gitId":"NicolasCwy"},"content":"* **Guest**: A guest at the hotel","lastModifiedDate":"2021-09-30"},{"lineNumber":712,"author":{"gitId":"NicolasCwy"},"content":"* **Vendor**: An external entity that a hotel uses for services","lastModifiedDate":"2021-10-24"},{"lineNumber":713,"author":{"gitId":"calvintanwj"},"content":"* **PDF**: A file format for electronic document exchange. Short for Portable Document Format.","lastModifiedDate":"2021-11-02"},{"lineNumber":714,"author":{"gitId":"NicolasCwy"},"content":"* **Unique Identifier**: An attribute that uniquely identifies a guest or vendor in the address book.","lastModifiedDate":"2021-11-02"},{"lineNumber":715,"author":{"gitId":"NicolasCwy"},"content":"* **Archived Guests**: Guests that are not checked into the hotel and are not displayed, but whose details are stored in **PH**.","lastModifiedDate":"2021-10-24"},{"lineNumber":716,"author":{"gitId":"NicolasCwy"},"content":"* **Unarchived guests**: Guests who are currently checked into **PH** and can be viewed in the list.","lastModifiedDate":"2021-10-24"},{"lineNumber":717,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":718,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":721,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"NicolasCwy"},"content":"# **FAQ**","lastModifiedDate":"2021-10-24"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"calvintanwj"},"content":"**A**: Install the app on your other computer and run it. Overwrite the empty .json file that is created with your old","lastModifiedDate":"2021-09-25"},{"lineNumber":727,"author":{"gitId":"calvintanwj"},"content":".json file in your old computer.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":728,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":729,"author":{"gitId":"calvintanwj"},"content":"**Q**: How do I know if Java 11 is installed correctly on my computer?\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":730,"author":{"gitId":"calvintanwj"},"content":"**A**: Open up your terminal and run `java --version`. The output should be java 11, if installed correctly.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":731,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":732,"author":{"gitId":"calvintanwj"},"content":"**Q**: How do I install Java 11 on my computer?\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":733,"author":{"gitId":"calvintanwj"},"content":"**A**: Please proceed to the download page [here](https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html), and download the latest version according to your system\u0027s specifications.\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":734,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":735,"author":{"gitId":"calvintanwj"},"content":"**Q**: Is an internet connection required to boot up **PH**?\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":736,"author":{"gitId":"calvintanwj"},"content":"**A**: No, all functionality of **PH** can be used without an internet connection.\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":737,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":738,"author":{"gitId":"calvintanwj"},"content":"**Q**: Can I contact my guests directly on **PH**?\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":739,"author":{"gitId":"calvintanwj"},"content":"**A**: Unfortunately, this is currently not possible. However, do look out for future updates.\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":740,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":741,"author":{"gitId":"calvintanwj"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-09-25"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rgbpokka":7,"calvintanwj":260,"bingcheng45":62,"-":129,"NicolasCwy":285}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"bingcheng45"},"content":"    content: \"Pocket Hotel\";","lastModifiedDate":"2021-09-30"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"bingcheng45":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"user -[USER_COLOR]\u003e ui : \"deletevendor vid/1\"","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"deletevendor vid/1\")","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteVendor(v)","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveVendorBook(vendorBook)","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"calvintanwj":4,"-":34}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"GuestBook *-right-\u003e \"1\" UniqueGuestList","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"GuestBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"UniqueTagList -[hidden]down- UniqueGuestLis","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"UniqueTagList -[hidden]down- UniqueGuestList","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"UniqueGuestList -right-\u003e Guest","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"Guest -up-\u003e \"*\" Tag","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"Guest *--\u003e Name","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"Guest *--\u003e PassportNumber","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"Guest *--\u003e Email","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"Guest *--\u003e RoomNumber","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"Guest *--\u003e \"*\" ChargeablesUsed","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"calvintanwj":11,"-":11}},{"path":"docs/diagrams/DeleteSequenceDiagramGuest.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NicolasCwy"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"NicolasCwy"},"content":"!include style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"NicolasCwy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"participant \": PocketHotelParser\" as  PocketHotelParser LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"participant \": DeleteGuestCommandParser\" as  DeleteGuestCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"participant \"d: DeleteGuestCommand\" as  DeleteGuestCommand LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"NicolasCwy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"NicolasCwy"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"NicolasCwy"},"content":"[-\u003e LogicManager : execute(\"deleteguest pn/S123A\")","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"NicolasCwy"},"content":"activate LogicManager","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"NicolasCwy"},"content":"LogicManager -\u003e  PocketHotelParser : parseCommand(\"deleteguest pn/S123A\")","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"NicolasCwy"},"content":"activate PocketHotelParser","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"NicolasCwy"},"content":"create DeleteGuestCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"NicolasCwy"},"content":"PocketHotelParser -\u003e DeleteGuestCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"NicolasCwy"},"content":"activate DeleteGuestCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"NicolasCwy"},"content":"DeleteGuestCommandParser --\u003e PocketHotelParser","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"NicolasCwy"},"content":"deactivate DeleteGuestCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"NicolasCwy"},"content":"PocketHotelParser -\u003e  DeleteGuestCommandParser : parse(\"pn/S123A\")","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"NicolasCwy"},"content":"activate DeleteGuestCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"NicolasCwy"},"content":"create DeleteGuestCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"NicolasCwy"},"content":"DeleteGuestCommandParser -\u003e DeleteGuestCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"NicolasCwy"},"content":"activate DeleteGuestCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"NicolasCwy"},"content":"DeleteGuestCommand --\u003e  DeleteGuestCommandParser : d","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"NicolasCwy"},"content":"deactivate DeleteGuestCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"NicolasCwy"},"content":"DeleteGuestCommandParser --\u003e  PocketHotelParser : d","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"NicolasCwy"},"content":"deactivate DeleteGuestCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"NicolasCwy"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"NicolasCwy"},"content":"DeleteGuestCommandParser -[hidden]-\u003e PocketHotelParser","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"NicolasCwy"},"content":"destroy DeleteGuestCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"NicolasCwy"},"content":"PocketHotelParser --\u003e LogicManager : d","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"NicolasCwy"},"content":"deactivate PocketHotelParser","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"NicolasCwy"},"content":"LogicManager -\u003e  DeleteGuestCommand : execute()","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"NicolasCwy"},"content":"activate DeleteGuestCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"NicolasCwy"},"content":"DeleteGuestCommand -\u003e Model : delete Guest with pn \u003d 123","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"NicolasCwy"},"content":"activate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"NicolasCwy"},"content":"Model --\u003e DeleteGuestCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"NicolasCwy"},"content":"deactivate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"NicolasCwy"},"content":"create CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"NicolasCwy"},"content":"DeleteGuestCommand -\u003e CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"NicolasCwy"},"content":"activate CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"NicolasCwy"},"content":"CommandResult --\u003e DeleteGuestCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"NicolasCwy"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"NicolasCwy"},"content":"DeleteGuestCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"NicolasCwy"},"content":"deactivate DeleteGuestCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"NicolasCwy"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"NicolasCwy"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"NicolasCwy"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"NicolasCwy":69}},{"path":"docs/diagrams/DeleteSequenceDiagramVendor.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"participant \": PocketHotelParser\" as  PocketHotelParser LOGIC_COLOR","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"participant \": DeleteVendorCommandParser\" as  DeleteVendorCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"participant \"d: DeleteVendorCommand\" as  DeleteVendorCommand LOGIC_COLOR","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"[-\u003e LogicManager : execute(\"deletevendor vid/123\")","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"LogicManager -\u003e  PocketHotelParser : parseCommand(\"deletevendor vid/123\")","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"activate PocketHotelParser","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"create DeleteVendorCommandParser","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"PocketHotelParser -\u003e DeleteVendorCommandParser","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"activate DeleteVendorCommandParser","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"DeleteVendorCommandParser --\u003e PocketHotelParser","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"deactivate DeleteVendorCommandParser","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"PocketHotelParser -\u003e  DeleteVendorCommandParser : parse(\"vid/123\")","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"activate DeleteVendorCommandParser","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"create DeleteVendorCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"DeleteVendorCommandParser -\u003e DeleteVendorCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"activate DeleteVendorCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"DeleteVendorCommand --\u003e  DeleteVendorCommandParser : d","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"deactivate DeleteVendorCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"DeleteVendorCommandParser --\u003e  PocketHotelParser : d","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"deactivate DeleteVendorCommandParser","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"DeleteVendorCommandParser -[hidden]-\u003e PocketHotelParser","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"destroy DeleteVendorCommandParser","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"PocketHotelParser --\u003e LogicManager : d","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"deactivate PocketHotelParser","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"LogicManager -\u003e  DeleteVendorCommand : execute()","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"activate DeleteVendorCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"DeleteVendorCommand -\u003e Model : delete vendor with vid \u003d 123","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"Model --\u003e DeleteVendorCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"DeleteVendorCommand -\u003e CommandResult","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"CommandResult --\u003e DeleteVendorCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"DeleteVendorCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"deactivate DeleteVendorCommand","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"calvintanwj":32,"-":37}},{"path":"docs/diagrams/FilterGuestActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"start","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":":User inputs a filterguest command;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":":FilterGuestCommandParser parses and validates the user input;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"    if () then ([arguments are valid])","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"      :Parser instantiates a GuestPredicate;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"      :FilterGuestCommand is created \\n  containing the GuestPredicate;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"      :Model updates the guest list \\n  using the GuestPredicate;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"      :A success message is shown to the user;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    else ([arguments are invalid])","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"      :ParseException gets thrown;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"      :An error message is shown to the user;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    endif","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"stop","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"calvintanwj":17}},{"path":"docs/diagrams/FilterGuestSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"!include style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"participant \": PocketHotelParser\" as  PocketHotelParser LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"participant \":  FilterGuestCommandParser\" as   FilterGuestCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"participant \"f:  FilterGuestCommand\" as   FilterGuestCommand LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"[-\u003e LogicManager : execute(\"filterguest t/deluxe\")","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"activate LogicManager","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"LogicManager -\u003e  PocketHotelParser : parseCommand(\"filterguest t/deluxe\")","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"activate PocketHotelParser","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"create FilterGuestCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"PocketHotelParser -\u003e FilterGuestCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"activate FilterGuestCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"FilterGuestCommandParser --\u003e PocketHotelParser","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"deactivate FilterGuestCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"PocketHotelParser -\u003e FilterGuestCommandParser : parse(new GuestPredicate(\"t/deluxe\"))","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"activate FilterGuestCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"create FilterGuestCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"FilterGuestCommandParser -\u003e FilterGuestCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"activate FilterGuestCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"FilterGuestCommand --\u003e FilterGuestCommandParser : f","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"deactivate FilterGuestCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"FilterGuestCommandParser --\u003e  PocketHotelParser : f","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"deactivate FilterGuestCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"FilterGuestCommandParser -[hidden]-\u003e PocketHotelParser","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"destroy FilterGuestCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"PocketHotelParser --\u003e LogicManager : f","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"deactivate PocketHotelParser","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"LogicManager -\u003e FilterGuestCommand : execute()","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"activate FilterGuestCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"FilterGuestCommand -\u003e Model : updatedFilteredGuestList(predicate)","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"activate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"Model --\u003e FilterGuestCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"deactivate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"create CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"FilterGuestCommand -\u003e CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"activate CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"CommandResult --\u003e FilterGuestCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"FilterGuestCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"deactivate FilterGuestCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"calvintanwj":69}},{"path":"docs/diagrams/GuestBookClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"@startuml","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"!include style.puml","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"show member","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"interface ReadOnlyGuestBook \u003c\u003cinterface\u003e\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"class GuestBook","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"class UniqueGuestList","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"class Guest","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"ReadOnlyGuestBook \u003c|.. GuestBook","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"GuestBook --\u003e \"1 \"UniqueGuestList","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"UniqueGuestList --\u003e \" * \" Guest","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"class ReadOnlyGuestBook {","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    + getGuestList() : ObservableList\u003cGuest\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"class GuestBook {","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    + setGuests(guests: List\u003cGuest\u003e)","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    + hasGuest(guest : Guest) : boolean","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    + addGuest(guest : Guest)","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    + setGuest(target : Guest, editedGuest : Guest)","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    + getGuest(passportNumber : PassportNumber) : Optional\u003cGuest\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    + removeGuest(key : Guest)","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"class UniqueGuestList {","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    - internalList : ObservableList\u003cGuest\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    - internalUnmodifiableList : ObservableList\u003cGuest\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    + contains(toCheck : Guest) : boolean","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    + add(toAdd : Guest)","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    + get(passportNumber : PassportNumber) : Optional\u003cGuest\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    + setGuest(target : Guest, edited : Guest)","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    + remove(toRemove : Guest)","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    + setGuests(replacement : UniqueGuestList)","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"class Guest {","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    - name : Name","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    - email : Email","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    - roomNumber : RoomNumber","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    - passportNumber : PassportNumber","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    - chargeablesUsed : List\u003cChargeable\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    - tags : Set\u003cTag\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    + getName() : Name","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    + getEmail() : Email","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    + getRoomNumber() : RoomNumber","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    + getPassportNumber() : PassportNumber","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"    + getChargeablesUsed() : List\u003cChargeable\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    + getTags() : Set\u003cTag\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    + charge(vendor : Vendor)","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    + isSame(otherGuest : Guest) : boolean","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"@enduml","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"calvintanwj":58}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"Class PocketHotelParser","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"LogicManager -right-\u003e\"1\" PocketHotelParser","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"PocketHotelParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"note right of XYZCommand: XYZCommand \u003d CheckInNewGuestCommand, \\nEditGuestCommand, etc","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"calvintanwj":4,"-":41}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"Interface ReadOnlyGuestBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"Class GuestBook","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"Class ReadOnlyGuestBook","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"Class UniqueGuestList","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"Class Guest","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"Class RoomNumber","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"Class PassportNumber","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"Class ChargeablesUsed","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"GuestBook .up.|\u003e ReadOnlyGuestBook","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"Model .left.\u003e ReadOnlyGuestBook","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"ModelManager -left-\u003e \"1\" GuestBook","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"GuestBook *--\u003e \"1\" UniqueGuestList","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"UniqueGuestList --\u003e \"~* all\" Guest","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"Guest *--\u003e Name","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"Guest *--\u003e PassportNumber","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"Guest *--\u003e Email","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"Guest *--\u003e RoomNumber","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"Guest *--\u003e \"*\" Tag","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"Guest *--\u003e \"*\" ChargeablesUsed","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"note right of GuestBook: There also exists VendorBook (Vendor) \\n and ArchiveBook (Archived guests)","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"Name -[hidden]right-\u003e PassportNumber","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"PassportNumber -[hidden]right-\u003e RoomNumber","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"RoomNumber -[hidden]right-\u003e Email","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"ModelManager --\u003e\"~* filtered\" Guest","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"calvintanwj":26,"-":30}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"Class PocketHotelParser","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"HiddenOutside ..\u003e PocketHotelParser","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"PocketHotelParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"PocketHotelParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"calvintanwj":4,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"package \"GuestBook Storage\" #F4F6F6{","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"note \"Also exists for \\n Vendor \\n (VendorBookStorage) \\n and Archive \\n (ArchiveBookStorage)\" as N","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"Interface GuestBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"Class JsonGuestBookStorage","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"Class JsonSerializableGuestBookStorage","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"Class JsonAdaptedGuest","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"Class JsonAdaptedChargeable","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"StorageManager -up-\u003e \"1\"GuestBookStorage","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"Storage -right-|\u003eGuestBookStorage","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"JsonGuestBookStorage .up.|\u003eGuestBookStorage","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"JsonGuestBookStorage ..\u003e JsonSerializableGuestBookStorage","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"JsonSerializableGuestBookStorage --\u003e \"*\" JsonAdaptedGuest","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"JsonAdaptedGuest --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"JsonAdaptedGuest --\u003e \"*\" JsonAdaptedChargeable","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"calvintanwj":14,"-":32}},{"path":"docs/diagrams/ToggleTabActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"@startuml","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"start","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":":User inputs a command into PH;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":":LogicManager executes the command and","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"returns an instance of CommandResult;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"    if () then ([commandResult.tabName \u003d\u003d \"Guest\"])","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"      :Remove all child components of the","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"      List Panel and StatusBar Panel","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"                       in MainWindow;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"      :Add guest list and guests.json","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"      file path as child components","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"                    in MainWindow;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    else ([commandResult.tabName \u003d\u003d \"Vendor\"])","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"      :Remove all child components of the","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"      List Panel and StatusBar Panel","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"                       in MainWindow;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"      :Add vendor list and vendors.json","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"      file path as child components","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"                    in MainWindow;","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    endif","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"stop","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"@enduml","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"calvintanwj":24}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"Class GuestListPanel","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"Class VendorListPanel","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"Class TabPanel","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"Class GuestCard","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"Class VendorCard","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"MainWindow *-down-\u003e \"1\" GuestListPanel","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"MainWindow *-down-\u003e \"1\" VendorListPanel","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"MainWindow *-down-\u003e \"1\" TabPanel","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"GuestListPanel -down-\u003e \"*\" GuestCard","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"VendorListPanel -down-\u003e \"*\" VendorCard","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"GuestListPanel --|\u003e UiPart","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"GuestCard --|\u003e UiPart","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"GuestCard ..\u003e Model","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"GuestListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"calvintanwj":14,"-":52}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"title: Pocket Hotel","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"**Pocket Hotel (PH) is a desktop application for managing your contact details, specialized with a focus on hotel management.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"* If you are interested in using PH, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"* If you are interested about developing PH, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"NicolasCwy"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [iText7 Core](https://itextpdf.com/en), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"calvintanwj":4,"-":14,"NicolasCwy":1}},{"path":"docs/team/alyssa-savier.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NicolasCwy"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"NicolasCwy"},"content":"layout: page","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"title: Alyssa Savier\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"NicolasCwy"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"### Project: Pocket Hotel","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"**Pocket Hotel (PH)** is a specialized contact management desktop app targeted towards hotel managers who have many","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"guests and staff to handle.","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"NicolasCwy"},"content":"    * User Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"        * Added documentation for the feature `add`","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"calvintanwj":2,"NicolasCwy":13}},{"path":"docs/team/bingcheng45.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"layout: page","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"title: Toh Bing Cheng\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"### Project: Pocket Hotel","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"**Pocket Hotel (PH)** is a specialized contact management desktop app targeted towards hotel managers who have many","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"guests and staff to handle.","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"  * User Guide:","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"    * Added documentation for the feature `Saving Data`","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"bingcheng45":15}},{"path":"docs/team/calvintanwj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"layout: page","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"title: Calvin Tan\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"### Project: Pocket Hotel","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"**Pocket Hotel (PH)** is a specialized contact management desktop app targeted towards hotel managers who have many","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"guests and staff to handle.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    * User Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"      * Added documentation for features `list` and `view`","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"      * Added and tweaked user stories","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"calvintanwj":17}},{"path":"docs/team/nicolascwy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NicolasCwy"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"NicolasCwy"},"content":"layout: page","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"NicolasCwy"},"content":"title: Nicolas Chang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"NicolasCwy"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"### Project: Pocket Hotel","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"**Pocket Hotel (PH)** is a specialized contact management desktop app targeted towards hotel managers who have many","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"guests and staff to handle.","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"NicolasCwy"},"content":"  * User Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"NicolasCwy"},"content":"    * Added documentation for the feature `delete`","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"NicolasCwy":15}},{"path":"docs/team/rgbpokka.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NicolasCwy"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"NicolasCwy"},"content":"layout: page","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"title: Jeremy Yeo\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"NicolasCwy"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"### Project: Pocket Hotel","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"**Pocket Hotel (PH)** is a specialized contact management desktop app targeted towards hotel managers who have many","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"guests and staff to handle.","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"NicolasCwy"},"content":"    * User Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"        * Added documentation for the feature `edit`","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"calvintanwj":2,"NicolasCwy":13}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"calvintanwj"},"content":"Create a new `Remark` in `seedu.address.model.guest`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"calvintanwj":1,"-":400}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.vendor.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"calvintanwj":1,"-":111}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ReadOnlyVendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.storage.archive.ArchiveStorage;","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.storage.archive.JsonArchiveStorage;","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.guest.GuestBookStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.guest.JsonGuestBookStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.vendor.JsonVendorBookStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.vendor.VendorBookStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Pocket Hotel ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        GuestBookStorage guestBookStorage \u003d new JsonGuestBookStorage(userPrefs.getGuestBookFilePath());","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        VendorBookStorage vendorBookStorage \u003d new JsonVendorBookStorage(userPrefs.getVendorBookFilePath());","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"rgbpokka"},"content":"        ArchiveStorage archiveStorage \u003d new JsonArchiveStorage(userPrefs.getArchiveFilePath());","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"rgbpokka"},"content":"        storage \u003d new StorageManager(guestBookStorage, vendorBookStorage, userPrefsStorage, archiveStorage);","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        ReadOnlyGuestBook guestManager \u003d initGuestBook(storage);","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        ReadOnlyVendorBook vendorManager \u003d initVendorBook(storage);","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"rgbpokka"},"content":"        ReadOnlyGuestBook archive \u003d initArchive(storage);","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"rgbpokka"},"content":"        return new ModelManager(guestManager, vendorManager, userPrefs, archive);","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"     * Returns a {@code ReadOnlyGuestBook} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"    private ReadOnlyGuestBook initGuestBook(Storage storage) {","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        ReadOnlyGuestBook initialData;","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"            Optional\u003cReadOnlyGuestBook\u003e guestBookOptional \u003d storage.readGuestBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"            if (!guestBookOptional.isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"                logger.info(\"Data file not found. Will be starting with a sample GuestBook\");","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"            initialData \u003d guestBookOptional.orElseGet(SampleDataUtil::getSampleGuestBook);","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty GuestBook\");","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"            initialData \u003d new GuestBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty GuestBook\");","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"            initialData \u003d new GuestBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"        return initialData;","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"rgbpokka"},"content":"    // **** TO-DO ****","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"rgbpokka"},"content":"    private ReadOnlyGuestBook initArchive(Storage storage) {","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"rgbpokka"},"content":"        ReadOnlyGuestBook initialData \u003d new Archive();","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"rgbpokka"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"rgbpokka"},"content":"            Optional\u003cReadOnlyGuestBook\u003e guestBookOptional \u003d storage.readArchive();","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"rgbpokka"},"content":"            initialData \u003d guestBookOptional.orElseGet(SampleDataUtil::getSampleArchive);","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"rgbpokka"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"rgbpokka"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty archive\");","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"rgbpokka"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"rgbpokka"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty archive\");","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"rgbpokka"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"rgbpokka"},"content":"        return initialData;","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"     * Returns a {@code ReadOnlyGuestBook} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"    private ReadOnlyVendorBook initVendorBook(Storage storage) {","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"        ReadOnlyVendorBook initialData;","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"            Optional\u003cReadOnlyVendorBook\u003e vendorBookOptional \u003d storage.readVendorBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"            if (!vendorBookOptional.isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"                logger.info(\"Data file not found. Will be starting with a sample VendorBook\");","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"            initialData \u003d vendorBookOptional.orElseGet(SampleDataUtil::getSampleVendorBook);","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty VendorBook\");","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"            initialData \u003d new VendorBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty VendorBook\");","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"            initialData \u003d new VendorBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"        return initialData;","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"calvintanwj"},"content":"        logger.info(\"Starting Pocket Hotel \" + MainApp.VERSION);","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"calvintanwj"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Pocket Hotel ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rgbpokka":23,"calvintanwj":56,"-":164}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_INVALID_GUEST_PASSPORT_NUMBER \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"            \"The passport number of the guest is invalid!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"    public static final String MESSAGE_GUEST_DOES_NOT_EXIST \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"            \"The guest you are trying to edit does not exist\";","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"    public static final String MESSAGE_GUEST_IS_IN_ARCHIVE \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"            \"You cannot edit a guest that has been archived!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_INVALID_VENDORID \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"            \"The vendor id of the vendor is invalid!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"NicolasCwy"},"content":"    public static final String MESSAGE_INVALID_MULTIPLE_UNIQUE_IDENTIFIER \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"NicolasCwy"},"content":"            \"Only one unique identifier should be provided!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_GUESTS_LISTED_OVERVIEW \u003d \"%1$d guests listed!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_VENDORS_LISTED_OVERVIEW \u003d \"%1$d vendors listed!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_MISSING_ARGUMENTS \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"            \"You are missing arguments in your command. Please follow the command format!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_TOO_MANY_ARGUMENTS \u003d \"Please only specify one argument\";","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rgbpokka":4,"calvintanwj":9,"-":10,"NicolasCwy":2}},{"path":"src/main/java/seedu/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"        // final ObjectMapper mapper \u003d new ObjectMapper();","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"        // final ObjectWriter writer \u003d mapper.writer().withRootName(\"person123\");","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"        // final String jsonMessage \u003d writer.writeValueAsString(objectToSerialize);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"        // FileUtil.writeToFile(jsonFile, jsonMessage);","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"        //actual writing to json file","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param filePath                   cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"bingcheng45"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + classOfObjectToDeserialize + e);","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e      The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"calvintanwj":4,"bingcheng45":6,"-":141}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"     * Lowercases the string and capitalizes the first letter.","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"     * @param s The input string","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"     * @return The string with its first character capitalized.","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"    public static String capitalizeFirstLetter(String s) {","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"        return s.substring(0, 1).toUpperCase() + s.substring(1).toLowerCase();","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"calvintanwj":14,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ReadOnlyVendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"     * Returns the GuestBook.","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"     * @see seedu.address.model.Model#getGuestBook()","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    ReadOnlyGuestBook getGuestBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"     * Returns an unmodifiable view of the filtered list of guests","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    ObservableList\u003cGuest\u003e getFilteredGuestList();","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"     * Returns the Archive.","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"rgbpokka"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"rgbpokka"},"content":"     * @see seedu.address.model.Model#getArchive()","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"    ReadOnlyGuestBook getArchive();","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"     * Returns the VendorBook.","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"     * @see seedu.address.model.Model#getVendorBook()","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    ReadOnlyVendorBook getVendorBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"     * Returns an unmodifiable view of the filtered list of vendors","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    ObservableList\u003cVendor\u003e getFilteredVendorList();","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"     * Returns the user prefs\u0027 guest book file path.","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    Path getGuestBookFilePath();","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"     * Returns the user prefs\u0027 vendor book file path.","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    Path getVendorBookFilePath();","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"rgbpokka"},"content":"     * Returns the user prefs\u0027 archive file path.","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"rgbpokka"},"content":"    Path getArchiveFilePath();","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"rgbpokka":10,"calvintanwj":30,"-":45}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.PocketHotelParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ReadOnlyVendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    private final PocketHotelParser pocketHotelParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        pocketHotelParser \u003d new PocketHotelParser();","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        Command command \u003d pocketHotelParser.parseCommand(commandText);","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"            storage.saveGuestBook(model.getGuestBook());","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"            storage.saveVendorBook(model.getVendorBook());","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"rgbpokka"},"content":"            storage.saveArchive(model.getArchive());","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    public ReadOnlyVendorBook getVendorBook() {","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        return model.getVendorBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    public ObservableList\u003cVendor\u003e getFilteredVendorList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        return model.getFilteredVendorList();","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    public Path getVendorBookFilePath() {","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        return model.getVendorBookFilePath();","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"    public ReadOnlyGuestBook getGuestBook() {","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        return model.getGuestBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"    public ObservableList\u003cGuest\u003e getFilteredGuestList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        return model.getFilteredGuestList();","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"    public Path getGuestBookFilePath() {","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        return model.getGuestBookFilePath();","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"rgbpokka"},"content":"    public ReadOnlyGuestBook getArchive() {","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"rgbpokka"},"content":"        return model.getArchive();","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"rgbpokka"},"content":"    public Path getArchiveFilePath() {","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"rgbpokka"},"content":"        return model.getArchiveFilePath();","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"rgbpokka":9,"calvintanwj":30,"-":71}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"     * The application should exit.","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"     * Contains the tabName you wish to toggle to","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"     **/","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    private final Optional\u003cString\u003e tabName;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, String tabName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        this.tabName \u003d Optional.ofNullable(tabName);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        this.tabName \u003d Optional.empty();","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser} and tabName to toggle to,","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult(String feedbackToUser, String tabName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        this(feedbackToUser, false, false, tabName);","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        this(feedbackToUser, false, false, null);","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"    public Optional\u003cString\u003e getTabNameToToggleTo() {","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        return tabName;","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"calvintanwj":37,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/guest/ChargeGuestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VENDOR_ID;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"public class ChargeGuestCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    public static final String COMMAND_WORD \u003d \"chargeguest\";","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Charges a guest that hired services from a vendor.\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_PASSPORT_NUMBER + \"PASSPORT_NUMBER \"","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_VENDOR_ID + \"VENDOR_ID \\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_PASSPORT_NUMBER + \"SD1208921 \"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_VENDOR_ID + \"123\";","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Service from: %1$s \\nhas been billed to Guest: %2$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_NONEXISTENT_VENDOR \u003d \"Vendor with this vendorId does not exist\";","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_NONEXISTENT_GUEST \u003d \"Guest with this passport number does not exist\";","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    private final PassportNumber passportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    private final VendorId vendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"     * Creates an ChargeGuestCommand to charge the specified {@code Guest}","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    public ChargeGuestCommand(PassportNumber passportNumber, VendorId vendorId) {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        requireAllNonNull(passportNumber, vendorId);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        this.vendorId \u003d vendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        this.passportNumber \u003d passportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        Optional\u003cGuest\u003e guestInTransaction \u003d model.getGuest(passportNumber);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        if (guestInTransaction.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"            throw new CommandException(MESSAGE_NONEXISTENT_GUEST);","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        Optional\u003cVendor\u003e vendorInTransaction \u003d model.getVendor(vendorId);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        if (vendorInTransaction.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"            throw new CommandException(MESSAGE_NONEXISTENT_VENDOR);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        guestInTransaction.get().charge(vendorInTransaction.get());","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, vendorInTransaction.get(), guestInTransaction.get()));","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof ChargeGuestCommand // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 passportNumber.equals(((ChargeGuestCommand) other).passportNumber)","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 vendorId.equals(((ChargeGuestCommand) other).vendorId));","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":76}},{"path":"src/main/java/seedu/address/logic/commands/guest/CheckInNewGuestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOM_NUMBER;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":" * Checks in a guest into the hotel.","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"alyssa-savier"},"content":"public class CheckInNewGuestCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    public static final String COMMAND_WORD \u003d \"checkin\";","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Checks in a guest to the hotel.\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_PASSPORT_NUMBER + \"PASSPORT_NUMBER \"","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_ROOM_NUMBER + \"ROOM_NUMBER \"","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"alyssa-savier"},"content":"            + PREFIX_PASSPORT_NUMBER + \"T1234567D \"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_ROOM_NUMBER + \"123 \"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_TAG + \"Vaccinated \"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_TAG + \"Applied Promocode\";","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New guest checked in: %1$s\";","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_DUPLICATE_GUEST \u003d \"This guest is already checked in.\";","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_GUEST_IN_ARCHIVE \u003d \"This is a returning guest! Use the command \"","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"            + \"\u0027returncheckin\u0027 instead!\";","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"alyssa-savier"},"content":"    public static final String MESSAGE_DUPLICATE_ROOM \u003d \"This room number is already in use.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    private final Guest toCheckIn;","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"     * Creates an CheckInCommand to add the specified {@code Guest}","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"alyssa-savier"},"content":"    public CheckInNewGuestCommand(Guest guest) {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(guest);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        toCheckIn \u003d guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        if (model.hasGuest(toCheckIn)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"alyssa-savier"},"content":"        if (model.getArchivedGuest(toCheckIn.getPassportNumber()).isPresent()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"alyssa-savier"},"content":"            throw new CommandException(MESSAGE_GUEST_IN_ARCHIVE);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"alyssa-savier"},"content":"        if (model.getFilteredGuestList()","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"alyssa-savier"},"content":"                .stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"alyssa-savier"},"content":"                .filter(v -\u003e v.getRoomNumber().equals(toCheckIn.getRoomNumber()))","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"alyssa-savier"},"content":"                .findAny()","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"alyssa-savier"},"content":"                .orElse(null) !\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"alyssa-savier"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ROOM);","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        model.addGuest(toCheckIn);","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toCheckIn));","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"alyssa-savier"},"content":"                || (other instanceof CheckInNewGuestCommand // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"alyssa-savier"},"content":"                \u0026\u0026 toCheckIn.equals(((CheckInNewGuestCommand) other).toCheckIn));","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":66,"alyssa-savier":18}},{"path":"src/main/java/seedu/address/logic/commands/guest/CheckInReturningGuestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOM_NUMBER;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":" * Checks in a guest into the hotel.","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"alyssa-savier"},"content":"public class CheckInReturningGuestCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"alyssa-savier"},"content":"    public static final String COMMAND_WORD \u003d \"returncheckin\";","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Checks in a returning guest to the hotel.\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_PASSPORT_NUMBER + \"PASSPORT_NUMBER \"","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_ROOM_NUMBER + \"ROOM_NUMBER \\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"alyssa-savier"},"content":"            + PREFIX_PASSPORT_NUMBER + \"T288230D \"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"alyssa-savier"},"content":"            + PREFIX_ROOM_NUMBER + \"123\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"alyssa-savier"},"content":"    public static final String MESSAGE_SUCCESS_RETURNING_GUEST \u003d \"Returning guest checked in: %1$s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"alyssa-savier"},"content":"    public static final String MESSAGE_NONEXISTENT_GUEST \u003d \"This guest does not belong in our archive.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"alyssa-savier"},"content":"    public static final String MESSAGE_DUPLICATE_ROOM \u003d \"This room number is already in use.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"alyssa-savier"},"content":"    private Guest toCheckIn;","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"alyssa-savier"},"content":"     * Creates an CheckInReturningGuestCommand to add the specified {@code Guest}","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"alyssa-savier"},"content":"    public CheckInReturningGuestCommand(Guest guest) {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(guest);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        toCheckIn \u003d guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"alyssa-savier"},"content":"        if (model.getArchivedGuest(toCheckIn.getPassportNumber()).isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"alyssa-savier"},"content":"            throw new CommandException(MESSAGE_NONEXISTENT_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"alyssa-savier"},"content":"        if (model.getFilteredGuestList()","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"alyssa-savier"},"content":"                .stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"alyssa-savier"},"content":"                .filter(v -\u003e v.getRoomNumber().equals(toCheckIn.getRoomNumber()))","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"alyssa-savier"},"content":"                .findAny()","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"alyssa-savier"},"content":"                .orElse(null) !\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"alyssa-savier"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ROOM);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"alyssa-savier"},"content":"        Guest archivedGuest \u003d model.getArchivedGuest(toCheckIn.getPassportNumber()).get();","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"alyssa-savier"},"content":"        Guest returningGuest \u003d new Guest(archivedGuest.getName(), archivedGuest.getEmail(),","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"alyssa-savier"},"content":"                archivedGuest.getTags(), toCheckIn.getRoomNumber(), archivedGuest.getPassportNumber());","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"alyssa-savier"},"content":"        this.toCheckIn \u003d returningGuest;","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"alyssa-savier"},"content":"        model.addGuest(returningGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"alyssa-savier"},"content":"        model.deleteArchivedGuest(archivedGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"alyssa-savier"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_RETURNING_GUEST, returningGuest));","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"alyssa-savier"},"content":"                || (other instanceof CheckInReturningGuestCommand // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"alyssa-savier"},"content":"                \u0026\u0026 toCheckIn.equals(((CheckInReturningGuestCommand) other).toCheckIn));","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":44,"alyssa-savier":29}},{"path":"src/main/java/seedu/address/logic/commands/guest/CheckOutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.invoice.Invoice;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":" * Checks out a guest from the guest book.","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"public class CheckOutCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    public static final String COMMAND_WORD \u003d \"checkout\";","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"            + \": Checks out the guest by the passport number in the displayed guest list.\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_PASSPORT_NUMBER + \"PASSPORT_NUMBER\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"            + \"Example: \" + COMMAND_WORD + \" pn/A021231B\";","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_CHECKOUT_SUCCESSFUL \u003d \"Checked out Guest: %1$s\\nInvoice has been generated!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    private final PassportNumber passportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    public CheckOutCommand(PassportNumber passportNumber) {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        this.passportNumber \u003d passportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        List\u003cGuest\u003e lastShownList \u003d model.getFilteredGuestList();","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        Guest guestToCheckOut \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"                lastShownList.stream().filter(p -\u003e p.getPassportNumber().equals(passportNumber)).findAny().orElse(null);","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        if (guestToCheckOut \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GUEST_PASSPORT_NUMBER);","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"rgbpokka"},"content":"        // generate invoice","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"NicolasCwy"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"NicolasCwy"},"content":"            Invoice.generateInvoicePdf(guestToCheckOut);","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"NicolasCwy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"NicolasCwy"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"rgbpokka"},"content":"        guestToCheckOut.clearChargeables();","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"        model.deleteGuest(guestToCheckOut); // removes the guest from the guest book","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"        model.addArchivedGuest(guestToCheckOut); // adds the guest to the archive","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        return new CommandResult(String.format(MESSAGE_CHECKOUT_SUCCESSFUL, guestToCheckOut));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof CheckOutCommand // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 passportNumber.equals(((CheckOutCommand) other).passportNumber)); // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"rgbpokka":4,"calvintanwj":61,"NicolasCwy":5}},{"path":"src/main/java/seedu/address/logic/commands/guest/ClearGuestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":" * Clears the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"public class ClearGuestCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    public static final String COMMAND_WORD \u003d \"clearguest\";","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Guest list has been cleared!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"        model.setGuestBook(new GuestBook());","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":24}},{"path":"src/main/java/seedu/address/logic/commands/guest/DeleteGuestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"NicolasCwy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"NicolasCwy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"NicolasCwy"},"content":" * Command used to delete a Guest from the GuestBook or Archive if found.","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"NicolasCwy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"public class DeleteGuestCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    public static final String COMMAND_WORD \u003d \"deleteguest\";","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"NicolasCwy"},"content":"            + \": Delete the guest by the passport number from the list of checked in guests or the archive.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_PASSPORT_NUMBER + \"PASSPORT_NUMBER\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"            + \"Example: \" + COMMAND_WORD + \" pn/A021231B\";","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_DELETE_SUCCESSFUL \u003d \"Deleted Guest: %1$s\";","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    private final PassportNumber passportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"NicolasCwy"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"NicolasCwy"},"content":"     * Constructs DeleteGuestCommand.","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"NicolasCwy"},"content":"     * @param passportNumber Passport number for guest to be deleted.","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"NicolasCwy"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    public DeleteGuestCommand(PassportNumber passportNumber) {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"NicolasCwy"},"content":"        assert passportNumber !\u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        this.passportNumber \u003d passportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"NicolasCwy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"NicolasCwy"},"content":"     * Deletes a guest by their passport number, if found in the GuestBook or Archive.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"NicolasCwy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"NicolasCwy"},"content":"     * @return A CommandResult which states if command was successful or not.","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"NicolasCwy"},"content":"     * @throws CommandException if the Guest was not able to be found.","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"NicolasCwy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"NicolasCwy"},"content":"        Optional\u003cGuest\u003e guestToBeDeletedFromCheckInList \u003d getGuestFromCheckInList(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"NicolasCwy"},"content":"        Optional\u003cGuest\u003e guestToBeDeletedFromArchive \u003d getGuestFromArchive(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"NicolasCwy"},"content":"        if (guestToBeDeletedFromArchive.isEmpty() \u0026\u0026 guestToBeDeletedFromCheckInList.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GUEST_PASSPORT_NUMBER);","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"NicolasCwy"},"content":"        // Guest should not be found in both archive and checkin","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"NicolasCwy"},"content":"        assert (guestToBeDeletedFromCheckInList.isPresent() \u0026\u0026 guestToBeDeletedFromArchive.isPresent()) \u003d\u003d false;","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"NicolasCwy"},"content":"        return deleteGuest(model, guestToBeDeletedFromArchive, guestToBeDeletedFromCheckInList);","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"NicolasCwy"},"content":"    private Optional\u003cGuest\u003e getGuestFromCheckInList(Model model) {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"NicolasCwy"},"content":"        return model.getGuest(this.passportNumber);","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"NicolasCwy"},"content":"    private Optional\u003cGuest\u003e getGuestFromArchive(Model model) {","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"NicolasCwy"},"content":"        return model.getArchivedGuest(this.passportNumber);","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"NicolasCwy"},"content":"    private CommandResult deleteGuest(Model model, Optional\u003cGuest\u003e archiveGuest,","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"NicolasCwy"},"content":"                                      Optional\u003cGuest\u003e checkedInGuest) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"NicolasCwy"},"content":"        assert archiveGuest !\u003d null || checkedInGuest !\u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"NicolasCwy"},"content":"        Guest guest;","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"NicolasCwy"},"content":"        if (archiveGuest.isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"NicolasCwy"},"content":"            guest \u003d archiveGuest.get();","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"NicolasCwy"},"content":"            model.deleteArchivedGuest(guest);","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"NicolasCwy"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"NicolasCwy"},"content":"            guest \u003d checkedInGuest.get();","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"NicolasCwy"},"content":"            model.deleteGuest(guest);","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"NicolasCwy"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_SUCCESSFUL, guest));","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof DeleteGuestCommand // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 passportNumber.equals(((DeleteGuestCommand) other).passportNumber)); // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":45,"NicolasCwy":52}},{"path":"src/main/java/seedu/address/logic/commands/guest/EditGuestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOM_NUMBER;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_GUESTS;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.chargeable.Chargeable;","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.RoomNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"public class EditGuestCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    public static final String COMMAND_WORD \u003d \"editguest\";","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the guest identified \"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"            + \"by the passport number of the guest. \"","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"            + \"Parameters:  \"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_PASSPORT_NUMBER + \"PASSPORT_NUMBER \"","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_ROOM_NUMBER + \"ROOM_NUMBER] \"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"            + \"Example: \" + COMMAND_WORD + \" pn/A12345678 \"","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com \"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_ROOM_NUMBER + \"1233 \"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_TAG + \"VIP \";","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_EDIT_GUEST_SUCCESS \u003d \"Edited Guest: %1$s\";","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_DUPLICATE_GUEST \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    private final PassportNumber passportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"    private final EditGuestDescriptor editGuestDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"     * @param passportNumber      of the person in the filtered guest list to edit","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"     * @param editGuestDescriptor details to edit the person with","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    public EditGuestCommand(PassportNumber passportNumber, EditGuestDescriptor editGuestDescriptor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        requireAllNonNull(passportNumber, editGuestDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        this.passportNumber \u003d passportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        this.editGuestDescriptor \u003d editGuestDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"     * Execute the edit command.","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"     * @return CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"     * @throws CommandException","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"        List\u003cGuest\u003e lastShownList \u003d model.getFilteredGuestList();","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        Guest guestToEdit \u003d lastShownList","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"                .stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"                .filter(p -\u003e p.getPassportNumber().equals(passportNumber))","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"                .findAny()","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"                .orElse(null);","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"        if (guestToEdit \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"rgbpokka"},"content":"            Optional\u003cGuest\u003e guestToLocate \u003d model.getArchivedGuest(passportNumber);","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"rgbpokka"},"content":"            if (guestToLocate.isPresent()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"rgbpokka"},"content":"                throw new CommandException(Messages.MESSAGE_GUEST_IS_IN_ARCHIVE);","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"rgbpokka"},"content":"            } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"rgbpokka"},"content":"                throw new CommandException(Messages.MESSAGE_GUEST_DOES_NOT_EXIST);","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"rgbpokka"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        Guest editedGuest \u003d createEditedGuest(guestToEdit, editGuestDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"        if (!guestToEdit.isSame(editedGuest) \u0026\u0026 model.hasGuest(editedGuest)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"        model.setGuest(guestToEdit, editedGuest);","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"        model.updateFilteredGuestList(PREDICATE_SHOW_ALL_GUESTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_GUEST_SUCCESS, editedGuest));","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"     * Creates and returns a {@code Guest} with the details of {@code guestToEdit}","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"     * edited with {@code editGuestDescriptor}.","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"    private static Guest createEditedGuest(Guest guestToEdit, EditGuestDescriptor editGuestDescriptor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"        assert guestToEdit !\u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"        Name updatedName \u003d editGuestDescriptor.getName().orElse(guestToEdit.getName());","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"        Email updatedEmail \u003d editGuestDescriptor.getEmail().orElse(guestToEdit.getEmail());","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"        Set\u003cTag\u003e updatedTags \u003d editGuestDescriptor.getTags().orElse(guestToEdit.getTags());","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"        RoomNumber updatedRoomNumber \u003d editGuestDescriptor.getRoomNumber().orElse(guestToEdit.getRoomNumber());","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"        PassportNumber updatedPassportNumber \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"                editGuestDescriptor.getPassportNumber().orElse(guestToEdit.getPassportNumber());","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"bingcheng45"},"content":"        List\u003cChargeable\u003e chargeablesUsed \u003d guestToEdit.getChargeableUsed();","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"        return new Guest(updatedName, updatedEmail, updatedTags, updatedRoomNumber, updatedPassportNumber,","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"                chargeablesUsed);","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"        if (!(other instanceof EditGuestCommand)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"        // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"        EditGuestCommand e \u003d (EditGuestCommand) other;","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"        return passportNumber.equals(e.passportNumber)","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 editGuestDescriptor.equals(e.editGuestDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"     * Stores the details to edit the guest with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"     * corresponding field value of the guest.","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"    public static class EditGuestDescriptor {","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"        private Name name;","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"        private Email email;","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"        private PassportNumber passportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"        private RoomNumber roomNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"        public EditGuestDescriptor() {","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"        /**","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"         * Creates a edit guest descriptor instance.","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"         *","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"         * @param toCopy","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"         */","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"        public EditGuestDescriptor(EditGuestDescriptor toCopy) {","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"            setPassportNumber(toCopy.passportNumber);","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"            setRoomNumber(toCopy.roomNumber);","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"        /**","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"rgbpokka"},"content":"         * Returns true if at least one field is edited. Passport number has been left out as its purpose is to","lastModifiedDate":"2021-10-28"},{"lineNumber":175,"author":{"gitId":"rgbpokka"},"content":"         * identify the guest. If included in the implementation, a command such as:","lastModifiedDate":"2021-10-28"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"         * \u003cp\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":177,"author":{"gitId":"rgbpokka"},"content":"         * editguest pn/A1234567 would edit the guest successfully, even though it should be throwing an exception","lastModifiedDate":"2021-10-28"},{"lineNumber":178,"author":{"gitId":"rgbpokka"},"content":"         * stating that at least one field should be specified for editing. See (@code EditGuestCommandParser::parse}","lastModifiedDate":"2021-10-28"},{"lineNumber":179,"author":{"gitId":"rgbpokka"},"content":"         * for more details.","lastModifiedDate":"2021-10-28"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"         */","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"rgbpokka"},"content":"            return CollectionUtil.isAnyNonNull(name, email, tags, roomNumber);","lastModifiedDate":"2021-10-28"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"calvintanwj"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"calvintanwj"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"calvintanwj"},"content":"            this.email \u003d email;","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"calvintanwj"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2021-10-23"},{"lineNumber":198,"author":{"gitId":"calvintanwj"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"calvintanwj"},"content":"        public void setPassportNumber(PassportNumber passportNumber) {","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"calvintanwj"},"content":"            this.passportNumber \u003d passportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":204,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"calvintanwj"},"content":"        public Optional\u003cPassportNumber\u003e getPassportNumber() {","lastModifiedDate":"2021-10-23"},{"lineNumber":206,"author":{"gitId":"calvintanwj"},"content":"            return Optional.ofNullable(passportNumber);","lastModifiedDate":"2021-10-23"},{"lineNumber":207,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":208,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":209,"author":{"gitId":"calvintanwj"},"content":"        public void setRoomNumber(RoomNumber roomNumber) {","lastModifiedDate":"2021-10-23"},{"lineNumber":210,"author":{"gitId":"calvintanwj"},"content":"            this.roomNumber \u003d roomNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":212,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":213,"author":{"gitId":"calvintanwj"},"content":"        public Optional\u003cRoomNumber\u003e getRoomNumber() {","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"calvintanwj"},"content":"            return Optional.ofNullable(roomNumber);","lastModifiedDate":"2021-10-23"},{"lineNumber":215,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":216,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":217,"author":{"gitId":"calvintanwj"},"content":"        /**","lastModifiedDate":"2021-10-23"},{"lineNumber":218,"author":{"gitId":"calvintanwj"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-10-23"},{"lineNumber":219,"author":{"gitId":"calvintanwj"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"calvintanwj"},"content":"         */","lastModifiedDate":"2021-10-23"},{"lineNumber":221,"author":{"gitId":"calvintanwj"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"calvintanwj"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-10-23"},{"lineNumber":223,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":224,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":225,"author":{"gitId":"calvintanwj"},"content":"        /**","lastModifiedDate":"2021-10-23"},{"lineNumber":226,"author":{"gitId":"calvintanwj"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-23"},{"lineNumber":227,"author":{"gitId":"calvintanwj"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-10-23"},{"lineNumber":228,"author":{"gitId":"calvintanwj"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"calvintanwj"},"content":"         */","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"calvintanwj"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"calvintanwj"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"calvintanwj"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":236,"author":{"gitId":"calvintanwj"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":237,"author":{"gitId":"calvintanwj"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":238,"author":{"gitId":"calvintanwj"},"content":"                return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":239,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":240,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":241,"author":{"gitId":"calvintanwj"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":242,"author":{"gitId":"calvintanwj"},"content":"            if (!(other instanceof EditGuestDescriptor)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":243,"author":{"gitId":"calvintanwj"},"content":"                return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":244,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":245,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":246,"author":{"gitId":"calvintanwj"},"content":"            // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":247,"author":{"gitId":"calvintanwj"},"content":"            EditGuestDescriptor e \u003d (EditGuestDescriptor) other;","lastModifiedDate":"2021-10-23"},{"lineNumber":248,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":249,"author":{"gitId":"calvintanwj"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-10-23"},{"lineNumber":250,"author":{"gitId":"calvintanwj"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2021-10-23"},{"lineNumber":251,"author":{"gitId":"calvintanwj"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-10-23"},{"lineNumber":252,"author":{"gitId":"calvintanwj"},"content":"                    \u0026\u0026 getPassportNumber().equals(e.getPassportNumber())","lastModifiedDate":"2021-10-23"},{"lineNumber":253,"author":{"gitId":"rgbpokka"},"content":"                    \u0026\u0026 getRoomNumber().equals(e.getRoomNumber());","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":255,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":256,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":257,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"rgbpokka":13,"calvintanwj":243,"bingcheng45":1}},{"path":"src/main/java/seedu/address/logic/commands/guest/FilterGuestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOM_NUMBER;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":" * Finds and lists all guests in guest book whose fields match any of the argument keywords.","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"public class FilterGuestCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    public static final String COMMAND_WORD \u003d \"filterguest\";","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters the guest list by any given fields. \"","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"            + \"Requires at least one parameter.\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_PASSPORT_NUMBER + \"PASSPORT_NUMBER\" + \"] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_NAME + \"NAME\" + \"] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_ROOM_NUMBER + \"ROOM_NUMBER\" + \"] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL\" + \"] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_TAG + \"TAG\" + \"]\" + \"...\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_NAME + \"Bill \"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_TAG + \"Vaccinated \"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"            + \"\\nThis filters the list by those named Bill and have the Vaccinated tag.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    private final GuestPredicate predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"     * Creates a filter guest command","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"     * @param predicate Contains the filter for the guest command.","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    public FilterGuestCommand(GuestPredicate predicate) {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        model.updateFilteredGuestList(predicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"                String.format(Messages.MESSAGE_GUESTS_LISTED_OVERVIEW, model.getFilteredGuestList().size()), \"Guests\");","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof FilterGuestCommand // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 predicate.equals(((FilterGuestCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"calvintanwj":64}},{"path":"src/main/java/seedu/address/logic/commands/guest/ListGuestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_GUESTS;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"public class ListGuestCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    public static final String COMMAND_WORD \u003d \"listguest\";","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all guests\";","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"        model.updateFilteredGuestList(PREDICATE_SHOW_ALL_GUESTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"        return new CommandResult(MESSAGE_SUCCESS, \"Guests\");","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":25}},{"path":"src/main/java/seedu/address/logic/commands/vendor/AddVendorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPERATING_HOURS;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_NAME;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VENDOR_ID;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"public class AddVendorCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    public static final String COMMAND_WORD \u003d \"addvendor\";","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a vendor that operates with the hotel.\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_VENDOR_ID + \"VENDOR_ID \"","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_COST + \"COST \"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_SERVICE_NAME + \"SERVICE_NAME \"","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_OPERATING_HOURS + \"OPERATING_HOURS \"","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_PHONE + \"85948321 \"","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_ADDRESS + \"Clementi Road 123 \"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_VENDOR_ID + \"123 \"","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_COST + \"50.00 \"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_SERVICE_NAME + \"Massage \"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_OPERATING_HOURS + \"12345 0800-1700 \"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_TAG + \"Vaccinated \";","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New vendor added: %1$s\";","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_DUPLICATE_VENDOR \u003d \"This vendor already exists.\";","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    private final Vendor toAdd;","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"     * Creates an AddVendorCommand to add the specified {@code Vendor}","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    public AddVendorCommand(Vendor vendor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(vendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        toAdd \u003d vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        if (model.hasVendor(toAdd)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_VENDOR);","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        model.addVendor(toAdd);","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof AddVendorCommand // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 toAdd.equals(((AddVendorCommand) other).toAdd));","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":78}},{"path":"src/main/java/seedu/address/logic/commands/vendor/ClearVendorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"public class ClearVendorCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    public static final String COMMAND_WORD \u003d \"clearvendor\";","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Vendor list has been cleared!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"        model.setVendorBook(new VendorBook());","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":21}},{"path":"src/main/java/seedu/address/logic/commands/vendor/DeleteVendorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"NicolasCwy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VENDOR_ID;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"NicolasCwy"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"NicolasCwy"},"content":" * Command used to delete a Vendor from the VendorBook if found.","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"NicolasCwy"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"public class DeleteVendorCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    public static final String COMMAND_WORD \u003d \"deletevendor\";","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"            + \": Deletes the vendor by the vendor ID.\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_VENDOR_ID + \"VENDOR_ID\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"            + \"Example: \" + COMMAND_WORD + \" vid/123\";","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_DELETE_SUCCESSFUL \u003d \"Deleted Vendor: %1$s\";","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    private final VendorId vendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"NicolasCwy"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"NicolasCwy"},"content":"     * Constructs DeleteVendorCommand.","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"NicolasCwy"},"content":"     * @param vendorId Vendor ID for vendor to be deleted.","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"NicolasCwy"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    public DeleteVendorCommand(VendorId vendorId) {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        this.vendorId \u003d vendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"NicolasCwy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"NicolasCwy"},"content":"     * Deletes a vendor by their vendor ID, if found in the VendorBook.","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"NicolasCwy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"NicolasCwy"},"content":"     * @return A CommandResult which states if command was successful or not.","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"NicolasCwy"},"content":"     * @throws CommandException if the Vendor was not able to be found.","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"NicolasCwy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"NicolasCwy"},"content":"        Optional\u003cVendor\u003e vendorToBeDeleted \u003d model.getVendor(this.vendorId);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"NicolasCwy"},"content":"        if (vendorToBeDeleted.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_VENDORID);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"NicolasCwy"},"content":"        model.deleteVendor(vendorToBeDeleted.get());","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"NicolasCwy"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_SUCCESSFUL, vendorToBeDeleted.get()));","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof DeleteVendorCommand // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 vendorId.equals(((DeleteVendorCommand) other).vendorId)); // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":46,"NicolasCwy":23}},{"path":"src/main/java/seedu/address/logic/commands/vendor/EditVendorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPERATING_HOURS;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_NAME;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VENDOR_ID;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_VENDORS;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Address;","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Cost;","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.OperatingHours;","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ServiceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"public class EditVendorCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    public static final String COMMAND_WORD \u003d \"editvendor\";","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the vendor identified \"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"            + \"by the vendor id of the vendor. \"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_VENDOR_ID + \"VENDOR_ID \"","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_COST + \"COST] \"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_SERVICE_NAME + \"SERVICE_NAME] \"","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_OPERATING_HOURS + \"OPERATING_HOURS] \"","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"            + \"Example: \" + COMMAND_WORD + \" vid/123 \"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com \"","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_SERVICE_NAME + \"Food \"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_TAG + \"VIP \";","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_EDIT_VENDOR_SUCCESS \u003d \"Edited Vendor: %1$s\";","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_DUPLICATE_VENDOR \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"    private final VendorId vendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"    private final EditVendorDescriptor editVendorDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"     * @param vendorId             of the vendor in the filtered vendor list to edit","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"     * @param editVendorDescriptor details to edit the vendor with","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    public EditVendorCommand(VendorId vendorId, EditVendorDescriptor editVendorDescriptor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        requireAllNonNull(vendorId, editVendorDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        this.vendorId \u003d vendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"        this.editVendorDescriptor \u003d editVendorDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"     * Execute the edit command.","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"     * @return CommandResult","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"     * @throws CommandException","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"        List\u003cVendor\u003e lastShownList \u003d model.getFilteredVendorList();","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        Vendor vendorToEdit \u003d lastShownList","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"                .stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"                .filter(p -\u003e p.getVendorId().equals(vendorId))","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"                .findAny()","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"                .orElse(null);","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"        if (vendorToEdit \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_VENDORID);","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"        Vendor editedVendor \u003d createdEditedVendor(vendorToEdit, editVendorDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"        if (!vendorToEdit.isSame(editedVendor) \u0026\u0026 model.hasVendor(editedVendor)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_VENDOR);","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"        model.setVendor(vendorToEdit, editedVendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        model.updateFilteredVendorList(PREDICATE_SHOW_ALL_VENDORS);","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_VENDOR_SUCCESS, editedVendor));","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"     * Creates and returns a {@code Vendor} with the details of {@code vendorToEdit}","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"     * edited with {@code editVendorDescriptor}.","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"    private static Vendor createdEditedVendor(Vendor vendorToEdit, EditVendorDescriptor editVendorDescriptor) {","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"        assert vendorToEdit !\u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"        Name updatedName \u003d editVendorDescriptor.getName().orElse(vendorToEdit.getName());","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"        Email updatedEmail \u003d editVendorDescriptor.getEmail().orElse(vendorToEdit.getEmail());","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"        Set\u003cTag\u003e updatedTags \u003d editVendorDescriptor.getTags().orElse(vendorToEdit.getTags());","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"        Address updatedAddress \u003d editVendorDescriptor.getAddress().orElse(vendorToEdit.getAddress());","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"        Phone updatedPhone \u003d editVendorDescriptor.getPhone().orElse(vendorToEdit.getPhone());","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"        VendorId updatedVendorId \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"                editVendorDescriptor.getVendorId().orElse(vendorToEdit.getVendorId());","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"        ServiceName updatedServiceName \u003d editVendorDescriptor.getServiceName().orElse(vendorToEdit.getServiceName());","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"        Cost updatedCost \u003d editVendorDescriptor.getCost().orElse(vendorToEdit.getCost());","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"        OperatingHours updatedOperatingHours \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"                editVendorDescriptor.getOperatingHours().orElse(vendorToEdit.getOperatingHours());","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"        return new Vendor(updatedName, updatedEmail, updatedTags, updatedVendorId, updatedPhone, updatedServiceName,","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"                updatedAddress, updatedCost, updatedOperatingHours);","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"        if (!(other instanceof EditVendorCommand)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"        // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"        EditVendorCommand e \u003d (EditVendorCommand) other;","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"        return vendorId.equals(e.vendorId)","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 editVendorDescriptor.equals(e.editVendorDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"     * Stores the details to edit the vendor with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"     * corresponding field value of the vendor.","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"    public static class EditVendorDescriptor {","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"        private Name name;","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"        private Email email;","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"        private Phone phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"        private Address address;","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"        private VendorId vendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"        private Cost cost;","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"        private ServiceName serviceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"        private OperatingHours operatingHours;","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"        public EditVendorDescriptor() {","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"        /**","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"         */","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"        public EditVendorDescriptor(EditVendorDescriptor toCopy) {","lastModifiedDate":"2021-10-23"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2021-10-23"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"            setVendorId(toCopy.vendorId);","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"            setCost(toCopy.cost);","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"            setServiceName(toCopy.serviceName);","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"            setOperatingHours(toCopy.operatingHours);","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"calvintanwj"},"content":"        /**","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"rgbpokka"},"content":"         * Returns true if at least one field is edited. Vendor ID has been left out. The explanation is similar to that","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"rgbpokka"},"content":"         * in EditGuestCommand.","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"calvintanwj"},"content":"         */","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"calvintanwj"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"rgbpokka"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, cost, serviceName,","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"calvintanwj"},"content":"                    operatingHours);","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"calvintanwj"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"calvintanwj"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-10-23"},{"lineNumber":198,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"calvintanwj"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"calvintanwj"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":204,"author":{"gitId":"calvintanwj"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"calvintanwj"},"content":"            this.email \u003d email;","lastModifiedDate":"2021-10-23"},{"lineNumber":206,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":207,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":208,"author":{"gitId":"calvintanwj"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2021-10-23"},{"lineNumber":209,"author":{"gitId":"calvintanwj"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2021-10-23"},{"lineNumber":210,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":212,"author":{"gitId":"calvintanwj"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2021-10-23"},{"lineNumber":213,"author":{"gitId":"calvintanwj"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":215,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":216,"author":{"gitId":"calvintanwj"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2021-10-23"},{"lineNumber":217,"author":{"gitId":"calvintanwj"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2021-10-23"},{"lineNumber":218,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":219,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"calvintanwj"},"content":"        /**","lastModifiedDate":"2021-10-23"},{"lineNumber":221,"author":{"gitId":"calvintanwj"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"calvintanwj"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-23"},{"lineNumber":223,"author":{"gitId":"calvintanwj"},"content":"         */","lastModifiedDate":"2021-10-23"},{"lineNumber":224,"author":{"gitId":"calvintanwj"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-23"},{"lineNumber":225,"author":{"gitId":"calvintanwj"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-10-23"},{"lineNumber":226,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":227,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":228,"author":{"gitId":"calvintanwj"},"content":"        /**","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"calvintanwj"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"calvintanwj"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"calvintanwj"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"calvintanwj"},"content":"         */","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"calvintanwj"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"calvintanwj"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":236,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":237,"author":{"gitId":"calvintanwj"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2021-10-23"},{"lineNumber":238,"author":{"gitId":"calvintanwj"},"content":"            this.address \u003d address;","lastModifiedDate":"2021-10-23"},{"lineNumber":239,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":240,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":241,"author":{"gitId":"calvintanwj"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-10-23"},{"lineNumber":242,"author":{"gitId":"calvintanwj"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2021-10-23"},{"lineNumber":243,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":244,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":245,"author":{"gitId":"calvintanwj"},"content":"        public void setVendorId(VendorId vendorId) {","lastModifiedDate":"2021-10-23"},{"lineNumber":246,"author":{"gitId":"calvintanwj"},"content":"            this.vendorId \u003d vendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":247,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":248,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":249,"author":{"gitId":"calvintanwj"},"content":"        public Optional\u003cVendorId\u003e getVendorId() {","lastModifiedDate":"2021-10-23"},{"lineNumber":250,"author":{"gitId":"calvintanwj"},"content":"            return Optional.ofNullable(vendorId);","lastModifiedDate":"2021-10-23"},{"lineNumber":251,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":252,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":253,"author":{"gitId":"calvintanwj"},"content":"        public void setServiceName(ServiceName serviceName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":254,"author":{"gitId":"calvintanwj"},"content":"            this.serviceName \u003d serviceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":255,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":256,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":257,"author":{"gitId":"calvintanwj"},"content":"        public Optional\u003cServiceName\u003e getServiceName() {","lastModifiedDate":"2021-10-23"},{"lineNumber":258,"author":{"gitId":"calvintanwj"},"content":"            return Optional.ofNullable(serviceName);","lastModifiedDate":"2021-10-23"},{"lineNumber":259,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":260,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":261,"author":{"gitId":"calvintanwj"},"content":"        public void setCost(Cost cost) {","lastModifiedDate":"2021-10-23"},{"lineNumber":262,"author":{"gitId":"calvintanwj"},"content":"            this.cost \u003d cost;","lastModifiedDate":"2021-10-23"},{"lineNumber":263,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":264,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":265,"author":{"gitId":"calvintanwj"},"content":"        public Optional\u003cCost\u003e getCost() {","lastModifiedDate":"2021-10-23"},{"lineNumber":266,"author":{"gitId":"calvintanwj"},"content":"            return Optional.ofNullable(cost);","lastModifiedDate":"2021-10-23"},{"lineNumber":267,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":268,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"calvintanwj"},"content":"        public void setOperatingHours(OperatingHours operatingHours) {","lastModifiedDate":"2021-10-23"},{"lineNumber":270,"author":{"gitId":"calvintanwj"},"content":"            this.operatingHours \u003d operatingHours;","lastModifiedDate":"2021-10-23"},{"lineNumber":271,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":272,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":273,"author":{"gitId":"calvintanwj"},"content":"        public Optional\u003cOperatingHours\u003e getOperatingHours() {","lastModifiedDate":"2021-10-23"},{"lineNumber":274,"author":{"gitId":"calvintanwj"},"content":"            return Optional.ofNullable(operatingHours);","lastModifiedDate":"2021-10-23"},{"lineNumber":275,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":276,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":277,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":278,"author":{"gitId":"calvintanwj"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":279,"author":{"gitId":"calvintanwj"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":280,"author":{"gitId":"calvintanwj"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":281,"author":{"gitId":"calvintanwj"},"content":"                return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":282,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":283,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":284,"author":{"gitId":"calvintanwj"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":285,"author":{"gitId":"calvintanwj"},"content":"            if (!(other instanceof EditVendorDescriptor)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":286,"author":{"gitId":"calvintanwj"},"content":"                return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":287,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":288,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":289,"author":{"gitId":"calvintanwj"},"content":"            // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":290,"author":{"gitId":"calvintanwj"},"content":"            EditVendorDescriptor e \u003d (EditVendorDescriptor) other;","lastModifiedDate":"2021-10-23"},{"lineNumber":291,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":292,"author":{"gitId":"rgbpokka"},"content":"            return getAddress().equals(e.getAddress())","lastModifiedDate":"2021-10-28"},{"lineNumber":293,"author":{"gitId":"calvintanwj"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2021-10-23"},{"lineNumber":294,"author":{"gitId":"calvintanwj"},"content":"                    \u0026\u0026 getVendorId().equals(e.getVendorId())","lastModifiedDate":"2021-10-23"},{"lineNumber":295,"author":{"gitId":"calvintanwj"},"content":"                    \u0026\u0026 getCost().equals(e.getCost())","lastModifiedDate":"2021-10-23"},{"lineNumber":296,"author":{"gitId":"calvintanwj"},"content":"                    \u0026\u0026 getServiceName().equals(e.getServiceName())","lastModifiedDate":"2021-10-23"},{"lineNumber":297,"author":{"gitId":"calvintanwj"},"content":"                    \u0026\u0026 getName().equals(e.getName())","lastModifiedDate":"2021-10-23"},{"lineNumber":298,"author":{"gitId":"calvintanwj"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2021-10-23"},{"lineNumber":299,"author":{"gitId":"calvintanwj"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-10-23"},{"lineNumber":300,"author":{"gitId":"calvintanwj"},"content":"                    \u0026\u0026 getOperatingHours().equals(e.getOperatingHours());","lastModifiedDate":"2021-10-23"},{"lineNumber":301,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":302,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":303,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":304,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"rgbpokka":4,"calvintanwj":300}},{"path":"src/main/java/seedu/address/logic/commands/vendor/FilterVendorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPERATING_HOURS;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_NAME;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VENDOR_ID;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":" * Finds and lists all vendors in vendor book whose fields match any of the argument keywords.","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"public class FilterVendorCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    public static final String COMMAND_WORD \u003d \"filtervendor\";","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters the vendor list by any given fields: \"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"            + \"Requires at least one parameter\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_VENDOR_ID + \"VENDOR_ID\" + \"] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_NAME + \"NAME\" + \"] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS\" + \"] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE\" + \"] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL\" + \"] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_SERVICE_NAME + \"SERVICE_NAME\" + \"] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_COST + \"COST\" + \"] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_OPERATING_HOURS + \"OPERATING_HOURS\" + \"] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"            + \"[\" + PREFIX_TAG + \"TAG\" + \"]\" + \"...\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_SERVICE_NAME + \"Massage \"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"            + PREFIX_COST + \"10 \"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"            + \"\\nThis filters the list by those vendors who offer Massage services at a cost of 10.\\n\";","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    private final VendorPredicate predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"     * Creates a filter vendor command.","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"     * @param predicate The predicates that filters the vendors.","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    public FilterVendorCommand(VendorPredicate predicate) {","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        model.updateFilteredVendorList(predicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"                String.format(Messages.MESSAGE_VENDORS_LISTED_OVERVIEW, model.getFilteredVendorList().size()),","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"                \"Vendors\");","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof FilterVendorCommand // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 predicate.equals(((FilterVendorCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":73}},{"path":"src/main/java/seedu/address/logic/commands/vendor/ListVendorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_VENDORS;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"public class ListVendorCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    public static final String COMMAND_WORD \u003d \"listvendor\";","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all vendors\";","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        model.updateFilteredVendorList(PREDICATE_SHOW_ALL_VENDORS);","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"        return new CommandResult(MESSAGE_SUCCESS, \"Vendors\");","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":23}},{"path":"src/main/java/seedu/address/logic/invoice/Invoice.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicolasCwy"},"content":"package seedu.address.logic.invoice;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"NicolasCwy"},"content":"import java.io.File;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"NicolasCwy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"import java.util.List;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.io.font.constants.StandardFonts;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.kernel.events.PdfDocumentEvent;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.kernel.font.PdfFont;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.kernel.font.PdfFontFactory;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.kernel.pdf.PdfDocument;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.kernel.pdf.PdfWriter;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.layout.Document;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.layout.borders.Border;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.layout.element.Cell;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.layout.element.Paragraph;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.layout.element.Table;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.layout.property.HorizontalAlignment;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.layout.property.TextAlignment;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.chargeable.Chargeable;","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"NicolasCwy"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"NicolasCwy"},"content":"public class Invoice {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"NicolasCwy"},"content":"    public static final String BASE_PATH \u003d \"./Invoices/\";","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"NicolasCwy"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"NicolasCwy"},"content":"     * Generates an invoice for the guests stay.","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"NicolasCwy"},"content":"     * Invoice includes a flat fee for the hotel stay and the sum of all chargeable services that they have consumed.","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"NicolasCwy"},"content":"     * @param g Guest to be charged","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"NicolasCwy"},"content":"     * @throws IOException If invalid file path or fail to add rows to table.","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"NicolasCwy"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"NicolasCwy"},"content":"    public static void generateInvoicePdf(Guest g) throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"NicolasCwy"},"content":"        // Invoice is only generated for guests who have charges","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"NicolasCwy"},"content":"        assert !g.getChargeableUsed().isEmpty();","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"NicolasCwy"},"content":"        // Create invoice folder","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"NicolasCwy"},"content":"        File invoiceFolder \u003d new File(BASE_PATH);","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"NicolasCwy"},"content":"        invoiceFolder.mkdir();","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"NicolasCwy"},"content":"        String dest \u003d BASE_PATH + generatePdfFileName(g);","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"NicolasCwy"},"content":"        // Initialize document","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"NicolasCwy"},"content":"        PdfWriter writer \u003d new PdfWriter(dest);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"NicolasCwy"},"content":"        PdfDocument pdf \u003d new PdfDocument(writer);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"NicolasCwy"},"content":"        Document document \u003d new Document(pdf);","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"NicolasCwy"},"content":"        PdfFont font \u003d PdfFontFactory.createFont(StandardFonts.TIMES_ROMAN);","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"NicolasCwy"},"content":"        PdfFont boldFont \u003d PdfFontFactory.createFont(StandardFonts.TIMES_BOLD);","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"NicolasCwy"},"content":"        // Add headers and page numbers to every page","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"NicolasCwy"},"content":"        pdf.addEventHandler(PdfDocumentEvent.END_PAGE, new InvoiceNewPageHandler());","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"NicolasCwy"},"content":"        addGuestBillingDetailsToPdf(document, g, boldFont);","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"NicolasCwy"},"content":"        addInvoiceTableToPdf(document, g, font, boldFont);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"NicolasCwy"},"content":"        addThankYouParagraphToPdf(document, boldFont);","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"NicolasCwy"},"content":"        // Close document","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"NicolasCwy"},"content":"        document.close();","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"NicolasCwy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"NicolasCwy"},"content":"     * Generates a file name for PDF based on guest\u0027s passport number and current datetime.","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"NicolasCwy"},"content":"     * The file name is in the format GuestPassportNumber yyyy-MM-dd HH-mm-ss.pdf","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"NicolasCwy"},"content":"     * yyyy: current year","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"NicolasCwy"},"content":"     * MM: current month in the range 1 - 12 (1 being January)","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"NicolasCwy"},"content":"     * dd: current day of the month in the range 1 - 31","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"NicolasCwy"},"content":"     * HH: current hour in 24-hour clock format","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"NicolasCwy"},"content":"     * mm: current minute","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"NicolasCwy"},"content":"     * ss: the current second","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"NicolasCwy"},"content":"     * Data time format is adapted from java tutorial point","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"NicolasCwy"},"content":"     * https://www.javatpoint.com/java-get-current-date","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"NicolasCwy"},"content":"     * @param g Guest to generate invoice for.","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"NicolasCwy"},"content":"     * @return A string representing the filename for the PDF invoice.","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"NicolasCwy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"NicolasCwy"},"content":"    private static String generatePdfFileName(Guest g) {","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"NicolasCwy"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH-mm-ss\");","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"NicolasCwy"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"NicolasCwy"},"content":"        return g.getPassportNumber().toString() + \" \" + now.format(dtf) + \".pdf\";","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"NicolasCwy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"NicolasCwy"},"content":"     * Add guest billing details to the PDF document.","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"NicolasCwy"},"content":"     * Billing details include guest name and room number","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"NicolasCwy"},"content":"     * @param doc PDF document to add billing details to.","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"NicolasCwy"},"content":"     * @param g Guest to bill invoice to.","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"NicolasCwy"},"content":"     * @param boldFont Bold font used by text.","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"NicolasCwy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"NicolasCwy"},"content":"    private static void addGuestBillingDetailsToPdf(Document doc, Guest g, PdfFont boldFont) {","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"NicolasCwy"},"content":"        Paragraph guestDetails \u003d new Paragraph(\"Bill to: \" + g.getName() + \"\\nRoom Number: \" + g.getRoomNumber());","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"NicolasCwy"},"content":"        guestDetails.setTextAlignment(TextAlignment.CENTER).setFont(boldFont);","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"NicolasCwy"},"content":"        doc.add(guestDetails);","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"NicolasCwy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"NicolasCwy"},"content":"     * Add table containing charges to PDF.","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"NicolasCwy"},"content":"     * @param doc PDF document to add invoice table to.","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"NicolasCwy"},"content":"     * @param g Guest to charge.","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"NicolasCwy"},"content":"     * @param font Normal font used by text in table.","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"NicolasCwy"},"content":"     * @param boldFont Bold font used by text in table.","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"NicolasCwy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"NicolasCwy"},"content":"    private static void addInvoiceTableToPdf(Document doc, Guest g, PdfFont font, PdfFont boldFont) {","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"NicolasCwy"},"content":"        Table invoiceTable \u003d createInvoiceTableOfChargeables(g, font, boldFont);","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"NicolasCwy"},"content":"        doc.add(invoiceTable);","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"NicolasCwy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"NicolasCwy"},"content":"     * Creates a table containing all the Chargeables used by the guest.","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"NicolasCwy"},"content":"     * The table contains 6 columns, as well as a box containg the total cost of all services at the end of the table","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"NicolasCwy"},"content":"     * Column 1: Item number, an index of the number of items in the invoice","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"NicolasCwy"},"content":"     * Column 2: Vendor name, the name of the vendor used as well as their vendor ID","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"NicolasCwy"},"content":"     * Column 3: Service, the type of service employed","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"NicolasCwy"},"content":"     * Column 4: The cost for 1 quantity of the service","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"NicolasCwy"},"content":"     * Column 5: Quantity, the total number of the service charged","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"NicolasCwy"},"content":"     * Column 6: Line cost, the total cost for that service (quantity multiplied by cost for 1 quantity of service)","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"NicolasCwy"},"content":"     * Solution adapted from iText7 Core tutorial","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"NicolasCwy"},"content":"     * https://kb.itextpdf.com/home/it7kb/ebooks/","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"NicolasCwy"},"content":"     * itext-7-jump-start-tutorial-for-java/chapter-3-using-renderers-and-event-handlers","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"NicolasCwy"},"content":"     * @param g Guest to get charges from.","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"NicolasCwy"},"content":"     * @param font Normal font used by text in table.","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"NicolasCwy"},"content":"     * @param boldFont Bold font used by text in table.","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"NicolasCwy"},"content":"     * @return Table containing charges.","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"NicolasCwy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"NicolasCwy"},"content":"    private static Table createInvoiceTableOfChargeables(Guest g, PdfFont font, PdfFont boldFont) {","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"NicolasCwy"},"content":"        Table table \u003d new Table(new float[]{1, 4, 2, 1, 3, 3});","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"NicolasCwy"},"content":"        table.setHorizontalAlignment(HorizontalAlignment.CENTER);","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"NicolasCwy"},"content":"        final String[] headerText \u003d new String[]{\"ITEM NUM\", \"VENDOR NAME\",","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"NicolasCwy"},"content":"            \"SERVICE\", \"COST\", \"QUANTITY\", \"LINE COST\"};","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"NicolasCwy"},"content":"        // Ensures that header is not changed during development, as there is a dependency in the code that each","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"NicolasCwy"},"content":"        // row is 6 cells long","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"NicolasCwy"},"content":"        assert headerText.length \u003d\u003d 6;","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"NicolasCwy"},"content":"        // Add header rows","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"NicolasCwy"},"content":"        for (String header : headerText) {","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"NicolasCwy"},"content":"            table.addHeaderCell(","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"NicolasCwy"},"content":"                    new Cell().add(","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"NicolasCwy"},"content":"                            new Paragraph(header).setFont(boldFont)));","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"NicolasCwy"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"NicolasCwy"},"content":"        // Iterate through processed vendors and add to table","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"NicolasCwy"},"content":"        int itemCount \u003d 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":158,"author":{"gitId":"NicolasCwy"},"content":"        double totalCost \u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"        for (Chargeable charge : g.getChargeableUsed()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"NicolasCwy"},"content":"            double lineCost \u003d Double.parseDouble(charge.getCost().toString())","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"NicolasCwy"},"content":"                    * Double.parseDouble(charge.getQuantity().toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"NicolasCwy"},"content":"            String[] details \u003d new String[] {","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"NicolasCwy"},"content":"                    String.valueOf(itemCount),","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"NicolasCwy"},"content":"                    charge.getName().toString() + \" [\" + charge.getVendorId().toString() + \"]\",","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"NicolasCwy"},"content":"                    charge.getServiceName().toString(),","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"NicolasCwy"},"content":"                    charge.getCost().toString(),","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"NicolasCwy"},"content":"                    charge.getQuantity().toString(),","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"NicolasCwy"},"content":"                    String.valueOf(lineCost)","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"NicolasCwy"},"content":"            };","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"NicolasCwy"},"content":"            List\u003cCell\u003e cells \u003d createListOfCells(details, font);","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"NicolasCwy"},"content":"            addCellsToTable(cells, table);","lastModifiedDate":"2021-11-04"},{"lineNumber":174,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"NicolasCwy"},"content":"            totalCost +\u003d lineCost;","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"NicolasCwy"},"content":"            itemCount++;","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"NicolasCwy"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"NicolasCwy"},"content":"        // Round off total cost to 2 d.p","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"NicolasCwy"},"content":"        // Adapted from Bharat Sinha","lastModifiedDate":"2021-11-04"},{"lineNumber":181,"author":{"gitId":"NicolasCwy"},"content":"        // https://stackoverflow.com/questions/11701399/round-up-to-2-decimal-places-in-java","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"NicolasCwy"},"content":"        totalCost \u003d Math.round(totalCost * 100.0) / 100.0;","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":184,"author":{"gitId":"NicolasCwy"},"content":"        // Add total cost row","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"NicolasCwy"},"content":"        addCostRowToTable(table, String.valueOf(totalCost), boldFont, headerText.length);","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"NicolasCwy"},"content":"        return table;","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"NicolasCwy"},"content":"    private static List\u003cCell\u003e createListOfCells(String[] texts, PdfFont font) {","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"NicolasCwy"},"content":"        ArrayList\u003cCell\u003e cells \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"NicolasCwy"},"content":"        for (String text : texts) {","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"NicolasCwy"},"content":"            Paragraph paragraph \u003d new Paragraph(text).setFont(font);","lastModifiedDate":"2021-10-31"},{"lineNumber":194,"author":{"gitId":"NicolasCwy"},"content":"            Cell cell \u003d new Cell();","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"NicolasCwy"},"content":"            cell.add(paragraph);","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"NicolasCwy"},"content":"            cells.add(cell);","lastModifiedDate":"2021-11-04"},{"lineNumber":197,"author":{"gitId":"NicolasCwy"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":198,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":199,"author":{"gitId":"NicolasCwy"},"content":"        return cells;","lastModifiedDate":"2021-11-04"},{"lineNumber":200,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":202,"author":{"gitId":"NicolasCwy"},"content":"    private static void addCellsToTable(List\u003cCell\u003e cells, Table table) {","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"NicolasCwy"},"content":"        for (Cell cell : cells) {","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"NicolasCwy"},"content":"            addCellToTable(cell, table);","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"NicolasCwy"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"NicolasCwy"},"content":"    private static void addCellToTable(Cell cell, Table table) {","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"NicolasCwy"},"content":"        table.addCell(cell);","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"NicolasCwy"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"NicolasCwy"},"content":"     * Adds total cost row at the bottom of the table.","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"NicolasCwy"},"content":"     * For a table with n columns, the total cost will be put in the right most column. The n - 1 cells to its left","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"NicolasCwy"},"content":"     * will be hidden.","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":217,"author":{"gitId":"NicolasCwy"},"content":"     * Solution adapted from Samuel Huylebroeck","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"NicolasCwy"},"content":"     * https://stackoverflow.com/questions/41607891/itext-7-borderless-table-no-border.","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"NicolasCwy"},"content":"     * @param table           Table to add total cost row.","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"NicolasCwy"},"content":"     * @param totalCost       Total cost.","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"NicolasCwy"},"content":"     * @param boldFont        Bold font used by text in table.","lastModifiedDate":"2021-11-04"},{"lineNumber":223,"author":{"gitId":"NicolasCwy"},"content":"     * @param numberOfColumns Number of columns in table.","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"NicolasCwy"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"NicolasCwy"},"content":"    private static void addCostRowToTable(Table table, String totalCost, PdfFont boldFont, int numberOfColumns) {","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"NicolasCwy"},"content":"        for (int i \u003d 0; i \u003c numberOfColumns; i++) {","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"NicolasCwy"},"content":"            Cell cell \u003d new Cell();","lastModifiedDate":"2021-10-25"},{"lineNumber":228,"author":{"gitId":"NicolasCwy"},"content":"            if (i !\u003d numberOfColumns - 1) {","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"NicolasCwy"},"content":"                cell.add(new Paragraph(\"\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"NicolasCwy"},"content":"                cell.setBorder(Border.NO_BORDER);","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"NicolasCwy"},"content":"            } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"NicolasCwy"},"content":"                cell.add(new Paragraph(totalCost).setFont(boldFont));","lastModifiedDate":"2021-10-31"},{"lineNumber":233,"author":{"gitId":"NicolasCwy"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":234,"author":{"gitId":"NicolasCwy"},"content":"            table.addCell(cell);","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"NicolasCwy"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":236,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":237,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":238,"author":{"gitId":"NicolasCwy"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"NicolasCwy"},"content":"     * Adds a text at the end of the invoice to say \"Thank you\"","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"NicolasCwy"},"content":"     * @param document PDF to add text to","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"NicolasCwy"},"content":"     * @param boldFont Bold font for text","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"NicolasCwy"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"NicolasCwy"},"content":"    private static void addThankYouParagraphToPdf(Document document, PdfFont boldFont) {","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"NicolasCwy"},"content":"        Paragraph thankYouParagraph \u003d new Paragraph(\"THANK YOU FOR YOUR VISIT!\");","lastModifiedDate":"2021-11-04"},{"lineNumber":246,"author":{"gitId":"NicolasCwy"},"content":"        thankYouParagraph.setTextAlignment(TextAlignment.CENTER).setFont(boldFont);","lastModifiedDate":"2021-11-04"},{"lineNumber":247,"author":{"gitId":"NicolasCwy"},"content":"        document.add(thankYouParagraph);","lastModifiedDate":"2021-11-04"},{"lineNumber":248,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":249,"author":{"gitId":"NicolasCwy"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"calvintanwj":2,"NicolasCwy":247}},{"path":"src/main/java/seedu/address/logic/invoice/InvoiceNewPageHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicolasCwy"},"content":"package seedu.address.logic.invoice;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.io.font.constants.StandardFonts;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.kernel.events.Event;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.kernel.events.IEventHandler;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.kernel.events.PdfDocumentEvent;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.kernel.font.PdfFont;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.kernel.font.PdfFontFactory;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.kernel.geom.Rectangle;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.kernel.pdf.PdfDocument;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.kernel.pdf.PdfPage;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"NicolasCwy"},"content":"import com.itextpdf.kernel.pdf.canvas.PdfCanvas;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"NicolasCwy"},"content":"public class InvoiceNewPageHandler implements IEventHandler {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"NicolasCwy"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"NicolasCwy"},"content":"     * Handles an event to add invoice header and page numbers","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"NicolasCwy"},"content":"     * Solution adapted from itext7 Knowledge base tutorial","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"NicolasCwy"},"content":"     * https://kb.itextpdf.com/home/it7kb/ebooks/itext-7-jump-start-tutorial-for-java/","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"NicolasCwy"},"content":"     * chapter-3-using-renderers-and-event-handlers.","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"NicolasCwy"},"content":"     * @param event An event that the handler should perform an action.","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"NicolasCwy"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"NicolasCwy"},"content":"    public void handleEvent(Event event) {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"NicolasCwy"},"content":"        PdfDocumentEvent docEvent \u003d (PdfDocumentEvent) event;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"NicolasCwy"},"content":"        PdfDocument pdfDoc \u003d docEvent.getDocument();","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"NicolasCwy"},"content":"        PdfPage page \u003d docEvent.getPage();","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"NicolasCwy"},"content":"        int pageNumber \u003d pdfDoc.getPageNumber(page);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"NicolasCwy"},"content":"        PdfFont font \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"NicolasCwy"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"NicolasCwy"},"content":"            font \u003d PdfFontFactory.createFont(StandardFonts.TIMES_ROMAN);","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"NicolasCwy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"NicolasCwy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"NicolasCwy"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"NicolasCwy"},"content":"        Rectangle pageSize \u003d page.getPageSize();","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"NicolasCwy"},"content":"        PdfCanvas pdfCanvas \u003d new PdfCanvas(","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"NicolasCwy"},"content":"                page.newContentStreamBefore(), page.getResources(), pdfDoc);","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"NicolasCwy"},"content":"        // Add header and footer","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"NicolasCwy"},"content":"        pdfCanvas.beginText()","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"NicolasCwy"},"content":"                .setFontAndSize(font, 9)","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"NicolasCwy"},"content":"                .moveText(pageSize.getWidth() / 2 - 20, pageSize.getTop() - 20)","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"NicolasCwy"},"content":"                .showText(\"INVOICE\")","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"NicolasCwy"},"content":"                .moveText(20, -pageSize.getTop() + 30)","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"NicolasCwy"},"content":"                .showText(String.valueOf(pageNumber))","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"NicolasCwy"},"content":"                .endText();","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"NicolasCwy"},"content":"        pdfCanvas.release();","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"NicolasCwy"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"calvintanwj":3,"NicolasCwy":53}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"    /* Prefix definitions exclusive to Vendor */","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    public static final Prefix PREFIX_VENDOR_ID \u003d new Prefix(\"vid/\");","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"rgbpokka"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    public static final Prefix PREFIX_COST \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    public static final Prefix PREFIX_OPERATING_HOURS \u003d new Prefix(\"oh/\");","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    public static final Prefix PREFIX_SERVICE_NAME \u003d new Prefix(\"sn/\");","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"rgbpokka"},"content":"    /* Prefix definitions exclusive to Guest */","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"    public static final Prefix PREFIX_ROOM_NUMBER \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"    public static final Prefix PREFIX_PASSPORT_NUMBER \u003d new Prefix(\"pn/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"rgbpokka":7,"calvintanwj":5,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.RoomNumber;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Address;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Cost;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.OperatingHours;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ServiceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"        return new Email(trimmedEmail.toLowerCase());","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"     * Parses a {@code String vendorId} into a {@code vendorId}.","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the given {@code vendorId} is invalid.","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"    public static VendorId parseVendorId(String vendorId) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(vendorId);","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"        String trimmedVendorId \u003d vendorId.trim();","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"        if (!VendorId.isValidVendorId(trimmedVendorId)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(VendorId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"        return new VendorId(trimmedVendorId);","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"     * Parses a {@code String roomNumber} into a {@code roomNumber}.","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the given {@code roomNumber} is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"    public static RoomNumber parseRoomNumber(String roomNumber) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(roomNumber);","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"        String trimmedRoomNumber \u003d roomNumber.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"        trimmedRoomNumber \u003d trimmedRoomNumber.replaceAll(\"^0+(?!$)\", \"\");","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"        if (!RoomNumber.isValidRoomNumber(trimmedRoomNumber)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(RoomNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"        return new RoomNumber(trimmedRoomNumber);","lastModifiedDate":"2021-10-30"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"     * Parses a {@code String passportNumber} into a {@code passportNumber}.","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the given {@code passportNumber} is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"    public static PassportNumber parsePassportNumber(String passportNumber) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(passportNumber);","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"        String trimmedPassportNumber \u003d passportNumber.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"        if (!PassportNumber.isValidPassportNumber(trimmedPassportNumber)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(PassportNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"        return new PassportNumber(trimmedPassportNumber.toUpperCase());","lastModifiedDate":"2021-10-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"        return new Tag(StringUtil.capitalizeFirstLetter(trimmedTag));","lastModifiedDate":"2021-10-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"     * Parses a {@code String serviceName} into a {@code ServiceName}.","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the given {@code ServiceName} is invalid.","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"    public static ServiceName parseServiceName(String serviceName) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(serviceName);","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"calvintanwj"},"content":"        String trimmedServiceName \u003d serviceName.trim();","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"calvintanwj"},"content":"        if (!ServiceName.isValidServiceName(trimmedServiceName)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(ServiceName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"        return new ServiceName(StringUtil.capitalizeFirstLetter(trimmedServiceName));","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":198,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"calvintanwj"},"content":"     * Parses a {@code String cost} into a {@code Cost}.","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"calvintanwj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the given {@code Cost} is invalid.","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":204,"author":{"gitId":"calvintanwj"},"content":"    public static Cost parseCost(String cost) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(cost);","lastModifiedDate":"2021-10-23"},{"lineNumber":206,"author":{"gitId":"calvintanwj"},"content":"        String trimmedCost \u003d cost.trim();","lastModifiedDate":"2021-10-23"},{"lineNumber":207,"author":{"gitId":"calvintanwj"},"content":"        Double result;","lastModifiedDate":"2021-10-23"},{"lineNumber":208,"author":{"gitId":"calvintanwj"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":209,"author":{"gitId":"calvintanwj"},"content":"            result \u003d Math.round(Double.parseDouble(trimmedCost) * 100.0) / 100.0;","lastModifiedDate":"2021-11-01"},{"lineNumber":210,"author":{"gitId":"calvintanwj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(Cost.INVALID_DOUBLE);","lastModifiedDate":"2021-10-23"},{"lineNumber":212,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":213,"author":{"gitId":"calvintanwj"},"content":"        if (!Cost.isValidCost(result)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(Cost.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":215,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":216,"author":{"gitId":"calvintanwj"},"content":"        return new Cost(result);","lastModifiedDate":"2021-10-23"},{"lineNumber":217,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":218,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":219,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"calvintanwj"},"content":"     * Parses a {@code String operatingHours} into a {@code OperatingHours}.","lastModifiedDate":"2021-10-23"},{"lineNumber":221,"author":{"gitId":"calvintanwj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":223,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the given {@code OperatingHours} is invalid.","lastModifiedDate":"2021-10-23"},{"lineNumber":224,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":225,"author":{"gitId":"calvintanwj"},"content":"    public static OperatingHours parseOperatingHours(String operatingHours) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":226,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(operatingHours);","lastModifiedDate":"2021-10-23"},{"lineNumber":227,"author":{"gitId":"calvintanwj"},"content":"        String trimmedOperatingHours \u003d operatingHours.trim();","lastModifiedDate":"2021-10-23"},{"lineNumber":228,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"calvintanwj"},"content":"        if (!OperatingHours.isValidOperatingHours(trimmedOperatingHours)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(OperatingHours.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"calvintanwj"},"content":"        String[] args \u003d trimmedOperatingHours.split(\"\\\\s+\");","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"calvintanwj"},"content":"        String days \u003d args[0];","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"calvintanwj"},"content":"        String startTimeString \u003d args[1].split(\"-\")[0];","lastModifiedDate":"2021-10-23"},{"lineNumber":236,"author":{"gitId":"calvintanwj"},"content":"        Integer startTimeHour \u003d Integer.parseInt(startTimeString.substring(0, 2));","lastModifiedDate":"2021-10-23"},{"lineNumber":237,"author":{"gitId":"calvintanwj"},"content":"        Integer startTimeMinutes \u003d Integer.parseInt(startTimeString.substring(2));","lastModifiedDate":"2021-10-23"},{"lineNumber":238,"author":{"gitId":"calvintanwj"},"content":"        String endTimeString \u003d args[1].split(\"-\")[1];","lastModifiedDate":"2021-10-23"},{"lineNumber":239,"author":{"gitId":"calvintanwj"},"content":"        Integer endTimeHour \u003d Integer.parseInt(endTimeString.substring(0, 2));","lastModifiedDate":"2021-10-23"},{"lineNumber":240,"author":{"gitId":"calvintanwj"},"content":"        Integer endTimeMinutes \u003d Integer.parseInt(endTimeString.substring(2));","lastModifiedDate":"2021-10-23"},{"lineNumber":241,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":242,"author":{"gitId":"calvintanwj"},"content":"        LocalTime startTime \u003d LocalTime.of(startTimeHour, startTimeMinutes);","lastModifiedDate":"2021-10-23"},{"lineNumber":243,"author":{"gitId":"calvintanwj"},"content":"        LocalTime endTime \u003d LocalTime.of(endTimeHour, endTimeMinutes);","lastModifiedDate":"2021-10-23"},{"lineNumber":244,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":245,"author":{"gitId":"calvintanwj"},"content":"        if (!OperatingHours.isValidTimings(startTime, endTime)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":246,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(OperatingHours.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":247,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":248,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":249,"author":{"gitId":"calvintanwj"},"content":"        List\u003cDayOfWeek\u003e operatingDays \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":250,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":251,"author":{"gitId":"calvintanwj"},"content":"        for (int i \u003d 0; i \u003c days.length(); i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":252,"author":{"gitId":"calvintanwj"},"content":"            DayOfWeek day \u003d DayOfWeek.of(Character.getNumericValue(days.charAt(i)));","lastModifiedDate":"2021-10-23"},{"lineNumber":253,"author":{"gitId":"calvintanwj"},"content":"            if (!operatingDays.contains(day)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":254,"author":{"gitId":"calvintanwj"},"content":"                operatingDays.add(day);","lastModifiedDate":"2021-10-23"},{"lineNumber":255,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":256,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":257,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":258,"author":{"gitId":"calvintanwj"},"content":"        operatingDays.sort(new Comparator\u003cDayOfWeek\u003e() {","lastModifiedDate":"2021-10-23"},{"lineNumber":259,"author":{"gitId":"calvintanwj"},"content":"            public int compare(DayOfWeek d1, DayOfWeek d2) {","lastModifiedDate":"2021-10-23"},{"lineNumber":260,"author":{"gitId":"calvintanwj"},"content":"                return d1.compareTo(d2);","lastModifiedDate":"2021-10-23"},{"lineNumber":261,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":262,"author":{"gitId":"calvintanwj"},"content":"        });","lastModifiedDate":"2021-10-23"},{"lineNumber":263,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":264,"author":{"gitId":"calvintanwj"},"content":"        return new OperatingHours(startTime, endTime, operatingDays, trimmedOperatingHours);","lastModifiedDate":"2021-10-23"},{"lineNumber":265,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":266,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"calvintanwj":147,"-":120}},{"path":"src/main/java/seedu/address/logic/parser/PocketHotelParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.ChargeGuestCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.CheckInNewGuestCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.CheckInReturningGuestCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.CheckOutCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.ClearGuestCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.DeleteGuestCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.EditGuestCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.FilterGuestCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.ListGuestCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.AddVendorCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.ClearVendorCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.DeleteVendorCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.EditVendorCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.FilterVendorCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.ListVendorCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.guest.ChargeGuestCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.guest.CheckInNewGuestCommandParser;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.guest.CheckInReturningGuestCommandParser;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.guest.CheckOutCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.guest.DeleteGuestCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.guest.EditGuestCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.guest.FilterGuestCommandParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.vendor.AddVendorCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.vendor.DeleteVendorCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.vendor.EditVendorCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.vendor.FilterVendorCommandParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":" * Parses user input.","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"public class PocketHotelParser {","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"     * @param userInput full user input string","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"alyssa-savier"},"content":"        case CheckInNewGuestCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"alyssa-savier"},"content":"            return new CheckInNewGuestCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"alyssa-savier"},"content":"        case CheckInReturningGuestCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"alyssa-savier"},"content":"            return new CheckInReturningGuestCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        case CheckOutCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"            return new CheckOutCommandParser().parse(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        case ClearGuestCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"            return new ClearGuestCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        case EditGuestCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"            return new EditGuestCommandParser().parse(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        case ListGuestCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"            return new ListGuestCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        case DeleteGuestCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"            return new DeleteGuestCommandParser().parse(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"        case FilterGuestCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"            return new FilterGuestCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        case ChargeGuestCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"            return new ChargeGuestCommandParser().parse(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"        case AddVendorCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"            return new AddVendorCommandParser().parse(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        case DeleteVendorCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"            return new DeleteVendorCommandParser().parse(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"        case ClearVendorCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"            return new ClearVendorCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"        case EditVendorCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"            return new EditVendorCommandParser().parse(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"        case ListVendorCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"            return new ListVendorCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        case FilterVendorCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"            return new FilterVendorCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"        default:","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":119,"alyssa-savier":5}},{"path":"src/main/java/seedu/address/logic/parser/guest/ChargeGuestCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VENDOR_ID;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.ChargeGuestCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":" * Parses inputs arguments and creates a new ChargeGuestCommand object","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"public class ChargeGuestCommandParser implements Parser\u003cChargeGuestCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"     * Parses the given {@code String} of arguments in the context of ChargeGuestCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"     * and returns an ChargeGuestCommand object for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    public ChargeGuestCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PASSPORT_NUMBER, PREFIX_VENDOR_ID);","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PASSPORT_NUMBER, PREFIX_VENDOR_ID)","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ChargeGuestCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        PassportNumber passportNumber \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                ParserUtil.parsePassportNumber(argMultimap.getValue(PREFIX_PASSPORT_NUMBER).get());","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        VendorId vendorId \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"                ParserUtil.parseVendorId(argMultimap.getValue(PREFIX_VENDOR_ID).get());","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        return new ChargeGuestCommand(passportNumber, vendorId);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":58}},{"path":"src/main/java/seedu/address/logic/parser/guest/CheckInNewGuestCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOM_NUMBER;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.logic.commands.guest.CheckInNewGuestCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.RoomNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":" * Parses input arguments and creates a new CheckInCommand object","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"alyssa-savier"},"content":"public class CheckInNewGuestCommandParser implements Parser\u003cCheckInNewGuestCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"     * Parses the given {@code String} of arguments in the context of the CheckInCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"     * and returns an CheckInCommand object for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"alyssa-savier"},"content":"    public CheckInNewGuestCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EMAIL, PREFIX_TAG, PREFIX_PASSPORT_NUMBER,","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"                        PREFIX_ROOM_NUMBER);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PASSPORT_NUMBER, PREFIX_NAME, PREFIX_EMAIL, PREFIX_ROOM_NUMBER)","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CheckInNewGuestCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        RoomNumber roomNumber \u003d ParserUtil.parseRoomNumber(argMultimap.getValue(PREFIX_ROOM_NUMBER).get());","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        PassportNumber passport \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"                ParserUtil.parsePassportNumber(argMultimap.getValue(PREFIX_PASSPORT_NUMBER).get());","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        Guest guest \u003d new Guest(name, email, tagList, roomNumber, passport);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"alyssa-savier"},"content":"        return new CheckInNewGuestCommand(guest);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":64,"alyssa-savier":4}},{"path":"src/main/java/seedu/address/logic/parser/guest/CheckInReturningGuestCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOM_NUMBER;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.logic.commands.guest.CheckInReturningGuestCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.RoomNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":" * Parses input arguments and creates a new CheckInCommand object","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"alyssa-savier"},"content":"public class CheckInReturningGuestCommandParser implements Parser\u003cCheckInReturningGuestCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"     * Parses the given {@code String} of arguments in the context of the CheckInCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"     * and returns an CheckInCommand object for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"alyssa-savier"},"content":"    public CheckInReturningGuestCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"alyssa-savier"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PASSPORT_NUMBER, PREFIX_ROOM_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"alyssa-savier"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PASSPORT_NUMBER, PREFIX_ROOM_NUMBER)","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"alyssa-savier"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"alyssa-savier"},"content":"                    CheckInReturningGuestCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"alyssa-savier"},"content":"        Name name \u003d ParserUtil.parseName(\"Dummy\");","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"alyssa-savier"},"content":"        Email email \u003d ParserUtil.parseEmail(\"Dummy@email.com\");","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        RoomNumber roomNumber \u003d ParserUtil.parseRoomNumber(argMultimap.getValue(PREFIX_ROOM_NUMBER).get());","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        PassportNumber passport \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"                ParserUtil.parsePassportNumber(argMultimap.getValue(PREFIX_PASSPORT_NUMBER).get());","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        Guest guest \u003d new Guest(name, email, tagList, roomNumber, passport);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"alyssa-savier"},"content":"        return new CheckInReturningGuestCommand(guest);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":55,"alyssa-savier":10}},{"path":"src/main/java/seedu/address/logic/parser/guest/CheckOutCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.CheckOutCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"public class CheckOutCommandParser implements Parser\u003cCheckOutCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"     * Parses the given {@code String} of arguments in the context of the CheckOutCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"     * and returns an CheckOutCommand object for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    public CheckOutCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PASSPORT_NUMBER);","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"        if (!argMultimap.getValue(PREFIX_PASSPORT_NUMBER).isPresent()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CheckOutCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        return new CheckOutCommand(ParserUtil.parsePassportNumber(argMultimap.getValue(PREFIX_PASSPORT_NUMBER).get()));","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"rgbpokka":1,"calvintanwj":34}},{"path":"src/main/java/seedu/address/logic/parser/guest/DeleteGuestCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"NicolasCwy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.DeleteGuestCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"NicolasCwy"},"content":"// @@author NicolasCwy","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"NicolasCwy"},"content":"public class DeleteGuestCommandParser implements Parser\u003cDeleteGuestCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"NicolasCwy"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"NicolasCwy"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteGuestCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"NicolasCwy"},"content":"     * and returns an DeleteGuestCommand object for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"NicolasCwy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"NicolasCwy"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"NicolasCwy"},"content":"    public DeleteGuestCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"NicolasCwy"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"NicolasCwy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"NicolasCwy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PASSPORT_NUMBER);","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"NicolasCwy"},"content":"        if (argMultimap.getValue(PREFIX_PASSPORT_NUMBER).isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"NicolasCwy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteGuestCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"NicolasCwy"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"NicolasCwy"},"content":"        return new DeleteGuestCommand(ParserUtil.parsePassportNumber(","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"NicolasCwy"},"content":"                argMultimap.getValue(PREFIX_PASSPORT_NUMBER).get()));","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"NicolasCwy"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":9,"NicolasCwy":26}},{"path":"src/main/java/seedu/address/logic/parser/guest/EditGuestCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOM_NUMBER;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.EditGuestCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.EditGuestCommand.EditGuestDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":" * Parses input arguments and creates a new EditGuestCommand object","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"public class EditGuestCommandParser implements Parser\u003cEditGuestCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"     * Parses the given {@code String} of arguments in the context of theEditGuestCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"     * and returns an EditGuestCommand object for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    public EditGuestCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EMAIL, PREFIX_TAG,","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"                        PREFIX_PASSPORT_NUMBER, PREFIX_ROOM_NUMBER);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        PassportNumber passportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        EditGuestDescriptor editGuestDescriptor \u003d new EditGuestDescriptor();","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"            editGuestDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"            editGuestDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editGuestDescriptor::setTags);","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        if (argMultimap.getValue(PREFIX_PASSPORT_NUMBER).isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"rgbpokka"},"content":"            passportNumber \u003d ParserUtil.parsePassportNumber(argMultimap.getValue(PREFIX_PASSPORT_NUMBER).get());","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"            editGuestDescriptor.setPassportNumber(passportNumber);","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"        } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditGuestCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        if (argMultimap.getValue(PREFIX_ROOM_NUMBER).isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"            editGuestDescriptor.setRoomNumber(","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"                    ParserUtil.parseRoomNumber(argMultimap.getValue(PREFIX_ROOM_NUMBER).get()));","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        if (!editGuestDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(EditGuestCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        return new EditGuestCommand(passportNumber, editGuestDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"rgbpokka":5,"calvintanwj":86}},{"path":"src/main/java/seedu/address/logic/parser/guest/FilterGuestCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOM_NUMBER;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.FilterGuestCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":" * Parses input arguments and creates a new FilterGuestCommand object","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"public class FilterGuestCommandParser implements Parser\u003cFilterGuestCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterGuestCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"     * and returns a FilterGuestCommand object for execution.","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    public FilterGuestCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EMAIL, PREFIX_TAG,","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                        PREFIX_PASSPORT_NUMBER, PREFIX_ROOM_NUMBER);","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        if (!anyPrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_EMAIL, PREFIX_TAG,","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"                PREFIX_PASSPORT_NUMBER, PREFIX_ROOM_NUMBER)","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterGuestCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"            Optional\u003cString\u003e nameOptional \u003d argMultimap.getValue(PREFIX_NAME);","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"            Optional\u003cString\u003e emailOptional \u003d argMultimap.getValue(PREFIX_EMAIL);","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"            Optional\u003cString\u003e passportNumberOptional \u003d argMultimap.getValue(PREFIX_PASSPORT_NUMBER);","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"            Optional\u003cString\u003e roomNumberOptional \u003d argMultimap.getValue(PREFIX_ROOM_NUMBER);","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"            List\u003cString\u003e tags \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"            Optional\u003cSet\u003cTag\u003e\u003e tagsOptional \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"                    tags.isEmpty() ? Optional.empty() : Optional.of(ParserUtil.parseTags(tags));","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"            return new FilterGuestCommand(","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"                    new GuestPredicate(passportNumberOptional, roomNumberOptional, nameOptional, emailOptional,","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"                            tagsOptional));","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"            throw pe;","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    private static boolean anyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":76}},{"path":"src/main/java/seedu/address/logic/parser/vendor/AddVendorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPERATING_HOURS;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_NAME;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VENDOR_ID;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.AddVendorCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Address;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Cost;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.OperatingHours;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ServiceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"public class AddVendorCommandParser implements Parser\u003cAddVendorCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"     * Parses the given {@code String} of arguments in the context of theAddVendorCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"     * and returns an AddVendorCommand object for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    public AddVendorCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"                        PREFIX_VENDOR_ID, PREFIX_COST, PREFIX_OPERATING_HOURS, PREFIX_SERVICE_NAME);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"                PREFIX_VENDOR_ID, PREFIX_COST, PREFIX_OPERATING_HOURS, PREFIX_SERVICE_NAME)","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddVendorCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        VendorId vendorId \u003d ParserUtil.parseVendorId(argMultimap.getValue(PREFIX_VENDOR_ID).get());","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        ServiceName serviceName \u003d ParserUtil.parseServiceName(argMultimap.getValue(PREFIX_SERVICE_NAME).get());","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        Cost cost \u003d ParserUtil.parseCost(argMultimap.getValue(PREFIX_COST).get());","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        OperatingHours operatingHours \u003d","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"                ParserUtil.parseOperatingHours(argMultimap.getValue(PREFIX_OPERATING_HOURS).get());","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        Vendor vendor \u003d new Vendor(name, email, tagList, vendorId, phone, serviceName, address, cost, operatingHours);","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        return new AddVendorCommand(vendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":77}},{"path":"src/main/java/seedu/address/logic/parser/vendor/DeleteVendorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VENDOR_ID;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.DeleteVendorCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"NicolasCwy"},"content":"// @author NicolasCwy","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"public class DeleteVendorCommandParser implements Parser\u003cDeleteVendorCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteVendorCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"     * and returns an DeleteVendorCommand object for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    public DeleteVendorCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_VENDOR_ID);","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"NicolasCwy"},"content":"        if (argMultimap.getValue(PREFIX_VENDOR_ID).isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteVendorCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        return new DeleteVendorCommand(ParserUtil.parseVendorId(argMultimap.getValue(PREFIX_VENDOR_ID).get()));","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":34,"NicolasCwy":2}},{"path":"src/main/java/seedu/address/logic/parser/vendor/EditVendorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPERATING_HOURS;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_NAME;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VENDOR_ID;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collection;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.EditVendorCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.EditVendorCommand.EditVendorDescriptor;","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"public class EditVendorCommandParser implements Parser\u003cEditVendorCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"     * Parses the given {@code String} of arguments in the context of the EditVendorCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"     * and returns an EditVendorCommand object for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    public EditVendorCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                        PREFIX_VENDOR_ID, PREFIX_COST, PREFIX_OPERATING_HOURS, PREFIX_SERVICE_NAME);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        VendorId vendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        EditVendorDescriptor editVendorDescriptor \u003d new EditVendorDescriptor();","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"            editVendorDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"            editVendorDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editVendorDescriptor::setTags);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        if (argMultimap.getValue(PREFIX_VENDOR_ID).isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"            vendorId \u003d ParserUtil.parseVendorId(argMultimap.getValue(PREFIX_VENDOR_ID).get());","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"            editVendorDescriptor.setVendorId(vendorId);","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"        } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"rgbpokka"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditVendorCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"            editVendorDescriptor.setAddress(","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"                    ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"            editVendorDescriptor.setPhone(","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"                    ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        if (argMultimap.getValue(PREFIX_SERVICE_NAME).isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"            editVendorDescriptor.setServiceName(","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"                    ParserUtil.parseServiceName(argMultimap.getValue(PREFIX_SERVICE_NAME).get()));","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        if (argMultimap.getValue(PREFIX_COST).isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"            editVendorDescriptor.setCost(","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"                    ParserUtil.parseCost(argMultimap.getValue(PREFIX_COST).get()));","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"        if (argMultimap.getValue(PREFIX_OPERATING_HOURS).isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"            editVendorDescriptor.setOperatingHours(","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"                    ParserUtil.parseOperatingHours(argMultimap.getValue(PREFIX_OPERATING_HOURS).get()));","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"        if (!editVendorDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(EditVendorCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"        return new EditVendorCommand(vendorId, editVendorDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"rgbpokka":5,"calvintanwj":108}},{"path":"src/main/java/seedu/address/logic/parser/vendor/FilterVendorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPERATING_HOURS;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_NAME;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VENDOR_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.FilterVendorCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Cost;","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.OperatingHours;","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorPredicate;","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":" * Parses input arguments and creates a new FilterVendorCommand object","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"public class FilterVendorCommandParser implements Parser\u003cFilterVendorCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALIDATION_OPERATING_HOURS_REGEX \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"            \"^[1-7]+([\\\\s][0-2][0-9][0-5][0-9])?([-][0-2][0-9][0-5][0-9])?$\";","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALIDATION_COST_REGEX \u003d \"^[\u003c,\u003e]{0,1}[0-9]+(.[0-9]+)?$\";","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterVendorCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"     * and returns a FilterVendorCommand object for execution.","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    public FilterVendorCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EMAIL, PREFIX_TAG,","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"                        PREFIX_VENDOR_ID, PREFIX_PHONE, PREFIX_ADDRESS, PREFIX_SERVICE_NAME, PREFIX_COST,","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"                        PREFIX_OPERATING_HOURS);","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        if (!anyPrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_EMAIL, PREFIX_TAG,","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"                PREFIX_VENDOR_ID, PREFIX_PHONE, PREFIX_ADDRESS, PREFIX_SERVICE_NAME, PREFIX_COST,","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"                PREFIX_OPERATING_HOURS)","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterVendorCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"            Optional\u003cString\u003e nameOptional \u003d argMultimap.getValue(PREFIX_NAME);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"            Optional\u003cString\u003e emailOptional \u003d argMultimap.getValue(PREFIX_EMAIL);","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"            Optional\u003cString\u003e vendorIdOptional \u003d argMultimap.getValue(PREFIX_VENDOR_ID);","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"            Optional\u003cString\u003e phoneOptional \u003d argMultimap.getValue(PREFIX_PHONE);","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"            Optional\u003cString\u003e addressOptional \u003d argMultimap.getValue(PREFIX_ADDRESS);","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"            Optional\u003cString\u003e serviceNameOptional \u003d argMultimap.getValue(PREFIX_SERVICE_NAME);","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"            Optional\u003cString\u003e costOptional \u003d argMultimap.getValue(PREFIX_COST);","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"            if (costOptional.isPresent() \u0026\u0026 !costOptional.get().matches(VALIDATION_COST_REGEX)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"                throw new ParseException(Cost.MESSAGE_FILTER_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"            Optional\u003cString\u003e operatingHoursOptional \u003d argMultimap.getValue(PREFIX_OPERATING_HOURS);","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"            if (operatingHoursOptional.isPresent()","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"                    \u0026\u0026 (!operatingHoursOptional.get().matches(VALIDATION_OPERATING_HOURS_REGEX)","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"                    \u0026\u0026 !operatingHoursOptional.get().trim().equals(\"now\"))) {","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"                throw new ParseException(OperatingHours.MESSAGE_FILTER_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"            List\u003cString\u003e tags \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"            Optional\u003cSet\u003cTag\u003e\u003e tagsOptional \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"                    tags.isEmpty() ? Optional.empty() : Optional.of(ParserUtil.parseTags(tags));","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"            return new FilterVendorCommand(","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"                    new VendorPredicate(vendorIdOptional, phoneOptional, nameOptional, emailOptional,","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"                            tagsOptional, addressOptional, serviceNameOptional, costOptional, operatingHoursOptional));","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"            throw pe;","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"    private static boolean anyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":105}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ReadOnlyVendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    Predicate\u003cGuest\u003e PREDICATE_SHOW_ALL_GUESTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    Predicate\u003cVendor\u003e PREDICATE_SHOW_ALL_VENDORS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"     * Returns the user prefs\u0027 guest manager file path.","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    Path getGuestBookFilePath();","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"     * Sets the user prefs\u0027 guest manager file path.","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    void setGuestBookFilePath(Path guestManagerFilePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"     * Replaces pocket hotel data with the data in {@code guestBook}.","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    void setGuestBook(ReadOnlyGuestBook guestBook);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"     * Returns the GuestBook","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"    ReadOnlyGuestBook getGuestBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Guest operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if a guest with the same identity as {@code guest} exists in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    boolean hasGuest(Guest guest);","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"     * Deletes the given guest.","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"     * The guest must exist in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"    void deleteGuest(Guest target);","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"     * Adds the given guest.","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"     * {@code guest} must not already exist in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"    void addGuest(Guest guest);","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"     * Gets guest given the passport number","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"    Optional\u003cGuest\u003e getGuest(PassportNumber passportNumber);","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"     * Replaces the given guest {@code target} with {@code editedGuest}.","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"     * The guest identity of {@code editedGuest} must not be the same as another existing guest in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"    void setGuest(Guest target, Guest editedGuest);","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"     * Returns an unmodifiable view of the filtered guest list","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"    ObservableList\u003cGuest\u003e getFilteredGuestList();","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"     * Updates the filter of the filtered guest list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"    void updateFilteredGuestList(Predicate\u003cGuest\u003e predicate);","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"rgbpokka"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Archive operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"rgbpokka"},"content":"    void setArchive(Archive archive);","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"rgbpokka"},"content":"    Archive getArchive();","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"rgbpokka"},"content":"    boolean hasArchivedGuest(Guest guest);","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"rgbpokka"},"content":"    void deleteArchivedGuest(Guest target);","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"rgbpokka"},"content":"    void addArchivedGuest(Guest guest);","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"rgbpokka"},"content":"    Optional\u003cGuest\u003e getArchivedGuest(PassportNumber passportNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"rgbpokka"},"content":"    void setArchivedGuest(Guest target, Guest editedGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"rgbpokka"},"content":"    Path getArchiveFilePath();","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Vendor operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if a tag with the same identity as {@code vendor} exists in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"    boolean hasVendor(Vendor vendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"     * Deletes the given vendor.","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"     * The vendor must exist in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"    void deleteVendor(Vendor target);","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"     * Adds the given vendor.","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"     * {@code vendor} must not already exist in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"    void addVendor(Vendor vendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"     * Replaces the given vendor {@code target} with {@code editedVendor}.","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"     * The vendor identity of {@code editedVendor} must not be the same as another existing vendor in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"    void setVendor(Vendor target, Vendor editedVendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"     * Gets vendor given the vendor id","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"    Optional\u003cVendor\u003e getVendor(VendorId vendorId);","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"     * Returns an unmodifiable view of the filtered vendor list","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"    ObservableList\u003cVendor\u003e getFilteredVendorList();","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"     * Updates the filter of the filtered vendor list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"    void updateFilteredVendorList(Predicate\u003cVendor\u003e predicate);","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"     * Replaces pocket hotel data with the data in {@code vendorManager}.","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"    void setVendorBook(ReadOnlyVendorBook vendorManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"     * Returns the VendorBook","lastModifiedDate":"2021-10-23"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"    ReadOnlyVendorBook getVendorBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"    Path getVendorBookFilePath();","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"rgbpokka":18,"calvintanwj":83,"-":81}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ReadOnlyVendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    private final GuestBook guestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    private final VendorBook vendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"    private final Archive archive;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    private final FilteredList\u003cGuest\u003e filteredGuests;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    private final FilteredList\u003cVendor\u003e filteredVendors;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"     * Initializes a ModelManager with the given guestBook, vendorBook and userPrefs.","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    public ModelManager(ReadOnlyGuestBook guestBook, ReadOnlyVendorBook vendorBook,","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                        ReadOnlyUserPrefs userPrefs, ReadOnlyGuestBook archive) {","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        requireAllNonNull(guestBook, vendorBook, userPrefs);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        logger.fine(\"Initializing with Pocket Hotel: \" + guestBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        this.guestBook \u003d new GuestBook(guestBook);","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        this.vendorBook \u003d new VendorBook(vendorBook);","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"rgbpokka"},"content":"        this.archive \u003d new Archive(archive);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        filteredGuests \u003d new FilteredList\u003c\u003e(this.guestBook.getGuestList());","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        filteredVendors \u003d new FilteredList\u003c\u003e(this.vendorBook.getVendorList());","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"rgbpokka"},"content":"        this(new GuestBook(), new VendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"    public Path getGuestBookFilePath() {","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        return userPrefs.getGuestBookFilePath();","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"    public void setGuestBookFilePath(Path guestBookFilePath) {","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(guestBookFilePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        userPrefs.setGuestBookFilePath(guestBookFilePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Guest Book \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"    public void setGuestBook(ReadOnlyGuestBook guestBook) {","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"        this.guestBook.resetData(guestBook);","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"    public ReadOnlyGuestBook getGuestBook() {","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"        return guestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"    public boolean hasGuest(Guest guest) {","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(guest);","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        return guestBook.hasGuest(guest);","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"    public void deleteGuest(Guest target) {","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"        guestBook.removeGuest(target);","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"    public void addGuest(Guest guest) {","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"        guestBook.addGuest(guest);","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"        updateFilteredGuestList(PREDICATE_SHOW_ALL_GUESTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"    public Optional\u003cGuest\u003e getGuest(PassportNumber passportNumber) {","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"        return guestBook.getGuest(passportNumber);","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"    public void setGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"        requireAllNonNull(target, editedGuest);","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"        guestBook.setGuest(target, editedGuest);","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"rgbpokka"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Archive \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"rgbpokka"},"content":"    public void setArchive(Archive archive) {","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"rgbpokka"},"content":"        this.archive.resetData(archive);","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"rgbpokka"},"content":"    public Archive getArchive() {","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"rgbpokka"},"content":"        return archive;","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"rgbpokka"},"content":"    public boolean hasArchivedGuest(Guest guest) {","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"rgbpokka"},"content":"        requireNonNull(guest);","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"rgbpokka"},"content":"        return archive.hasGuest(guest);","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"rgbpokka"},"content":"    public void deleteArchivedGuest(Guest target) {","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"rgbpokka"},"content":"        archive.removeGuest(target);","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"rgbpokka"},"content":"    public void addArchivedGuest(Guest guest) {","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"rgbpokka"},"content":"        archive.addGuest(guest);","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"rgbpokka"},"content":"        //        updateFilteredGuestList(PREDICATE_SHOW_ALL_GUESTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"rgbpokka"},"content":"    public Optional\u003cGuest\u003e getArchivedGuest(PassportNumber passportNumber) {","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"rgbpokka"},"content":"        return archive.getGuest(passportNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"rgbpokka"},"content":"    public void setArchivedGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"rgbpokka"},"content":"        requireAllNonNull(target, editedGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"rgbpokka"},"content":"        archive.setGuest(target, editedGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"rgbpokka"},"content":"    public Path getArchiveFilePath() {","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"rgbpokka"},"content":"        return userPrefs.getArchiveFilePath();","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Vendor Book \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"    public boolean hasVendor(Vendor vendor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(vendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"        return vendorBook.hasVendor(vendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"calvintanwj"},"content":"    public void deleteVendor(Vendor target) {","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"        vendorBook.removeVendor(target);","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":192,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"calvintanwj"},"content":"    public void addVendor(Vendor vendor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"calvintanwj"},"content":"        vendorBook.addVendor(vendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"        updateFilteredVendorList(PREDICATE_SHOW_ALL_VENDORS);","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"calvintanwj"},"content":"    public Optional\u003cVendor\u003e getVendor(VendorId vendorId) {","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"calvintanwj"},"content":"        return vendorBook.getVendor(vendorId);","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"calvintanwj"},"content":"    public void setVendor(Vendor target, Vendor editedVendor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"calvintanwj"},"content":"        requireAllNonNull(target, editedVendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":206,"author":{"gitId":"calvintanwj"},"content":"        vendorBook.setVendor(target, editedVendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":207,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"calvintanwj"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Guest/Vendor List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":212,"author":{"gitId":"calvintanwj"},"content":"     * Returns an unmodifiable view of the list of {@code Guest} backed by the internal list of","lastModifiedDate":"2021-10-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"calvintanwj"},"content":"    public ObservableList\u003cGuest\u003e getFilteredGuestList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":217,"author":{"gitId":"calvintanwj"},"content":"        return filteredGuests;","lastModifiedDate":"2021-10-23"},{"lineNumber":218,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"calvintanwj"},"content":"    public ObservableList\u003cVendor\u003e getFilteredVendorList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"calvintanwj"},"content":"        return filteredVendors;","lastModifiedDate":"2021-10-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"calvintanwj"},"content":"    public void updateFilteredGuestList(Predicate\u003cGuest\u003e predicate) {","lastModifiedDate":"2021-10-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-23"},{"lineNumber":228,"author":{"gitId":"calvintanwj"},"content":"        filteredGuests.setPredicate(predicate);","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":232,"author":{"gitId":"calvintanwj"},"content":"    public void updateFilteredVendorList(Predicate\u003cVendor\u003e predicate) {","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"calvintanwj"},"content":"        filteredVendors.setPredicate(predicate);","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":237,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"calvintanwj"},"content":"    public void setVendorBook(ReadOnlyVendorBook vendorBook) {","lastModifiedDate":"2021-10-23"},{"lineNumber":239,"author":{"gitId":"calvintanwj"},"content":"        this.vendorBook.resetData(vendorBook);","lastModifiedDate":"2021-10-23"},{"lineNumber":240,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":243,"author":{"gitId":"calvintanwj"},"content":"    public ReadOnlyVendorBook getVendorBook() {","lastModifiedDate":"2021-10-23"},{"lineNumber":244,"author":{"gitId":"calvintanwj"},"content":"        return vendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":247,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"calvintanwj"},"content":"    public Path getVendorBookFilePath() {","lastModifiedDate":"2021-10-23"},{"lineNumber":249,"author":{"gitId":"calvintanwj"},"content":"        return userPrefs.getVendorBookFilePath();","lastModifiedDate":"2021-10-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"calvintanwj"},"content":"        return guestBook.equals(other.guestBook)","lastModifiedDate":"2021-10-23"},{"lineNumber":268,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 vendorBook.equals(other.vendorBook)","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":270,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 filteredGuests.equals(other.filteredGuests)","lastModifiedDate":"2021-10-23"},{"lineNumber":271,"author":{"gitId":"rgbpokka"},"content":"                \u0026\u0026 filteredVendors.equals(other.filteredVendors)","lastModifiedDate":"2021-10-28"},{"lineNumber":272,"author":{"gitId":"rgbpokka"},"content":"                \u0026\u0026 archive.equals(other.archive);","lastModifiedDate":"2021-10-28"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rgbpokka":49,"calvintanwj":105,"-":121}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    Path getGuestBookFilePath();","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    Path getVendorBookFilePath();","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"    Path getArchiveFilePath();","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"rgbpokka":1,"calvintanwj":3,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    private Path guestBookFilePath \u003d Paths.get(\"data\", \"guests.json\");","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    private Path vendorBookFilePath \u003d Paths.get(\"data\", \"vendors.json\");","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"    private Path archiveFilePath \u003d Paths.get(\"data\", \"archive.json\");","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    public UserPrefs() {","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        setGuestBookFilePath(newUserPrefs.getGuestBookFilePath());","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        setVendorBookFilePath(newUserPrefs.getVendorBookFilePath());","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"        setArchiveFilePath(newUserPrefs.getArchiveFilePath());","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    public Path getGuestBookFilePath() {","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        return guestBookFilePath;","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    public void setGuestBookFilePath(Path guestBookFilePath) {","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(guestBookFilePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        this.guestBookFilePath \u003d guestBookFilePath;","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    public Path getVendorBookFilePath() {","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        return vendorBookFilePath;","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    public void setVendorBookFilePath(Path vendorBookFilePath) {","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(vendorBookFilePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        this.vendorBookFilePath \u003d vendorBookFilePath;","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":73,"author":{"gitId":"rgbpokka"},"content":"    public Path getArchiveFilePath() {","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"rgbpokka"},"content":"        return archiveFilePath;","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"rgbpokka"},"content":"    public void setArchiveFilePath(Path archiveFilePath) {","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"rgbpokka"},"content":"        requireNonNull(archiveFilePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"rgbpokka"},"content":"        this.archiveFilePath \u003d archiveFilePath;","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 guestBookFilePath.equals(o.guestBookFilePath)","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"rgbpokka"},"content":"                \u0026\u0026 vendorBookFilePath.equals(o.vendorBookFilePath)","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"rgbpokka"},"content":"                \u0026\u0026 archiveFilePath.equals(o.archiveFilePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"rgbpokka"},"content":"    // are there issues with the implementation of the methods below??","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"        return Objects.hash(guiSettings, guestBookFilePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        sb.append(\"\\nLocal data file location : \" + guestBookFilePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rgbpokka":13,"calvintanwj":21,"-":80}},{"path":"src/main/java/seedu/address/model/chargeable/Chargeable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.chargeable;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.util.Objects;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.vendor.Cost;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.vendor.ServiceName;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"public class Chargeable {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"    private final VendorId vendorId;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"    private final Name name;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"    private final ServiceName serviceName;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"    private final Cost cost;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"    private Quantity quantity;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"     * Creates a chargeable object used for the invoice form.","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"     * @param vendorId","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"     * @param name","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"     * @param serviceName","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"     * @param cost","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"     * @param quantity","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"    public Chargeable(VendorId vendorId, Name name, ServiceName serviceName, Cost cost, Quantity quantity) {","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"        requireAllNonNull(name, serviceName, cost);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"        this.vendorId \u003d vendorId;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"        this.serviceName \u003d serviceName;","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"        this.cost \u003d cost;","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"bingcheng45"},"content":"    public VendorId getVendorId() {","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"        return vendorId;","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"        return name;","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"    public ServiceName getServiceName() {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"        return serviceName;","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"    public Cost getCost() {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"        return cost;","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"    public Quantity getQuantity() {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"        return quantity;","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"bingcheng45"},"content":"    public void incrementQuantity() {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"        quantity \u003d new Quantity(quantity.value + 1);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"bingcheng45"},"content":"     * Returns true if both Chargeable have the same identity and data fields.","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"bingcheng45"},"content":"     * This defines a stronger notion of equality between two Chargeables.","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"bingcheng45"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"bingcheng45"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"bingcheng45"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"bingcheng45"},"content":"        if (!(other instanceof Chargeable)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"bingcheng45"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"bingcheng45"},"content":"        Chargeable otherChargeable \u003d (Chargeable) other;","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"        return otherChargeable.getName().equals(getName())","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"bingcheng45"},"content":"                \u0026\u0026 otherChargeable.getServiceName().equals(getServiceName())","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"bingcheng45"},"content":"                \u0026\u0026 otherChargeable.getCost().equals(getCost())","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"bingcheng45"},"content":"                \u0026\u0026 otherChargeable.getVendorId().equals(getVendorId());","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"bingcheng45"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"bingcheng45"},"content":"        return Objects.hash(name, serviceName, cost, vendorId);","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"bingcheng45"},"content":"    public String toString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"bingcheng45"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"bingcheng45"},"content":"        builder.append(\"Vendor Id: \")","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"bingcheng45"},"content":"                .append(getVendorId())","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"bingcheng45"},"content":"                .append(\"Company Name: \")","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"bingcheng45"},"content":"                .append(getName())","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"bingcheng45"},"content":"                .append(\"; Service provided: \")","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"bingcheng45"},"content":"                .append(getServiceName())","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"bingcheng45"},"content":"                .append(\"; Cost: \")","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"bingcheng45"},"content":"                .append(getCost())","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"bingcheng45"},"content":"                .append(\"; Quantity: \")","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"bingcheng45"},"content":"                .append(getQuantity());","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"bingcheng45"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"calvintanwj":14,"bingcheng45":91}},{"path":"src/main/java/seedu/address/model/chargeable/Quantity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.chargeable;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":" * Represents a quantity for the service","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidQuantity(Integer)}","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"public class Quantity {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"            \"Quantity should be in whole number (e.g. 1, 2, 3...) and must be a positive number \"","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"                    + \"greater than or equals to 0\";","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"    public static final String INVALID_INTEGER \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"            \"Quantity should be a valid integer.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"    private static final int MIN_VALUE \u003d 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"    public static final Predicate\u003cInteger\u003e VALIDATION_PREDICATE \u003d qty -\u003e qty \u003e\u003d MIN_VALUE;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"    public final Integer value;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"     * Constructs a {@code Quantity}.","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"     * @param quantity A valid quantity.","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"    public Quantity(Integer quantity) {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"        requireNonNull(quantity);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"        checkArgument(isValidQuantity(quantity), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"        value \u003d quantity;","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"bingcheng45"},"content":"    public static boolean isValidQuantity(Integer test) {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"        return VALIDATION_PREDICATE.test(test);","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"    public String toString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"        return value.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"                || (other instanceof Quantity // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"                \u0026\u0026 value.equals(((Quantity) other).value)); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"bingcheng45"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"calvintanwj":5,"bingcheng45":57}},{"path":"src/main/java/seedu/address/model/commonattributes/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.commonattributes;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"calvintanwj":1,"-":70}},{"path":"src/main/java/seedu/address/model/commonattributes/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.commonattributes;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":" * Represents a name in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"            \"Names should not be blank\";","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?!\\\\s*$).+\";","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"calvintanwj":4,"-":51}},{"path":"src/main/java/seedu/address/model/guest/Archive.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alyssa-savier"},"content":"package seedu.address.model.guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"alyssa-savier"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"alyssa-savier"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"rgbpokka"},"content":"public class Archive implements ReadOnlyGuestBook {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"    private final UniqueGuestList archivedGuests;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"alyssa-savier"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"alyssa-savier"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"alyssa-savier"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"alyssa-savier"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"alyssa-savier"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"alyssa-savier"},"content":"     *   among constructors.","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    {","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"        archivedGuests \u003d new UniqueGuestList();","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"alyssa-savier"},"content":"    public Archive() {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"alyssa-savier"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"     * Creates an archive using the entities in the {@code toBeCopied}","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"alyssa-savier"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"alyssa-savier"},"content":"    public Archive(ReadOnlyGuestBook toBeCopied) {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"alyssa-savier"},"content":"        this();","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"alyssa-savier"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"alyssa-savier"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"     * Replaces the contents of the archive with {@code guests}.","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"alyssa-savier"},"content":"     * {@code guests} must not contain duplicate guests.","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"alyssa-savier"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"alyssa-savier"},"content":"    public void setGuests(List\u003cGuest\u003e guests) {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"        this.archivedGuests.setItems(guests);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"alyssa-savier"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"alyssa-savier"},"content":"     * Resets the existing data of this {@code GuestBook} with {@code newData}.","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"alyssa-savier"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"alyssa-savier"},"content":"    public void resetData(ReadOnlyGuestBook newData) {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"alyssa-savier"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"alyssa-savier"},"content":"        setGuests(newData.getGuestList());","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"alyssa-savier"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"     * Returns true if a guest with the same identity as {@code guest} exists in the archive.","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"alyssa-savier"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"alyssa-savier"},"content":"    public boolean hasGuest(Guest guest) {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"alyssa-savier"},"content":"        requireNonNull(guest);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"rgbpokka"},"content":"        return archivedGuests.contains(guest);","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"alyssa-savier"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"rgbpokka"},"content":"     * Adds a guest to the archive.","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"     * The guest must not already exist in the archive.","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"alyssa-savier"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"alyssa-savier"},"content":"    public void addGuest(Guest p) {","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"        archivedGuests.add(p);","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"alyssa-savier"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"alyssa-savier"},"content":"     * Replaces the given guest {@code target} in the list with {@code editedGuest}.","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"rgbpokka"},"content":"     * {@code target} must exist in the archive.","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"rgbpokka"},"content":"     * The guest identity of {@code editedGuest} must not be the same as another existing guest in the archive.","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"alyssa-savier"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"alyssa-savier"},"content":"    public void setGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"alyssa-savier"},"content":"        requireNonNull(editedGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"rgbpokka"},"content":"        archivedGuests.setItem(target, editedGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"alyssa-savier"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"alyssa-savier"},"content":"     * Gets the given guest in the list with the given passportNumber.","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"rgbpokka"},"content":"     * If Guest does not exist in the archive, then Optional is empty.","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"alyssa-savier"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"alyssa-savier"},"content":"    public Optional\u003cGuest\u003e getGuest(PassportNumber passportNumber) {","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"alyssa-savier"},"content":"        requireNonNull(passportNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"rgbpokka"},"content":"        return archivedGuests.get(passportNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"alyssa-savier"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"alyssa-savier"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"alyssa-savier"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"alyssa-savier"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"alyssa-savier"},"content":"    public void removeGuest(Guest key) {","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"rgbpokka"},"content":"        archivedGuests.remove(key);","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"alyssa-savier"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"alyssa-savier"},"content":"    public String toString() {","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"rgbpokka"},"content":"        return archivedGuests.asUnmodifiableObservableList().size() + \" guests\";","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"rgbpokka"},"content":"    public ObservableList\u003cGuest\u003e getGuestList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"rgbpokka"},"content":"        return archivedGuests.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"alyssa-savier"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"alyssa-savier"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"alyssa-savier"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"alyssa-savier"},"content":"                || (other instanceof Archive // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"rgbpokka"},"content":"                \u0026\u0026 archivedGuests.equals(((Archive) other).archivedGuests));","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"alyssa-savier"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"alyssa-savier"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"rgbpokka"},"content":"        return archivedGuests.hashCode();","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"alyssa-savier"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"rgbpokka":27,"calvintanwj":4,"alyssa-savier":87}},{"path":"src/main/java/seedu/address/model/guest/Guest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.chargeable.Chargeable;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.chargeable.Quantity;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.uniquelist.UniqueListItem;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"public class Guest extends UniqueListItem {","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    private final Name name;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    private final Email email;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    private final RoomNumber roomNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    private final PassportNumber passportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"    private List\u003cChargeable\u003e chargeablesUsed;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"     * Every field other than vendorsHired must be present and not null.","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"     * @param name","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"     * @param email","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"     * @param tags","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"     * @param roomNumber","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"     * @param passportNumber","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    public Guest(Name name, Email email, Set\u003cTag\u003e tags, RoomNumber roomNumber, PassportNumber passportNumber) {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        this.roomNumber \u003d roomNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        this.passportNumber \u003d passportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"        this.chargeablesUsed \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"     * Alternate constructor for guests.","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"     * @param name","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"     * @param email","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"     * @param tags","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"     * @param roomNumber","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"     * @param passportNumber","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"     * @param chargeablesUsed","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    public Guest(Name name, Email email, Set\u003cTag\u003e tags, RoomNumber roomNumber, PassportNumber passportNumber,","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"                 List\u003cChargeable\u003e chargeablesUsed) {","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        this.roomNumber \u003d roomNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        this.passportNumber \u003d passportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"bingcheng45"},"content":"        this.chargeablesUsed \u003d chargeablesUsed;","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        return name;","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    public Email getEmail() {","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        return email;","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"    public RoomNumber getRoomNumber() {","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        return roomNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"    public PassportNumber getPassportNumber() {","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        return passportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"bingcheng45"},"content":"    public List\u003cChargeable\u003e getChargeableUsed() {","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"bingcheng45"},"content":"        return chargeablesUsed;","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"     * Charges a guest to a vendor hired.","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"     * @param vendor The vendor hired.","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"    public void charge(Vendor vendor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"        Chargeable newCharge \u003d","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"                new Chargeable(vendor.getVendorId(), vendor.getName(), vendor.getServiceName(), vendor.getCost(),","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"                        new Quantity(1));","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"bingcheng45"},"content":"        if (getChargeableUsed().contains(newCharge)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"bingcheng45"},"content":"            for (Chargeable currCharge : getChargeableUsed()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"bingcheng45"},"content":"                if (currCharge.equals(newCharge)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"bingcheng45"},"content":"                    currCharge.incrementQuantity();","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"bingcheng45"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"bingcheng45"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"bingcheng45"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"bingcheng45"},"content":"            this.chargeablesUsed.add(newCharge);","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"rgbpokka"},"content":"     * Is there a better way to implement this?","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"rgbpokka"},"content":"    public void clearChargeables() {","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"rgbpokka"},"content":"        this.chargeablesUsed \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"    public boolean isSame(UniqueListItem otherItem) {","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"        if (otherItem \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"        if (otherItem instanceof Guest) {","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"            Guest otherGuest \u003d (Guest) otherItem;","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"            return otherGuest.getPassportNumber().equals(getPassportNumber());","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"        return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if both guests have the same identity and data fields.","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"     * This defines a stronger notion of equality between two guests.","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"        if (!(other instanceof Guest)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"        Guest otherGuest \u003d (Guest) other;","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"        return otherGuest.getName().equals(getName())","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherGuest.getRoomNumber().equals(getRoomNumber())","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherGuest.getEmail().equals(getEmail())","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherGuest.getPassportNumber().equals(getPassportNumber())","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherGuest.getTags().equals(getTags())","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"bingcheng45"},"content":"                \u0026\u0026 otherGuest.getChargeableUsed().equals(getChargeableUsed());","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"bingcheng45"},"content":"        return Objects.hash(name, email, roomNumber, passportNumber, tags, chargeablesUsed);","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"    public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"                .append(getEmail())","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"                .append(\"; RoomNumber: \")","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"                .append(getRoomNumber())","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"                .append(\"; PassportNumber: \")","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"                .append(getPassportNumber());","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-10-23"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"rgbpokka":7,"calvintanwj":157,"bingcheng45":17}},{"path":"src/main/java/seedu/address/model/guest/GuestBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"public class GuestBook implements ReadOnlyGuestBook {","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    private final UniqueGuestList guests;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    /*","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"     *   among constructors.","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    {","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"        guests \u003d new UniqueGuestList();","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    public GuestBook() {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"     * Creates an GuestBook using the entities in the {@code toBeCopied}","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public GuestBook(ReadOnlyGuestBook toBeCopied) {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        this();","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"     * Replaces the contents of the guest list with {@code guests}.","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"     * {@code guests} must not contain duplicate guests.","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    public void setGuests(List\u003cGuest\u003e guests) {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        this.guests.setItems(guests);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"     * Resets the existing data of this {@code GuestBook} with {@code newData}.","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    public void resetData(ReadOnlyGuestBook newData) {","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        setGuests(newData.getGuestList());","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if a guest with the same identity as {@code guest} exists in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    public boolean hasGuest(Guest guest) {","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(guest);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        return guests.contains(guest);","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"     * Adds a guest to the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"     * The guest must not already exist in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"    public void addGuest(Guest p) {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        guests.add(p);","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"     * Replaces the given guest {@code target} in the list with {@code editedGuest}.","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"     * The guest identity of {@code editedGuest} must not be the same as another existing guest in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"    public void setGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(editedGuest);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"        guests.setItem(target, editedGuest);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"     * Gets the given guest in the list with the given passportNumber.","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"     * If Guest does not exist in the guest book, then Optional is empty.","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"    public Optional\u003cGuest\u003e getGuest(PassportNumber passportNumber) {","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(passportNumber);","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"        return guests.get(passportNumber);","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"    public void removeGuest(Guest key) {","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"        guests.remove(key);","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"    public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        return guests.asUnmodifiableObservableList().size() + \" guests\";","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"    public ObservableList\u003cGuest\u003e getGuestList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"        return guests.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof GuestBook // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 guests.equals(((GuestBook) other).guests));","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"        return guests.hashCode();","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":118}},{"path":"src/main/java/seedu/address/model/guest/GuestPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.guest;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":" * Tests that a {@code Guest} matches the {@code PassportNumber}, {@code RoomNumber}, {@code Name}, {@code Email},","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":" * and list of {@code Tag} given.","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"public class GuestPredicate implements Predicate\u003cGuest\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    private final Optional\u003cString\u003e passportNumberOptional;","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    private final Optional\u003cString\u003e roomNumberOptional;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    private final Optional\u003cString\u003e nameOptional;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    private final Optional\u003cString\u003e emailOptional;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    private final Optional\u003cSet\u003cTag\u003e\u003e tagsOptional;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"     * Creates a guest predicate.","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"     * @param passportNumberOptional","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"     * @param roomNumberOptional","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"     * @param nameOptional","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"     * @param emailOptional","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"     * @param tagsOptional","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    public GuestPredicate(Optional\u003cString\u003e passportNumberOptional,","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"                          Optional\u003cString\u003e roomNumberOptional,","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                          Optional\u003cString\u003e nameOptional,","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                          Optional\u003cString\u003e emailOptional,","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"                          Optional\u003cSet\u003cTag\u003e\u003e tagsOptional) {","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        requireAllNonNull(passportNumberOptional, roomNumberOptional, nameOptional, emailOptional, tagsOptional);","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        if (tagsOptional.isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"            this.tagsOptional \u003d Optional.of(new HashSet\u003c\u003e(tagsOptional.get()));","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"            this.tagsOptional \u003d Optional.empty();","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        this.passportNumberOptional \u003d passportNumberOptional;","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        this.roomNumberOptional \u003d roomNumberOptional;","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        this.nameOptional \u003d nameOptional;","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        this.emailOptional \u003d emailOptional;","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    public boolean test(Guest guest) {","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(guest);","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        return testForEmail(guest) \u0026\u0026 testForName(guest) \u0026\u0026 testForTags(guest) \u0026\u0026 testForRoomNumber(guest)","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 testForPassportNumber(guest);","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"    private boolean testForPassportNumber(Guest guest) {","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        if (passportNumberOptional.isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"            return passportNumberOptional.get().trim().toUpperCase().equals(guest.getPassportNumber().value);","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    private boolean testForName(Guest guest) {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        if (nameOptional.isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"            String nameTested \u003d nameOptional.get().toLowerCase().trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"            String guestName \u003d guest.getName().toString().toLowerCase();","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"            return guestName.contains(nameTested);","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"    private boolean testForEmail(Guest guest) {","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        if (emailOptional.isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"            String emailTested \u003d emailOptional.get().toLowerCase().trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"            String guestEmail \u003d guest.getEmail().toString().toLowerCase();","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"            return guestEmail.contains(emailTested);","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    private boolean testForRoomNumber(Guest guest) {","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        if (roomNumberOptional.isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"            return guest.getRoomNumber().value.indexOf(roomNumberOptional.get().trim()) \u003d\u003d 0;","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"    private boolean testForTags(Guest guest) {","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"        if (tagsOptional.isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"            List\u003cString\u003e guestTagStrings \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"                    guest.getTags().stream().map(tag -\u003e tag.tagName).collect(Collectors.toList());","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"            return tagsOptional.get().stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"                    .anyMatch(tag -\u003e guestTagStrings.contains(StringUtil.capitalizeFirstLetter(tag.tagName.trim())));","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof GuestPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 emailOptional.equals(((GuestPredicate) other).emailOptional)","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 nameOptional.equals(((GuestPredicate) other).nameOptional)","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 roomNumberOptional.equals(((GuestPredicate) other).roomNumberOptional)","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 passportNumberOptional.equals(((GuestPredicate) other).passportNumberOptional))","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 tagsOptional.equals(((GuestPredicate) other).tagsOptional); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"calvintanwj":115}},{"path":"src/main/java/seedu/address/model/guest/PassportNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"public class PassportNumber {","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Passport Number must be alphanumeric.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    public final String value;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"     * Constructs an {@code RoomNumber}.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"     * @param passportNumber A valid room number.","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    public PassportNumber(String passportNumber) {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(passportNumber);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"        checkArgument(isValidPassportNumber(passportNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"        this.value \u003d passportNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if a given string is a valid room number.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    public static boolean isValidPassportNumber(String test) {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        return value;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof PassportNumber// instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 value.equals(((PassportNumber) other).value)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"calvintanwj":51}},{"path":"src/main/java/seedu/address/model/guest/PassportNumberContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.guest;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":" * Tests that a {@code Guest}\u0027s {@code PassportNumber} matches any of the keywords given.","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"public class PassportNumberContainsKeywordsPredicate implements Predicate\u003cGuest\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    public PassportNumberContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    public boolean test(Guest guest) {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(guest.getPassportNumber().value, keyword));","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof PassportNumberContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 keywords.equals(((PassportNumberContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"calvintanwj":31}},{"path":"src/main/java/seedu/address/model/guest/ReadOnlyGuestBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":" * Unmodifiable view of a guest manager","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"public interface ReadOnlyGuestBook {","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"     * Returns an unmodifiable view of the guest list.","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"     * This list will not contain any duplicate guests.","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    ObservableList\u003cGuest\u003e getGuestList();","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":16}},{"path":"src/main/java/seedu/address/model/guest/RoomNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"public class RoomNumber {","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Room numbers must be a number greater than 0.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[1-9][0-9]*$\";","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    public final String value;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"     * Constructs an {@code RoomNumber}.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"     * @param roomNumber A valid room number.","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    public RoomNumber(String roomNumber) {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(roomNumber);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"        checkArgument(isValidRoomNumber(roomNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"        this.value \u003d roomNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if a given string is a valid room number.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    public static boolean isValidRoomNumber(String test) {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        return value;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof RoomNumber // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 value.equals(((RoomNumber) other).value)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"calvintanwj":48}},{"path":"src/main/java/seedu/address/model/guest/UniqueGuestList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.uniquelist.UniqueList;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"public class UniqueGuestList extends UniqueList\u003cGuest\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"    public Optional\u003cGuest\u003e get(PassportNumber passportNumber) {","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"        return super.asModifiableObservableList().stream().filter(","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"            guest -\u003e guest.getPassportNumber().equals(passportNumber)).findFirst();","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":13}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.uniquelist.UniqueListItem;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"public class Tag extends UniqueListItem {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[\\\\w\\\\s]+$\";","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    public boolean isSame(UniqueListItem otherItem) {","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        if (otherItem \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        if (otherItem instanceof Tag) {","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"            Tag otherTag \u003d (Tag) otherItem;","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"            return otherTag.tagName.equals(tagName);","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"calvintanwj":17,"-":52}},{"path":"src/main/java/seedu/address/model/tag/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"//package seedu.address.model.tag;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"//import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"//import java.util.function.Predicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"//import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"///**","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"// * Tests that a {@code Person}\u0027s {@code Identifier} matches any of the keywords given.","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"// */","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"//public class TagContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"//    private final List\u003cTag\u003e tags;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"//    public TagContainsKeywordsPredicate(List\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"//        this.tags \u003d tags;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"//    }","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"//    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"//    public boolean test(Person person) {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"//        if (tags.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"//            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"//        }","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"//        if (person instanceof Staff) {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"//            Staff staff \u003d (Staff) person;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"//            return tags.stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"//                    .filter(tag -\u003e staff.getTags().contains(tag)).collect(Collectors.toList()).size() \u003d\u003d tags.size();","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"//        } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"//            Guest guest \u003d (Guest) person;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"//            return tags.stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"//                    .filter(tag -\u003e guest.getTags().contains(tag)).collect(Collectors.toList()).size() \u003d\u003d tags.size();","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"//        }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"//    }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"//    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"//    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"//        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"//                || (other instanceof TagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"//                \u0026\u0026 tags.equals(((TagContainsKeywordsPredicate) other).tags)); // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"//    }","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"//    public List\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"//        return tags;","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"//    }","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"//","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"//}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":47}},{"path":"src/main/java/seedu/address/model/uniquelist/UniqueList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.uniquelist;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.uniquelist.exceptions.DuplicateItemException;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.uniquelist.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":" * A list of items that enforces uniqueness between them and does not allow nulls.","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":" * An item is considered unique by comparing using {@code T#isSame(T)}. As such, adding and updating of","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":" * items uses T#isSame(T) for equality so as to ensure that the item being added or updated is","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":" * unique in terms of identity in the UniqueList. However, the removal of an item uses T#equals(Object) so","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":" * as to ensure that the item with exactly the same fields will be removed.","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"public class UniqueList\u003cT extends UniqueListItem\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    private final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        return internalList.stream().anyMatch(toCheck::isSame);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"     * Adds the item to the list.","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"     * The item must not already exist in the list.","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"     * Replaces the Item {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"     * The person identity of {@code editedItem} must not be the same as another existing item in the list.","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    public void setItem(T targetItem, T editedItem) {","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        requireAllNonNull(targetItem, editedItem);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        int index \u003d internalList.indexOf(targetItem);","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        if (!targetItem.isSame(editedItem) \u0026\u0026 contains(editedItem)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        internalList.set(index, editedItem);","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"     * Removes the equivalent item from the list.","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"     * The item must exist in the list.","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"    public void setItems(UniqueList\u003cT\u003e replacement) {","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"     * Replaces the contents of this list with {@code items}.","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"     * {@code items} must not contain duplicate items.","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"    public void setItems(List\u003cT\u003e items) {","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        if (!itemsAreUnique(items)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"        internalList.setAll(items);","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"     * Returns the backing list as a modifiable {@code ObservableList}","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"    public ObservableList\u003cT\u003e asModifiableObservableList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        return internalList;","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof UniqueList // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 internalList.equals(((UniqueList) other).internalList));","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"        return Objects.hash(internalList, internalUnmodifiableList);","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"rgbpokka"},"content":"     * Method for debugging","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"rgbpokka"},"content":"    public void printItemsInList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"rgbpokka"},"content":"        for (T item : internalList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"rgbpokka"},"content":"            System.out.println(item.toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"rgbpokka"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"    private boolean itemsAreUnique(List\u003cT\u003e items) {","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"        for (int i \u003d 0; i \u003c items.size() - 1; i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"                if (items.get(i).isSame(items.get(j))) {","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"                    return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"                }","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"        return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"rgbpokka":9,"calvintanwj":145}},{"path":"src/main/java/seedu/address/model/uniquelist/UniqueListItem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.uniquelist;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"public abstract class UniqueListItem {","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"    public abstract boolean isSame(UniqueListItem other);","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":7}},{"path":"src/main/java/seedu/address/model/uniquelist/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.uniquelist.exceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":" * Signals that the operation will result in duplicate Items (Items are considered duplicates if they have the same","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":" * identity).","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"    public DuplicateItemException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"        super(\"Operation would result in duplicate items\");","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":11}},{"path":"src/main/java/seedu/address/model/uniquelist/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.uniquelist.exceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":" * Signals that the operation is unable to find the specified item.","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"public class ItemNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"    public ItemNotFoundException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"        super(\"Item does not appear in the list.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":11}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.RoomNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Address;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Cost;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.OperatingHours;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ReadOnlyVendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ServiceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":" * Contains utility methods for populating {@code VendorBook} and {@code GuestBook} with sample data.","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    public static Guest[] getSampleGuests() {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        return new Guest[]{","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"            new Guest(new Name(\"Alex Yeoh\"), new Email(\"alexyeoh@example.com\"), getTagSet(\"Deluxe\"),","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"                new RoomNumber(\"217\"), new PassportNumber(\"EC4744643\")),","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"            new Guest(new Name(\"Bernice Yu\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"                getTagSet(\"Vip\", \"Peanut allergy\"),","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                new RoomNumber(\"101\"), new PassportNumber(\"FG4741690\")),","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"            new Guest(new Name(\"Charlotte Oliveiro\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"                getTagSet(\"Suite\"),","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                new RoomNumber(\"201\"), new PassportNumber(\"SE2391854\")),","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    public static Vendor[] getSampleVendors() {","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        return new Vendor[]{","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"            new Vendor(new Name(\"Jeremy Chinese Delivery\"), new Email(\"jchidelivery@example.com\"),","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"                getTagSet(\"Chinese\", \"Non halal\"), new VendorId(\"001\"), new Phone(\"80180880\"),","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"                new ServiceName(\"Food\"), new Address(\"12 Clementi Rd, 231123\"), new Cost(12.99),","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"                new OperatingHours(LocalTime.of(8, 0), LocalTime.of(15, 30), new ArrayList\u003cDayOfWeek\u003e(","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"                                Arrays.asList(DayOfWeek.of(1), DayOfWeek.of(3), DayOfWeek.of(5))), \"135 0800-1530\")),","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"            new Vendor(new Name(\"Bing Massage Parlour\"), new Email(\"bmassage@example.com\"),","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"                getTagSet(\"Foot massage\", \"Body massage\"), new VendorId(\"002\"), new Phone(\"67381280\"),","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"                new ServiceName(\"Massage\"), new Address(\"75 Clementi Rd, 211823\"), new Cost(40.00),","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"                new OperatingHours(LocalTime.of(16, 0), LocalTime.of(22, 30), new ArrayList\u003cDayOfWeek\u003e(","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"                                Arrays.asList(DayOfWeek.of(1), DayOfWeek.of(2), DayOfWeek.of(3),","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"                                        DayOfWeek.of(4), DayOfWeek.of(5))), \"12345 1600-2230\")),","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        };","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    public static ReadOnlyGuestBook getSampleGuestBook() {","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        GuestBook sampleGuestBook \u003d new GuestBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        for (Guest sampleGuest : getSampleGuests()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"            sampleGuestBook.addGuest(sampleGuest);","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        return sampleGuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"    public static ReadOnlyVendorBook getSampleVendorBook() {","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        VendorBook sampleVendorBook \u003d new VendorBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        for (Vendor sampleVendor : getSampleVendors()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"            sampleVendorBook.addVendor(sampleVendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        return sampleVendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"rgbpokka"},"content":"    public static ReadOnlyGuestBook getSampleArchive() {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"rgbpokka"},"content":"        return new Archive();","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"rgbpokka":3,"calvintanwj":59,"-":29}},{"path":"src/main/java/seedu/address/model/vendor/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"calvintanwj":1,"-":56}},{"path":"src/main/java/seedu/address/model/vendor/Cost.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":" * Represents a cost in the vendor book.","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCost(Double)}","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"public class Cost {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"            \"Cost should be in dollars and cents (e.g. 25.30) and must be a positive cost greater than 0\";","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_FILTER_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"            \"Invalid syntax to filter cost. Examples of valid syntax: c/\u003c20, c/\u003e10, c/8\";","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    public static final String INVALID_DOUBLE \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"            \"Cost should be a valid double.\";","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    private static final double MIN_VALUE \u003d 0.0;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    public static final Predicate\u003cDouble\u003e VALIDATION_PREDICATE \u003d cost -\u003e cost \u003e MIN_VALUE;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    public final Double value;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"     * Constructs a {@code Cost}.","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"     * @param cost A valid cost.","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    public Cost(Double cost) {","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(cost);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        checkArgument(isValidCost(cost), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        value \u003d cost;","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    public static boolean isValidCost(Double test) {","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        return VALIDATION_PREDICATE.test(test);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        return value.toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof Cost // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 value.equals(((Cost) other).value)); // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":64}},{"path":"src/main/java/seedu/address/model/vendor/OperatingHours.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"public class OperatingHours {","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"            \"Operating Hours must only have valid days of the week (1 - 7), and the end time and \"","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"                    + \"start must be between 0000 and 2359, and start time less than end time.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_FILTER_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"            \"Invalid syntax. Valid examples: oh/1234, oh/123 1000, oh/135 1000-1600, oh/now\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[1-7]+[\\\\s][0-2][0-9][0-5][0-9][-][0-2][0-9][0-5][0-9]$\";","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    public final LocalTime startTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    public final LocalTime endTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    public final List\u003cDayOfWeek\u003e recurringDays;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    public final String operatingHoursStringRep;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"     * @param startTime     The starting time.","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"     * @param endTime       The ending time.","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"     * @param recurringDays The days of the week it operates on.","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"     * @param stringRep     The string representation of the operating hours.","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public OperatingHours(LocalTime startTime, LocalTime endTime, List\u003cDayOfWeek\u003e recurringDays, String stringRep) {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        checkArgument(isValidTimings(startTime, endTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        this.recurringDays \u003d recurringDays;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        this.operatingHoursStringRep \u003d stringRep;","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"     * Returns true is startTime is before endTime","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"     * @param startTime The starting time.","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"     * @param endTime   The ending time.","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"     * @return","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    public static boolean isValidTimings(LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        return startTime.isBefore(endTime);","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if a given string are valid operating hours.","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    public static boolean isValidOperatingHours(String test) {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        StringBuilder resultString \u003d new StringBuilder(\"Every \");","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        for (DayOfWeek dayOfWeek : recurringDays) {","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"            resultString.append(dayOfWeek.toString() + \", \");","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        return resultString + \" \" + startTime.toString() + \"-\" + endTime.toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof OperatingHours // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 startTime.equals(((OperatingHours) other).startTime))","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 endTime.equals(((OperatingHours) other).endTime)","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 recurringDays.equals(((OperatingHours) other).recurringDays); // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        return Objects.hash(startTime, endTime, recurringDays);","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":81}},{"path":"src/main/java/seedu/address/model/vendor/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"calvintanwj":1,"-":51}},{"path":"src/main/java/seedu/address/model/vendor/ReadOnlyVendorBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":" * Unmodifiable view of a vendor book","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"public interface ReadOnlyVendorBook {","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"     * Returns an unmodifiable view of the vendor list.","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"     * This list will not contain any duplicate vendors.","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    ObservableList\u003cVendor\u003e getVendorList();","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":16}},{"path":"src/main/java/seedu/address/model/vendor/ServiceName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":" * Represents a Vendor\u0027s service name in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidServiceName(String)}","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"public class ServiceName {","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"            \"Service names should only contain letters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z][a-zA-Z\\\\s]*$\";","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    public final String serviceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"     * Constructs a {@code ServiceName}.","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"     * @param serviceName A valid serviceName.","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    public ServiceName(String serviceName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(serviceName);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"        checkArgument(isValidServiceName(serviceName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        this.serviceName \u003d serviceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if a given string is a valid serviceName.","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    public static boolean isValidServiceName(String test) {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        return serviceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof ServiceName// instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 serviceName.equals(((ServiceName) other).serviceName)); // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        return serviceName.hashCode();","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":54}},{"path":"src/main/java/seedu/address/model/vendor/UniqueVendorList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.uniquelist.UniqueList;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"public class UniqueVendorList extends UniqueList\u003cVendor\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"    public Optional\u003cVendor\u003e get(VendorId vendorId) {","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"        return super.asModifiableObservableList().stream().filter(","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"            vendor -\u003e vendor.getVendorId().equals(vendorId)).findFirst();","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":14}},{"path":"src/main/java/seedu/address/model/vendor/Vendor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.uniquelist.UniqueListItem;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"public class Vendor extends UniqueListItem {","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    private final VendorId vendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    private final Name name;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    private final ServiceName serviceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    private final Address address;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    private final Email email;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    private final Phone phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    private final Cost cost;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    private final OperatingHours operatingHours;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"     * Creates a vendor.","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"     * @param name","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"     * @param email","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"     * @param tags","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"     * @param vendorId","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"     * @param phone","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"     * @param serviceName","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"     * @param address","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"     * @param cost","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"     * @param operatingHours","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    public Vendor(Name name, Email email, Set\u003cTag\u003e tags, VendorId vendorId, Phone phone,","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"                  ServiceName serviceName, Address address, Cost cost, OperatingHours operatingHours) {","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        requireAllNonNull(name, email, tags, vendorId, serviceName, address, cost, operatingHours);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        this.vendorId \u003d vendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        this.serviceName \u003d serviceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        this.cost \u003d cost;","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        this.operatingHours \u003d operatingHours;","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        return name;","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"    public Email getEmail() {","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        return email;","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    public VendorId getVendorId() {","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        return vendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"    public Phone getPhone() {","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        return phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"    public ServiceName getServiceName() {","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        return serviceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"    public Address getAddress() {","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        return address;","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"    public Cost getCost() {","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"        return cost;","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"    public OperatingHours getOperatingHours() {","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        return operatingHours;","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"    public void setTags(Set\u003cTag\u003e newTags) {","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"        tags \u003d newTags;","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"    public boolean isSame(UniqueListItem otherItem) {","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"        if (otherItem \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        if (otherItem instanceof Vendor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"            Vendor otherVendor \u003d (Vendor) otherItem;","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"            return otherVendor.getVendorId().equals(getVendorId());","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"        return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"        if (!(other instanceof Vendor)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"        Vendor otherVendor \u003d (Vendor) other;","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"        return otherVendor.getName().equals(getName())","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherVendor.getEmail().equals(getEmail())","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherVendor.getAddress().equals(getAddress())","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherVendor.getVendorId().equals(getVendorId())","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherVendor.getServiceName().equals(getServiceName())","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherVendor.getPhone().equals(getPhone())","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherVendor.getCost().equals(getCost())","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherVendor.getOperatingHours().equals(getOperatingHours())","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 otherVendor.getTags().equals(getTags());","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"        return Objects.hash(name, email, tags, address, serviceName, cost, operatingHours, vendorId, phone);","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"    public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"                .append(getEmail())","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"                .append(\"; Vendor ID: \")","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"                .append(getVendorId())","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"                .append(getPhone())","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"                .append(getAddress())","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"                .append(\"; Cost: \")","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"                .append(getCost())","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"                .append(\"; Operating Hours: \")","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"                .append(getOperatingHours())","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"                .append(\"; Service provided: \")","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"                .append(getServiceName());","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":174}},{"path":"src/main/java/seedu/address/model/vendor/VendorBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"public class VendorBook implements ReadOnlyVendorBook {","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    private final UniqueVendorList vendors;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    /*","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"     *   among constructors.","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    {","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"        vendors \u003d new UniqueVendorList();","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    public VendorBook() {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"     * Creates a Vendor Manager using the entities in the {@code toBeCopied}","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    public VendorBook(ReadOnlyVendorBook toBeCopied) {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        this();","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"     * Replaces the contents of the vendor list with {@code vendors}.","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"     * {@code vendors} must not contain duplicate vendors.","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    public void setVendors(List\u003cVendor\u003e vendors) {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        this.vendors.setItems(vendors);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"     * Resets the existing data of this {@code VendorBook} with {@code newData}.","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    public void resetData(ReadOnlyVendorBook newData) {","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        setVendors(newData.getVendorList());","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if a vendor with the same identity as {@code vendor} exists in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    public boolean hasVendor(Vendor vendor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(vendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        return vendors.contains(vendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"     * Adds a vendor to the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"     * The vendor must not already exist in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"    public void addVendor(Vendor p) {","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        vendors.add(p);","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"     * Replaces the given vendor {@code target} in the list with {@code editedVendor}.","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"     * The vendor identity of {@code editedVendor} must not be the same as another existing vendor in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"    public void setVendor(Vendor target, Vendor editedVendor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(editedVendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        vendors.setItem(target, editedVendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"     * Gets the given vendor in the list with the given vendorId.","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"     * If Vendor does not exist in the vendor book, then Optional is empty.","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"    public Optional\u003cVendor\u003e getVendor(VendorId vendorId) {","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(vendorId);","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        return vendors.get(vendorId);","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"     * Removes {@code key} from this {@code VendorBook}.","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"    public void removeVendor(Vendor key) {","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"        vendors.remove(key);","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"    public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"        return vendors.asUnmodifiableObservableList().size() + \"vendors\";","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"    public ObservableList\u003cVendor\u003e getVendorList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"        return vendors.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof VendorBook // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 vendors.equals(((VendorBook) other).vendors));","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"        return vendors.hashCode();","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":119}},{"path":"src/main/java/seedu/address/model/vendor/VendorId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"public class VendorId {","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"VendorID must be alphanumeric and non-empty.\";","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9_]+[a-zA-Z0-9_ ]*$\";","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    public final String value;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"     * Constructs an {@code VendorId}.","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"     * @param vendorId A valid vendorId","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    public VendorId(String vendorId) {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(vendorId);","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"        checkArgument(isValidVendorId(vendorId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"        this.value \u003d vendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"     * Returns true if a given string is a valid vendor ID.","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    public static boolean isValidVendorId(String vendorId) {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        return vendorId.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        return value;","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof VendorId // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 value.equals(((VendorId) other).value)); // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":46,"NicolasCwy":1}},{"path":"src/main/java/seedu/address/model/vendor/VendorIdContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":" * Tests that a {@code Vendor}\u0027s {@code VendorId} matches any of the keywords given.","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"public class VendorIdContainsKeywordsPredicate implements Predicate\u003cVendor\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    public VendorIdContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    public boolean test(Vendor vendor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(vendor.getVendorId().value, keyword));","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof VendorIdContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 keywords.equals(((VendorIdContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"calvintanwj":33}},{"path":"src/main/java/seedu/address/model/vendor/VendorPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":" * Tests that a {@code Vendor} matches the {@code VendorId}, {@code Phone}, {@code Name}, {@code Email},","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":" * {@code Address}, {@code ServiceName}, {@code Cost}, {@code OperatingHours}, and list of {@code Tag} given.","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"public class VendorPredicate implements Predicate\u003cVendor\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    private final Optional\u003cString\u003e vendorIdOptional;","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    private final Optional\u003cString\u003e phoneOptional;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    private final Optional\u003cString\u003e nameOptional;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    private final Optional\u003cString\u003e emailOptional;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    private final Optional\u003cSet\u003cTag\u003e\u003e tagsOptional;","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    private final Optional\u003cString\u003e addressOptional;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    private final Optional\u003cString\u003e serviceNameOptional;","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    private final Optional\u003cString\u003e costOptional;","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    private final Optional\u003cString\u003e operatingHoursOptional;","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"     * Creates a vendor predicate.","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"     * @param vendorIdOptional","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"     * @param phoneOptional","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"     * @param nameOptional","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"     * @param emailOptional","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"     * @param tagsOptional","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"     * @param addressOptional","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"     * @param serviceNameOptional","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"     * @param costOptional","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"     * @param operatingHoursOptional","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    public VendorPredicate(Optional\u003cString\u003e vendorIdOptional,","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"                           Optional\u003cString\u003e phoneOptional,","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"                           Optional\u003cString\u003e nameOptional,","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"                           Optional\u003cString\u003e emailOptional,","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"                           Optional\u003cSet\u003cTag\u003e\u003e tagsOptional,","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"                           Optional\u003cString\u003e addressOptional,","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"                           Optional\u003cString\u003e serviceNameOptional,","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"                           Optional\u003cString\u003e costOptional,","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"                           Optional\u003cString\u003e operatingHoursOptional) {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        requireAllNonNull(vendorIdOptional, phoneOptional, nameOptional, emailOptional, tagsOptional, addressOptional,","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"                serviceNameOptional, costOptional, operatingHoursOptional);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        if (tagsOptional.isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"            this.tagsOptional \u003d Optional.of(new HashSet\u003c\u003e(tagsOptional.get()));","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"            this.tagsOptional \u003d Optional.empty();","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        this.vendorIdOptional \u003d vendorIdOptional;","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        this.phoneOptional \u003d phoneOptional;","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        this.nameOptional \u003d nameOptional;","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        this.emailOptional \u003d emailOptional;","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        this.addressOptional \u003d addressOptional;","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        this.serviceNameOptional \u003d serviceNameOptional;","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        this.costOptional \u003d costOptional;","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        this.operatingHoursOptional \u003d operatingHoursOptional;","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"    public boolean test(Vendor vendor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(vendor);","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"        return testForEmail(vendor) \u0026\u0026 testForName(vendor) \u0026\u0026 testForTags(vendor) \u0026\u0026 testForPhone(vendor)","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 testForVendorId(vendor) \u0026\u0026 testForAddress(vendor) \u0026\u0026 testForCost(vendor)","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 testForServiceName(vendor) \u0026\u0026 testForOperatingHours(vendor);","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"    private boolean testForVendorId(Vendor vendor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"        if (vendorIdOptional.isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"            return vendorIdOptional.get().trim().toLowerCase().equals(vendor.getVendorId().value.toLowerCase());","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"    private boolean testForName(Vendor vendor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        if (nameOptional.isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"            String nameTested \u003d nameOptional.get().toLowerCase().trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"            String guestName \u003d vendor.getName().toString().toLowerCase();","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"            return guestName.contains(nameTested);","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"    private boolean testForEmail(Vendor vendor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"        if (emailOptional.isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"            String emailTested \u003d emailOptional.get().toLowerCase().trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"            String guestEmail \u003d vendor.getEmail().toString().toLowerCase();","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"            return guestEmail.contains(emailTested);","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"    private boolean testForPhone(Vendor vendor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        if (phoneOptional.isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"            return vendor.getPhone().value.indexOf(phoneOptional.get().trim()) \u003d\u003d 0;","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"    private boolean testForAddress(Vendor vendor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"        if (addressOptional.isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"            String addressTested \u003d addressOptional.get().toLowerCase().trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"            String vendorAddress \u003d vendor.getAddress().toString().toLowerCase();","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"            return vendorAddress.contains(addressTested);","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"    private boolean testForServiceName(Vendor vendor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"        if (serviceNameOptional.isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"            return serviceNameOptional.get().trim().toLowerCase().equals(","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"                    vendor.getServiceName().serviceName.toLowerCase());","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"    private boolean testForCost(Vendor vendor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"        if (costOptional.isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"            if (costOptional.get().contains(\"\u003c\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"                return (vendor.getCost().value \u003c Double.parseDouble(costOptional.get().replace(\"\u003c\", \"\").trim()));","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"            if (costOptional.get().contains(\"\u003e\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"                return (vendor.getCost().value \u003e Double.parseDouble(costOptional.get().replace(\"\u003e\", \"\").trim()));","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"            return Double.parseDouble(costOptional.get()) \u003d\u003d vendor.getCost().value;","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"    private boolean testForOperatingHours(Vendor vendor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"        if (operatingHoursOptional.isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"            LocalTime vendorStartTime \u003d vendor.getOperatingHours().startTime;","lastModifiedDate":"2021-10-30"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"            LocalTime vendorEndTime \u003d vendor.getOperatingHours().endTime;","lastModifiedDate":"2021-10-30"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"            List\u003cDayOfWeek\u003e vendorDays \u003d vendor.getOperatingHours().recurringDays;","lastModifiedDate":"2021-10-30"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"            if (operatingHoursOptional.get().trim().contains(\"-\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"                OperatingHours testOperatingHours \u003d parseOperatingHours(operatingHoursOptional.get());","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"                boolean dayTest \u003d isSubset(testOperatingHours.recurringDays,","lastModifiedDate":"2021-10-30"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"                        vendorDays);","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"                boolean timeTest \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"                        isBeforeOrEquals(testOperatingHours.startTime, vendorStartTime)","lastModifiedDate":"2021-11-02"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"                                \u0026\u0026 isAfterOrEquals(testOperatingHours.endTime, vendorStartTime);","lastModifiedDate":"2021-11-02"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"                boolean timeTest2 \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"                        isBeforeOrEquals(testOperatingHours.startTime, vendorEndTime)","lastModifiedDate":"2021-11-02"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"                                \u0026\u0026 isAfterOrEquals(testOperatingHours.startTime,","lastModifiedDate":"2021-11-02"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"                                vendorStartTime);","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"                return dayTest \u0026\u0026 (timeTest || timeTest2);","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"            if (operatingHoursOptional.get().trim().contains(\" \")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"                String trimmedOperatingHours \u003d operatingHoursOptional.get().trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"                String[] args \u003d trimmedOperatingHours.split(\"\\\\s+\");","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"                List\u003cDayOfWeek\u003e days \u003d parseDaysOfWeek(args[0]);","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"                LocalTime startTime \u003d parseStartTime(args[1]);","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"                boolean dayTest \u003d isSubset(days,","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"                        vendorDays);","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"                return dayTest \u0026\u0026 inBetween(startTime, vendor);","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"            if (operatingHoursOptional.get().trim().equals(\"now\")) {","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"                DayOfWeek day \u003d LocalDate.now().getDayOfWeek();","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"                LocalTime time \u003d LocalTime.now();","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"                return inBetween(time, vendor) \u0026\u0026 vendorDays.contains(day);","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"            return isSubset(parseDaysOfWeek(operatingHoursOptional.get()),","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"                    vendorDays);","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"calvintanwj"},"content":"        return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"calvintanwj"},"content":"    private static boolean inBetween(LocalTime time, Vendor vendor) {","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"calvintanwj"},"content":"        LocalTime vendorStartTime \u003d vendor.getOperatingHours().startTime;","lastModifiedDate":"2021-10-30"},{"lineNumber":193,"author":{"gitId":"calvintanwj"},"content":"        LocalTime vendorEndTime \u003d vendor.getOperatingHours().endTime;","lastModifiedDate":"2021-10-30"},{"lineNumber":194,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"        boolean timeTest \u003d time.isBefore(vendorEndTime)","lastModifiedDate":"2021-11-02"},{"lineNumber":196,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 time.isAfter(vendorStartTime);","lastModifiedDate":"2021-11-02"},{"lineNumber":197,"author":{"gitId":"calvintanwj"},"content":"        boolean timeTest2 \u003d time.equals(vendorStartTime)","lastModifiedDate":"2021-11-02"},{"lineNumber":198,"author":{"gitId":"calvintanwj"},"content":"                || time.equals(vendorEndTime);","lastModifiedDate":"2021-11-02"},{"lineNumber":199,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"calvintanwj"},"content":"        return timeTest || timeTest2;","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"calvintanwj"},"content":"    private static boolean isBeforeOrEquals(LocalTime time1, LocalTime time2) {","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"calvintanwj"},"content":"        return time1.isBefore(time2) || time1.equals(time2);","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"calvintanwj"},"content":"    private static boolean isAfterOrEquals(LocalTime time1, LocalTime time2) {","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"calvintanwj"},"content":"        return time1.isAfter(time2) || time1.equals(time2);","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"calvintanwj"},"content":"    private boolean isSubset(List\u003cDayOfWeek\u003e list1, List\u003cDayOfWeek\u003e list2) {","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"calvintanwj"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"calvintanwj"},"content":"        int j \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"calvintanwj"},"content":"        for (i \u003d 0; i \u003c list1.size(); i++) {","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"calvintanwj"},"content":"            for (j \u003d 0; j \u003c list2.size(); j++) {","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"calvintanwj"},"content":"                if (list1.get(i).equals(list2.get(j))) {","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"calvintanwj"},"content":"                    break;","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"calvintanwj"},"content":"                }","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"calvintanwj"},"content":"            if (j \u003d\u003d list2.size()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"calvintanwj"},"content":"                return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"calvintanwj"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":226,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":227,"author":{"gitId":"calvintanwj"},"content":"    private static OperatingHours parseOperatingHours(String operatingHours) {","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"calvintanwj"},"content":"        String trimmedOperatingHours \u003d operatingHours.trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"calvintanwj"},"content":"        String[] args \u003d trimmedOperatingHours.split(\"\\\\s+\");","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"calvintanwj"},"content":"        String days \u003d args[0];","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"calvintanwj"},"content":"        LocalTime startTime \u003d parseStartTime(args[1].split(\"-\")[0]);","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"calvintanwj"},"content":"        LocalTime endTime \u003d parseEndTime(args[1].split(\"-\")[1]);","lastModifiedDate":"2021-10-27"},{"lineNumber":233,"author":{"gitId":"calvintanwj"},"content":"        List\u003cDayOfWeek\u003e operatingDays \u003d parseDaysOfWeek(days);","lastModifiedDate":"2021-10-27"},{"lineNumber":234,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"calvintanwj"},"content":"        return new OperatingHours(startTime, endTime, operatingDays, trimmedOperatingHours);","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"calvintanwj"},"content":"    private static LocalTime parseStartTime(String startTimeString) {","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"calvintanwj"},"content":"        Integer startTimeHour \u003d Integer.parseInt(startTimeString.substring(0, 2));","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"calvintanwj"},"content":"        Integer startTimeMinutes \u003d Integer.parseInt(startTimeString.substring(2));","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"calvintanwj"},"content":"        return LocalTime.of(startTimeHour, startTimeMinutes);","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"calvintanwj"},"content":"    private static LocalTime parseEndTime(String endTimeString) {","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"calvintanwj"},"content":"        Integer endTimeHour \u003d Integer.parseInt(endTimeString.substring(0, 2));","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"calvintanwj"},"content":"        Integer endTimeMinutes \u003d Integer.parseInt(endTimeString.substring(2));","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"calvintanwj"},"content":"        return LocalTime.of(endTimeHour, endTimeMinutes);","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"calvintanwj"},"content":"    private static List\u003cDayOfWeek\u003e parseDaysOfWeek(String daysofWeek) {","lastModifiedDate":"2021-10-27"},{"lineNumber":253,"author":{"gitId":"calvintanwj"},"content":"        String trimmedDaysOfWeek \u003d daysofWeek.trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"calvintanwj"},"content":"        List\u003cDayOfWeek\u003e operatingDays \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":256,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"calvintanwj"},"content":"        for (int i \u003d 0; i \u003c trimmedDaysOfWeek.length(); i++) {","lastModifiedDate":"2021-10-27"},{"lineNumber":258,"author":{"gitId":"calvintanwj"},"content":"            DayOfWeek day \u003d DayOfWeek.of(Character.getNumericValue(trimmedDaysOfWeek.charAt(i)));","lastModifiedDate":"2021-10-27"},{"lineNumber":259,"author":{"gitId":"calvintanwj"},"content":"            if (!operatingDays.contains(day)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"calvintanwj"},"content":"                operatingDays.add(day);","lastModifiedDate":"2021-10-27"},{"lineNumber":261,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":262,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":264,"author":{"gitId":"calvintanwj"},"content":"        operatingDays.sort(new Comparator\u003cDayOfWeek\u003e() {","lastModifiedDate":"2021-10-27"},{"lineNumber":265,"author":{"gitId":"calvintanwj"},"content":"            public int compare(DayOfWeek d1, DayOfWeek d2) {","lastModifiedDate":"2021-10-27"},{"lineNumber":266,"author":{"gitId":"calvintanwj"},"content":"                return d1.compareTo(d2);","lastModifiedDate":"2021-10-27"},{"lineNumber":267,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":268,"author":{"gitId":"calvintanwj"},"content":"        });","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"calvintanwj"},"content":"        return operatingDays;","lastModifiedDate":"2021-10-27"},{"lineNumber":271,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"calvintanwj"},"content":"    private boolean testForTags(Vendor vendor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":274,"author":{"gitId":"calvintanwj"},"content":"        if (tagsOptional.isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":275,"author":{"gitId":"calvintanwj"},"content":"            List\u003cString\u003e vendorTagStrings \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":276,"author":{"gitId":"calvintanwj"},"content":"                    vendor.getTags().stream().map(tag -\u003e tag.tagName).collect(Collectors.toList());","lastModifiedDate":"2021-10-30"},{"lineNumber":277,"author":{"gitId":"calvintanwj"},"content":"            return tagsOptional.get().stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":278,"author":{"gitId":"calvintanwj"},"content":"                    .anyMatch(tag -\u003e vendorTagStrings.contains(StringUtil.capitalizeFirstLetter(tag.tagName.trim())));","lastModifiedDate":"2021-10-30"},{"lineNumber":279,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":280,"author":{"gitId":"calvintanwj"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":281,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":282,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":283,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":284,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":285,"author":{"gitId":"calvintanwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":286,"author":{"gitId":"calvintanwj"},"content":"                || (other instanceof VendorPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":287,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 emailOptional.equals(((VendorPredicate) other).emailOptional)","lastModifiedDate":"2021-10-25"},{"lineNumber":288,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 nameOptional.equals(((VendorPredicate) other).nameOptional)","lastModifiedDate":"2021-10-25"},{"lineNumber":289,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 phoneOptional.equals(((VendorPredicate) other).phoneOptional)","lastModifiedDate":"2021-10-25"},{"lineNumber":290,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 vendorIdOptional.equals(((VendorPredicate) other).vendorIdOptional)","lastModifiedDate":"2021-10-25"},{"lineNumber":291,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 addressOptional.equals(((VendorPredicate) other).addressOptional)","lastModifiedDate":"2021-10-25"},{"lineNumber":292,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 serviceNameOptional.equals(((VendorPredicate) other).serviceNameOptional)","lastModifiedDate":"2021-10-25"},{"lineNumber":293,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 costOptional.equals(((VendorPredicate) other).costOptional)","lastModifiedDate":"2021-10-25"},{"lineNumber":294,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 operatingHoursOptional.equals(((VendorPredicate) other).operatingHoursOptional)","lastModifiedDate":"2021-10-25"},{"lineNumber":295,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 tagsOptional.equals(((VendorPredicate) other).tagsOptional)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":296,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":297,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":298,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"calvintanwj":298}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedChargeable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.chargeable.Chargeable;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.chargeable.Quantity;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.vendor.Cost;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.vendor.ServiceName;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":" * Jackson-friendly version of {@link Chargeable}.","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"public class JsonAdaptedChargeable {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Chargable\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"    private final String vendorId;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"    private final String name;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"    private final String serviceName;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"    private final Double cost;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"    private final Integer quantity;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"     * Constructs a {@code JsonAdaptedChargeable} with the given person details.","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"    public JsonAdaptedChargeable(@JsonProperty(\"vendorId\") String vendorId,","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"                                 @JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"                                 @JsonProperty(\"serviceName\") String serviceName,","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"                                 @JsonProperty(\"cost\") Double cost,","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"                                 @JsonProperty(\"quantity\") Integer quantity) {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"        this.vendorId \u003d vendorId;","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"bingcheng45"},"content":"        this.serviceName \u003d serviceName;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"        this.cost \u003d cost;","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"     * Converts a given {@code Chargeable} into this class for Jackson use.","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"    public JsonAdaptedChargeable(Chargeable source) {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"        vendorId \u003d source.getVendorId().value;","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"        serviceName \u003d source.getServiceName().serviceName;","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"        cost \u003d source.getCost().value;","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"        quantity \u003d source.getQuantity().value;","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"    public String getVendorId() {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"        return vendorId;","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"bingcheng45"},"content":"    public String getName() {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"        return name;","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"bingcheng45"},"content":"    public String getServiceName() {","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"bingcheng45"},"content":"        return serviceName;","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"bingcheng45"},"content":"    public Double getCost() {","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"bingcheng45"},"content":"        return cost;","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"bingcheng45"},"content":"    public Integer getQuantity() {","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"        return quantity;","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"bingcheng45"},"content":"     * Converts this Jackson-friendly adapted vendor object into the model\u0027s {@code Vendor} object.","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"bingcheng45"},"content":"    // @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"bingcheng45"},"content":"    public Chargeable toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"bingcheng45"},"content":"        if (vendorId \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"bingcheng45"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, VendorId.class.getSimpleName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"bingcheng45"},"content":"        if (!VendorId.isValidVendorId(vendorId)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(VendorId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"bingcheng45"},"content":"        final VendorId modelVendorId \u003d new VendorId(vendorId);","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"bingcheng45"},"content":"        if (getName() \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"bingcheng45"},"content":"        if (!Name.isValidName(getName())) {","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"bingcheng45"},"content":"        final Name modelName \u003d new Name(getName());","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"bingcheng45"},"content":"        if (getCost() \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Cost.class.getSimpleName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"bingcheng45"},"content":"        if (!Cost.isValidCost(cost)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(Cost.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"bingcheng45"},"content":"        final Cost modelCost \u003d new Cost(cost);","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"bingcheng45"},"content":"        if (getServiceName() \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, ServiceName.class.getSimpleName()));","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"bingcheng45"},"content":"        if (!ServiceName.isValidServiceName(serviceName)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(ServiceName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"bingcheng45"},"content":"        final ServiceName modelServiceName \u003d new ServiceName(serviceName);","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"bingcheng45"},"content":"        if (getQuantity() \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Quantity.class.getSimpleName()));","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"bingcheng45"},"content":"        if (!Quantity.isValidQuantity(quantity)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(Quantity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"bingcheng45"},"content":"        final Quantity modelQuantity \u003d new Quantity(quantity);","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"bingcheng45"},"content":"        return new Chargeable(modelVendorId, modelName, modelServiceName, modelCost, modelQuantity);","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"calvintanwj":7,"bingcheng45":123}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"public class JsonAdaptedTag {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"bingcheng45"},"content":"                || (other instanceof JsonAdaptedTag // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"                \u0026\u0026 tagName.equals(((JsonAdaptedTag) other).getTagName())); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"        return Objects.hash(tagName);","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"calvintanwj":3,"bingcheng45":12,"-":47}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.storage.archive.ArchiveStorage;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.guest.GuestBookStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.vendor.VendorBookStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"public interface Storage extends GuestBookStorage, VendorBookStorage, UserPrefsStorage, ArchiveStorage {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    Path getGuestBookFilePath();","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    Optional\u003cReadOnlyGuestBook\u003e readGuestBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    void saveGuestBook(ReadOnlyGuestBook guestManager) throws IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"rgbpokka":2,"calvintanwj":6,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ReadOnlyVendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.storage.archive.ArchiveStorage;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.guest.GuestBookStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.vendor.VendorBookStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":" * Manages storage of PH data in local storage.","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    private GuestBookStorage guestBookStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"    private VendorBookStorage vendorBookStorage;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"    private ArchiveStorage archiveStorage;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public StorageManager(GuestBookStorage guestBookStorage, VendorBookStorage vendorBookStorage,","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"                          UserPrefsStorage userPrefsStorage, ArchiveStorage archiveStorage) {","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        this.guestBookStorage \u003d guestBookStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        this.vendorBookStorage \u003d vendorBookStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"        this.archiveStorage \u003d archiveStorage;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d GuestBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    public Path getGuestBookFilePath() {","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        return guestBookStorage.getGuestBookFilePath();","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    public Optional\u003cReadOnlyGuestBook\u003e readGuestBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        return readGuestBook(guestBookStorage.getGuestBookFilePath());","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    public Optional\u003cReadOnlyGuestBook\u003e readGuestBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        return guestBookStorage.readGuestBook(filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"    public void saveGuestBook(ReadOnlyGuestBook guestManager) throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"        saveGuestBook(guestManager, guestBookStorage.getGuestBookFilePath());","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"    public void saveGuestBook(ReadOnlyGuestBook guestManager, Path filePath) throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"        guestBookStorage.saveGuestBook(guestManager, filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"rgbpokka"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ArchiveStorage methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"rgbpokka"},"content":"    public Path getArchiveFilePath() {","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"rgbpokka"},"content":"        return archiveStorage.getArchiveFilePath();","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"rgbpokka"},"content":"    public Optional\u003cReadOnlyGuestBook\u003e readArchive() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"rgbpokka"},"content":"        return readArchive(archiveStorage.getArchiveFilePath());","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"rgbpokka"},"content":"    public Optional\u003cReadOnlyGuestBook\u003e readArchive(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"rgbpokka"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"rgbpokka"},"content":"        return archiveStorage.readArchive(filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"rgbpokka"},"content":"    public void saveArchive(ReadOnlyGuestBook guestManager) throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"rgbpokka"},"content":"        saveArchive(guestManager, archiveStorage.getArchiveFilePath());","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"rgbpokka"},"content":"    public void saveArchive(ReadOnlyGuestBook guestManager, Path filePath) throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"rgbpokka"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"rgbpokka"},"content":"        archiveStorage.saveArchive(guestManager, filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d VendorBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"    public Path getVendorBookFilePath() {","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"        return vendorBookStorage.getVendorBookFilePath();","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"    public Optional\u003cReadOnlyVendorBook\u003e readVendorBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"        return readVendorBook(vendorBookStorage.getVendorBookFilePath());","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"    public Optional\u003cReadOnlyVendorBook\u003e readVendorBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"        return vendorBookStorage.readVendorBook(filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"    public void saveVendorBook(ReadOnlyVendorBook vendorManager) throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"        saveVendorBook(vendorManager, vendorBookStorage.getVendorBookFilePath());","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"    public void saveVendorBook(ReadOnlyVendorBook vendorManager, Path filePath) throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"        vendorBookStorage.saveVendorBook(vendorManager, filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rgbpokka":33,"calvintanwj":50,"-":63}},{"path":"src/main/java/seedu/address/storage/archive/ArchiveStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rgbpokka"},"content":"package seedu.address.storage.archive;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"rgbpokka"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"rgbpokka"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"rgbpokka"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"rgbpokka"},"content":"public interface ArchiveStorage {","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"    Path getArchiveFilePath();","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"     * Returns guest data as a {@link ReadOnlyGuestBook}.","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"rgbpokka"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"rgbpokka"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"    Optional\u003cReadOnlyGuestBook\u003e readArchive() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"     * @see #getArchiveFilePath()","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"    Optional\u003cReadOnlyGuestBook\u003e readArchive(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"rgbpokka"},"content":"     * Saves the given {@link ReadOnlyGuestBook} to the storage.","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"     * @param archive cannot be null.","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"rgbpokka"},"content":"    void saveArchive(ReadOnlyGuestBook archive) throws IOException;","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"     * @see #saveArchive(ReadOnlyGuestBook)","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"rgbpokka"},"content":"    void saveArchive(ReadOnlyGuestBook guestBook, Path filePath) throws IOException;","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"rgbpokka":43}},{"path":"src/main/java/seedu/address/storage/archive/JsonArchiveStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rgbpokka"},"content":"package seedu.address.storage.archive;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"rgbpokka"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"rgbpokka"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"rgbpokka"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"rgbpokka"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"rgbpokka"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.storage.guest.JsonSerializableGuestBook;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"public class JsonArchiveStorage implements ArchiveStorage {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"rgbpokka"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonArchiveStorage.class);","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"    private Path filePath;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"    public JsonArchiveStorage(Path filePath) {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"    public Path getArchiveFilePath() {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"        return filePath;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"    public Optional\u003cReadOnlyGuestBook\u003e readArchive() throws DataConversionException {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"        return readArchive(filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"     * Similar to {@link #readArchive()}.","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"rgbpokka"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"rgbpokka"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"rgbpokka"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"    public Optional\u003cReadOnlyGuestBook\u003e readArchive(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"rgbpokka"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"rgbpokka"},"content":"        Optional\u003cJsonSerializableGuestBook\u003e jsonGuestManager \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"                filePath, JsonSerializableGuestBook.class);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"        if (!jsonGuestManager.isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"rgbpokka"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"rgbpokka"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"rgbpokka"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"rgbpokka"},"content":"            return Optional.of(jsonGuestManager.get().toModelType());","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"rgbpokka"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"rgbpokka"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"    public void saveArchive(ReadOnlyGuestBook guestManager) throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"rgbpokka"},"content":"        saveArchive(guestManager, filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"     * Similar to {@link #saveArchive(ReadOnlyGuestBook)}.","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"rgbpokka"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"rgbpokka"},"content":"    public void saveArchive(ReadOnlyGuestBook guestManager, Path filePath) throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"rgbpokka"},"content":"        requireNonNull(guestManager);","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"rgbpokka"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"rgbpokka"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"rgbpokka"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableGuestBook(guestManager), filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"rgbpokka"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"rgbpokka":77}},{"path":"src/main/java/seedu/address/storage/guest/GuestBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.storage.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"public interface GuestBookStorage {","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    Path getGuestBookFilePath();","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"     * Returns guest data as a {@link ReadOnlyGuestBook}.","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    Optional\u003cReadOnlyGuestBook\u003e readGuestBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"     * @see #getGuestBookFilePath()","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    Optional\u003cReadOnlyGuestBook\u003e readGuestBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"     * Saves the given {@link ReadOnlyGuestBook} to the storage.","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"     * @param guestBook cannot be null.","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    void saveGuestBook(ReadOnlyGuestBook guestBook) throws IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"     * @see #saveGuestBook(ReadOnlyGuestBook)","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    void saveGuestBook(ReadOnlyGuestBook guestBook, Path filePath) throws IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":45}},{"path":"src/main/java/seedu/address/storage/guest/JsonAdaptedGuest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.storage.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.chargeable.Chargeable;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.RoomNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.storage.JsonAdaptedChargeable;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.JsonAdaptedTag;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":" * Jackson-friendly version of {@link Guest}.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"class JsonAdaptedGuest {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Guest\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"    private final String name;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"    private final String email;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    private final String roomNumber;","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    private final String passportNumber;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"    private final List\u003cJsonAdaptedChargeable\u003e chargeablesUsed \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"     * Constructs a {@code JsonAdaptedGuest} with the given person details.","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    public JsonAdaptedGuest(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                            @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"                            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"                            @JsonProperty(\"roomNumber\") String roomNumber,","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"                            @JsonProperty(\"passportNumber\") String passportNumber,","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"                            @JsonProperty(\"chargeablesUsed\") List\u003cJsonAdaptedChargeable\u003e chargeablesUsed) {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        this.roomNumber \u003d roomNumber;","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        this.passportNumber \u003d passportNumber;","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"        if (chargeablesUsed !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"            this.chargeablesUsed.addAll(chargeablesUsed);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"     * Converts a given {@code Guest} into this class for Jackson use.","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    public JsonAdaptedGuest(Guest source) {","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"bingcheng45"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"bingcheng45"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"bingcheng45"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"bingcheng45"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"bingcheng45"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        roomNumber \u003d source.getRoomNumber().value;","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        passportNumber \u003d source.getPassportNumber().value;","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"bingcheng45"},"content":"        chargeablesUsed.addAll(source.getChargeableUsed().stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"                .map(JsonAdaptedChargeable::new)","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"bingcheng45"},"content":"    public String getName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"bingcheng45"},"content":"        return name;","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"bingcheng45"},"content":"    public String getEmail() {","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"bingcheng45"},"content":"        return email;","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"bingcheng45"},"content":"    public List\u003cJsonAdaptedTag\u003e getTags() {","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"bingcheng45"},"content":"        return tagged;","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"bingcheng45"},"content":"    public List\u003cJsonAdaptedChargeable\u003e getChargeablesUsed() {","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"bingcheng45"},"content":"        return chargeablesUsed;","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"bingcheng45"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"bingcheng45"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"bingcheng45"},"content":"    // @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"bingcheng45"},"content":"    public Guest toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"bingcheng45"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"        for (JsonAdaptedTag tag : getTags()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"bingcheng45"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"bingcheng45"},"content":"        final List\u003cChargeable\u003e modelChargeableUsed \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"bingcheng45"},"content":"        for (JsonAdaptedChargeable chargeable : getChargeablesUsed()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"bingcheng45"},"content":"            modelChargeableUsed.add(chargeable.toModelType());","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        if (getName() \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"        if (!Name.isValidName(getName())) {","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"        final Name modelName \u003d new Name(getName());","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"        if (getEmail() \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"        if (!Email.isValidEmail(getEmail())) {","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"        final Email modelEmail \u003d new Email(getEmail());","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"        if (roomNumber \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, RoomNumber.class.getSimpleName()));","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"        if (!RoomNumber.isValidRoomNumber(roomNumber)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(RoomNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"        final RoomNumber modelRoomNumber \u003d new RoomNumber(roomNumber);","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"        if (passportNumber \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, PassportNumber.class.getSimpleName()));","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"        if (!PassportNumber.isValidPassportNumber(passportNumber)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(PassportNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"        final PassportNumber modelPassportNumber \u003d new PassportNumber(passportNumber);","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"bingcheng45"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"bingcheng45"},"content":"        return new Guest(modelName, modelEmail, modelTags, modelRoomNumber, modelPassportNumber, modelChargeableUsed);","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"calvintanwj":50,"bingcheng45":97}},{"path":"src/main/java/seedu/address/storage/guest/JsonGuestBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.storage.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"public class JsonGuestBookStorage implements GuestBookStorage {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonGuestBookStorage.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    private Path filePath;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    public JsonGuestBookStorage(Path filePath) {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    public Path getGuestBookFilePath() {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        return filePath;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public Optional\u003cReadOnlyGuestBook\u003e readGuestBook() throws DataConversionException {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        return readGuestBook(filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"     * Similar to {@link #readGuestBook()}.","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    public Optional\u003cReadOnlyGuestBook\u003e readGuestBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        Optional\u003cJsonSerializableGuestBook\u003e jsonGuestManager \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"                filePath, JsonSerializableGuestBook.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        if (!jsonGuestManager.isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"            return Optional.of(jsonGuestManager.get().toModelType());","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    public void saveGuestBook(ReadOnlyGuestBook guestManager) throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        saveGuestBook(guestManager, filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"     * Similar to {@link #saveGuestBook(ReadOnlyGuestBook)}.","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    public void saveGuestBook(ReadOnlyGuestBook guestManager, Path filePath) throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(guestManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableGuestBook(guestManager), filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":78}},{"path":"src/main/java/seedu/address/storage/guest/JsonSerializableGuestBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.storage.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":" * An Immutable GuestBook() that is serializable to JSON format.","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"@JsonRootName(value \u003d \"guestBook\")","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"public class JsonSerializableGuestBook {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_DUPLICATE_GUEST \u003d \"Guest list contains duplicate guest(s).\";","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    private final List\u003cJsonAdaptedGuest\u003e guests \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"     * Constructs a {@code JsonSerializableGuestBook} with the given guests.","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"     * The json property here reads from the guests.json for the header staff","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    public JsonSerializableGuestBook(@JsonProperty(\"guests\") List\u003cJsonAdaptedGuest\u003e guests) {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        this.guests.addAll(guests);","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"     * Converts a given {@code ReadOnlyGuestBook} into this class for Jackson use.","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"     * This code saves the data in this format","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableGuestBook}.","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    public JsonSerializableGuestBook(ReadOnlyGuestBook source) {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        guests.addAll(source.getGuestList().stream().map(","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"                JsonAdaptedGuest::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"     * Converts this address book into the model\u0027s {@code GuestBook} object.","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"     * This code loads the data into the system.","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    public GuestBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        GuestBook guestBook \u003d new GuestBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        for (JsonAdaptedGuest jsonAdaptedGuest : guests) {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"            Guest guest \u003d jsonAdaptedGuest.toModelType();","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"            if (guestBook.hasGuest(guest)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"            guestBook.addGuest(guest);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        return guestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":64}},{"path":"src/main/java/seedu/address/storage/vendor/JsonAdaptedVendor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.storage.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Address;","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Cost;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.OperatingHours;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ServiceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.JsonAdaptedTag;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":" * Jackson-friendly version of {@link Vendor}.","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"public class JsonAdaptedVendor {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Vendor\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"    private final String name;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"    private final String email;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"    private final String phone;","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"    private final String address;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    private final String vendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    private final String serviceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    private final Double cost;","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    private final String operatingHours;","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    public JsonAdaptedVendor(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"                             @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"                             @JsonProperty(\"vendorId\") String vendorId,","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"                             @JsonProperty(\"serviceName\") String serviceName,","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"                             @JsonProperty(\"cost\") Double cost,","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"                             @JsonProperty(\"operatingHours\") String operatingHours) {","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"bingcheng45"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        this.vendorId \u003d vendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        this.serviceName \u003d serviceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        this.cost \u003d cost;","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        this.operatingHours \u003d operatingHours;","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"     * Converts a given {@code Vendor} into this class for Jackson use.","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    public JsonAdaptedVendor(Vendor source) {","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"bingcheng45"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"bingcheng45"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"bingcheng45"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"bingcheng45"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        vendorId \u003d source.getVendorId().value;","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"        serviceName \u003d source.getServiceName().serviceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        cost \u003d source.getCost().value;","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        operatingHours \u003d source.getOperatingHours().operatingHoursStringRep;","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"bingcheng45"},"content":"    public String getName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"bingcheng45"},"content":"        return name;","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"bingcheng45"},"content":"    public String getEmail() {","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"bingcheng45"},"content":"        return email;","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"bingcheng45"},"content":"    public List\u003cJsonAdaptedTag\u003e getTags() {","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"bingcheng45"},"content":"        return tagged;","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"bingcheng45"},"content":"    public String getServiceName() {","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"bingcheng45"},"content":"        return serviceName;","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"bingcheng45"},"content":"    public Double getCost() {","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"bingcheng45"},"content":"        return cost;","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"bingcheng45"},"content":"    public String getOperatingHours() {","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"bingcheng45"},"content":"        return operatingHours;","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"     * Converts this Jackson-friendly adapted vendor object into the model\u0027s {@code Vendor} object.","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"bingcheng45"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"bingcheng45"},"content":"    // @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"    public Vendor toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"bingcheng45"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"        for (JsonAdaptedTag tag : getTags()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"bingcheng45"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"        if (getName() \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"        if (!Name.isValidName(getName())) {","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"        final Name modelName \u003d new Name(getName());","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"        if (getEmail() \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"        if (!Email.isValidEmail(getEmail())) {","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"        final Email modelEmail \u003d new Email(getEmail());","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"bingcheng45"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"bingcheng45"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"bingcheng45"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"        if (vendorId \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, VendorId.class.getSimpleName()));","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"        if (!VendorId.isValidVendorId(vendorId)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(VendorId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"        final VendorId modelVendorId \u003d new VendorId(vendorId);","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"bingcheng45"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"bingcheng45"},"content":"        if (getCost() \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"bingcheng45"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Cost.class.getSimpleName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"        if (!Cost.isValidCost(cost)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(Cost.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"        final Cost modelCost \u003d new Cost(cost);","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"bingcheng45"},"content":"        if (getServiceName() \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-11-02"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, ServiceName.class.getSimpleName()));","lastModifiedDate":"2021-11-02"},{"lineNumber":177,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"        if (!ServiceName.isValidServiceName(serviceName)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(ServiceName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"        final ServiceName modelServiceName \u003d new ServiceName(serviceName);","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"bingcheng45"},"content":"        if (getOperatingHours() \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-11-02"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, OperatingHours.class.getSimpleName()));","lastModifiedDate":"2021-11-02"},{"lineNumber":187,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"calvintanwj"},"content":"        if (!OperatingHours.isValidOperatingHours(operatingHours)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"            throw new IllegalValueException(OperatingHours.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"calvintanwj"},"content":"        final OperatingHours modelOperatingHours \u003d ParserUtil.parseOperatingHours(operatingHours);","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"calvintanwj"},"content":"        return new Vendor(modelName, modelEmail, modelTags, modelVendorId, modelPhone, modelServiceName, modelAddress,","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"                modelCost, modelOperatingHours);","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":198,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"calvintanwj":93,"bingcheng45":105}},{"path":"src/main/java/seedu/address/storage/vendor/JsonSerializableVendorBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.storage.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ReadOnlyVendorBook;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":" * An Immutable VendorBook() that is serializable to JSON format.","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"@JsonRootName(value \u003d \"vendorBook\")","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"public class JsonSerializableVendorBook {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    public static final String MESSAGE_DUPLICATE_VENDOR \u003d \"Vendor list contains duplicate vendor(s).\";","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    private final List\u003cJsonAdaptedVendor\u003e vendors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"     * Constructs a {@code JsonSerializableVendorBook} with the given vendors.","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"     * The json property here reads from the vendors.json for the header staff","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    public JsonSerializableVendorBook(@JsonProperty(\"vendors\") List\u003cJsonAdaptedVendor\u003e vendors) {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        this.vendors.addAll(vendors);","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"     * Converts a given {@code ReadOnlyVendorBook} into this class for Jackson use.","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"     * This code saves the data in this format","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableVendorBook}.","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    public JsonSerializableVendorBook(ReadOnlyVendorBook source) {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        vendors.addAll(source.getVendorList().stream().map(","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"                JsonAdaptedVendor::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"     * Converts this address book into the model\u0027s {@code VendorBook} object.","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"     * This code loads the data into the system.","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    public VendorBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        VendorBook vendorManager \u003d new VendorBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        for (JsonAdaptedVendor jsonAdaptedVendor : vendors) {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"            Vendor vendor \u003d jsonAdaptedVendor.toModelType();","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"            if (vendorManager.hasVendor(vendor)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_VENDOR);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"            vendorManager.addVendor(vendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        return vendorManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":64}},{"path":"src/main/java/seedu/address/storage/vendor/JsonVendorBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.storage.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ReadOnlyVendorBook;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"public class JsonVendorBookStorage implements VendorBookStorage {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonVendorBookStorage.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    public JsonVendorBookStorage(Path filePath) {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    public Path getVendorBookFilePath() {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public Optional\u003cReadOnlyVendorBook\u003e readVendorBook() throws DataConversionException {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        return readVendorBook(filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"     * Similar to {@link #readVendorBook()}.","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    public Optional\u003cReadOnlyVendorBook\u003e readVendorBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        Optional\u003cJsonSerializableVendorBook\u003e jsonVendorManager \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"                filePath, JsonSerializableVendorBook.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        if (!jsonVendorManager.isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"            return Optional.of(jsonVendorManager.get().toModelType());","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    public void saveVendorBook(ReadOnlyVendorBook vendorManager) throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        saveVendorBook(vendorManager, filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"     * Similar to {@link #saveVendorBook(ReadOnlyVendorBook)}.","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    public void saveVendorBook(ReadOnlyVendorBook vendorManager, Path filePath) throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        requireNonNull(vendorManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableVendorBook(vendorManager), filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":22,"-":57}},{"path":"src/main/java/seedu/address/storage/vendor/VendorBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.storage.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ReadOnlyVendorBook;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"public interface VendorBookStorage {","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    Path getVendorBookFilePath();","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"     * Returns vendor data as a {@link ReadOnlyVendorBook}.","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    Optional\u003cReadOnlyVendorBook\u003e readVendorBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"     * @see #getVendorBookFilePath()","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    Optional\u003cReadOnlyVendorBook\u003e readVendorBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"     * Saves the given {@link ReadOnlyVendorBook} to the storage.","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"     * @param vendorBook cannot be null.","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    void saveVendorBook(ReadOnlyVendorBook vendorBook) throws IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"     * @see #saveVendorBook(ReadOnlyVendorBook)","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    void saveVendorBook(ReadOnlyVendorBook vendorBook, Path filePath) throws IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":45}},{"path":"src/main/java/seedu/address/ui/GuestCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":" * An UI component that displays information of a {@code Guest}.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"public class GuestCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    private static final String FXML \u003d \"GuestCard.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    public final Guest guest;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    private Label name;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    private Label email;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    private Label roomNumber;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    private Label passportNumber;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    private ImageView roomNumberIcon;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    private ImageView emailIcon;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    private ImageView passportNumberIcon;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"     * Creates a {@code GuestCode} with the given {@code Guest} and index to display.","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"    public GuestCard(Guest guest) {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        super(FXML);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        this.guest \u003d guest;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        passportNumber.setText(\"[\" + guest.getPassportNumber().value + \"]\");","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        name.setText(guest.getName().fullName);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        email.setText(\" \" + guest.getEmail().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        roomNumber.setText(\" \" + guest.getRoomNumber().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        passportNumberIcon.setImage(new Image(getClass().getResourceAsStream(\"/images/passport_number_icon.png\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        emailIcon.setImage(new Image(getClass().getResourceAsStream(\"/images/email_icon.png\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        roomNumberIcon.setImage(new Image(getClass().getResourceAsStream(\"/images/room_number_icon.png\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        guest.getTags().stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        if (!(other instanceof GuestCard)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        GuestCard card \u003d (GuestCard) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        return passportNumber.getText().equals(card.passportNumber.getText())","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 guest.equals(card.guest);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"calvintanwj":87}},{"path":"src/main/java/seedu/address/ui/GuestListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"public class GuestListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    public static final String TAB_NAME \u003d \"Guests\";","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    private static final String FXML \u003d \"GuestListPanel.fxml\";","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(GuestListPanel.class);","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    private ListView\u003cGuest\u003e guestListView;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"     * Creates a {@code GuestListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    public GuestListPanel(ObservableList\u003cGuest\u003e guestList) {","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        super(FXML);","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        guestListView.setItems(guestList);","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        guestListView.setCellFactory(listView -\u003e new GuestListViewCell());","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Guest} using a {@code GuestCard}.","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    class GuestListViewCell extends ListCell\u003cGuest\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        protected void updateItem(Guest guest, boolean empty) {","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"            super.updateItem(guest, empty);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"            if (empty || guest \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"                setText(null);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"            } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"                setGraphic(new GuestCard(guest).getRoot());","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":51}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"NicolasCwy"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-w12-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"NicolasCwy":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.control.ToggleButton;","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    private GuestListPanel guestListPanel;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    private VendorListPanel vendorListPanel;","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    private StackPane listPanelPlaceholder;","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    private StackPane tabPanelPlaceholder;","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    private ToggleButton guests;","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"    private ToggleButton vendors;","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"    private void handleClickVendorTab() {","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"        toggleTab(VendorListPanel.TAB_NAME);","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"    private void handleClickGuestTab() {","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"        toggleTab(GuestListPanel.TAB_NAME);","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"        guestListPanel \u003d new GuestListPanel(logic.getFilteredGuestList());","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"        vendorListPanel \u003d new VendorListPanel(logic.getFilteredVendorList());","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"        toggleTab(GuestListPanel.TAB_NAME);","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getGuestBookFilePath());","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"    private void toggleTab(String tabName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"        listPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"        statusbarPlaceholder.getChildren().clear();","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"        switch (tabName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"        case GuestListPanel.TAB_NAME:","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"            listPanelPlaceholder.getChildren().add(guestListPanel.getRoot());","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"            statusbarPlaceholder.getChildren().add(new StatusBarFooter(logic.getGuestBookFilePath()).getRoot());","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"            guests.setSelected(true);","lastModifiedDate":"2021-11-01"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"            vendors.setSelected(false);","lastModifiedDate":"2021-11-01"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"            break;","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"        case VendorListPanel.TAB_NAME:","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"            listPanelPlaceholder.getChildren().add(vendorListPanel.getRoot());","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"            statusbarPlaceholder.getChildren().add(new StatusBarFooter(logic.getVendorBookFilePath()).getRoot());","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"            guests.setSelected(false);","lastModifiedDate":"2021-11-01"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"            vendors.setSelected(true);","lastModifiedDate":"2021-11-01"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"            break;","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"        default:","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"            throw new AssertionError(\"No such tab name \" + tabName);","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"calvintanwj"},"content":"            Optional\u003cString\u003e tabNameToToggleTo \u003d commandResult.getTabNameToToggleTo();","lastModifiedDate":"2021-10-23"},{"lineNumber":226,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":227,"author":{"gitId":"calvintanwj"},"content":"            if (tabNameToToggleTo.isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":228,"author":{"gitId":"calvintanwj"},"content":"                toggleTab(tabNameToToggleTo.get());","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"calvintanwj":58,"-":188}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/pocket_hotel_32.png\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"calvintanwj":1,"-":88}},{"path":"src/main/java/seedu/address/ui/VendorCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"public class VendorCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    private static final String FXML \u003d \"VendorCard.fxml\";","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    public final Vendor vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    private Label email;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    private Label vendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    private Label cost;","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    private Label operatingHours;","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    private Label serviceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    private ImageView addressIcon;","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    private ImageView emailIcon;","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    private ImageView phoneIcon;","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"    private ImageView vendorIdIcon;","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    private ImageView serviceNameIcon;","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    private ImageView costIcon;","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    private ImageView operatingHoursIcon;","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"     * Creates a {@code VendorCard} with the given {@code Vendor} and index to display.","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    public VendorCard(Vendor vendor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        this.vendor \u003d vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        vendorId.setText(\"[\" + vendor.getVendorId().value + \"]\");","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        name.setText(vendor.getName().fullName);","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        email.setText(\" \" + vendor.getEmail().value);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        address.setText(\" \" + vendor.getAddress().value);","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        phone.setText(\" \" + vendor.getPhone().value);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"        cost.setText(\" \" + vendor.getCost().value);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        serviceName.setText(\" \" + vendor.getServiceName().serviceName);","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        operatingHours.setText(\" \" + vendor.getOperatingHours().toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        vendorIdIcon.setImage(new Image(getClass().getResourceAsStream(\"/images/vendor_id_icon.png\")));","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"        emailIcon.setImage(new Image(getClass().getResourceAsStream(\"/images/email_icon.png\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        addressIcon.setImage(new Image(getClass().getResourceAsStream(\"/images/address_icon.png\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        phoneIcon.setImage(new Image(getClass().getResourceAsStream(\"/images/phone_icon.png\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        serviceNameIcon.setImage(new Image(getClass().getResourceAsStream(\"/images/service_name_icon.png\")));","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"        costIcon.setImage(new Image(getClass().getResourceAsStream(\"/images/cost_icon.png\")));","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        operatingHoursIcon.setImage(new Image(getClass().getResourceAsStream(\"/images/operating_hours_icon.png\")));","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        vendor.getTags().stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"        if (!(other instanceof VendorCard)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"        VendorCard card \u003d (VendorCard) other;","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        return vendorId.getText().equals(card.vendorId.getText())","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"                \u0026\u0026 vendor.equals(card.vendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"calvintanwj":56,"-":55}},{"path":"src/main/java/seedu/address/ui/VendorListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"public class VendorListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    public static final String TAB_NAME \u003d \"Vendors\";","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    private static final String FXML \u003d \"VendorListPanel.fxml\";","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(VendorListPanel.class);","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    private ListView\u003cVendor\u003e vendorListView;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"     * Creates a {@code VendorListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    public VendorListPanel(ObservableList\u003cVendor\u003e vendorList) {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        super(FXML);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"        vendorListView.setItems(vendorList);","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        vendorListView.setCellFactory(listView -\u003e new VendorListViewCell());","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    class VendorListViewCell extends ListCell\u003cVendor\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        protected void updateItem(Vendor vendor, boolean empty) {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"            super.updateItem(vendor, empty);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"            if (empty || vendor \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                setText(null);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"            } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                setGraphic(new VendorCard(vendor).getRoot());","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":47}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"calvintanwj":1,"-":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":".corner {","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":".label-column-header {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":".cell_unique_identifer {","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"    -fx-font-family: \"Open Sans Bold\";","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":369,"author":{"gitId":"calvintanwj"},"content":".toggle-button {","lastModifiedDate":"2021-11-01"},{"lineNumber":370,"author":{"gitId":"calvintanwj"},"content":"    -fx-border-radius: 5 5 0 0;","lastModifiedDate":"2021-11-01"},{"lineNumber":371,"author":{"gitId":"calvintanwj"},"content":"    -fx-border-color: #2a2a2a;","lastModifiedDate":"2021-11-01"},{"lineNumber":372,"author":{"gitId":"calvintanwj"},"content":"    -fx-border-width: 1 1 0 1;","lastModifiedDate":"2021-11-01"},{"lineNumber":373,"author":{"gitId":"calvintanwj"},"content":"    -fx-background-color: #303030;","lastModifiedDate":"2021-11-01"},{"lineNumber":374,"author":{"gitId":"calvintanwj"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-11-01"},{"lineNumber":375,"author":{"gitId":"calvintanwj"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-11-01"},{"lineNumber":376,"author":{"gitId":"calvintanwj"},"content":"    -fx-text-fill: #7c7c7c;","lastModifiedDate":"2021-11-01"},{"lineNumber":377,"author":{"gitId":"calvintanwj"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2021-11-01"},{"lineNumber":378,"author":{"gitId":"calvintanwj"},"content":"    -fx-cursor: hand;","lastModifiedDate":"2021-11-01"},{"lineNumber":379,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-11-01"},{"lineNumber":380,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":381,"author":{"gitId":"calvintanwj"},"content":".toggle-button:selected {","lastModifiedDate":"2021-11-01"},{"lineNumber":382,"author":{"gitId":"calvintanwj"},"content":"  -fx-background-color: #484848;","lastModifiedDate":"2021-11-01"},{"lineNumber":383,"author":{"gitId":"calvintanwj"},"content":"  -fx-background-radius: 10 10 0 0;","lastModifiedDate":"2021-11-01"},{"lineNumber":384,"author":{"gitId":"calvintanwj"},"content":"  -fx-text-fill: #e2e2e4;","lastModifiedDate":"2021-11-01"},{"lineNumber":385,"author":{"gitId":"calvintanwj"},"content":"  -fx-focus-color: transparent;","lastModifiedDate":"2021-11-01"},{"lineNumber":386,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"calvintanwj":34,"-":352}},{"path":"src/main/resources/view/GuestCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"                \u003cImageView fx:id\u003d\"passportNumberIcon\" fitWidth\u003d\"16\" fitHeight\u003d\"18\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"passportNumber\" styleClass\u003d\"cell_unique_identifier\" text\u003d\"\\$passportNumber\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"                    \u003cInsets bottom\u003d\"3.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"                \u003cImageView fx:id\u003d\"emailIcon\" fitWidth\u003d\"15\" fitHeight\u003d\"13\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"                    \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"                \u003cImageView fx:id\u003d\"roomNumberIcon\" fitWidth\u003d\"15\" fitHeight\u003d\"13\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"roomNumber\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$roomNumber\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"                    \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"calvintanwj":53}},{"path":"src/main/resources/view/GuestListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"  \u003cListView fx:id\u003d\"guestListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"calvintanwj":9}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.control.ToggleButton?\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"         title\u003d\"Pocket Hotel\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        \u003cImage url\u003d\"@/images/pocket_hotel_32.png\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"                \u003cHBox fx:id\u003d\"tabPanel\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"                      styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"                    \u003cToggleButton fx:id\u003d\"guests\" contentDisplay\u003d\"CENTER\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"                                  onAction\u003d\"#handleClickGuestTab\" text\u003d\"Guests\"","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"                                  VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"                            \u003cInsets top\u003d\"2.0\"/\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"                        \u003copaqueInsets\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"                            \u003cInsets left\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"                        \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"                            \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\"/\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"                    \u003c/ToggleButton\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"                    \u003cToggleButton fx:id\u003d\"vendors\" contentDisplay\u003d\"CENTER\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"                                  onAction\u003d\"#handleClickVendorTab\"","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"                                  text\u003d\"Vendors\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"                            \u003cInsets top\u003d\"2.0\"/\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"                        \u003copaqueInsets\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"                            \u003cInsets left\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"                        \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"                            \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\"/\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"                    \u003c/ToggleButton\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"                    \u003copaqueInsets\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"                        \u003cInsets/\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"                    \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"                \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"                    \u003cVBox fx:id\u003d\"contactList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"                          VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"                        \u003cStackPane fx:id\u003d\"listPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"calvintanwj":46,"-":53}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"calvintanwj":1,"-":8}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"calvintanwj":1,"-":11}},{"path":"src/main/resources/view/VendorCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"                \u003cImageView fx:id\u003d\"vendorIdIcon\" fitHeight\u003d\"18\" fitWidth\u003d\"16\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"vendorId\" styleClass\u003d\"cell_unique_identifier\" text\u003d\"\\$vendorId\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"               \u003cInsets bottom\u003d\"3.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                \u003cImageView fx:id\u003d\"emailIcon\" fitHeight\u003d\"13\" fitWidth\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"               \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"                \u003cImageView fx:id\u003d\"phoneIcon\" fitHeight\u003d\"15\" fitWidth\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"               \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"                \u003cImageView fx:id\u003d\"addressIcon\" fitHeight\u003d\"15\" fitWidth\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"               \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"                \u003cImageView fx:id\u003d\"serviceNameIcon\" fitHeight\u003d\"18\" fitWidth\u003d\"16\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"serviceName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$serviceName\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"                    \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"                \u003cImageView fx:id\u003d\"costIcon\" fitHeight\u003d\"18\" fitWidth\u003d\"16\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"cost\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$cost\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"                    \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"                \u003cImageView fx:id\u003d\"operatingHoursIcon\" fitHeight\u003d\"18\" fitWidth\u003d\"16\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"                \u003cLabel fx:id\u003d\"operatingHours\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$operatingHours\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"                    \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"calvintanwj":85}},{"path":"src/main/resources/view/VendorListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"    \u003cListView fx:id\u003d\"vendorListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":8}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_GUEST_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_VENDORID;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_ALICE;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_ALICE;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PASSPORT_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROOM_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_ALICE;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.ALICE_GUEST;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_UNUSED;","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_UNUSED;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.CheckInNewGuestCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.ListGuestCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ReadOnlyVendorBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.archive.JsonArchiveStorage;","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.guest.JsonGuestBookStorage;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.vendor.JsonVendorBookStorage;","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.GuestBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        JsonGuestBookStorage guestBookStorage \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"                new JsonGuestBookStorage(temporaryFolder.resolve(\"guests.json\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        JsonVendorBookStorage vendorBookStorage \u003d new JsonVendorBookStorage(temporaryFolder.resolve(\"vendors.json\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        JsonArchiveStorage archiveStorage \u003d new JsonArchiveStorage(temporaryFolder.resolve(\"archive.json\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        StorageManager storage \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"                new StorageManager(guestBookStorage, vendorBookStorage, userPrefsStorage, archiveStorage);","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"    public void execute_vendorIdCommandExecutionError_throwsCommandException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        // checks if deleting an unused vendor id is possible","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        String deleteCommand \u003d \"deletevendor vid/\" + VENDOR_ID_UNUSED.toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_VENDORID);","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"NicolasCwy"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"NicolasCwy"},"content":"    public void execute_passportNumberCommandExecutionError_throwsCommandException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"NicolasCwy"},"content":"        // checks if deleting an unused passport number is possible","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        String deleteCommand \u003d \"deleteguest pn/\" + PASSPORT_NUMBER_UNUSED.toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_GUEST_PASSPORT_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        String listCommand \u003d ListGuestCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(listCommand, ListGuestCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"        JsonGuestBookStorage guestBookStorage \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"                new JsonGuestBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionGuestBook.json\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"        JsonVendorBookStorage vendorBookStorage \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"                new JsonVendorBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionVendorBook.json\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"        JsonArchiveStorage archiveStorage \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"                new JsonArchiveIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionArchive.json\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"        StorageManager storage \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"                new StorageManager(guestBookStorage, vendorBookStorage, userPrefsStorage, archiveStorage);","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"NicolasCwy"},"content":"        String addCommand \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"                CheckInNewGuestCommand.COMMAND_WORD + PASSPORT_NUMBER_DESC_ALICE + NAME_DESC_ALICE","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"                        + ROOM_NUMBER_DESC_ALICE + EMAIL_DESC_ALICE + TAG_DESC_ALICE;","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"        Guest expectedGuest \u003d new GuestBuilder(ALICE_GUEST).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.addGuest(expectedGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"    public void getFilteredGuestList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredGuestList().remove(0));","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"NicolasCwy"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"NicolasCwy"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"                new ModelManager(model.getGuestBook(), model.getVendorBook(), new UserPrefs(), model.getArchive());","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"NicolasCwy"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"NicolasCwy"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"    private static class JsonGuestBookIoExceptionThrowingStub extends JsonGuestBookStorage {","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"        private JsonGuestBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"NicolasCwy"},"content":"            super(filePath);","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"NicolasCwy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"NicolasCwy"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"        public void saveGuestBook(ReadOnlyGuestBook guestBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"NicolasCwy"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"NicolasCwy"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"calvintanwj"},"content":"    private static class JsonVendorBookIoExceptionThrowingStub extends JsonVendorBookStorage {","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"calvintanwj"},"content":"        private JsonVendorBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"calvintanwj"},"content":"            super(filePath);","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"calvintanwj"},"content":"        public void saveVendorBook(ReadOnlyVendorBook vendorBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"calvintanwj"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"calvintanwj"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"calvintanwj"},"content":"    private static class JsonArchiveIoExceptionThrowingStub extends JsonArchiveStorage {","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"calvintanwj"},"content":"        private JsonArchiveIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":217,"author":{"gitId":"calvintanwj"},"content":"        public void saveArchive(ReadOnlyGuestBook archive, Path filePath) throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"calvintanwj":75,"-":126,"NicolasCwy":22}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPERATING_HOURS;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOM_NUMBER;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VENDOR_ID;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_SECOND_PERSON;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_THIRD_PERSON;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_FOURTH_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_SECOND_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_THIRD_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.EditGuestCommand.EditGuestDescriptor;","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.EditVendorCommand.EditVendorDescriptor;","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumberContainsKeywordsPredicate;","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorIdContainsKeywordsPredicate;","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.EditGuestDescriptorBuilder;","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.EditVendorDescriptorBuilder;","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"NicolasCwy"},"content":"    // Guests","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_NAME_ALICE \u003d \"Alice Pauline\";","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_EMAIL_ALICE \u003d \"alice@example.com\";","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_TAG_ALICE \u003d \"Vip\";","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_ROOM_NUMBER_ALICE \u003d \"20202\";","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_PASSPORT_NUMBER_ALICE \u003d PASSPORT_NUMBER_FIRST_PERSON.toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    public static final String NAME_DESC_ALICE \u003d \" \" + PREFIX_NAME + VALID_NAME_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    public static final String ROOM_NUMBER_DESC_ALICE \u003d \" \" + PREFIX_ROOM_NUMBER + VALID_ROOM_NUMBER_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    public static final String EMAIL_DESC_ALICE \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    public static final String PASSPORT_NUMBER_DESC_ALICE \u003d \" \" + PREFIX_PASSPORT_NUMBER + VALID_PASSPORT_NUMBER_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"    public static final String TAG_DESC_ALICE \u003d \" \" + PREFIX_TAG + VALID_TAG_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_NAME_BENSON \u003d \"Benson Meier\";","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_EMAIL_BENSON \u003d \"benson@example.com\";","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_TAG_BENSON \u003d \"Normal room\";","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_ROOM_NUMBER_BENSON \u003d \"20201\";","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_PASSPORT_NUMBER_BENSON \u003d PASSPORT_NUMBER_SECOND_PERSON.toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"NicolasCwy"},"content":"    public static final String NAME_DESC_BENSON \u003d \" \" + PREFIX_NAME + VALID_NAME_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"NicolasCwy"},"content":"    public static final String ROOM_NUMBER_DESC_BENSON \u003d \" \" + PREFIX_ROOM_NUMBER + VALID_ROOM_NUMBER_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"NicolasCwy"},"content":"    public static final String EMAIL_DESC_BENSON \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"NicolasCwy"},"content":"    public static final String PASSPORT_NUMBER_DESC_BENSON \u003d \" \" + PREFIX_PASSPORT_NUMBER","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"NicolasCwy"},"content":"            + VALID_PASSPORT_NUMBER_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"NicolasCwy"},"content":"    public static final String TAG_DESC_BENSON \u003d \" \" + PREFIX_TAG + VALID_TAG_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_NAME_CARL \u003d \"Carl Kurz\";","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_EMAIL_CARL \u003d \"carl@example.com\";","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_TAG_CARL \u003d \"Deluxe suite\";","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_ROOM_NUMBER_CARL \u003d \"12321\";","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_PASSPORT_NUMBER_CARL \u003d PASSPORT_NUMBER_THIRD_PERSON.toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"NicolasCwy"},"content":"    public static final String NAME_DESC_CARL \u003d \" \" + PREFIX_NAME + VALID_NAME_CARL;","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"NicolasCwy"},"content":"    public static final String ROOM_NUMBER_DESC_CARL \u003d \" \" + PREFIX_ROOM_NUMBER + VALID_ROOM_NUMBER_CARL;","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"NicolasCwy"},"content":"    public static final String EMAIL_DESC_CARL \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_CARL;","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"NicolasCwy"},"content":"    public static final String PASSPORT_NUMBER_DESC_CARL \u003d \" \" + PREFIX_PASSPORT_NUMBER + VALID_PASSPORT_NUMBER_CARL;","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"NicolasCwy"},"content":"    public static final String TAG_DESC_CARL \u003d \" \" + PREFIX_TAG + VALID_TAG_CARL;","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"    // Vendors","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_NAME_DANIEL \u003d \"Daniel Meier\";","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_EMAIL_DANIEL \u003d \"cornelia@example.com\";","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_TAG_DANIEL \u003d \"Foot massage\";","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_ADDRESS_DANIEL \u003d \"10th street\";","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_PHONE_DANIEL \u003d \"87652533\";","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_VENDOR_ID_DANIEL \u003d VENDOR_ID_FIRST_PERSON.toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_SERVICE_NAME_DANIEL \u003d \"Massage\";","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_COST_DANIEL \u003d \"20\";","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_OPERATING_HOURS_DANIEL \u003d \"123 0800-1300\";","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"    public static final String NAME_DESC_DANIEL \u003d \" \" + PREFIX_NAME + VALID_NAME_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"    public static final String EMAIL_DESC_DANIEL \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"    public static final String ADDRESS_DESC_DANIEL \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"alyssa-savier"},"content":"    public static final String TAG_DESC_DANIEL \u003d \" \" + PREFIX_TAG + VALID_TAG_DANIEL;","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"    public static final String PHONE_DESC_DANIEL \u003d \" \" + PREFIX_PHONE + VALID_PHONE_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"    public static final String VENDOR_ID_DESC_DANIEL \u003d \" \" + PREFIX_VENDOR_ID + VALID_VENDOR_ID_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"    public static final String SERVICE_NAME_DESC_DANIEL \u003d \" \" + PREFIX_SERVICE_NAME + VALID_SERVICE_NAME_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"    public static final String COST_DESC_DANIEL \u003d \" \" + PREFIX_COST + VALID_COST_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"    public static final String OPERATING_HOURS_DESC_DANIEL \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"            \" \" + PREFIX_OPERATING_HOURS + VALID_OPERATING_HOURS_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_NAME_ELLE \u003d \"Elle Meyer\";","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_EMAIL_ELLE \u003d \"elle@example.com\";","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_TAG_ELLE \u003d \"Halal\";","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_ADDRESS_ELLE \u003d \"michegan ave\";","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_PHONE_ELLE \u003d \"9482224\";","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_VENDOR_ID_ELLE \u003d VENDOR_ID_SECOND_PERSON.toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_SERVICE_NAME_ELLE \u003d \"Food\";","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_COST_ELLE \u003d \"12\";","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_OPERATING_HOURS_ELLE \u003d \"12345 1100-2200\";","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"NicolasCwy"},"content":"    public static final String NAME_DESC_ELLE \u003d \" \" + PREFIX_NAME + VALID_NAME_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"NicolasCwy"},"content":"    public static final String EMAIL_DESC_ELLE \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"NicolasCwy"},"content":"    public static final String ADDRESS_DESC_ELLE \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"NicolasCwy"},"content":"    public static final String PHONE_DESC_ELLE \u003d \" \" + PREFIX_PHONE + VALID_PHONE_ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"    public static final String VENDOR_ID_DESC_ELLE \u003d \" \" + PREFIX_VENDOR_ID + VALID_VENDOR_ID_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"    public static final String SERVICE_NAME_DESC_ELLE \u003d \" \" + PREFIX_SERVICE_NAME + VALID_SERVICE_NAME_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"    public static final String COST_DESC_ELLE \u003d \" \" + PREFIX_COST + VALID_COST_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"    public static final String OPERATING_HOURS_DESC_ELLE \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"            \" \" + PREFIX_OPERATING_HOURS + VALID_OPERATING_HOURS_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_NAME_FIONA \u003d \"Fiona Kunz\";","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_EMAIL_FIONA \u003d \"fiona@example.com\";","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_TAG_FIONA \u003d \"Discounted\";","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_ADDRESS_FIONA \u003d \"little tokyo\";","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_PHONE_FIONA \u003d \"9482427\";","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_VENDOR_ID_FIONA \u003d VENDOR_ID_THIRD_PERSON.toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_SERVICE_NAME_FIONA \u003d \"Dry Cleaning\";","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_COST_FIONA \u003d \"40\";","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_OPERATING_HOURS_FIONA \u003d \"234567 0700-2300\";","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"NicolasCwy"},"content":"    public static final String NAME_DESC_FIONA \u003d \" \" + PREFIX_NAME + VALID_NAME_FIONA;","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"NicolasCwy"},"content":"    public static final String EMAIL_DESC_FIONA \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_FIONA;","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"NicolasCwy"},"content":"    public static final String ADDRESS_DESC_FIONA \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_FIONA;","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"NicolasCwy"},"content":"    public static final String PHONE_DESC_FIONA \u003d \" \" + PREFIX_PHONE + VALID_PHONE_FIONA;","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"    public static final String VENDOR_ID_DESC_FIONA \u003d \" \" + PREFIX_VENDOR_ID + VALID_VENDOR_ID_FIONA;","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"    public static final String SERVICE_NAME_DESC_FIONA \u003d \" \" + PREFIX_SERVICE_NAME + VALID_SERVICE_NAME_FIONA;","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"    public static final String COST_DESC_FIONA \u003d \" \" + PREFIX_COST + VALID_COST_FIONA;","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"    public static final String OPERATING_HOURS_DESC_FIONA \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"            \" \" + PREFIX_OPERATING_HOURS + VALID_OPERATING_HOURS_FIONA;","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_NAME_GEORGE \u003d \"George Best\";","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_EMAIL_GEORGE \u003d \"george@example.com\";","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_TAG_GEORGE \u003d \"Happy hour\";","lastModifiedDate":"2021-10-30"},{"lineNumber":146,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_ADDRESS_GEORGE \u003d \"4th street\";","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"NicolasCwy"},"content":"    public static final String VALID_PHONE_GEORGE \u003d \"9482442\";","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_VENDOR_ID_GEORGE \u003d VENDOR_ID_FOURTH_PERSON.toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_SERVICE_NAME_GEORGE \u003d \"Bartending\";","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_COST_GEORGE \u003d \"17\";","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_OPERATING_HOURS_GEORGE \u003d \"135 1800-2359\";","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"NicolasCwy"},"content":"    public static final String NAME_DESC_GEORGE \u003d \" \" + PREFIX_NAME + VALID_NAME_GEORGE;","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"NicolasCwy"},"content":"    public static final String EMAIL_DESC_GEORGE \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_GEORGE;","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"NicolasCwy"},"content":"    public static final String ADDRESS_DESC_GEORGE \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_GEORGE;","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"NicolasCwy"},"content":"    public static final String PHONE_DESC_GEORGE \u003d \" \" + PREFIX_PHONE + VALID_PHONE_GEORGE;","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"    public static final String VENDOR_ID_DESC_GEORGE \u003d \" \" + PREFIX_VENDOR_ID + VALID_VENDOR_ID_GEORGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"    public static final String SERVICE_NAME_DESC_GEORGE \u003d \" \" + PREFIX_SERVICE_NAME + VALID_SERVICE_NAME_GEORGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"    public static final String COST_DESC_GEORGE \u003d \" \" + PREFIX_COST + VALID_COST_GEORGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"    public static final String OPERATING_HOURS_DESC_GEORGE \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"            \" \" + PREFIX_OPERATING_HOURS + VALID_OPERATING_HOURS_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"NicolasCwy"},"content":"    // Guest Tags","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_TAG_VIP \u003d \"Vip\";","lastModifiedDate":"2021-10-30"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_TAG_DELUXE_ROOM \u003d \"Deluxe room\";","lastModifiedDate":"2021-10-30"},{"lineNumber":165,"author":{"gitId":"NicolasCwy"},"content":"    public static final String TAG_DESC_VIP \u003d \" \" + PREFIX_TAG + VALID_TAG_VIP;","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"NicolasCwy"},"content":"    public static final String TAG_DESC_DELUXE_ROOM \u003d \" \" + PREFIX_TAG + VALID_TAG_DELUXE_ROOM;","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"    // Vendor Tags","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_TAG_HIGH_RATINGS \u003d \"High ratings\";","lastModifiedDate":"2021-10-30"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"    public static final String VALID_TAG_CHEAP \u003d \"Cheap\";","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"    public static final String TAG_DESC_HIGH_RATINGS \u003d \" \" + PREFIX_TAG + VALID_TAG_HIGH_RATINGS;","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"    public static final String TAG_DESC_CHEAP \u003d \" \" + PREFIX_TAG + VALID_TAG_CHEAP;","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":174,"author":{"gitId":"NicolasCwy"},"content":"    // Invalid fields","lastModifiedDate":"2021-10-17"},{"lineNumber":175,"author":{"gitId":"rgbpokka"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME; // names cannot be empty","lastModifiedDate":"2021-10-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"    public static final String INVALID_VENDOR_ID_DESC \u003d \" \" + PREFIX_VENDOR_ID + \"1#2\"; //\u0027#\u0027 not allowed in staff id","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"    public static final String INVALID_ROOM_NUMBER_DESC \u003d \" \" + PREFIX_ROOM_NUMBER + \"-1\";","lastModifiedDate":"2021-10-30"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"    // room numbers must be a number greater than 0.","lastModifiedDate":"2021-10-30"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"    public static final String INVALID_PASSPORT_NUMBER_DESC \u003d \" \" + PREFIX_PASSPORT_NUMBER + \"@3333\";","lastModifiedDate":"2021-10-30"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"    // passport numbers should be alphanumeric","lastModifiedDate":"2021-10-30"},{"lineNumber":185,"author":{"gitId":"rgbpokka"},"content":"    public static final String INVALID_COST_DESC_NOT_DOUBLE \u003d \" \" + PREFIX_COST + \"ab\"; // \u0027ab\u0027 not allowed in cost","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"rgbpokka"},"content":"    public static final String INVALID_COST_DESC_NOT_POSITIVE \u003d \" \" + PREFIX_COST + \"0.0\"; // \u0027ab\u0027 not allowed in cost","lastModifiedDate":"2021-10-28"},{"lineNumber":187,"author":{"gitId":"calvintanwj"},"content":"    // \u00278\u0027 not allowed in operating hours days","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"calvintanwj"},"content":"    public static final String INVALID_OPERATING_HOURS_DESC \u003d \" \" + PREFIX_OPERATING_HOURS + \"12348 1000-1300\";","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"    // \u0027!\u0027 not allowed in service names","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"calvintanwj"},"content":"    public static final String INVALID_SERVICE_NAME_DESC \u003d \" \" + PREFIX_SERVICE_NAME + \"Service!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"    public static final EditGuestDescriptor DESC_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"calvintanwj"},"content":"    public static final EditGuestDescriptor DESC_BENSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"calvintanwj"},"content":"    public static final EditVendorDescriptor DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"calvintanwj"},"content":"    public static final EditVendorDescriptor DESC_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":201,"author":{"gitId":"calvintanwj"},"content":"        DESC_ALICE \u003d new EditGuestDescriptorBuilder()","lastModifiedDate":"2021-10-15"},{"lineNumber":202,"author":{"gitId":"calvintanwj"},"content":"                .withName(VALID_NAME_ALICE)","lastModifiedDate":"2021-10-15"},{"lineNumber":203,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(VALID_EMAIL_ALICE)","lastModifiedDate":"2021-10-15"},{"lineNumber":204,"author":{"gitId":"calvintanwj"},"content":"                .withTags(VALID_TAG_ALICE)","lastModifiedDate":"2021-10-15"},{"lineNumber":205,"author":{"gitId":"calvintanwj"},"content":"                .withRoomNumber(VALID_ROOM_NUMBER_ALICE)","lastModifiedDate":"2021-10-15"},{"lineNumber":206,"author":{"gitId":"calvintanwj"},"content":"                .withPassportNumber(VALID_PASSPORT_NUMBER_ALICE)","lastModifiedDate":"2021-10-15"},{"lineNumber":207,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-15"},{"lineNumber":208,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":209,"author":{"gitId":"NicolasCwy"},"content":"        DESC_BENSON \u003d new EditGuestDescriptorBuilder()","lastModifiedDate":"2021-10-17"},{"lineNumber":210,"author":{"gitId":"NicolasCwy"},"content":"                .withName(VALID_NAME_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":211,"author":{"gitId":"NicolasCwy"},"content":"                .withEmail(VALID_EMAIL_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":212,"author":{"gitId":"NicolasCwy"},"content":"                .withTags(VALID_TAG_VIP, VALID_TAG_DELUXE_ROOM)","lastModifiedDate":"2021-10-17"},{"lineNumber":213,"author":{"gitId":"NicolasCwy"},"content":"                .withRoomNumber(VALID_ROOM_NUMBER_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":214,"author":{"gitId":"NicolasCwy"},"content":"                .withPassportNumber(VALID_PASSPORT_NUMBER_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":215,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-15"},{"lineNumber":216,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":217,"author":{"gitId":"calvintanwj"},"content":"        DESC_DANIEL \u003d new EditVendorDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":218,"author":{"gitId":"calvintanwj"},"content":"                .withName(VALID_NAME_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":219,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(VALID_EMAIL_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":220,"author":{"gitId":"calvintanwj"},"content":"                .withTags(VALID_TAG_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":221,"author":{"gitId":"calvintanwj"},"content":"                .withAddress(VALID_ADDRESS_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":222,"author":{"gitId":"calvintanwj"},"content":"                .withPhone(VALID_PHONE_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":223,"author":{"gitId":"calvintanwj"},"content":"                .withVendorId(VALID_VENDOR_ID_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"calvintanwj"},"content":"                .withCost(VALID_COST_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"calvintanwj"},"content":"                .withOperatingHours(VALID_OPERATING_HOURS_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"calvintanwj"},"content":"                .withServiceName(VALID_SERVICE_NAME_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-15"},{"lineNumber":228,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":229,"author":{"gitId":"calvintanwj"},"content":"        DESC_ELLE \u003d new EditVendorDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"NicolasCwy"},"content":"                .withName(VALID_NAME_ELLE)","lastModifiedDate":"2021-10-17"},{"lineNumber":231,"author":{"gitId":"NicolasCwy"},"content":"                .withEmail(VALID_EMAIL_ELLE)","lastModifiedDate":"2021-10-17"},{"lineNumber":232,"author":{"gitId":"calvintanwj"},"content":"                .withTags(VALID_TAG_ELLE)","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"NicolasCwy"},"content":"                .withAddress(VALID_ADDRESS_ELLE)","lastModifiedDate":"2021-10-17"},{"lineNumber":234,"author":{"gitId":"NicolasCwy"},"content":"                .withPhone(VALID_PHONE_ELLE)","lastModifiedDate":"2021-10-17"},{"lineNumber":235,"author":{"gitId":"calvintanwj"},"content":"                .withVendorId(VALID_VENDOR_ID_ELLE)","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"calvintanwj"},"content":"                .withCost(VALID_COST_ELLE)","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"calvintanwj"},"content":"                .withOperatingHours(VALID_OPERATING_HOURS_ELLE)","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"calvintanwj"},"content":"                .withServiceName(VALID_SERVICE_NAME_ELLE)","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"NicolasCwy"},"content":"                .build();","lastModifiedDate":"2021-10-17"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":260,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":272,"author":{"gitId":"calvintanwj"},"content":"     * - the guest book, filtered guest list and selected guest in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-24"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":277,"author":{"gitId":"calvintanwj"},"content":"        GuestBook expectedGuestBook \u003d new GuestBook(actualModel.getGuestBook());","lastModifiedDate":"2021-10-24"},{"lineNumber":278,"author":{"gitId":"calvintanwj"},"content":"        List\u003cGuest\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredGuestList());","lastModifiedDate":"2021-10-24"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":281,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedGuestBook, actualModel.getGuestBook());","lastModifiedDate":"2021-10-24"},{"lineNumber":282,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredGuestList());","lastModifiedDate":"2021-10-24"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":284,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":286,"author":{"gitId":"calvintanwj"},"content":"     * Updates {@code model}\u0027s filtered list to show only the guest at the given {@code PassportNumber} in the","lastModifiedDate":"2021-10-24"},{"lineNumber":287,"author":{"gitId":"calvintanwj"},"content":"     * {@code model}\u0027s guest book.","lastModifiedDate":"2021-10-24"},{"lineNumber":288,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":289,"author":{"gitId":"calvintanwj"},"content":"    public static void showGuestAtPassportNumber(Model model, PassportNumber targetPassportNumber) {","lastModifiedDate":"2021-10-24"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":291,"author":{"gitId":"calvintanwj"},"content":"        Optional\u003cGuest\u003e guest \u003d model.getGuest(targetPassportNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":293,"author":{"gitId":"calvintanwj"},"content":"        assert (guest.isPresent());","lastModifiedDate":"2021-10-24"},{"lineNumber":294,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":295,"author":{"gitId":"calvintanwj"},"content":"        String passportNumber \u003d guest.get().getPassportNumber().value;","lastModifiedDate":"2021-10-25"},{"lineNumber":296,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":297,"author":{"gitId":"calvintanwj"},"content":"        model.updateFilteredGuestList(new PassportNumberContainsKeywordsPredicate(Arrays.asList(passportNumber)));","lastModifiedDate":"2021-10-25"},{"lineNumber":298,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":299,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(1, model.getFilteredGuestList().size());","lastModifiedDate":"2021-10-24"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":302,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":303,"author":{"gitId":"calvintanwj"},"content":"     * Updates {@code model}\u0027s filtered list to show only the vendor at the given {@code VendorId} in the","lastModifiedDate":"2021-10-24"},{"lineNumber":304,"author":{"gitId":"calvintanwj"},"content":"     * {@code model}\u0027s vendor book.","lastModifiedDate":"2021-10-24"},{"lineNumber":305,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":306,"author":{"gitId":"calvintanwj"},"content":"    public static void showVendorAtVendorId(Model model, VendorId targetVendorId) {","lastModifiedDate":"2021-10-24"},{"lineNumber":307,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":308,"author":{"gitId":"calvintanwj"},"content":"        Optional\u003cVendor\u003e vendor \u003d model.getVendor(targetVendorId);","lastModifiedDate":"2021-10-24"},{"lineNumber":309,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":310,"author":{"gitId":"calvintanwj"},"content":"        assert (vendor.isPresent());","lastModifiedDate":"2021-10-24"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":312,"author":{"gitId":"calvintanwj"},"content":"        String vendorId \u003d vendor.get().getVendorId().value;","lastModifiedDate":"2021-10-25"},{"lineNumber":313,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":314,"author":{"gitId":"calvintanwj"},"content":"        model.updateFilteredVendorList(new VendorIdContainsKeywordsPredicate(Arrays.asList(vendorId)));","lastModifiedDate":"2021-10-25"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":316,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(1, model.getFilteredVendorList().size());","lastModifiedDate":"2021-10-25"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":319,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"rgbpokka":7,"calvintanwj":160,"alyssa-savier":1,"-":82,"NicolasCwy":70}},{"path":"src/test/java/seedu/address/logic/commands/guest/ChargeGuestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"public class ChargeGuestCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"calvintanwj":4}},{"path":"src/test/java/seedu/address/logic/commands/guest/CheckInNewGuestCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.GuestBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":" * Contains integration tests (interaction with the Model) for {@code CheckInCommand}.","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"alyssa-savier"},"content":"public class CheckInNewGuestCommandIntegrationTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    private Model model;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"        model \u003d new ModelManager(getTypicalGuestBook(), new VendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    public void execute_newGuest_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"        Model expectedModel \u003d new ModelManager(model.getGuestBook(), new VendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.addGuest(validGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"alyssa-savier"},"content":"        assertCommandSuccess(new CheckInNewGuestCommand(validGuest), model,","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"alyssa-savier"},"content":"                String.format(CheckInNewGuestCommand.MESSAGE_SUCCESS, validGuest), expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    public void execute_duplicateGuest_throwsCommandException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        Guest personInList \u003d model.getGuestBook().getGuestList().get(0);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        assertCommandFailure(new CheckInNewGuestCommand(personInList), model,","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"                CheckInNewGuestCommand.MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"rgbpokka":3,"calvintanwj":40,"alyssa-savier":3}},{"path":"src/test/java/seedu/address/logic/commands/guest/CheckInNewGuestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"alyssa-savier"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"alyssa-savier"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"alyssa-savier"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"alyssa-savier"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"alyssa-savier"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.model.guest.UniqueGuestList;","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.GuestBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"alyssa-savier"},"content":"public class CheckInNewGuestCommandTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"alyssa-savier"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CheckInNewGuestCommand(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"alyssa-savier"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"alyssa-savier"},"content":"    public void execute_guestAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"alyssa-savier"},"content":"        ModelStubAcceptingGuestAdded modelStub \u003d new ModelStubAcceptingGuestAdded();","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"alyssa-savier"},"content":"        Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"alyssa-savier"},"content":"        CommandResult commandResult \u003d new CheckInNewGuestCommand(validGuest).execute(modelStub);","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"alyssa-savier"},"content":"        assertEquals(String.format(CheckInNewGuestCommand.MESSAGE_SUCCESS, validGuest),","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"alyssa-savier"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"alyssa-savier"},"content":"        assertEquals(Arrays.asList(validGuest), modelStub.guestsAdded);","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    public void execute_duplicateGuest_throwsCommandException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"alyssa-savier"},"content":"        CheckInNewGuestCommand checkInCommand \u003d new CheckInNewGuestCommand(validGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        ModelStub modelStub \u003d new ModelStubWithGuest(validGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(CommandException.class, CheckInNewGuestCommand.MESSAGE_DUPLICATE_GUEST, (","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        ) -\u003e checkInCommand.execute(modelStub));","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        Guest alice \u003d new GuestBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        Guest bob \u003d new GuestBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"alyssa-savier"},"content":"        CheckInNewGuestCommand addAliceCommand \u003d new CheckInNewGuestCommand(alice);","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"alyssa-savier"},"content":"        CheckInNewGuestCommand addBobCommand \u003d new CheckInNewGuestCommand(bob);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"alyssa-savier"},"content":"        CheckInNewGuestCommand addAliceCommandCopy \u003d new CheckInNewGuestCommand(alice);","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"        // different guest -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"     * A Model stub that contains a single guest.","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"    private class ModelStubWithGuest extends ModelStub {","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        private final Guest guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        ModelStubWithGuest(Guest guest) {","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"            requireNonNull(guest);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"            this.guest \u003d guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        public boolean hasGuest(Guest guest) {","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"            requireNonNull(guest);","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"            return this.guest.isSame(guest);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"     * A Model stub that always accept the guest being added.","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"    private class ModelStubAcceptingGuestAdded extends ModelStub {","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"        final ArrayList\u003cGuest\u003e guestsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"alyssa-savier"},"content":"        private final UniqueGuestList uniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"alyssa-savier"},"content":"        private final GuestBook guestBook \u003d new GuestBook();","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"alyssa-savier"},"content":"        private final FilteredList\u003cGuest\u003e filteredGuests \u003d new FilteredList\u003cGuest\u003e(this.guestBook.getGuestList());","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        public boolean hasGuest(Guest guest) {","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"            requireNonNull(guest);","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"            return guestsAdded.stream().anyMatch(guest::isSame);","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"        public void addGuest(Guest guest) {","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"            requireNonNull(guest);","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"            guestsAdded.add(guest);","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"alyssa-savier"},"content":"        public Optional\u003cGuest\u003e getArchivedGuest(PassportNumber passportNumber) {","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"alyssa-savier"},"content":"            return uniqueGuestList.get(passportNumber);","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"alyssa-savier"},"content":"        public ObservableList\u003cGuest\u003e getFilteredGuestList() {","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"alyssa-savier"},"content":"            return filteredGuests;","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"        public ReadOnlyGuestBook getGuestBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"            return new GuestBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"calvintanwj":97,"alyssa-savier":38}},{"path":"src/test/java/seedu/address/logic/commands/guest/CheckInReturningGuestCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.GuestBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"alyssa-savier"},"content":"public class CheckInReturningGuestCommandIntegrationTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    private Model model;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"alyssa-savier"},"content":"    private Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"        model \u003d new ModelManager(getTypicalGuestBook(), new VendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"alyssa-savier"},"content":"        model.addArchivedGuest(validGuest);","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"alyssa-savier"},"content":"    public void execute_returningGuest_success() {","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"alyssa-savier"},"content":"        Model expectedModel \u003d new ModelManager(model.getGuestBook(), new VendorBook(), new UserPrefs(),","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"alyssa-savier"},"content":"                model.getArchive());","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"alyssa-savier"},"content":"        expectedModel.deleteArchivedGuest(validGuest);","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.addGuest(validGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"alyssa-savier"},"content":"        assertCommandSuccess(new CheckInReturningGuestCommand(validGuest), model,","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"alyssa-savier"},"content":"                String.format(CheckInReturningGuestCommand.MESSAGE_SUCCESS_RETURNING_GUEST, validGuest), expectedModel);","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    public void execute_duplicateGuest_throwsCommandException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        Guest personInList \u003d model.getGuestBook().getGuestList().get(0);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"alyssa-savier"},"content":"        assertCommandFailure(new CheckInReturningGuestCommand(personInList), model,","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"alyssa-savier"},"content":"                CheckInReturningGuestCommand.MESSAGE_NONEXISTENT_GUEST);","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"rgbpokka":2,"calvintanwj":33,"alyssa-savier":11}},{"path":"src/test/java/seedu/address/logic/commands/guest/CheckInReturningGuestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alyssa-savier"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"alyssa-savier"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"alyssa-savier"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"alyssa-savier"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"alyssa-savier"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"alyssa-savier"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"alyssa-savier"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"alyssa-savier"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"alyssa-savier"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"alyssa-savier"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"alyssa-savier"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"alyssa-savier"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.model.guest.UniqueGuestList;","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.testutil.guest.GuestBuilder;","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"alyssa-savier"},"content":"public class CheckInReturningGuestCommandTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"alyssa-savier"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"alyssa-savier"},"content":"    public void constructor_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"alyssa-savier"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CheckInReturningGuestCommand(null));","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"alyssa-savier"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"alyssa-savier"},"content":"    public void execute_guestAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"alyssa-savier"},"content":"        Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"alyssa-savier"},"content":"        ModelStubAcceptingGuestAdded modelStub \u003d new ModelStubAcceptingGuestAdded(validGuest);","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"alyssa-savier"},"content":"        CommandResult commandResult \u003d new CheckInReturningGuestCommand(validGuest).execute(modelStub);","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"alyssa-savier"},"content":"        assertEquals(String.format(CheckInReturningGuestCommand.MESSAGE_SUCCESS_RETURNING_GUEST, validGuest),","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"alyssa-savier"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"alyssa-savier"},"content":"        assertEquals(Arrays.asList(validGuest), modelStub.guestsAdded);","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"alyssa-savier"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"alyssa-savier"},"content":"    public void execute_duplicateGuest_throwsCommandException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"alyssa-savier"},"content":"        Guest validGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"alyssa-savier"},"content":"        CheckInReturningGuestCommand checkInReturningGuestCommand \u003d new CheckInReturningGuestCommand(validGuest);","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"alyssa-savier"},"content":"        ModelStub modelStub \u003d new ModelStubWithGuest(validGuest);","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"alyssa-savier"},"content":"        assertThrows(CommandException.class, CheckInReturningGuestCommand.MESSAGE_NONEXISTENT_GUEST, (","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"alyssa-savier"},"content":"        ) -\u003e checkInReturningGuestCommand.execute(modelStub));","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"alyssa-savier"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"alyssa-savier"},"content":"    public void equals() {","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"alyssa-savier"},"content":"        Guest alice \u003d new GuestBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"alyssa-savier"},"content":"        Guest bob \u003d new GuestBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"alyssa-savier"},"content":"        CheckInReturningGuestCommand addAliceCommand \u003d new CheckInReturningGuestCommand(alice);","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"alyssa-savier"},"content":"        CheckInReturningGuestCommand addBobCommand \u003d new CheckInReturningGuestCommand(bob);","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"alyssa-savier"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"alyssa-savier"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"alyssa-savier"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"alyssa-savier"},"content":"        CheckInReturningGuestCommand addAliceCommandCopy \u003d new CheckInReturningGuestCommand(alice);","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"alyssa-savier"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"alyssa-savier"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"alyssa-savier"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"alyssa-savier"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"alyssa-savier"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"alyssa-savier"},"content":"        // different guest -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"alyssa-savier"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"alyssa-savier"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"alyssa-savier"},"content":"     * A Model stub that contains a single guest.","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"alyssa-savier"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"alyssa-savier"},"content":"    private class ModelStubWithGuest extends ModelStub {","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"alyssa-savier"},"content":"        private final Guest guest;","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"alyssa-savier"},"content":"        private final UniqueGuestList uniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"alyssa-savier"},"content":"        ModelStubWithGuest(Guest guest) {","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"alyssa-savier"},"content":"            requireNonNull(guest);","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"alyssa-savier"},"content":"            this.guest \u003d guest;","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"alyssa-savier"},"content":"        public boolean hasGuest(Guest guest) {","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"alyssa-savier"},"content":"            requireNonNull(guest);","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"alyssa-savier"},"content":"            return this.guest.isSame(guest);","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"alyssa-savier"},"content":"        public Optional\u003cGuest\u003e getArchivedGuest(PassportNumber passportNumber) {","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"alyssa-savier"},"content":"            return uniqueGuestList.get(passportNumber);","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"alyssa-savier"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"alyssa-savier"},"content":"     * A Model stub that always accept the guest being added.","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"alyssa-savier"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"alyssa-savier"},"content":"    private class ModelStubAcceptingGuestAdded extends ModelStub {","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"alyssa-savier"},"content":"        final ArrayList\u003cGuest\u003e guestsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"alyssa-savier"},"content":"        private final UniqueGuestList uniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"alyssa-savier"},"content":"        private final GuestBook guestBook \u003d new GuestBook();","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"alyssa-savier"},"content":"        private final FilteredList\u003cGuest\u003e filteredGuests \u003d new FilteredList\u003cGuest\u003e(this.guestBook.getGuestList());","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"alyssa-savier"},"content":"        private final Guest archivedGuest;","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"alyssa-savier"},"content":"        ModelStubAcceptingGuestAdded(Guest archivedGuest) {","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"alyssa-savier"},"content":"            requireNonNull(archivedGuest);","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"alyssa-savier"},"content":"            this.archivedGuest \u003d archivedGuest;","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"alyssa-savier"},"content":"            uniqueGuestList.add(archivedGuest);","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"alyssa-savier"},"content":"        public boolean hasGuest(Guest guest) {","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"alyssa-savier"},"content":"            requireNonNull(guest);","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"alyssa-savier"},"content":"            return guestsAdded.stream().anyMatch(guest::isSame);","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"alyssa-savier"},"content":"        public void addGuest(Guest guest) {","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"alyssa-savier"},"content":"            requireNonNull(guest);","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"alyssa-savier"},"content":"            guestsAdded.add(guest);","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"alyssa-savier"},"content":"        public Optional\u003cGuest\u003e getArchivedGuest(PassportNumber passportNumber) {","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"alyssa-savier"},"content":"            return uniqueGuestList.get(passportNumber);","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"alyssa-savier"},"content":"        public ObservableList\u003cGuest\u003e getFilteredGuestList() {","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"alyssa-savier"},"content":"            return filteredGuests;","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"alyssa-savier"},"content":"        public ReadOnlyGuestBook getGuestBook() {","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"alyssa-savier"},"content":"            return new GuestBook();","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"alyssa-savier"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"alyssa-savier"},"content":"        public void deleteArchivedGuest(Guest guest) {","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"alyssa-savier"},"content":"            uniqueGuestList.remove(guest);","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"alyssa-savier"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"alyssa-savier"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"alyssa-savier"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"alyssa-savier"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"alyssa-savier":153}},{"path":"src/test/java/seedu/address/logic/commands/guest/CheckOutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"rgbpokka"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"rgbpokka"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_SECOND_PERSON;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_UNUSED;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":" * {@code DeleteGuestCommand}.","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"public class CheckOutCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"    private Model model \u003d new ModelManager(getTypicalGuestBook(), new VendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"rgbpokka"},"content":"    public void execute_validPassportNumber_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"        Guest guestToCheckout \u003d model.getFilteredGuestList()","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"                .stream()","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"                .filter(g -\u003e g.getPassportNumber().equals(PASSPORT_NUMBER_FIRST_PERSON))","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"rgbpokka"},"content":"                .findAny()","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"rgbpokka"},"content":"                .orElse(null);","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"rgbpokka"},"content":"        CheckOutCommand checkOutCommand \u003d new CheckOutCommand(PASSPORT_NUMBER_FIRST_PERSON);","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"rgbpokka"},"content":"        String expectedMessage \u003d String.format(CheckOutCommand.MESSAGE_CHECKOUT_SUCCESSFUL, guestToCheckout);","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        ModelManager expectedModel \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                new ModelManager(model.getGuestBook(), new VendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"        expectedModel.deleteGuest(guestToCheckout);","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"rgbpokka"},"content":"        expectedModel.addArchivedGuest(guestToCheckout);","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"rgbpokka"},"content":"        assertCommandSuccess(checkOutCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"rgbpokka"},"content":"    public void execute_invalidPassportNumber_throwsCommandException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"rgbpokka"},"content":"        CheckOutCommand checkOutCommand \u003d new CheckOutCommand(PASSPORT_NUMBER_UNUSED);","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"rgbpokka"},"content":"        assertCommandFailure(checkOutCommand, model, Messages.MESSAGE_INVALID_GUEST_PASSPORT_NUMBER);","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"rgbpokka"},"content":"    public void equals() {","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"rgbpokka"},"content":"        CheckOutCommand checkOutFirstCommand \u003d new CheckOutCommand(PASSPORT_NUMBER_FIRST_PERSON);","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"        CheckOutCommand checkOutSecondCommand \u003d new CheckOutCommand(PASSPORT_NUMBER_SECOND_PERSON);","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"rgbpokka"},"content":"        assertTrue(checkOutFirstCommand.equals(checkOutFirstCommand));","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"rgbpokka"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"rgbpokka"},"content":"        CheckOutCommand checkOutFirstCommandCopy \u003d new CheckOutCommand(PASSPORT_NUMBER_FIRST_PERSON);","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"        assertTrue(checkOutFirstCommand.equals(checkOutFirstCommandCopy));","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"rgbpokka"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"rgbpokka"},"content":"        assertFalse(checkOutFirstCommand.equals(1));","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"rgbpokka"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"rgbpokka"},"content":"        assertFalse(checkOutFirstCommand.equals(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"rgbpokka"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"rgbpokka"},"content":"        assertFalse(checkOutFirstCommand.equals(checkOutSecondCommand));","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"rgbpokka"},"content":"}","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"rgbpokka":71,"calvintanwj":7}},{"path":"src/test/java/seedu/address/logic/commands/guest/ClearGuestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"public class ClearGuestCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    public void execute_emptyGuestBook_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(new ClearGuestCommand(), model, ClearGuestCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    public void execute_nonEmptyGuestBook_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"        Model model \u003d new ModelManager(getTypicalGuestBook(), new VendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalGuestBook(), new VendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.setGuestBook(new GuestBook());","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(new ClearGuestCommand(), model, ClearGuestCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"rgbpokka":3,"calvintanwj":10,"-":21}},{"path":"src/test/java/seedu/address/logic/commands/guest/DeleteGuestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_SECOND_PERSON;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_UNUSED;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":" * {@code DeleteGuestCommand}.","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"public class DeleteGuestCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"    private Model model \u003d new ModelManager(getTypicalGuestBook(), new VendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"    public void execute_validPassportNumber_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        Guest guestToDelete \u003d model.getFilteredGuestList()","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"                .stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"                .filter(g -\u003e g.getPassportNumber().equals(PASSPORT_NUMBER_FIRST_PERSON))","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"                .findAny()","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"                .orElse(null);","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        DeleteGuestCommand deleteGuestCommand \u003d new DeleteGuestCommand(PASSPORT_NUMBER_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(DeleteGuestCommand.MESSAGE_DELETE_SUCCESSFUL, guestToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        ModelManager expectedModel \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                new ModelManager(model.getGuestBook(), new VendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.deleteGuest(guestToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(deleteGuestCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"    public void execute_invalidPassportNumber_throwsCommandException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        DeleteGuestCommand deleteGuestCommand \u003d new DeleteGuestCommand(PASSPORT_NUMBER_UNUSED);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        assertCommandFailure(deleteGuestCommand, model, Messages.MESSAGE_INVALID_GUEST_PASSPORT_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"    public void equals() {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        DeleteGuestCommand deleteFirstCommand \u003d new DeleteGuestCommand(PASSPORT_NUMBER_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        DeleteGuestCommand deleteSecondCommand \u003d new DeleteGuestCommand(PASSPORT_NUMBER_SECOND_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"bingcheng45"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        DeleteGuestCommand deleteFirstCommandCopy \u003d new DeleteGuestCommand(PASSPORT_NUMBER_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"bingcheng45"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"bingcheng45"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"bingcheng45"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"bingcheng45"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"bingcheng45"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"bingcheng45"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"rgbpokka":2,"calvintanwj":22,"bingcheng45":52}},{"path":"src/test/java/seedu/address/logic/commands/guest/EditGuestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"rgbpokka"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"rgbpokka"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showGuestAtPassportNumber;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.ALICE_GUEST;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.BENSON_GUEST;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.guest.TypicalGuests.BOB_ARCHIVED_GUEST;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.guest.TypicalGuests.getTypicalArchive;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_SECOND_PERSON;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_UNUSED;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"rgbpokka"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.EditGuestCommand.EditGuestDescriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.EditGuestDescriptorBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.GuestBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditGuestCommand.","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"rgbpokka"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"public class EditGuestCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    private Model model \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"            new ModelManager(getTypicalGuestBook(), new VendorBook(), new UserPrefs(), getTypicalArchive());","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"rgbpokka"},"content":"        Guest guest \u003d ALICE_GUEST;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"rgbpokka"},"content":"        Guest editedGuest \u003d new GuestBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"rgbpokka"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder(editedGuest).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        EditGuestCommand editCommand \u003d new EditGuestCommand(guest.getPassportNumber(), descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(EditGuestCommand.MESSAGE_EDIT_GUEST_SUCCESS, editedGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        Model expectedModel \u003d new ModelManager(new GuestBook(model.getGuestBook()), new VendorBook(), new UserPrefs(),","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"                getTypicalArchive());","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.setGuest(guest, editedGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"        Guest guest \u003d ALICE_GUEST;","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"rgbpokka"},"content":"        GuestBuilder guestBuilder \u003d new GuestBuilder(guest);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        Guest editedGuest \u003d guestBuilder","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"NicolasCwy"},"content":"                .withName(VALID_NAME_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"NicolasCwy"},"content":"                .withEmail(VALID_EMAIL_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"rgbpokka"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder()","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"NicolasCwy"},"content":"                .withName(VALID_NAME_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"NicolasCwy"},"content":"                .withEmail(VALID_EMAIL_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        EditGuestCommand editCommand \u003d new EditGuestCommand(guest.getPassportNumber(), descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(EditGuestCommand.MESSAGE_EDIT_GUEST_SUCCESS, editedGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        Model expectedModel \u003d new ModelManager(new GuestBook(model.getGuestBook()), new VendorBook(), new UserPrefs(),","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"                getTypicalArchive());","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.setGuest(guest, editedGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"rgbpokka"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"rgbpokka"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"rgbpokka"},"content":"        // no fields are changed, so the edited guest stays exactly the same","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"rgbpokka"},"content":"        Guest editedGuest \u003d ALICE_GUEST;","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"        EditGuestCommand editCommand \u003d new EditGuestCommand(editedGuest.getPassportNumber(), new EditGuestDescriptor());","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(EditGuestCommand.MESSAGE_EDIT_GUEST_SUCCESS, editedGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"        Model expectedModel \u003d new ModelManager(new GuestBook(model.getGuestBook()), new VendorBook(), new UserPrefs(),","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"                getTypicalArchive());","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"rgbpokka"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"rgbpokka"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"        showGuestAtPassportNumber(model, PASSPORT_NUMBER_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"rgbpokka"},"content":"        Guest personInFilteredList \u003d ALICE_GUEST;","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"        Guest editedGuest \u003d new GuestBuilder(personInFilteredList)","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"NicolasCwy"},"content":"                .withName(VALID_NAME_BENSON)","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"        EditGuestCommand editCommand \u003d new EditGuestCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"rgbpokka"},"content":"                personInFilteredList.getPassportNumber(),","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"NicolasCwy"},"content":"                new EditGuestDescriptorBuilder().withName(VALID_NAME_BENSON).build()","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"rgbpokka"},"content":"        );","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(EditGuestCommand.MESSAGE_EDIT_GUEST_SUCCESS, editedGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"        Model expectedModel \u003d new ModelManager(new GuestBook(model.getGuestBook()), new VendorBook(), new UserPrefs(),","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"                getTypicalArchive());","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.setGuest(model.getFilteredGuestList().get(0), editedGuest);","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"rgbpokka"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"rgbpokka"},"content":"    public void execute_duplicateGuestUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"rgbpokka"},"content":"        Guest guest \u003d ALICE_GUEST;","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"rgbpokka"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder(guest).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"        EditGuestCommand editCommand \u003d new EditGuestCommand(BENSON_GUEST.getPassportNumber(), descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"        assertCommandFailure(editCommand, model, EditGuestCommand.MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"rgbpokka"},"content":"    public void execute_duplicateGuestFilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"        showGuestAtPassportNumber(model, PASSPORT_NUMBER_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"rgbpokka"},"content":"        Guest personInList \u003d BENSON_GUEST;","lastModifiedDate":"2021-10-15"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"        EditGuestCommand editCommand \u003d new EditGuestCommand(ALICE_GUEST.getPassportNumber(),","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"rgbpokka"},"content":"                new EditGuestDescriptorBuilder(personInList).build());","lastModifiedDate":"2021-10-15"},{"lineNumber":137,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"        assertCommandFailure(editCommand, model, EditGuestCommand.MESSAGE_DUPLICATE_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"rgbpokka"},"content":"    public void execute_guestInArchive_failure() {","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"rgbpokka"},"content":"        Guest archivedGuest \u003d BOB_ARCHIVED_GUEST;","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"rgbpokka"},"content":"        EditGuestCommand editCommand \u003d new EditGuestCommand(BOB_ARCHIVED_GUEST.getPassportNumber(),","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"rgbpokka"},"content":"                new EditGuestDescriptorBuilder()","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"rgbpokka"},"content":"                        .withName(VALID_NAME_BENSON)","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"rgbpokka"},"content":"                        .withEmail(VALID_EMAIL_BENSON)","lastModifiedDate":"2021-10-28"},{"lineNumber":148,"author":{"gitId":"rgbpokka"},"content":"                        .build());","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"rgbpokka"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_GUEST_IS_IN_ARCHIVE);","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":152,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":153,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"rgbpokka"},"content":"    public void execute_invalidPassportNumberUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"        EditGuestCommand editCommand \u003d new EditGuestCommand(PASSPORT_NUMBER_UNUSED, new EditGuestDescriptor());","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"rgbpokka"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_GUEST_DOES_NOT_EXIST);","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"rgbpokka"},"content":"    //        @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"rgbpokka"},"content":"    //        public void execute_invalidPassportNumberFilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"    //            showGuestAtPassportNumber(model, PASSPORT_NUMBER_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"rgbpokka"},"content":"    //            Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"rgbpokka"},"content":"    //            // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"    //            assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getGuestBook().getPersonList().size());","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"rgbpokka"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"    //            EditGuestCommand editCommand \u003d new EditGuestCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"NicolasCwy"},"content":"    //                    new EditPersonDescriptorBuilder().withName(VALID_NAME_BENSON).build());","lastModifiedDate":"2021-10-17"},{"lineNumber":169,"author":{"gitId":"rgbpokka"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"rgbpokka"},"content":"    //            assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"rgbpokka"},"content":"    //        }","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"rgbpokka"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"        final EditGuestCommand standardCommand \u003d new EditGuestCommand(PASSPORT_NUMBER_FIRST_PERSON, DESC_ALICE);","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"rgbpokka"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"        EditGuestDescriptor copyDescriptor \u003d new EditGuestDescriptor(DESC_ALICE);","lastModifiedDate":"2021-10-15"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"        EditGuestCommand commandWithSameValues \u003d new EditGuestCommand(PASSPORT_NUMBER_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"rgbpokka"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"rgbpokka"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"rgbpokka"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"rgbpokka"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"rgbpokka"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"rgbpokka"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(standardCommand.equals(new ClearGuestCommand()));","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"rgbpokka"},"content":"        // different passport number -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(standardCommand.equals(new EditGuestCommand(PASSPORT_NUMBER_SECOND_PERSON, DESC_ALICE)));","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"rgbpokka"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(standardCommand.equals(new EditGuestCommand(PASSPORT_NUMBER_FIRST_PERSON, DESC_BENSON)));","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"rgbpokka"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"rgbpokka":132,"calvintanwj":56,"NicolasCwy":10}},{"path":"src/test/java/seedu/address/logic/commands/guest/EditGuestDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PASSPORT_NUMBER_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOM_NUMBER_BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BENSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.EditGuestCommand.EditGuestDescriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.EditGuestDescriptorBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"public class EditGuestDescriptorTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"        EditGuestDescriptor descriptorWithSameValues \u003d new EditGuestDescriptor(DESC_ALICE);","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(DESC_ALICE.equals(descriptorWithSameValues));","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(DESC_ALICE.equals(DESC_ALICE));","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ALICE.equals(null));","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ALICE.equals(5));","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"NicolasCwy"},"content":"        assertFalse(DESC_ALICE.equals(DESC_BENSON));","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        EditGuestDescriptor editedAlice \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                new EditGuestDescriptorBuilder(DESC_ALICE).withName(VALID_NAME_BENSON).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        editedAlice \u003d new EditGuestDescriptorBuilder(DESC_ALICE).withEmail(VALID_EMAIL_BENSON).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        editedAlice \u003d new EditGuestDescriptorBuilder(DESC_ALICE).withTags(VALID_TAG_BENSON).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"rgbpokka"},"content":"        // different passport number -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        editedAlice \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"                new EditGuestDescriptorBuilder(DESC_ALICE).withPassportNumber(VALID_PASSPORT_NUMBER_BENSON).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"rgbpokka"},"content":"        // different room number -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        editedAlice \u003d new EditGuestDescriptorBuilder(DESC_ALICE).withRoomNumber(VALID_ROOM_NUMBER_BENSON).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"rgbpokka":7,"calvintanwj":21,"-":27,"NicolasCwy":6}},{"path":"src/test/java/seedu/address/logic/commands/guest/FilterGuestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.Assert.assertFalse;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.Assert.assertTrue;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_GUESTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestPredicate;","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"public class FilterGuestCommandTest {","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    private Model model \u003d new ModelManager(getTypicalGuestBook(), new VendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    private Model expectedModel \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"            new ModelManager(getTypicalGuestBook(), new VendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    public void equals() {","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        GuestPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.of(\"12312D\"), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        GuestPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.of(\"23188F\"), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        FilterGuestCommand filterFirstCommand \u003d new FilterGuestCommand(firstPredicate);","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        FilterGuestCommand filterSecondCommand \u003d new FilterGuestCommand(secondPredicate);","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        FilterGuestCommand findFirstCommandCopy \u003d new FilterGuestCommand(firstPredicate);","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(filterFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"    public void execute_noKeywords_noGuestFiltered() {","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_GUESTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        GuestPredicate predicate \u003d preparePredicate(\"  \");","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        FilterGuestCommand command \u003d new FilterGuestCommand(predicate);","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.updateFilteredGuestList(predicate);","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredGuestList());","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"     * Parses {@code userInput} into a {@code GuestPredicate}.","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"    private GuestPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        return new GuestPredicate(Optional.of(\"31321312D\"), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"calvintanwj":75}},{"path":"src/test/java/seedu/address/logic/commands/guest/ListGuestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showGuestAtPassportNumber;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListGuestCommand.","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"public class ListGuestCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"        model \u003d new ModelManager(getTypicalGuestBook(), new VendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"        expectedModel \u003d new ModelManager(model.getGuestBook(), new VendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(new ListGuestCommand(), model, ListGuestCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        showGuestAtPassportNumber(model, PASSPORT_NUMBER_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(new ListGuestCommand(), model, ListGuestCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"rgbpokka":3,"calvintanwj":10,"-":28}},{"path":"src/test/java/seedu/address/logic/commands/vendor/AddVendorCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.getTypicalVendorBook;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.VendorBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":" * Contains integration tests (interaction with the Model) for {@code AddVendorCommand}.","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"public class AddVendorCommandIntegrationTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    private Model model;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"        model \u003d new ModelManager(new GuestBook(), getTypicalVendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    public void execute_newVendor_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        Vendor validVendor \u003d new VendorBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"        Model expectedModel \u003d new ModelManager(new GuestBook(), model.getVendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.addVendor(validVendor);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(new AddVendorCommand(validVendor), model,","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"                String.format(AddVendorCommand.MESSAGE_SUCCESS, validVendor), expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    public void execute_duplicateVendor_throwsCommandException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        Vendor vendorInList \u003d model.getVendorBook().getVendorList().get(0);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        assertCommandFailure(new AddVendorCommand(vendorInList), model, AddVendorCommand.MESSAGE_DUPLICATE_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"rgbpokka":3,"calvintanwj":42}},{"path":"src/test/java/seedu/address/logic/commands/vendor/AddVendorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ReadOnlyVendorBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.VendorBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"public class AddVendorCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_nullVendor_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddVendorCommand(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    public void execute_vendorAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        ModelStubAcceptingVendorAdded modelStub \u003d new ModelStubAcceptingVendorAdded();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        Vendor validVendor \u003d new VendorBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        CommandResult commandResult \u003d new AddVendorCommand(validVendor).execute(modelStub);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(String.format(AddVendorCommand.MESSAGE_SUCCESS, validVendor), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(Arrays.asList(validVendor), modelStub.vendorsAdded);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    public void execute_duplicateVendor_throwsCommandException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        Vendor validVendor \u003d new VendorBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        AddVendorCommand addVendorCommand \u003d new AddVendorCommand(validVendor);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        ModelStub modelStub \u003d new ModelStubWithVendor(validVendor);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(CommandException.class, AddVendorCommand.MESSAGE_DUPLICATE_VENDOR, (","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        ) -\u003e addVendorCommand.execute(modelStub));","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        Vendor alice \u003d new VendorBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        Vendor bob \u003d new VendorBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        AddVendorCommand addAliceCommand \u003d new AddVendorCommand(alice);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        AddVendorCommand addBobCommand \u003d new AddVendorCommand(bob);","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        AddVendorCommand addAliceCommandCopy \u003d new AddVendorCommand(alice);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        // different vendor -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"     * A Model stub that contains a single vendor.","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"    private class ModelStubWithVendor extends ModelStub {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        private final Vendor vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        ModelStubWithVendor(Vendor vendor) {","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"            requireNonNull(vendor);","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"            this.vendor \u003d vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        public boolean hasVendor(Vendor vendor) {","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"            requireNonNull(vendor);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"            return this.vendor.isSame(vendor);","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"     * A Model stub that always accept the vendor being added.","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"    private class ModelStubAcceptingVendorAdded extends ModelStub {","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"        final ArrayList\u003cVendor\u003e vendorsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"        public boolean hasVendor(Vendor vendor) {","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"            requireNonNull(vendor);","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"            return vendorsAdded.stream().anyMatch(vendor::isSame);","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"        public void addVendor(Vendor vendor) {","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"            requireNonNull(vendor);","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"            vendorsAdded.add(vendor);","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"        public ReadOnlyVendorBook getVendorBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"            return new VendorBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"calvintanwj":116}},{"path":"src/test/java/seedu/address/logic/commands/vendor/ClearVendorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.getTypicalVendorBook;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"public class ClearVendorCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    public void execute_emptyVendorBook_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(new ClearVendorCommand(), model, ClearVendorCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    public void execute_nonEmptyVendorBook_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"        Model model \u003d new ModelManager(new GuestBook(), getTypicalVendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"        Model expectedModel \u003d new ModelManager(new GuestBook(), getTypicalVendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.setVendorBook(new VendorBook());","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(new ClearVendorCommand(), model, ClearVendorCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"rgbpokka":3,"calvintanwj":31}},{"path":"src/test/java/seedu/address/logic/commands/vendor/DeleteVendorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_SECOND_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_UNUSED;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.getTypicalVendorBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":" * {@code DeleteVendorCommand}.","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"public class DeleteVendorCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"    private Model model \u003d new ModelManager(new GuestBook(), getTypicalVendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    public void execute_validVendorId_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        Vendor vendorToDelete \u003d model.getFilteredVendorList()","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"                .stream()","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"                .filter(v -\u003e v.getVendorId().equals(VENDOR_ID_FIRST_PERSON))","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"                .findAny()","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"                .orElse(null);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        DeleteVendorCommand deleteVendorCommand \u003d new DeleteVendorCommand(VENDOR_ID_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(DeleteVendorCommand.MESSAGE_DELETE_SUCCESSFUL, vendorToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        ModelManager expectedModel \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"                new ModelManager(new GuestBook(), model.getVendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.deleteVendor(vendorToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(deleteVendorCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    public void execute_invalidVendorId_throwsCommandException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        DeleteVendorCommand deleteVendorCommand \u003d new DeleteVendorCommand(VENDOR_ID_UNUSED);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        assertCommandFailure(deleteVendorCommand, model, Messages.MESSAGE_INVALID_VENDORID);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        DeleteVendorCommand deleteFirstCommand \u003d new DeleteVendorCommand(VENDOR_ID_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        DeleteVendorCommand deleteSecondCommand \u003d new DeleteVendorCommand(VENDOR_ID_SECOND_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        DeleteVendorCommand deleteFirstCommandCopy \u003d new DeleteVendorCommand(VENDOR_ID_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"    private void showNoVendor(Model model) {","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"        model.updateFilteredVendorList(p -\u003e false);","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(model.getFilteredVendorList().isEmpty());","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"rgbpokka":2,"calvintanwj":83}},{"path":"src/test/java/seedu/address/logic/commands/vendor/EditVendorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VENDOR_ID_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showVendorAtVendorId;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_SECOND_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_UNUSED;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.DANIEL_VENDOR;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.ELLE_VENDOR;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.getTypicalVendorBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.ClearGuestCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.EditVendorCommand.EditVendorDescriptor;","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.EditVendorDescriptorBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.VendorBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditVendorCommand.","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"public class EditVendorCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"rgbpokka"},"content":"    private Model model \u003d new ModelManager(new GuestBook(), getTypicalVendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        Vendor vendor \u003d DANIEL_VENDOR;","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        Vendor editedVendor \u003d new VendorBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder(editedVendor).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        EditVendorCommand editCommand \u003d new EditVendorCommand(vendor.getVendorId(), descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(EditVendorCommand.MESSAGE_EDIT_VENDOR_SUCCESS, editedVendor);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        Model expectedModel \u003d new ModelManager(new GuestBook(), new VendorBook(model.getVendorBook()), new UserPrefs(),","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"                new Archive());","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.setVendor(vendor, editedVendor);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        Vendor vendor \u003d DANIEL_VENDOR;","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        VendorBuilder vendorBuilder \u003d new VendorBuilder(vendor);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        Vendor editedVendor \u003d vendorBuilder","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"                .withName(VALID_NAME_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(VALID_EMAIL_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"                .withName(VALID_NAME_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(VALID_EMAIL_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        EditVendorCommand editCommand \u003d new EditVendorCommand(vendor.getVendorId(), descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(EditVendorCommand.MESSAGE_EDIT_VENDOR_SUCCESS, editedVendor);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        Model expectedModel \u003d new ModelManager(new GuestBook(), new VendorBook(model.getVendorBook()), new UserPrefs(),","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"                new Archive());","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.setVendor(vendor, editedVendor);","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        // no fields are changed, so the edited vendor stays exactly the same","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        VendorId targetVendorId \u003d new VendorId(VALID_VENDOR_ID_DANIEL);","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"        EditVendorDescriptor editVendorDescriptor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"                new EditVendorDescriptorBuilder().withVendorId(VALID_VENDOR_ID_DANIEL).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        EditVendorCommand editCommand \u003d new EditVendorCommand(targetVendorId, editVendorDescriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(EditVendorCommand.MESSAGE_EDIT_VENDOR_SUCCESS, DANIEL_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"        Model expectedModel \u003d new ModelManager(new GuestBook(), new VendorBook(model.getVendorBook()), new UserPrefs(),","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"                new Archive());","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"        // Hard-coded to show first Vendor in TypicalGuests list","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"        showVendorAtVendorId(model, VENDOR_ID_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"        Vendor vendorInFilteredList \u003d DANIEL_VENDOR;","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"        Vendor editedVendor \u003d new VendorBuilder(vendorInFilteredList)","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"                .withName(VALID_NAME_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"        EditVendorCommand editCommand \u003d new EditVendorCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"                vendorInFilteredList.getVendorId(),","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"                new EditVendorDescriptorBuilder().withName(VALID_NAME_DANIEL).build()","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"        );","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(EditVendorCommand.MESSAGE_EDIT_VENDOR_SUCCESS, editedVendor);","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"        Model expectedModel \u003d new ModelManager(new GuestBook(), new VendorBook(model.getVendorBook()), new UserPrefs(),","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"                new Archive());","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.setVendor(vendorInFilteredList, editedVendor);","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"    public void execute_duplicateVendorUnfilteredList_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"        Vendor vendor \u003d DANIEL_VENDOR;","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"        EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder(vendor).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"        EditVendorCommand editCommand \u003d new EditVendorCommand(ELLE_VENDOR.getVendorId(), descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"        assertCommandFailure(editCommand, model, EditVendorCommand.MESSAGE_DUPLICATE_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"    public void execute_duplicateVendorFilteredList_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"        // Hard-coded to show first Vendor in TypicalGuests list","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"        showVendorAtVendorId(model, VENDOR_ID_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"        Vendor personInList \u003d ELLE_VENDOR;","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"        EditVendorCommand editCommand \u003d new EditVendorCommand(DANIEL_VENDOR.getVendorId(),","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"                new EditVendorDescriptorBuilder(personInList).build());","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"        assertCommandFailure(editCommand, model, EditVendorCommand.MESSAGE_DUPLICATE_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"    public void execute_invalidVendorIdUnfilteredList_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"        EditVendorCommand editCommand \u003d new EditVendorCommand(VENDOR_ID_UNUSED, new EditVendorDescriptor());","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_VENDORID);","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"    //    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"    //    public void execute_invalidPassportNumberFilteredList_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"    //        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"    //        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"    //        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"    //        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getVendorBook().getPersonList().size());","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"    //","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"    //        EditVendorCommand editCommand \u003d new EditVendorCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"    //                new EditPersonDescriptorBuilder().withName(VALID_NAME_DANIEL).build());","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"    //","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"    //        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"    //    }","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"        // Something needs to be done about DESC_ELLE?? Change to something else??","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"        final EditVendorCommand standardCommand \u003d new EditVendorCommand(VENDOR_ID_FIRST_PERSON, DESC_ELLE);","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"        EditVendorDescriptor copyDescriptor \u003d new EditVendorDescriptor(DESC_ELLE);","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"        EditVendorCommand commandWithSameValues \u003d new EditVendorCommand(VENDOR_ID_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(standardCommand.equals(new ClearGuestCommand()));","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"        // different vendor id -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(standardCommand.equals(new EditVendorCommand(VENDOR_ID_SECOND_PERSON, DESC_ELLE)));","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(standardCommand.equals(new EditVendorCommand(VENDOR_ID_FIRST_PERSON, DESC_DANIEL)));","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"rgbpokka":2,"calvintanwj":188}},{"path":"src/test/java/seedu/address/logic/commands/vendor/EditVendorDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"rgbpokka"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"rgbpokka"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_ELLE;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COST_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OPERATING_HOURS_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_DANIEL;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SERVICE_NAME_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DANIEL;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VENDOR_ID_DANIEL;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.EditVendorCommand.EditVendorDescriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.EditVendorDescriptorBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"public class EditVendorDescriptorTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"    public void equals() {","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        EditVendorDescriptor descriptorWithSameValues \u003d new EditVendorDescriptor(DESC_ELLE);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"NicolasCwy"},"content":"        assertTrue(DESC_ELLE.equals(descriptorWithSameValues));","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"NicolasCwy"},"content":"        assertTrue(DESC_ELLE.equals(DESC_ELLE));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"NicolasCwy"},"content":"        assertFalse(DESC_ELLE.equals(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"rgbpokka"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"NicolasCwy"},"content":"        assertFalse(DESC_ELLE.equals(5));","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"rgbpokka"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"NicolasCwy"},"content":"        assertFalse(DESC_ELLE.equals(DESC_DANIEL));","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        EditVendorDescriptor editedElle \u003d new EditVendorDescriptorBuilder(DESC_ELLE)","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"rgbpokka"},"content":"                .withName(VALID_NAME_DANIEL)","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"rgbpokka"},"content":"                .build();","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ELLE.equals(editedElle));","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        editedElle \u003d new EditVendorDescriptorBuilder(DESC_ELLE).withEmail(VALID_EMAIL_DANIEL).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ELLE.equals(editedElle));","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"rgbpokka"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        editedElle \u003d new EditVendorDescriptorBuilder(DESC_ELLE).withTags(VALID_TAG_DANIEL).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ELLE.equals(editedElle));","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"rgbpokka"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        editedElle \u003d new EditVendorDescriptorBuilder(DESC_ELLE).withAddress(VALID_ADDRESS_DANIEL).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ELLE.equals(editedElle));","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        editedElle \u003d new EditVendorDescriptorBuilder(DESC_ELLE).withPhone(VALID_PHONE_DANIEL).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ELLE.equals(editedElle));","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        // different vendor id -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        editedElle \u003d new EditVendorDescriptorBuilder(DESC_ELLE).withVendorId(VALID_VENDOR_ID_DANIEL).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ELLE.equals(editedElle));","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        // different operating hours -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        editedElle \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"                new EditVendorDescriptorBuilder(DESC_ELLE).withOperatingHours(VALID_OPERATING_HOURS_DANIEL).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ELLE.equals(editedElle));","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        // different cost -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        editedElle \u003d new EditVendorDescriptorBuilder(DESC_ELLE).withCost(VALID_COST_DANIEL).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ELLE.equals(editedElle));","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        // different service name -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        editedElle \u003d new EditVendorDescriptorBuilder(DESC_ELLE).withServiceName(VALID_SERVICE_NAME_DANIEL).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DESC_ELLE.equals(editedElle));","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"rgbpokka"},"content":"}","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"rgbpokka":37,"calvintanwj":41,"NicolasCwy":5}},{"path":"src/test/java/seedu/address/logic/commands/vendor/FilterVendorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.Assert.assertFalse;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.Assert.assertTrue;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_VENDORS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.getTypicalVendorBook;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorPredicate;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"public class FilterVendorCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    private Model model \u003d new ModelManager(new GuestBook(), getTypicalVendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    private Model expectedModel \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"            new ModelManager(new GuestBook(), getTypicalVendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    public void equals() {","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.of(\"001\"), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.of(\"002\"), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        FilterVendorCommand filterFirstCommand \u003d new FilterVendorCommand(firstPredicate);","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        FilterVendorCommand filterSecondCommand \u003d new FilterVendorCommand(secondPredicate);","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        FilterVendorCommand findFirstCommandCopy \u003d new FilterVendorCommand(firstPredicate);","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(filterFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    public void execute_noKeywords_noGuestFiltered() {","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_VENDORS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d preparePredicate(\"  \");","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        FilterVendorCommand command \u003d new FilterVendorCommand(predicate);","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        expectedModel.updateFilteredVendorList(predicate);","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredVendorList());","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"     * Parses {@code userInput} into a {@code VendorPredicate}.","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    private VendorPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        return new VendorPredicate(Optional.of(\"123141\"), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"calvintanwj":79}},{"path":"src/test/java/seedu/address/logic/commands/vendor/ListVendorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.commands.vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showVendorAtVendorId;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.getTypicalVendorBook;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListVendorCommand.","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"public class ListVendorCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    private Model model;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"        model \u003d new ModelManager(new GuestBook(), getTypicalVendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"        expectedModel \u003d new ModelManager(new GuestBook(), model.getVendorBook(), new UserPrefs(), new Archive());","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(new ListVendorCommand(), model, ListVendorCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        showVendorAtVendorId(model, VENDOR_ID_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        assertCommandSuccess(new ListVendorCommand(), model, ListVendorCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"rgbpokka":3,"calvintanwj":38}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.RoomNumber;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Address;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Cost;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ServiceName;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    private static final String INVALID_NAME \u003d \"   \";","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    private static final String INVALID_ROOM_NUMBER \u003d \" \";","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    private static final String INVALID_PASSPORT_NUMBER \u003d \" \";","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    private static final String INVALID_COST \u003d \"-10.00\";","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    private static final String INVALID_OPERATING_HOURS \u003d \"1230800-1300\";","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    private static final String INVALID_SERVICE_NAME \u003d \" \";","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    private static final String INVALID_VENDOR_ID \u003d \" \";","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALID_TAG_1 \u003d \"Friend\";","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALID_TAG_2 \u003d \"Neighbour\";","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALID_ROOM_NUMBER \u003d \"123\";","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALID_PASSPORT_NUMBER \u003d \"1231231D\";","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALID_COST \u003d \"10.00\";","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALID_OPERATING_HOURS \u003d \"123 0800-1300\";","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALID_SERVICE_NAME \u003d \"Massage\";","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALID_VENDOR_ID \u003d \"001\";","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, (","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        ) -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"calvintanwj"},"content":"    public void parseRoomNumber_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRoomNumber((String) null));","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"calvintanwj"},"content":"    public void parseRoomNumber_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRoomNumber(INVALID_ROOM_NUMBER));","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"calvintanwj"},"content":"    public void parseRoomNumber_validValueWithoutWhitespace_returnsRoomNumber() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"calvintanwj"},"content":"        RoomNumber expectedRoomNumber \u003d new RoomNumber(VALID_ROOM_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedRoomNumber, ParserUtil.parseRoomNumber(VALID_ROOM_NUMBER));","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"calvintanwj"},"content":"    public void parseRoomNumber_validValueWithWhitespace_returnsTrimmedRoomNumber() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"calvintanwj"},"content":"        String roomNumberWithWhiteSpace \u003d WHITESPACE + VALID_ROOM_NUMBER + WHITESPACE;","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"calvintanwj"},"content":"        RoomNumber expectedRoomNumber \u003d new RoomNumber(VALID_ROOM_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedRoomNumber, ParserUtil.parseRoomNumber(roomNumberWithWhiteSpace));","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"calvintanwj"},"content":"    public void parsePassportNumber_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePassportNumber((String) null));","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"calvintanwj"},"content":"    public void parsePassportNumber_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePassportNumber(INVALID_PASSPORT_NUMBER));","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"calvintanwj"},"content":"    public void parsePassportNumber_validValueWithoutWhitespace_returnsPassportNumber() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"calvintanwj"},"content":"        PassportNumber expectedPassportNumber \u003d new PassportNumber(VALID_PASSPORT_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedPassportNumber, ParserUtil.parsePassportNumber(VALID_PASSPORT_NUMBER));","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":243,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":244,"author":{"gitId":"calvintanwj"},"content":"    public void parsePassportNumber_validValueWithWhitespace_returnsTrimmedPassportNumber() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"calvintanwj"},"content":"        String passportNumberWithWhitespace \u003d WHITESPACE + VALID_PASSPORT_NUMBER + WHITESPACE;","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"calvintanwj"},"content":"        PassportNumber expectedPassportNumber \u003d new PassportNumber(VALID_PASSPORT_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedPassportNumber, ParserUtil.parsePassportNumber(passportNumberWithWhitespace));","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"calvintanwj"},"content":"    public void parseCost_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCost((String) null));","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"calvintanwj"},"content":"    public void parseCost_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":257,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCost(INVALID_COST));","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":260,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"calvintanwj"},"content":"    public void parseCost_validValueWithoutWhitespace_returnsCost() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"calvintanwj"},"content":"        Cost expectedCost \u003d new Cost(Double.parseDouble(VALID_COST));","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedCost, ParserUtil.parseCost(VALID_COST));","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":265,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":266,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":267,"author":{"gitId":"calvintanwj"},"content":"    public void parseCost_validValueWithWhitespace_returnsTrimmedCost() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":268,"author":{"gitId":"calvintanwj"},"content":"        String costWithWhiteSpace \u003d WHITESPACE + VALID_COST + WHITESPACE;","lastModifiedDate":"2021-10-24"},{"lineNumber":269,"author":{"gitId":"calvintanwj"},"content":"        Cost expectedCost \u003d new Cost(Double.parseDouble(VALID_COST));","lastModifiedDate":"2021-10-24"},{"lineNumber":270,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedCost, ParserUtil.parseCost(costWithWhiteSpace));","lastModifiedDate":"2021-10-24"},{"lineNumber":271,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":272,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":273,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"calvintanwj"},"content":"    public void parseServiceName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":275,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseServiceName((String) null));","lastModifiedDate":"2021-10-24"},{"lineNumber":276,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":277,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":278,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":279,"author":{"gitId":"calvintanwj"},"content":"    public void parseServiceName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":280,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseServiceName(INVALID_SERVICE_NAME));","lastModifiedDate":"2021-10-24"},{"lineNumber":281,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":282,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":283,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":284,"author":{"gitId":"calvintanwj"},"content":"    public void parseServiceName_validValueWithoutWhitespace_returnsServiceName() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":285,"author":{"gitId":"calvintanwj"},"content":"        ServiceName expectedServiceName \u003d new ServiceName(VALID_SERVICE_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":286,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedServiceName, ParserUtil.parseServiceName(VALID_SERVICE_NAME));","lastModifiedDate":"2021-10-24"},{"lineNumber":287,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":288,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":289,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":290,"author":{"gitId":"calvintanwj"},"content":"    public void parseServiceName_validValueWithWhitespace_returnsTrimmedServiceName() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":291,"author":{"gitId":"calvintanwj"},"content":"        String serviceNameWithWhiteSpace \u003d WHITESPACE + VALID_SERVICE_NAME + WHITESPACE;","lastModifiedDate":"2021-10-24"},{"lineNumber":292,"author":{"gitId":"calvintanwj"},"content":"        ServiceName expectedServiceName \u003d new ServiceName(VALID_SERVICE_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":293,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedServiceName, ParserUtil.parseServiceName(serviceNameWithWhiteSpace));","lastModifiedDate":"2021-10-24"},{"lineNumber":294,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":295,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":296,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":297,"author":{"gitId":"calvintanwj"},"content":"    public void parseVendorId_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":298,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseVendorId((String) null));","lastModifiedDate":"2021-10-24"},{"lineNumber":299,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":300,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":301,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":302,"author":{"gitId":"calvintanwj"},"content":"    public void parseVendorId_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":303,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseVendorId(INVALID_VENDOR_ID));","lastModifiedDate":"2021-10-24"},{"lineNumber":304,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":305,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":306,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":307,"author":{"gitId":"calvintanwj"},"content":"    public void parseVendorId_validValueWithoutWhitespace_returnsVendorId() throws Exception {","lastModifiedDate":"2021-10-30"},{"lineNumber":308,"author":{"gitId":"calvintanwj"},"content":"        VendorId expectedVendorId \u003d new VendorId(VALID_VENDOR_ID);","lastModifiedDate":"2021-10-24"},{"lineNumber":309,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedVendorId, ParserUtil.parseVendorId(VALID_VENDOR_ID));","lastModifiedDate":"2021-10-30"},{"lineNumber":310,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":311,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":312,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":313,"author":{"gitId":"calvintanwj"},"content":"    public void parseVendorId_validValueWithWhitespace_returnsTrimmedVendorId() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":314,"author":{"gitId":"calvintanwj"},"content":"        String vendorIdWithWhiteSpace \u003d WHITESPACE + VALID_VENDOR_ID + WHITESPACE;","lastModifiedDate":"2021-10-24"},{"lineNumber":315,"author":{"gitId":"calvintanwj"},"content":"        VendorId expectedVendorId \u003d new VendorId(VALID_VENDOR_ID);","lastModifiedDate":"2021-10-24"},{"lineNumber":316,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedVendorId, ParserUtil.parseVendorId(vendorIdWithWhiteSpace));","lastModifiedDate":"2021-10-24"},{"lineNumber":317,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":318,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"calvintanwj":142,"-":177}},{"path":"src/test/java/seedu/address/logic/parser/PocketHotelParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VENDOR_ID;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_DEFAULT;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_DEFAULT;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.CheckInNewGuestCommand;","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.ClearGuestCommand;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.DeleteGuestCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.EditGuestCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.EditGuestCommand.EditGuestDescriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.ListGuestCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.AddVendorCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.ClearVendorCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.DeleteVendorCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.EditVendorCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.EditVendorCommand.EditVendorDescriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.ListVendorCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.EditGuestDescriptorBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.GuestBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.GuestUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.EditVendorDescriptorBuilder;","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.VendorBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.VendorUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"public class PocketHotelParserTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    private final PocketHotelParser parser \u003d new PocketHotelParser();","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_checkInGuest() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"        Guest guest \u003d new GuestBuilder().build();","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"alyssa-savier"},"content":"        CheckInNewGuestCommand command \u003d (CheckInNewGuestCommand) parser.parseCommand(GuestUtil.getAddCommand(guest));","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"alyssa-savier"},"content":"        assertEquals(new CheckInNewGuestCommand(guest), command);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_checkOutGuest() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_chargeGuest() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_addVendor() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        Vendor vendor \u003d new VendorBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        AddVendorCommand command \u003d (AddVendorCommand) parser.parseCommand(VendorUtil.getAddCommand(vendor));","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(new AddVendorCommand(vendor), command);","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_clearGuest() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(parser.parseCommand(ClearGuestCommand.COMMAND_WORD) instanceof ClearGuestCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(parser.parseCommand(ClearGuestCommand.COMMAND_WORD + \" 3\") instanceof ClearGuestCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_clearVendor() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(parser.parseCommand(ClearVendorCommand.COMMAND_WORD) instanceof ClearVendorCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(parser.parseCommand(ClearVendorCommand.COMMAND_WORD + \" 3\") instanceof ClearVendorCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"NicolasCwy"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"NicolasCwy"},"content":"    public void parseCommand_deleteGuest() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        DeleteGuestCommand command \u003d (DeleteGuestCommand) parser.parseCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"                DeleteGuestCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"NicolasCwy"},"content":"                        + PREFIX_PASSPORT_NUMBER + PASSPORT_NUMBER_FIRST_PERSON.toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(new DeleteGuestCommand(PASSPORT_NUMBER_FIRST_PERSON), command);","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_deleteVendor() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        DeleteVendorCommand command \u003d (DeleteVendorCommand) parser.parseCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"                DeleteVendorCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"                        + PREFIX_VENDOR_ID + VENDOR_ID_FIRST_PERSON.toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(new DeleteVendorCommand(VENDOR_ID_FIRST_PERSON), command);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_editGuest() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"rgbpokka"},"content":"        Guest guest \u003d new GuestBuilder().build();","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"rgbpokka"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder(guest).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"        EditGuestCommand command \u003d (EditGuestCommand) parser.parseCommand(EditGuestCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"NicolasCwy"},"content":"                + PASSPORT_NUMBER_DEFAULT + \" \" + GuestUtil.getEditGuestDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(new EditGuestCommand(PASSPORT_NUMBER_DEFAULT, descriptor), command);","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_editVendor() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        Vendor vendor \u003d new VendorBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"        EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder(vendor).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        EditVendorCommand command \u003d (EditVendorCommand) parser.parseCommand(EditVendorCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"                + VENDOR_ID_DEFAULT.toString() + \" \" + VendorUtil.getEditVendorDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(new EditVendorCommand(VENDOR_ID_DEFAULT, descriptor), command);","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_filterGuest() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"        Guest guest \u003d new GuestBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_filterVendor() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"        Vendor vendor \u003d new VendorBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_listGuest() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(parser.parseCommand(ListGuestCommand.COMMAND_WORD) instanceof ListGuestCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(parser.parseCommand(ListGuestCommand.COMMAND_WORD + \" 3\") instanceof ListGuestCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"    public void parseCommand_listVendor() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(parser.parseCommand(ListVendorCommand.COMMAND_WORD) instanceof ListVendorCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(parser.parseCommand(ListVendorCommand.COMMAND_WORD + \" 3\") instanceof ListVendorCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), (","lastModifiedDate":"2021-10-30"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"        ) -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"rgbpokka":3,"calvintanwj":95,"alyssa-savier":2,"-":52,"NicolasCwy":7}},{"path":"src/test/java/seedu/address/logic/parser/guest/ChargeGuestCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"public class ChargeGuestCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"    private ChargeGuestCommandParser parser \u003d new ChargeGuestCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"calvintanwj":7}},{"path":"src/test/java/seedu/address/logic/parser/guest/CheckInCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BENSON;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PASSPORT_NUMBER_DESC;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ROOM_NUMBER_DESC;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BENSON;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PASSPORT_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PASSPORT_NUMBER_DESC_BENSON;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROOM_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROOM_NUMBER_DESC_BENSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DELUXE_ROOM;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_VIP;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PASSPORT_NUMBER_ALICE;","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOM_NUMBER_ALICE;","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DELUXE_ROOM;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_VIP;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.ALICE_GUEST;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.CheckInNewGuestCommand;","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.RoomNumber;","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.GuestBuilder;","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"public class CheckInCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"alyssa-savier"},"content":"    private CheckInNewGuestCommandParser parser \u003d new CheckInNewGuestCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        Guest expectedGuest \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder(ALICE_GUEST).withTags(VALID_TAG_DELUXE_ROOM).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_ALICE + EMAIL_DESC_ALICE + ROOM_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"                        + TAG_DESC_DELUXE_ROOM + PASSPORT_NUMBER_DESC_ALICE,","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"alyssa-savier"},"content":"                new CheckInNewGuestCommand(expectedGuest));","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, NAME_DESC_BENSON + NAME_DESC_ALICE + EMAIL_DESC_ALICE + ROOM_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"                        + TAG_DESC_DELUXE_ROOM + PASSPORT_NUMBER_DESC_ALICE,","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"alyssa-savier"},"content":"                new CheckInNewGuestCommand(expectedGuest));","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        // multiple room numbers - last room number accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, NAME_DESC_ALICE + EMAIL_DESC_ALICE + ROOM_NUMBER_DESC_BENSON + ROOM_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"                        + TAG_DESC_DELUXE_ROOM + PASSPORT_NUMBER_DESC_ALICE,","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"alyssa-savier"},"content":"                new CheckInNewGuestCommand(expectedGuest));","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, NAME_DESC_ALICE + EMAIL_DESC_BENSON + EMAIL_DESC_ALICE + ROOM_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"                        + TAG_DESC_DELUXE_ROOM + PASSPORT_NUMBER_DESC_ALICE,","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"alyssa-savier"},"content":"                new CheckInNewGuestCommand(expectedGuest));","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        // multiple passport numbers - last passport number accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, NAME_DESC_ALICE + EMAIL_DESC_ALICE + ROOM_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"                        + TAG_DESC_DELUXE_ROOM + PASSPORT_NUMBER_DESC_BENSON + PASSPORT_NUMBER_DESC_ALICE,","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"alyssa-savier"},"content":"                new CheckInNewGuestCommand(expectedGuest));","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"        Guest expectedGuestMultipleTags \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder(ALICE_GUEST).withTags(VALID_TAG_VIP, VALID_TAG_DELUXE_ROOM).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, NAME_DESC_ALICE + EMAIL_DESC_ALICE + ROOM_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"                        + TAG_DESC_VIP + TAG_DESC_DELUXE_ROOM + PASSPORT_NUMBER_DESC_ALICE,","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"alyssa-savier"},"content":"                new CheckInNewGuestCommand(expectedGuestMultipleTags));","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"        // zero tags","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        Guest expectedGuest \u003d new GuestBuilder(ALICE_GUEST).withTags().build();","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, NAME_DESC_ALICE + EMAIL_DESC_ALICE + ROOM_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"                        + PASSPORT_NUMBER_DESC_ALICE,","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"alyssa-savier"},"content":"                new CheckInNewGuestCommand(expectedGuest));","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"alyssa-savier"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, CheckInNewGuestCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, VALID_NAME_ALICE + EMAIL_DESC_ALICE + ROOM_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"                + PASSPORT_NUMBER_DESC_ALICE, expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"        // missing email prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + VALID_EMAIL_ALICE + ROOM_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"                + PASSPORT_NUMBER_DESC_ALICE, expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        // missing room number prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + EMAIL_DESC_ALICE + VALID_ROOM_NUMBER_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"                + PASSPORT_NUMBER_DESC_ALICE, expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"        // missing passport number prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + EMAIL_DESC_ALICE + ROOM_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"                + VALID_PASSPORT_NUMBER_ALICE, expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"        // all prefixes missing","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"                VALID_NAME_ALICE + VALID_EMAIL_ALICE + VALID_ROOM_NUMBER_ALICE + VALID_PASSPORT_NUMBER_ALICE,","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"        // invalid name","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + EMAIL_DESC_ALICE + ROOM_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_VIP + TAG_DESC_DELUXE_ROOM + PASSPORT_NUMBER_DESC_ALICE, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"        // invalid room number","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + EMAIL_DESC_ALICE + INVALID_ROOM_NUMBER_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_VIP + TAG_DESC_DELUXE_ROOM + PASSPORT_NUMBER_DESC_ALICE, RoomNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"        // invalid email","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + INVALID_EMAIL_DESC + ROOM_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_VIP + TAG_DESC_DELUXE_ROOM + PASSPORT_NUMBER_DESC_ALICE, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"        // invalid tag","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + EMAIL_DESC_ALICE + ROOM_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"                + INVALID_TAG_DESC + TAG_DESC_DELUXE_ROOM + PASSPORT_NUMBER_DESC_ALICE, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"        // invalid passport number","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + EMAIL_DESC_ALICE + ROOM_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"                        + TAG_DESC_VIP + TAG_DESC_DELUXE_ROOM + INVALID_PASSPORT_NUMBER_DESC,","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"                PassportNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + EMAIL_DESC_ALICE + INVALID_ROOM_NUMBER_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"                + PASSPORT_NUMBER_DESC_ALICE, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_ELLE + EMAIL_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"                        + ROOM_NUMBER_DESC_ALICE + TAG_DESC_VIP + TAG_DESC_DELUXE_ROOM + PASSPORT_NUMBER_DESC_ALICE,","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"alyssa-savier"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CheckInNewGuestCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"calvintanwj":146,"alyssa-savier":10}},{"path":"src/test/java/seedu/address/logic/parser/guest/CheckoutCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"rgbpokka"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.logic.commands.guest.CheckOutCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"public class CheckoutCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    private CheckOutCommandParser parser \u003d new CheckOutCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"    public void parse_validPassportNumberArgs_returnsCheckoutCommand() {","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"        assertParseSuccess(parser, \"checkout pn/E0123122G\", new CheckOutCommand(PASSPORT_NUMBER_FIRST_PERSON));","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"    public void parse_invalidPassportNumberArgs_throwsParseException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"        assertParseFailure(parser, \"checkout pn/\",","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"                PassportNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"    public void parse_invalidCheckoutCommand_throwsParseException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"        assertParseFailure(parser, \"checkout\",","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"rgbpokka"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CheckOutCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"rgbpokka":26,"calvintanwj":8}},{"path":"src/test/java/seedu/address/logic/parser/guest/DeleteGuestCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_SECOND_PERSON;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.DeleteGuestCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"public class DeleteGuestCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"NicolasCwy"},"content":"    // @@author NicolasCwy","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"NicolasCwy"},"content":"    private DeleteGuestCommandParser parser \u003d new DeleteGuestCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"NicolasCwy"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"NicolasCwy"},"content":"    public void parse_validPassportNumberArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"NicolasCwy"},"content":"        assertParseSuccess(parser, \"deleteguest pn/\" + PASSPORT_NUMBER_FIRST_PERSON,","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"NicolasCwy"},"content":"                new DeleteGuestCommand(PASSPORT_NUMBER_FIRST_PERSON));","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"NicolasCwy"},"content":"        assertParseSuccess(parser, \"deleteguest pn/\" + PASSPORT_NUMBER_SECOND_PERSON,","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"NicolasCwy"},"content":"                new DeleteGuestCommand(PASSPORT_NUMBER_SECOND_PERSON));","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"NicolasCwy"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"NicolasCwy"},"content":"    public void parse_invalidDeleteCommand_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"NicolasCwy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteGuestCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"NicolasCwy"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"calvintanwj":19,"NicolasCwy":19}},{"path":"src/test/java/seedu/address/logic/parser/guest/EditGuestCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PASSPORT_NUMBER_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ROOM_NUMBER_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BENSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PASSPORT_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PASSPORT_NUMBER_DESC_BENSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROOM_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROOM_NUMBER_DESC_BENSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DELUXE_ROOM;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_VIP;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PASSPORT_NUMBER_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOM_NUMBER_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DELUXE_ROOM;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_VIP;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.EditGuestCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.EditGuestCommand.EditGuestDescriptor;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.RoomNumber;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.EditGuestDescriptorBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"public class EditGuestCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditGuestCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    private EditGuestCommandParser parser \u003d new EditGuestCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    public void parse_validPassportNumberArgs_returnsEditCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        EditGuestDescriptor editGuestDescriptor \u003d new EditGuestDescriptor();","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"rgbpokka"},"content":"        editGuestDescriptor.setPassportNumber(new PassportNumber(VALID_PASSPORT_NUMBER_ALICE));","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"        editGuestDescriptor.setRoomNumber(new RoomNumber(VALID_ROOM_NUMBER_ALICE));","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"                EditGuestCommand.COMMAND_WORD","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"rgbpokka"},"content":"                        + PASSPORT_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"rgbpokka"},"content":"                        + ROOM_NUMBER_DESC_ALICE,","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"                new EditGuestCommand(new PassportNumber(VALID_PASSPORT_NUMBER_ALICE), editGuestDescriptor));","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"    public void parse_invalidValueForGuest_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        String partialUserInput \u003d EditGuestCommand.COMMAND_WORD","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"                + \" \"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"                + PREFIX_PASSPORT_NUMBER","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"                + PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, \"editguest pn/ n/zulu\",","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"                PassportNumber.MESSAGE_CONSTRAINTS); // invalid passport number","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_PASSPORT_NUMBER_DESC,","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"                PassportNumber.MESSAGE_CONSTRAINTS); // invalid room number","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_ROOM_NUMBER_DESC,","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"                RoomNumber.MESSAGE_CONSTRAINTS); // invalid room number","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"        // invalid room number followed by valid email","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_ROOM_NUMBER_DESC + EMAIL_DESC_ALICE,","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"                RoomNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        // valid room number followed by invalid room number. The test case for invalid room number followed","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        // by valid room number","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"rgbpokka"},"content":"        assertParseFailure(parser, partialUserInput + ROOM_NUMBER_DESC_ALICE + INVALID_ROOM_NUMBER_DESC,","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"                RoomNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"rgbpokka"},"content":"        assertParseFailure(parser, partialUserInput + TAG_DESC_VIP + TAG_DESC_DELUXE_ROOM","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"                        + TAG_EMPTY,","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"rgbpokka"},"content":"        assertParseFailure(parser, partialUserInput + TAG_DESC_VIP + TAG_EMPTY + TAG_DESC_DELUXE_ROOM,","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"rgbpokka"},"content":"        assertParseFailure(parser, partialUserInput + TAG_EMPTY + TAG_DESC_VIP + TAG_DESC_DELUXE_ROOM,","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ROOM_NUMBER_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"                        + VALID_PASSPORT_NUMBER_ALICE,","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"    public void parse_allFieldsSpecifiedForGuest_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"        PassportNumber targetPassportNumber \u003d new PassportNumber(VALID_PASSPORT_NUMBER_ALICE);","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"        String userInput \u003d EditGuestCommand.COMMAND_WORD","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"                + PASSPORT_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_DELUXE_ROOM","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"                + NAME_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"                + EMAIL_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_VIP","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"                + ROOM_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"                .withPassportNumber(VALID_PASSPORT_NUMBER_ALICE)","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"                .withName(VALID_NAME_ALICE)","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(VALID_EMAIL_ALICE)","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"                .withRoomNumber(VALID_ROOM_NUMBER_ALICE)","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"                .withTags(VALID_TAG_VIP, VALID_TAG_DELUXE_ROOM)","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"        EditGuestCommand expectedCommand \u003d new EditGuestCommand(targetPassportNumber, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"    public void parse_someFieldsSpecifiedForGuest_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"        PassportNumber targetPassportNumber \u003d new PassportNumber(VALID_PASSPORT_NUMBER_ALICE);","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"        String userInput \u003d EditGuestCommand.COMMAND_WORD","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"                + PASSPORT_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"                + ROOM_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"                .withPassportNumber(VALID_PASSPORT_NUMBER_ALICE)","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"                .withRoomNumber(VALID_ROOM_NUMBER_ALICE)","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"        EditGuestCommand expectedCommand \u003d new EditGuestCommand(targetPassportNumber, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"    public void parse_multipleRepeatedFieldsForGuest_acceptsLast() {","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"        PassportNumber targetPassportNumber \u003d new PassportNumber(VALID_PASSPORT_NUMBER_ALICE);","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"        String userInput \u003d EditGuestCommand.COMMAND_WORD","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"                + PASSPORT_NUMBER_DESC_BENSON","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"                + NAME_DESC_BENSON","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"                + ROOM_NUMBER_DESC_BENSON","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"                + PASSPORT_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_DELUXE_ROOM","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"                + NAME_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"                + EMAIL_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_VIP","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"                + ROOM_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"                .withPassportNumber(VALID_PASSPORT_NUMBER_ALICE)","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"                .withName(VALID_NAME_ALICE)","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(VALID_EMAIL_ALICE)","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"                .withRoomNumber(VALID_ROOM_NUMBER_ALICE)","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"                .withTags(VALID_TAG_VIP, VALID_TAG_DELUXE_ROOM)","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"        EditGuestCommand expectedCommand \u003d new EditGuestCommand(targetPassportNumber, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"    public void parse_invalidValueFollowedByValidValueForGuest_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"        PassportNumber targetPassportNumber \u003d new PassportNumber(VALID_PASSPORT_NUMBER_ALICE);","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"        String userInput \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"                EditGuestCommand.COMMAND_WORD + PASSPORT_NUMBER_DESC_ALICE + INVALID_EMAIL_DESC + ROOM_NUMBER_DESC_ALICE","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"                        + EMAIL_DESC_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"        EditGuestDescriptor descriptor \u003d new EditGuestDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"                .withPassportNumber(VALID_PASSPORT_NUMBER_ALICE)","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"                .withRoomNumber(VALID_ROOM_NUMBER_ALICE)","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(VALID_EMAIL_ALICE)","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"        EditGuestCommand expectedCommand \u003d new EditGuestCommand(targetPassportNumber, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"calvintanwj"},"content":"    public void parse_resetTagsForGuest_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"        PassportNumber targetPassportNumber \u003d new PassportNumber(VALID_PASSPORT_NUMBER_ALICE);","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"calvintanwj"},"content":"        String userInput \u003d EditGuestCommand.COMMAND_WORD + PASSPORT_NUMBER_DESC_ALICE + TAG_EMPTY;","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"calvintanwj"},"content":"        EditGuestDescriptor descriptor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"calvintanwj"},"content":"                new EditGuestDescriptorBuilder().withPassportNumber(VALID_PASSPORT_NUMBER_ALICE).withTags().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"calvintanwj"},"content":"        EditGuestCommand expectedCommand \u003d new EditGuestCommand(targetPassportNumber, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"rgbpokka":9,"calvintanwj":189}},{"path":"src/test/java/seedu/address/logic/parser/guest/FilterGuestCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PASSPORT_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PASSPORT_NUMBER_DESC_CARL;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VENDOR_ID_DESC_DANIEL;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VENDOR_ID_DESC_ELLE;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.FilterGuestCommand;","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestPredicate;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"public class FilterGuestCommandParserTest {","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    private FilterGuestCommandParser parser \u003d new FilterGuestCommandParser();","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterGuestCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    public void parse_wrongArguments_throwsParseException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"                FilterGuestCommand.COMMAND_WORD + \" \" + VENDOR_ID_DESC_DANIEL + \" \" + VENDOR_ID_DESC_ELLE,","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterGuestCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    public void parse_moreWrongArguments_throwsParseException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"                FilterGuestCommand.COMMAND_WORD + \" \" + PASSPORT_NUMBER_DESC_ALICE + \" \" + PASSPORT_NUMBER_DESC_CARL,","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterGuestCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    public void parse_prefixButNoArg_throwsParseException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, FilterGuestCommand.COMMAND_WORD","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"                        + \" \" + PREFIX_TAG,","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterGuestCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        FilterGuestCommand expectedFilterCommand \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"                new FilterGuestCommand(","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"                        new GuestPredicate(Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"                                Optional.of(Set.of(new Tag(\"Vip\")))));","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, TAG_DESC_ALICE, expectedFilterCommand);","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        // whitespaces between keywords","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_TAG + \"     \" + VALID_TAG_ALICE, expectedFilterCommand);","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"calvintanwj":66}},{"path":"src/test/java/seedu/address/logic/parser/vendor/AddVendorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COST_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COST_DESC_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COST_DESC_NOT_POSITIVE;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_OPERATING_HOURS_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SERVICE_NAME_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_VENDOR_ID_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OPERATING_HOURS_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OPERATING_HOURS_DESC_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SERVICE_NAME_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SERVICE_NAME_DESC_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CHEAP;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DANIEL;","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HIGH_RATINGS;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COST_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OPERATING_HOURS_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SERVICE_NAME_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CHEAP;","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HIGH_RATINGS;","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VENDOR_ID_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VENDOR_ID_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VENDOR_ID_DESC_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.DANIEL_VENDOR;","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.AddVendorCommand;","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Address;","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Cost;","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.OperatingHours;","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Phone;","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ServiceName;","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.VendorBuilder;","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"public class AddVendorCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"    private AddVendorCommandParser parser \u003d new AddVendorCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        Vendor expectedVendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder(DANIEL_VENDOR).withTags(VALID_TAG_HIGH_RATINGS).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_DANIEL + PHONE_DESC_DANIEL + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"                + ADDRESS_DESC_DANIEL + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_DANIEL + COST_DESC_DANIEL","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"                + OPERATING_HOURS_DESC_DANIEL + SERVICE_NAME_DESC_DANIEL, new AddVendorCommand(expectedVendor));","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, NAME_DESC_ELLE + NAME_DESC_DANIEL + PHONE_DESC_DANIEL + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"                        + ADDRESS_DESC_DANIEL + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_DANIEL + COST_DESC_DANIEL","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"                        + OPERATING_HOURS_DESC_DANIEL + SERVICE_NAME_DESC_DANIEL,","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"                new AddVendorCommand(expectedVendor));","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, NAME_DESC_DANIEL + PHONE_DESC_ELLE + PHONE_DESC_DANIEL + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"                        + ADDRESS_DESC_DANIEL + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_DANIEL + COST_DESC_DANIEL","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"                        + OPERATING_HOURS_DESC_DANIEL + SERVICE_NAME_DESC_DANIEL,","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"                new AddVendorCommand(expectedVendor));","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, NAME_DESC_DANIEL + PHONE_DESC_DANIEL + EMAIL_DESC_ELLE + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"                        + ADDRESS_DESC_DANIEL + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_DANIEL + COST_DESC_DANIEL","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"                        + OPERATING_HOURS_DESC_DANIEL + SERVICE_NAME_DESC_DANIEL,","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"                new AddVendorCommand(expectedVendor));","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, NAME_DESC_DANIEL + PHONE_DESC_DANIEL + EMAIL_DESC_DANIEL + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"                        + ADDRESS_DESC_DANIEL + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_DANIEL + COST_DESC_DANIEL","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"                        + OPERATING_HOURS_DESC_DANIEL + SERVICE_NAME_DESC_DANIEL,","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"                new AddVendorCommand(expectedVendor));","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"        // multiple vendor id - last vendorId accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, NAME_DESC_DANIEL + PHONE_DESC_DANIEL + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"                        + ADDRESS_DESC_DANIEL + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_ELLE + VENDOR_ID_DESC_DANIEL","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"                        + COST_DESC_DANIEL + OPERATING_HOURS_DESC_DANIEL + SERVICE_NAME_DESC_DANIEL,","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"                new AddVendorCommand(expectedVendor));","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"        // multiple cost - last cost accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, NAME_DESC_DANIEL + PHONE_DESC_DANIEL + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"                        + ADDRESS_DESC_DANIEL + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_DANIEL + COST_DESC_ELLE","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"                        + COST_DESC_DANIEL + OPERATING_HOURS_DESC_DANIEL + SERVICE_NAME_DESC_DANIEL,","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"                new AddVendorCommand(expectedVendor));","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"        // multiple serviceName - last serviceName accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, NAME_DESC_DANIEL + PHONE_DESC_DANIEL + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"                        + ADDRESS_DESC_DANIEL + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_DANIEL + COST_DESC_DANIEL","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"                        + OPERATING_HOURS_DESC_DANIEL + SERVICE_NAME_DESC_ELLE + SERVICE_NAME_DESC_DANIEL,","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"                new AddVendorCommand(expectedVendor));","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"        // multiple operating hours - last operating hours accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, NAME_DESC_DANIEL + PHONE_DESC_DANIEL + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"                        + ADDRESS_DESC_DANIEL + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_DANIEL + COST_DESC_DANIEL","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"                        + OPERATING_HOURS_DESC_ELLE + OPERATING_HOURS_DESC_DANIEL + SERVICE_NAME_DESC_DANIEL,","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"                new AddVendorCommand(expectedVendor));","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"        Vendor expectedVendorMultipleTags \u003d new VendorBuilder(DANIEL_VENDOR).withTags(VALID_TAG_HIGH_RATINGS,","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"                VALID_TAG_DANIEL, VALID_TAG_CHEAP).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, NAME_DESC_DANIEL + PHONE_DESC_DANIEL + EMAIL_DESC_DANIEL + ADDRESS_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"                        + TAG_DESC_HIGH_RATINGS + TAG_DESC_CHEAP + TAG_DESC_DANIEL + VENDOR_ID_DESC_DANIEL","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"                        + COST_DESC_DANIEL + OPERATING_HOURS_DESC_DANIEL + SERVICE_NAME_DESC_DANIEL,","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"                new AddVendorCommand(expectedVendorMultipleTags));","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"        // zero tags","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"        Vendor expectedVendor \u003d new VendorBuilder(DANIEL_VENDOR).withTags().build();","lastModifiedDate":"2021-10-30"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, NAME_DESC_DANIEL + PHONE_DESC_DANIEL + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"                        + ADDRESS_DESC_DANIEL + VENDOR_ID_DESC_DANIEL + COST_DESC_DANIEL","lastModifiedDate":"2021-10-30"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"                        + OPERATING_HOURS_DESC_DANIEL + SERVICE_NAME_DESC_DANIEL,","lastModifiedDate":"2021-10-30"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"                new AddVendorCommand(expectedVendor));","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddVendorCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, VALID_NAME_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"                        + VENDOR_ID_DESC_ELLE + COST_DESC_ELLE + OPERATING_HOURS_DESC_ELLE + SERVICE_NAME_DESC_ELLE,","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"        // missing phone prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + VALID_PHONE_ELLE + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"                        + VENDOR_ID_DESC_ELLE + COST_DESC_ELLE + OPERATING_HOURS_DESC_ELLE + SERVICE_NAME_DESC_ELLE,","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"        // missing email prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + VALID_EMAIL_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"                        + VENDOR_ID_DESC_ELLE + COST_DESC_ELLE + OPERATING_HOURS_DESC_ELLE + SERVICE_NAME_DESC_ELLE,","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"        // missing address prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + VALID_ADDRESS_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"                        + VENDOR_ID_DESC_ELLE + COST_DESC_ELLE + OPERATING_HOURS_DESC_ELLE + SERVICE_NAME_DESC_ELLE,","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"        // missing vendor id prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"                        + VALID_VENDOR_ID_ELLE + COST_DESC_ELLE + OPERATING_HOURS_DESC_ELLE + SERVICE_NAME_DESC_ELLE,","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"        // missing cost prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"                        + VENDOR_ID_DESC_ELLE + VALID_COST_ELLE + OPERATING_HOURS_DESC_ELLE + SERVICE_NAME_DESC_ELLE,","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"        // missing service name prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"                        + VENDOR_ID_DESC_ELLE + COST_DESC_ELLE + OPERATING_HOURS_DESC_ELLE + VALID_SERVICE_NAME_ELLE,","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"calvintanwj"},"content":"        // missing operating hours prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"calvintanwj"},"content":"                        + VENDOR_ID_DESC_ELLE + COST_DESC_ELLE + VALID_OPERATING_HOURS_ELLE + SERVICE_NAME_DESC_ELLE,","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"calvintanwj"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"calvintanwj"},"content":"        // all prefixes missing","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"                VALID_NAME_ELLE + VALID_PHONE_ELLE + VALID_EMAIL_ELLE + VALID_ADDRESS_ELLE + VENDOR_ID_DESC_ELLE","lastModifiedDate":"2021-10-30"},{"lineNumber":196,"author":{"gitId":"calvintanwj"},"content":"                        + VALID_COST_ELLE + VALID_OPERATING_HOURS_ELLE + VALID_SERVICE_NAME_ELLE,","lastModifiedDate":"2021-10-30"},{"lineNumber":197,"author":{"gitId":"calvintanwj"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"calvintanwj"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"calvintanwj"},"content":"        // invalid name","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_CHEAP + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_ELLE + COST_DESC_ELLE","lastModifiedDate":"2021-10-30"},{"lineNumber":205,"author":{"gitId":"calvintanwj"},"content":"                + OPERATING_HOURS_DESC_ELLE + SERVICE_NAME_DESC_ELLE, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":206,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"calvintanwj"},"content":"        // invalid phone","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + INVALID_PHONE_DESC + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_CHEAP + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_ELLE + COST_DESC_ELLE","lastModifiedDate":"2021-10-30"},{"lineNumber":210,"author":{"gitId":"calvintanwj"},"content":"                + OPERATING_HOURS_DESC_ELLE + SERVICE_NAME_DESC_ELLE, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":211,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"calvintanwj"},"content":"        // invalid email","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + INVALID_EMAIL_DESC + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_CHEAP + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_ELLE + COST_DESC_ELLE","lastModifiedDate":"2021-10-30"},{"lineNumber":215,"author":{"gitId":"calvintanwj"},"content":"                + OPERATING_HOURS_DESC_ELLE + SERVICE_NAME_DESC_ELLE, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":216,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"calvintanwj"},"content":"        // invalid address","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_CHEAP + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_ELLE + COST_DESC_ELLE","lastModifiedDate":"2021-10-30"},{"lineNumber":220,"author":{"gitId":"calvintanwj"},"content":"                + OPERATING_HOURS_DESC_ELLE + SERVICE_NAME_DESC_ELLE, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":221,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"calvintanwj"},"content":"        // invalid tag","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"calvintanwj"},"content":"                + INVALID_TAG_DESC + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_ELLE + COST_DESC_ELLE","lastModifiedDate":"2021-10-30"},{"lineNumber":225,"author":{"gitId":"calvintanwj"},"content":"                + OPERATING_HOURS_DESC_ELLE + SERVICE_NAME_DESC_ELLE, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":226,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"calvintanwj"},"content":"        // invalid vendor id","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_CHEAP + TAG_DESC_HIGH_RATINGS + INVALID_VENDOR_ID_DESC + COST_DESC_ELLE","lastModifiedDate":"2021-10-30"},{"lineNumber":230,"author":{"gitId":"calvintanwj"},"content":"                + OPERATING_HOURS_DESC_ELLE + SERVICE_NAME_DESC_ELLE, VendorId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":231,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"calvintanwj"},"content":"        // invalid cost","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_CHEAP + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_ELLE + INVALID_COST_DESC_NOT_POSITIVE","lastModifiedDate":"2021-10-30"},{"lineNumber":235,"author":{"gitId":"calvintanwj"},"content":"                + OPERATING_HOURS_DESC_ELLE + SERVICE_NAME_DESC_ELLE, Cost.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":236,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"calvintanwj"},"content":"        // invalid service name","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_CHEAP + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_ELLE + COST_DESC_ELLE","lastModifiedDate":"2021-10-30"},{"lineNumber":240,"author":{"gitId":"calvintanwj"},"content":"                + OPERATING_HOURS_DESC_ELLE + INVALID_SERVICE_NAME_DESC, ServiceName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":241,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"calvintanwj"},"content":"        // invalid operating hours","lastModifiedDate":"2021-10-24"},{"lineNumber":243,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + ADDRESS_DESC_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":244,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_CHEAP + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_ELLE + COST_DESC_ELLE","lastModifiedDate":"2021-10-30"},{"lineNumber":245,"author":{"gitId":"calvintanwj"},"content":"                + INVALID_OPERATING_HOURS_DESC + SERVICE_NAME_DESC_ELLE, OperatingHours.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":246,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"calvintanwj"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_ELLE + EMAIL_DESC_ELLE + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"calvintanwj"},"content":"                        + VENDOR_ID_DESC_ELLE + COST_DESC_ELLE + OPERATING_HOURS_DESC_ELLE + SERVICE_NAME_DESC_ELLE,","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"calvintanwj"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"calvintanwj"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_ELLE + PHONE_DESC_ELLE + EMAIL_DESC_ELLE","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"calvintanwj"},"content":"                        + ADDRESS_DESC_ELLE + TAG_DESC_CHEAP + TAG_DESC_HIGH_RATINGS + VENDOR_ID_DESC_ELLE","lastModifiedDate":"2021-10-30"},{"lineNumber":255,"author":{"gitId":"calvintanwj"},"content":"                        + COST_DESC_ELLE + OPERATING_HOURS_DESC_ELLE + SERVICE_NAME_DESC_ELLE,","lastModifiedDate":"2021-10-30"},{"lineNumber":256,"author":{"gitId":"calvintanwj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddVendorCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":257,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"calvintanwj":259}},{"path":"src/test/java/seedu/address/logic/parser/vendor/DeleteVendorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_SECOND_PERSON;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.DeleteVendorCommand;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"// @@author NicolasCwy","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"NicolasCwy"},"content":"public class DeleteVendorCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"NicolasCwy"},"content":"    private DeleteVendorCommandParser parser \u003d new DeleteVendorCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"NicolasCwy"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"NicolasCwy"},"content":"    public void parse_validVendorIdArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"NicolasCwy"},"content":"        assertParseSuccess(parser, \"deletevendor vid/\" + VENDOR_ID_FIRST_PERSON,","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"NicolasCwy"},"content":"                new DeleteVendorCommand(VENDOR_ID_FIRST_PERSON));","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"NicolasCwy"},"content":"        assertParseSuccess(parser, \"deletevendor vid/\" + VENDOR_ID_SECOND_PERSON,","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"NicolasCwy"},"content":"                new DeleteVendorCommand(VENDOR_ID_SECOND_PERSON));","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"NicolasCwy"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"NicolasCwy"},"content":"    public void parse_invalidDeleteCommand_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"NicolasCwy"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"NicolasCwy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteVendorCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"NicolasCwy"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"NicolasCwy"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"calvintanwj":11,"NicolasCwy":21}},{"path":"src/test/java/seedu/address/logic/parser/vendor/EditVendorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COST_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COST_DESC_NOT_DOUBLE;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COST_DESC_NOT_POSITIVE;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_OPERATING_HOURS_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SERVICE_NAME_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OPERATING_HOURS_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SERVICE_NAME_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CHEAP;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HIGH_RATINGS;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COST_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OPERATING_HOURS_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SERVICE_NAME_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CHEAP;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HIGH_RATINGS;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VENDOR_ID_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VENDOR_ID_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VENDOR_ID;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.EditGuestCommand;","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.EditVendorCommand;","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.EditVendorCommand.EditVendorDescriptor;","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Address;","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Cost;","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.OperatingHours;","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Phone;","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ServiceName;","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.EditVendorDescriptorBuilder;","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"public class EditVendorCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditVendorCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"    private EditVendorCommandParser parser \u003d new EditVendorCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    public void parse_validVendorIdArgs_returnsEditCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        EditVendorDescriptor editVendorDescriptor \u003d new EditVendorDescriptor();","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"rgbpokka"},"content":"        editVendorDescriptor.setVendorId(VENDOR_ID_FIRST_PERSON);","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"rgbpokka"},"content":"        editVendorDescriptor.setCost(new Cost(Double.valueOf(VALID_COST_DANIEL)));","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"rgbpokka"},"content":"                EditGuestCommand.COMMAND_WORD","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"rgbpokka"},"content":"                        + VENDOR_ID_DESC_DANIEL","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"rgbpokka"},"content":"                        + COST_DESC_DANIEL,","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"                new EditVendorCommand(VENDOR_ID_FIRST_PERSON, editVendorDescriptor));","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"    public void parse_invalidValueForVendor_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        String partialUserInput \u003d EditVendorCommand.COMMAND_WORD","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"                + \" \"","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"                + PREFIX_VENDOR_ID","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"                + VENDOR_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, \"edit vid/\", VendorId.MESSAGE_CONSTRAINTS); // invalid vendor id","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"                Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_COST_DESC_NOT_DOUBLE,","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"                Cost.INVALID_DOUBLE); // invalid cost (cost provided is not a double)","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_COST_DESC_NOT_POSITIVE,","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"                Cost.MESSAGE_CONSTRAINTS); // invalid cost (cost provided is not a double greater than 0.0)","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_SERVICE_NAME_DESC,","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"                ServiceName.MESSAGE_CONSTRAINTS); // invalid service name","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_OPERATING_HOURS_DESC,","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"                OperatingHours.MESSAGE_CONSTRAINTS); // invalid operating hours","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + INVALID_PHONE_DESC + EMAIL_DESC_ALICE, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + PHONE_DESC_DANIEL + INVALID_PHONE_DESC,","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + TAG_DESC_HIGH_RATINGS + TAG_DESC_CHEAP + TAG_EMPTY,","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + TAG_DESC_HIGH_RATINGS + TAG_EMPTY + TAG_DESC_CHEAP,","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, partialUserInput + TAG_EMPTY + TAG_DESC_HIGH_RATINGS + TAG_DESC_CHEAP,","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"                partialUserInput + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_DANIEL + VALID_PHONE_DANIEL,","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"    public void parse_allFieldsSpecifiedForVendor_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"        VendorId targetVendorId \u003d new VendorId(VALID_VENDOR_ID_DANIEL);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"        String userInput \u003d EditVendorCommand.COMMAND_WORD","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"                + VENDOR_ID_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"                + PHONE_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_CHEAP","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"                + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"                + ADDRESS_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"                + NAME_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_HIGH_RATINGS","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"                + COST_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"                + OPERATING_HOURS_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"                + SERVICE_NAME_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"        EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"                .withVendorId(VALID_VENDOR_ID_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"                .withName(VALID_NAME_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"                .withPhone(VALID_PHONE_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(VALID_EMAIL_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"                .withAddress(VALID_ADDRESS_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"                .withTags(VALID_TAG_CHEAP, VALID_TAG_HIGH_RATINGS)","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"                .withServiceName(VALID_SERVICE_NAME_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"                .withCost(VALID_COST_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"                .withOperatingHours(VALID_OPERATING_HOURS_DANIEL).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"        EditVendorCommand expectedCommand \u003d new EditVendorCommand(targetVendorId, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"    public void parse_someFieldsSpecifiedForVendor_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"        VendorId targetVendorId \u003d new VendorId(VALID_VENDOR_ID_DANIEL);","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"        String userInput \u003d EditVendorCommand.COMMAND_WORD","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"                + VENDOR_ID_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"                + ADDRESS_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"        EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"                .withVendorId(VALID_VENDOR_ID_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"                .withAddress(VALID_ADDRESS_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"        EditVendorCommand expectedCommand \u003d new EditVendorCommand(targetVendorId, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"    public void parse_multipleRepeatedFieldsForVendor_acceptsLast() {","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"        VendorId targetVendorId \u003d new VendorId(VALID_VENDOR_ID_DANIEL);","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"        String userInput \u003d EditVendorCommand.COMMAND_WORD","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"                + VENDOR_ID_DESC_DANIEL + PHONE_DESC_DANIEL + ADDRESS_DESC_DANIEL + EMAIL_DESC_DANIEL","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"                + TAG_DESC_HIGH_RATINGS + PHONE_DESC_ELLE + ADDRESS_DESC_ELLE + EMAIL_DESC_ELLE + TAG_DESC_HIGH_RATINGS","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"                + PHONE_DESC_DANIEL + ADDRESS_DESC_DANIEL + EMAIL_DESC_DANIEL + TAG_DESC_CHEAP;","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"        EditVendorCommand.EditVendorDescriptor descriptor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"                new EditVendorDescriptorBuilder().withVendorId(VALID_VENDOR_ID_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"                        .withPhone(VALID_PHONE_DANIEL).withEmail(VALID_EMAIL_DANIEL).withAddress(VALID_ADDRESS_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"                        .withTags(VALID_TAG_HIGH_RATINGS, VALID_TAG_CHEAP).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"        EditVendorCommand expectedCommand \u003d new EditVendorCommand(targetVendorId, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"calvintanwj"},"content":"    public void parse_invalidValueFollowedByValidValueForVendor_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"calvintanwj"},"content":"        // no other valid values specified","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"calvintanwj"},"content":"        VendorId targetVendorId \u003d new VendorId(VALID_VENDOR_ID_DANIEL);","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"calvintanwj"},"content":"        String userInput \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"                EditVendorCommand.COMMAND_WORD + VENDOR_ID_DESC_DANIEL + INVALID_PHONE_DESC + PHONE_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"calvintanwj"},"content":"        EditVendorDescriptor descriptor \u003d new EditVendorDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"calvintanwj"},"content":"                .withVendorId(VALID_VENDOR_ID_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"calvintanwj"},"content":"                .withPhone(VALID_PHONE_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"calvintanwj"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"calvintanwj"},"content":"        EditVendorCommand expectedCommand \u003d new EditVendorCommand(targetVendorId, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"calvintanwj"},"content":"        // other valid values specified","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"calvintanwj"},"content":"        userInput \u003d EditVendorCommand.COMMAND_WORD + VENDOR_ID_DESC_DANIEL + EMAIL_DESC_DANIEL + INVALID_PHONE_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"calvintanwj"},"content":"                + ADDRESS_DESC_DANIEL + PHONE_DESC_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"calvintanwj"},"content":"        descriptor \u003d new EditVendorDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"calvintanwj"},"content":"                .withVendorId(VALID_VENDOR_ID_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"calvintanwj"},"content":"                .withPhone(VALID_PHONE_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(VALID_EMAIL_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"calvintanwj"},"content":"                .withAddress(VALID_ADDRESS_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"calvintanwj"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"calvintanwj"},"content":"        expectedCommand \u003d new EditVendorCommand(targetVendorId, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"calvintanwj"},"content":"    public void parse_resetTagsForVendor_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"calvintanwj"},"content":"        VendorId targetVendorId \u003d new VendorId(VALID_VENDOR_ID_DANIEL);","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"calvintanwj"},"content":"        String userInput \u003d EditVendorCommand.COMMAND_WORD + VENDOR_ID_DESC_DANIEL + TAG_EMPTY;","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"calvintanwj"},"content":"        EditVendorDescriptor descriptor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"calvintanwj"},"content":"                new EditVendorDescriptorBuilder().withVendorId(VALID_VENDOR_ID_DANIEL).withTags().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"calvintanwj"},"content":"        EditVendorCommand expectedCommand \u003d new EditVendorCommand(targetVendorId, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"rgbpokka":7,"calvintanwj":221}},{"path":"src/test/java/seedu/address/logic/parser/vendor/FilterVendorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.logic.parser.vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PASSPORT_NUMBER_DESC_ALICE;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PASSPORT_NUMBER_DESC_CARL;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_ALICE;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_ALICE;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VENDOR_ID_DESC_DANIEL;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VENDOR_ID_DESC_ELLE;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.FilterVendorCommand;","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorPredicate;","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"public class FilterVendorCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    private FilterVendorCommandParser parser \u003d new FilterVendorCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterVendorCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    public void parse_wrongArguments_throwsParseException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"                FilterVendorCommand.COMMAND_WORD + \" \" + VENDOR_ID_DESC_DANIEL + \" \" + VENDOR_ID_DESC_ELLE,","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterVendorCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    public void parse_moreWrongArguments_throwsParseException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"                FilterVendorCommand.COMMAND_WORD + \" \" + PASSPORT_NUMBER_DESC_ALICE + \" \" + PASSPORT_NUMBER_DESC_CARL,","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterVendorCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    public void parse_prefixButNoArg_throwsParseException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        assertParseFailure(parser, FilterVendorCommand.COMMAND_WORD","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"                        + \" \" + PREFIX_TAG,","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterVendorCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        FilterVendorCommand expectedFilterCommand \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"                new FilterVendorCommand(","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"                        new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"                                Optional.of(Set.of(new Tag(\"Vip\"))), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"                                Optional.empty(), Optional.empty()));","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, TAG_DESC_ALICE, expectedFilterCommand);","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        // whitespaces between keywords","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_TAG + \"     \" + VALID_TAG_ALICE, expectedFilterCommand);","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"calvintanwj":68}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_GUESTS;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.ALICE_GUEST;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.BENSON_GUEST;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.guest.TypicalGuests.CARL_GUEST;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.guest.TypicalGuests.JEONGYEON_GUEST;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.DANIEL_VENDOR;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.ELLE_VENDOR;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumberContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.testutil.guest.ArchiveBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.GuestBookBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.testutil.vendor.VendorBookBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(new GuestBook(), new GuestBook(modelManager.getGuestBook()));","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(new VendorBook(), new VendorBook(modelManager.getVendorBook()));","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        userPrefs.setGuestBookFilePath(Paths.get(\"PH/book/file/path\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        userPrefs.setGuestBookFilePath(Paths.get(\"new/PH/book/file/path\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"    public void setGuestBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuestBookFilePath(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"    public void setGuestBookFilePath_validPath_setsGuestBookFilePath() {","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        Path path \u003d Paths.get(\"PH/book/file/path\");","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"        modelManager.setGuestBookFilePath(path);","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(path, modelManager.getGuestBookFilePath());","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    public void hasGuest_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasGuest(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"    public void hasGuest_guestNotInGuestBook_returnsFalse() {","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(modelManager.hasGuest(ALICE_GUEST));","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"    public void hasGuest_guestInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"        modelManager.addGuest(ALICE_GUEST);","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(modelManager.hasGuest(ALICE_GUEST));","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"    public void getFilteredGuestList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredGuestList().remove(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        GuestBook guestBook \u003d new GuestBookBuilder().withGuest(ALICE_GUEST).withGuest(BENSON_GUEST).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"        GuestBook differentGuestBook \u003d new GuestBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"rgbpokka"},"content":"        VendorBook vendorBook \u003d new VendorBookBuilder().withVendor(DANIEL_VENDOR).withVendor(ELLE_VENDOR).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"rgbpokka"},"content":"        VendorBook differentVendorBook \u003d new VendorBook();","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"rgbpokka"},"content":"        Archive archive \u003d new ArchiveBuilder().withArchivedGuest(CARL_GUEST).withArchivedGuest(JEONGYEON_GUEST).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"rgbpokka"},"content":"        Archive differentArchive \u003d new Archive();","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"rgbpokka"},"content":"        modelManager \u003d new ModelManager(guestBook, vendorBook, userPrefs, archive);","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"rgbpokka"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(guestBook, vendorBook, userPrefs, archive);","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"        // different guestBook -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"rgbpokka"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentGuestBook, vendorBook, userPrefs, archive)));","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"rgbpokka"},"content":"        // different vendorBook -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"rgbpokka"},"content":"        assertFalse(modelManager.equals(new ModelManager(guestBook, differentVendorBook, userPrefs, archive)));","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"        String[] keywords \u003d ALICE_GUEST.getPassportNumber().value.split(\"\\\\s+\");","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"        modelManager.updateFilteredGuestList(new PassportNumberContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"rgbpokka"},"content":"        assertFalse(modelManager.equals(new ModelManager(guestBook, vendorBook, userPrefs, archive)));","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"        modelManager.updateFilteredGuestList(PREDICATE_SHOW_ALL_GUESTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"        differentUserPrefs.setGuestBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"rgbpokka"},"content":"        assertFalse(modelManager.equals(new ModelManager(guestBook, vendorBook, differentUserPrefs, archive)));","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"rgbpokka"},"content":"        // different archive -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"rgbpokka"},"content":"        assertFalse(modelManager.equals(new ModelManager(guestBook, vendorBook, userPrefs, differentArchive)));","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"rgbpokka":22,"calvintanwj":33,"-":97}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    public void setPocketHotelFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setGuestBookFilePath(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"calvintanwj":2,"-":19}},{"path":"src/test/java/seedu/address/model/commonattributes/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.commonattributes;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"calvintanwj":1,"-":67}},{"path":"src/test/java/seedu/address/model/commonattributes/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.commonattributes;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"calvintanwj":4,"-":37}},{"path":"src/test/java/seedu/address/model/guest/GuestBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DELUXE_ROOM;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.ALICE_GUEST;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.uniquelist.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.GuestBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"public class GuestBookTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    private final GuestBook guestBook \u003d new GuestBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(Collections.emptyList(), guestBook.getGuestList());","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e guestBook.resetData(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    public void resetData_withValidReadOnlyGuestBook_replacesData() {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        GuestBook newData \u003d getTypicalGuestBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        guestBook.resetData(newData);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(newData, guestBook);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    public void resetData_withDuplicateGuests_throwsDuplicateItemException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        // Two guests with the same identity fields","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        Guest editedAlice \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder(ALICE_GUEST).withTags(VALID_TAG_DELUXE_ROOM)","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                        .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        List\u003cGuest\u003e newGuests \u003d Arrays.asList(ALICE_GUEST, editedAlice);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        GuestBookStub newData \u003d new GuestBookStub(newGuests);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e guestBook.resetData(newData));","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    public void hasGuest_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e guestBook.hasGuest(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    public void hasGuest_guestNotInGuestBook_returnsFalse() {","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(guestBook.hasGuest(ALICE_GUEST));","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    public void hasGuest_guestInGuestBook_returnsTrue() {","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        guestBook.addGuest(ALICE_GUEST);","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(guestBook.hasGuest(ALICE_GUEST));","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"    public void hasGuest_guestWithSameIdentityFieldsInGuestBook_returnsTrue() {","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        guestBook.addGuest(ALICE_GUEST);","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        Guest editedAlice \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder(ALICE_GUEST).withTags(VALID_TAG_DELUXE_ROOM)","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                        .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(guestBook.hasGuest(editedAlice));","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"    public void getGuestList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e guestBook.getGuestList().remove(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"     * A stub ReadOnlyGuestBook whose guest list can violate interface constraints.","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"    private static class GuestBookStub implements ReadOnlyGuestBook {","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"        private final ObservableList\u003cGuest\u003e guests \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        GuestBookStub(Collection\u003cGuest\u003e guests) {","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"            this.guests.setAll(guests);","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"        public ObservableList\u003cGuest\u003e getGuestList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"            return guests;","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"calvintanwj":43,"-":59}},{"path":"src/test/java/seedu/address/model/guest/GuestPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.guest;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.GuestBuilder;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"public class GuestPredicateTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    public void equals() {","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"        GuestPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.of(\"1232112SD\"), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"        GuestPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.of(\"1231212DF\"), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        GuestPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.of(\"1232112SD\"), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    public void test_passportNumberContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        GuestPredicate predicate \u003d new GuestPredicate(","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"23132D\"), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withPassportNumber(\"23132D\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        // Should be allowed","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new GuestPredicate(","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"23132d\"), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withPassportNumber(\"23132D\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new GuestPredicate(","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"   23132D   \"), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withPassportNumber(\"23132D\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    public void test_passportNumberDoesNotContainsKeywords_returnsFalse() {","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        GuestPredicate predicate \u003d new GuestPredicate(","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"12312D\"), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withPassportNumber(\"123\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withPassportNumber(\"312D\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        // Keywords match name, email and other respective fields, but does not match passport number","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new GuestPredicate(","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"12312D\"), Optional.of(\"123\"), Optional.of(\"Alice\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"alice@email.com\"), Optional.of(Set.of(new Tag(\"VIP\"))));","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new GuestBuilder().withName(\"Alice\").withRoomNumber(\"123\")","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(\"alice@email.com\").withTags(\"VIP\").withPassportNumber(\"123\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"        GuestPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.of(\"bill\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"        // Matching keywords (case-insensitive)","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withName(\"Bill Nye\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.of(\"BiLl\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withName(\"Bill Nye\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.of(\"ill\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withName(\"Bill Nye\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.of(\"ill n\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withName(\"Bill Nye\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.of(\"nye\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withName(\"Bill Nye\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.of(\"   nye    \"),","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withName(\"Bill Nye\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"        GuestPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.of(\"bill\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-30"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new GuestBuilder().withName(\"Bing Cheng\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.of(\"cheng bing\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new GuestBuilder().withName(\"Bing Cheng\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"        // Keywords match passport number, email and other respective fields, but does not match name","lastModifiedDate":"2021-10-30"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new GuestPredicate(","lastModifiedDate":"2021-10-30"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"12312D\"), Optional.of(\"123\"), Optional.of(\"Alice\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"alice@email.com\"), Optional.of(Set.of(new Tag(\"VIP\"))));","lastModifiedDate":"2021-10-30"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new GuestBuilder().withName(\"Bob\").withRoomNumber(\"123\")","lastModifiedDate":"2021-10-30"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(\"alice@email.com\").withTags(\"VIP\").withPassportNumber(\"12312D\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"    public void test_roomNumberContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-30"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"        GuestPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.of(\"1\"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withRoomNumber(\"123\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.of(\"12\"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withRoomNumber(\"123\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.of(\"123\"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withRoomNumber(\"123\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.of(\"  123  \"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withRoomNumber(\"123\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"    public void test_roomNumberDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-30"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"        GuestPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.of(\"1\"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":187,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":188,"author":{"gitId":"calvintanwj"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-30"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":190,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withRoomNumber(\"20\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":191,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":192,"author":{"gitId":"calvintanwj"},"content":"        // Non-level 1 room but contains 1","lastModifiedDate":"2021-10-30"},{"lineNumber":193,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":194,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withRoomNumber(\"201\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":196,"author":{"gitId":"calvintanwj"},"content":"        // Keywords match passport number, email and other respective fields, but does not match room number","lastModifiedDate":"2021-10-30"},{"lineNumber":197,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new GuestPredicate(","lastModifiedDate":"2021-10-30"},{"lineNumber":198,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"12312D\"), Optional.of(\"123\"), Optional.of(\"Alice\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":199,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"alice@email.com\"), Optional.of(Set.of(new Tag(\"VIP\"))));","lastModifiedDate":"2021-10-30"},{"lineNumber":200,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new GuestBuilder().withName(\"Alice\").withRoomNumber(\"456\")","lastModifiedDate":"2021-10-30"},{"lineNumber":201,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(\"alice@email.com\").withTags(\"VIP\").withPassportNumber(\"12312D\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":202,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":203,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":204,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":205,"author":{"gitId":"calvintanwj"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-30"},{"lineNumber":206,"author":{"gitId":"calvintanwj"},"content":"        GuestPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":207,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":208,"author":{"gitId":"calvintanwj"},"content":"                        Optional.of(\"@email.com\"), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":209,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":210,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":211,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":212,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":213,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":214,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":215,"author":{"gitId":"calvintanwj"},"content":"                        Optional.of(\"alice\"), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":216,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":217,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":218,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":219,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":220,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":221,"author":{"gitId":"calvintanwj"},"content":"                        Optional.of(\"ce@em\"), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":222,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":223,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":224,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":225,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":226,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":227,"author":{"gitId":"calvintanwj"},"content":"                        Optional.of(\"AlICe\"), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":228,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":229,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":230,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":231,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":232,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":233,"author":{"gitId":"calvintanwj"},"content":"                        Optional.of(\"  lice  \"), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":234,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":235,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":236,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":237,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":238,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":239,"author":{"gitId":"calvintanwj"},"content":"    public void test_emailDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-30"},{"lineNumber":240,"author":{"gitId":"calvintanwj"},"content":"        GuestPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":241,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":242,"author":{"gitId":"calvintanwj"},"content":"                        Optional.of(\"ace\"), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":243,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":244,"author":{"gitId":"calvintanwj"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-30"},{"lineNumber":245,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":246,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":247,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":248,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":249,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":250,"author":{"gitId":"calvintanwj"},"content":"                        Optional.of(\"emailalice\"), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":251,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":252,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":253,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":254,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":255,"author":{"gitId":"calvintanwj"},"content":"        // Keywords match passport number, name and other respective fields, but does not match email","lastModifiedDate":"2021-10-30"},{"lineNumber":256,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new GuestPredicate(","lastModifiedDate":"2021-10-30"},{"lineNumber":257,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"12312D\"), Optional.of(\"123\"), Optional.of(\"Alice\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":258,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"alice@email.com\"), Optional.of(Set.of(new Tag(\"VIP\"))));","lastModifiedDate":"2021-10-30"},{"lineNumber":259,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new GuestBuilder().withName(\"Alice\").withRoomNumber(\"123\")","lastModifiedDate":"2021-10-30"},{"lineNumber":260,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(\"bob@email.com\").withTags(\"VIP\").withPassportNumber(\"12312D\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":261,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":262,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":263,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":264,"author":{"gitId":"calvintanwj"},"content":"    public void test_tagsContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-30"},{"lineNumber":265,"author":{"gitId":"calvintanwj"},"content":"        GuestPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":266,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":267,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.of(Set.of(new Tag(\"VIP\"))));","lastModifiedDate":"2021-10-30"},{"lineNumber":268,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":269,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":270,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withTags(\"Vip\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":271,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":272,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":273,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":274,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.of(Set.of(new Tag(\"ViP\"))));","lastModifiedDate":"2021-10-30"},{"lineNumber":275,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":276,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":277,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withTags(\"Vip\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":278,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":279,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":280,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":281,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.of(Set.of(new Tag(\"  vip  \"))));","lastModifiedDate":"2021-10-30"},{"lineNumber":282,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":283,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":284,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withTags(\"Vip\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":285,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":286,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":287,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":288,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.of(Set.of(new Tag(\"vip\"), new Tag(\"second\"))));","lastModifiedDate":"2021-10-30"},{"lineNumber":289,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":290,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":291,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withTags(\"Vip\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":292,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":293,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":294,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withTags(\"Second\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":295,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":296,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":297,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":298,"author":{"gitId":"calvintanwj"},"content":"    public void test_tagsDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-30"},{"lineNumber":299,"author":{"gitId":"calvintanwj"},"content":"        GuestPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":300,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":301,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.of(Set.of(new Tag(\"qwert\"))));","lastModifiedDate":"2021-10-30"},{"lineNumber":302,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":303,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":304,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withTags(\"Vip\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":305,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":306,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":307,"author":{"gitId":"calvintanwj"},"content":"                new GuestPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":308,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.of(Set.of(new Tag(\"ip\"))));","lastModifiedDate":"2021-10-30"},{"lineNumber":309,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":310,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withTags(\"Vip\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":311,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":312,"author":{"gitId":"calvintanwj"},"content":"        // Keywords match passport number, name and other respective fields, but does not match tags","lastModifiedDate":"2021-10-30"},{"lineNumber":313,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new GuestPredicate(","lastModifiedDate":"2021-10-30"},{"lineNumber":314,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"12312D\"), Optional.of(\"123\"), Optional.of(\"Alice\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":315,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"alice@email.com\"), Optional.of(Set.of(new Tag(\"Deluxe\"))));","lastModifiedDate":"2021-10-30"},{"lineNumber":316,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new GuestBuilder().withName(\"Alice\").withRoomNumber(\"123\")","lastModifiedDate":"2021-10-30"},{"lineNumber":317,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(\"alice@email.com\").withTags(\"Suite\").withPassportNumber(\"12312D\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":318,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":319,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":320,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"calvintanwj":320}},{"path":"src/test/java/seedu/address/model/guest/GuestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BENSON;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BENSON;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PASSPORT_NUMBER_BENSON;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOM_NUMBER_BENSON;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DELUXE_ROOM;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.ALICE_GUEST;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.BENSON_GUEST;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.GuestBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"public class GuestTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"        Guest guest \u003d new GuestBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e guest.getTags().remove(0));","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    public void isSame() {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(ALICE_GUEST.isSame(ALICE_GUEST));","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.isSame(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        // same passport number, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        Guest editedAlice \u003d new GuestBuilder(ALICE_GUEST)","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"                .withName(VALID_NAME_BENSON)","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(VALID_EMAIL_BENSON)","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"                .withRoomNumber(VALID_ROOM_NUMBER_BENSON)","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"                .withTags(VALID_TAG_DELUXE_ROOM)","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                .build();","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(ALICE_GUEST.isSame(editedAlice));","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        // different passport number, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        editedAlice \u003d new GuestBuilder(ALICE_GUEST).withPassportNumber(VALID_PASSPORT_NUMBER_BENSON).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.isSame(editedAlice));","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        // Passport number has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        String passportWithTrailingSpaces \u003d VALID_PASSPORT_NUMBER_BENSON + \"  \";","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        editedAlice \u003d new GuestBuilder(ALICE_GUEST).withPassportNumber(passportWithTrailingSpaces).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.isSame(editedAlice));","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    public void equals() {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        Guest aliceCopy \u003d new GuestBuilder(ALICE_GUEST).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(ALICE_GUEST.equals(aliceCopy));","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(ALICE_GUEST.equals(ALICE_GUEST));","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.equals(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.equals(5));","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        // different guest -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.equals(BENSON_GUEST));","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        // different passport number -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        Guest editedFiona \u003d new GuestBuilder(ALICE_GUEST).withPassportNumber(VALID_PASSPORT_NUMBER_BENSON).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.equals(editedFiona));","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        editedFiona \u003d new GuestBuilder(ALICE_GUEST).withName(VALID_NAME_BENSON).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.equals(editedFiona));","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        // different room number -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"        editedFiona \u003d new GuestBuilder(ALICE_GUEST).withRoomNumber(VALID_ROOM_NUMBER_BENSON).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.equals(editedFiona));","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"        editedFiona \u003d new GuestBuilder(ALICE_GUEST).withEmail(VALID_EMAIL_BENSON).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.equals(editedFiona));","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"        editedFiona \u003d new GuestBuilder(ALICE_GUEST).withTags(VALID_TAG_DELUXE_ROOM).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ALICE_GUEST.equals(editedFiona));","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"calvintanwj":94}},{"path":"src/test/java/seedu/address/model/guest/PassportNumberContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.guest;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_FIRST_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_SECOND_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.GuestBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"public class PassportNumberContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    public void equals() {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"        PassportNumberContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"                new PassportNumberContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        PassportNumberContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"                new PassportNumberContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        PassportNumberContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"                new PassportNumberContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    public void test_identifierContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        // Test for Guest","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        PassportNumberContainsKeywordsPredicate predicate \u003d new PassportNumberContainsKeywordsPredicate(","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"                Collections.singletonList(PASSPORT_NUMBER_FIRST_PERSON.toString()));","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withPassportNumber(PASSPORT_NUMBER_FIRST_PERSON.toString()).build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new PassportNumberContainsKeywordsPredicate(","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"                Collections.singletonList(PASSPORT_NUMBER_SECOND_PERSON.toString()));","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withPassportNumber(PASSPORT_NUMBER_SECOND_PERSON.toString()).build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        PassportNumberContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"                new PassportNumberContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"                predicate.test(new GuestBuilder().withPassportNumber(PASSPORT_NUMBER_FIRST_PERSON.toString()).build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new PassportNumberContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withPassportNumber(PASSPORT_NUMBER_FIRST_PERSON.toString()).build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new PassportNumberContainsKeywordsPredicate(Arrays.asList(PASSPORT_NUMBER_FIRST_PERSON.toString()));","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder().withPassportNumber(PASSPORT_NUMBER_SECOND_PERSON.toString()).build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new PassportNumberContainsKeywordsPredicate(","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"                Collections.singletonList(PASSPORT_NUMBER_FIRST_PERSON.toString()));","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new GuestBuilder().withPassportNumber(","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"                PASSPORT_NUMBER_SECOND_PERSON.toString()).build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        // Keywords match name, email and other respective fields, but does not match identifier","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new PassportNumberContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"12345\", \"alice@email.com\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new GuestBuilder().withName(\"Alice\").withRoomNumber(\"12345\")","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(\"alice@email.com\").withPassportNumber(\"T12312123E\").build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"calvintanwj":88}},{"path":"src/test/java/seedu/address/model/guest/PassportNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"public class PassportNumberTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PassportNumber(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_invalidPassportNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"        String invalidPassportNumber \u003d \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PassportNumber(invalidPassportNumber));","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    public void isValidPassportNumber() {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        // null passport number","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e PassportNumber.isValidPassportNumber(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        // invalid passport numbers","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(PassportNumber.isValidPassportNumber(\"\")); // empty string","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(PassportNumber.isValidPassportNumber(\" \")); // spaces only","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(PassportNumber.isValidPassportNumber(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(PassportNumber.isValidPassportNumber(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        // valid passport numbers","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(PassportNumber.isValidPassportNumber(\"fdsfsdafs\")); // alphabets only","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(PassportNumber.isValidPassportNumber(\"12345312312\")); // numbers only","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(PassportNumber.isValidPassportNumber(\"fsdaf2312\")); // alphanumeric characters","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(PassportNumber.isValidPassportNumber(\"AFSRESDFDS\")); // with capital letters","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(PassportNumber.isValidPassportNumber(\"32131211D\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"calvintanwj":41}},{"path":"src/test/java/seedu/address/model/guest/RoomNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"public class RoomNumberTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new RoomNumber(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_invalidRoomNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"        String invalidRoomNumber \u003d \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new RoomNumber(invalidRoomNumber));","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    public void isValidRoomNumber() {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        // null room number","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e RoomNumber.isValidRoomNumber(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        // invalid room number","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(RoomNumber.isValidRoomNumber(\"\")); // empty string","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(RoomNumber.isValidRoomNumber(\" \")); // spaces only","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(RoomNumber.isValidRoomNumber(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(RoomNumber.isValidRoomNumber(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(RoomNumber.isValidRoomNumber(\"-32131\")); // negative numbers","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(RoomNumber.isValidRoomNumber(\"2312D\")); // contains letter","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(RoomNumber.isValidRoomNumber(\"000\")); // 0","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        // valid room number","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(RoomNumber.isValidRoomNumber(\"2312312312\")); // number greater than 0","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"calvintanwj":40}},{"path":"src/test/java/seedu/address/model/guest/UniqueGuestListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DELUXE_ROOM;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.ALICE_GUEST;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.BENSON_GUEST;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.uniquelist.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.uniquelist.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.GuestBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"public class UniqueGuestListTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    private final UniqueGuestList uniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    public void contains_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.contains(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    public void contains_guestNotInList_returnsFalse() {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(uniqueGuestList.contains(ALICE_GUEST));","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    public void contains_guestInList_returnsTrue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        uniqueGuestList.add(ALICE_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(uniqueGuestList.contains(ALICE_GUEST));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    public void contains_guestWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        uniqueGuestList.add(ALICE_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        Guest editedFiona \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder(ALICE_GUEST).withTags(VALID_TAG_DELUXE_ROOM)","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(uniqueGuestList.contains(editedFiona));","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    public void add_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.add(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    public void add_duplicateGuest_throwsDuplicateGuestException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        uniqueGuestList.add(ALICE_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniqueGuestList.add(ALICE_GUEST));","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    public void setGuest_nullTargetGuest_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.setItem(null, ALICE_GUEST));","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    public void setGuest_nullEditedGuest_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.setItem(ALICE_GUEST, null));","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    public void setGuest_targetGuestNotInList_throwsItemNotFoundException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniqueGuestList.setItem(ALICE_GUEST, ALICE_GUEST));","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"    public void setGuest_editedGuestIsSameGuest_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        uniqueGuestList.add(ALICE_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"        uniqueGuestList.setItem(ALICE_GUEST, ALICE_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"        expectedUniqueGuestList.add(ALICE_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    public void setGuest_editedGuestHasSameIdentity_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        uniqueGuestList.add(ALICE_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        Guest editedAlice \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"                new GuestBuilder(ALICE_GUEST).withTags(VALID_TAG_DELUXE_ROOM)","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                        .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        uniqueGuestList.setItem(ALICE_GUEST, editedAlice);","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"        expectedUniqueGuestList.add(editedAlice);","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"    public void setGuest_editedGuestHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"        uniqueGuestList.add(ALICE_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"        uniqueGuestList.setItem(ALICE_GUEST, BENSON_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"        expectedUniqueGuestList.add(BENSON_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"    public void setGuest_editedGuestHasNonUniqueIdentity_throwsDuplicateItemException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        uniqueGuestList.add(ALICE_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"        uniqueGuestList.add(BENSON_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniqueGuestList.setItem(ALICE_GUEST, BENSON_GUEST));","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"    public void remove_nullGuest_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.remove(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"    public void remove_personDoesNotExist_throwsItemNotFoundException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniqueGuestList.remove(ALICE_GUEST));","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"    public void remove_existingGuest_removesGuest() {","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"        uniqueGuestList.add(ALICE_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"        uniqueGuestList.remove(ALICE_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"    public void setGuests_nullUniqueGuestList_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.setItems((UniqueGuestList) null));","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"    public void setGuests_uniqueGuestList_replacesOwnListWithProvidedUniqueGuestList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"        uniqueGuestList.add(ALICE_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"        expectedUniqueGuestList.add(BENSON_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"        uniqueGuestList.setItems(expectedUniqueGuestList);","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"    public void setGuests_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGuestList.setItems((List\u003cGuest\u003e) null));","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"    public void setGuests_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"        uniqueGuestList.add(ALICE_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"        List\u003cGuest\u003e personList \u003d Collections.singletonList(BENSON_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"        uniqueGuestList.setItems(personList);","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"        UniqueGuestList expectedUniqueGuestList \u003d new UniqueGuestList();","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"        expectedUniqueGuestList.add(BENSON_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedUniqueGuestList, uniqueGuestList);","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"    public void setGuests_listWithDuplicateGuests_throwsDuplicateItemException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"        List\u003cGuest\u003e listWithDuplicateGuests \u003d Arrays.asList(ALICE_GUEST, ALICE_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniqueGuestList.setItems(listWithDuplicateGuests));","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(UnsupportedOperationException.class, (","lastModifiedDate":"2021-10-30"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"        ) -\u003e uniqueGuestList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"calvintanwj":87,"-":84}},{"path":"src/test/java/seedu/address/model/vendor/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"calvintanwj":1,"-":35}},{"path":"src/test/java/seedu/address/model/vendor/CostTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"public class CostTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, (","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"        ) -\u003e new Cost(null));","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_invalidCost_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        Double invalidCost \u003d -10.00;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Cost(invalidCost));","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    public void isValidCost() {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        // null cost","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e Cost.isValidCost(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        // invalid cost","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(Cost.isValidCost(-10.00)); // less than 0","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(Cost.isValidCost(0.00)); // 0","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        // valid cost","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(Cost.isValidCost(10.00)); // greater than 0","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":36}},{"path":"src/test/java/seedu/address/model/vendor/OperatingHoursTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"public class OperatingHoursTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new OperatingHours(null, null, null, null));","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_invalidOperatingHours_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalArgumentException.class, (","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"        ) -\u003e new OperatingHours(LocalTime.of(20, 0), LocalTime.of(10, 0), new ArrayList\u003c\u003e(), \"1 2000-1000\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    public void isValidOperatingHours() {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        // null operatingHours","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e OperatingHours.isValidOperatingHours(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        // blank operatingHours","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"\")); // empty string","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\" \")); // spaces only","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        // missing parts","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"1234 \")); // missing timings","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"123451000-1200\")); // missing space","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"1234 1000-\")); // missing start time","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"1234 -1200\")); // missing end time","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"1234 1000 1200\")); // missing \u0027-\u0027","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        // invalid parts","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"1230 1000-1200\")); // invalid days of week","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"1234  1000-1200\")); // more than one spacing","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"1234 800-200\")); // does not follow 4 number format","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(OperatingHours.isValidOperatingHours(\"1234 1799-1290\")); // does not follow 24 hour format","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        // valid operatingHours","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(OperatingHours.isValidOperatingHours(\"123 1000-1200\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(OperatingHours.isValidOperatingHours(\"12311111111 1000-1200\")); // duplicates numbers accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":53}},{"path":"src/test/java/seedu/address/model/vendor/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"calvintanwj":1,"-":39}},{"path":"src/test/java/seedu/address/model/vendor/ServiceNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"public class ServiceNameTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ServiceName(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_invalidServiceName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"        String invalidServiceName \u003d \"\";","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ServiceName(invalidServiceName));","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    public void isValidServiceName() {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        // null serviceName","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ServiceName.isValidServiceName(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        // blank serviceName","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ServiceName.isValidServiceName(\"\")); // empty string","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ServiceName.isValidServiceName(\" \")); // spaces only","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        // invalid parts","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ServiceName.isValidServiceName(\"123\")); // cannot contain numbers","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(ServiceName.isValidServiceName(\"!*\")); // cannot contain special characters","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        // valid serviceName","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(ServiceName.isValidServiceName(\"Massage\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(ServiceName.isValidServiceName(\"Dry Cleaning\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":40}},{"path":"src/test/java/seedu/address/model/vendor/UniqueVendorListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HIGH_RATINGS;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.DANIEL_VENDOR;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.ELLE_VENDOR;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.uniquelist.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.uniquelist.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.VendorBuilder;","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"public class UniqueVendorListTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    private final UniqueVendorList uniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    public void contains_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.contains(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    public void contains_vendorNotInList_returnsFalse() {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(uniqueVendorList.contains(DANIEL_VENDOR));","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    public void contains_vendorInList_returnsTrue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        uniqueVendorList.add(DANIEL_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(uniqueVendorList.contains(DANIEL_VENDOR));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    public void contains_vendorWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        uniqueVendorList.add(DANIEL_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        Vendor editedDaniel \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder(DANIEL_VENDOR).withTags(VALID_TAG_HIGH_RATINGS)","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"                        .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(uniqueVendorList.contains(editedDaniel));","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    public void add_nullVendor_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.add(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    public void add_duplicateVendor_throwsDuplicateVendorException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        uniqueVendorList.add(DANIEL_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniqueVendorList.add(DANIEL_VENDOR));","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    public void setVendor_nullTargetVendor_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.setItem(null, DANIEL_VENDOR));","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    public void setVendor_nullEditedVendor_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.setItem(DANIEL_VENDOR, null));","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    public void setVendor_targetVendorNotInList_throwsItemNotFoundException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniqueVendorList.setItem(DANIEL_VENDOR, DANIEL_VENDOR));","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"    public void setVendor_editedVendorIsSameVendor_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        uniqueVendorList.add(DANIEL_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"        uniqueVendorList.setItem(DANIEL_VENDOR, DANIEL_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"        expectedUniqueVendorList.add(DANIEL_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    public void setVendor_editedVendorHasSameIdentity_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        uniqueVendorList.add(DANIEL_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        Vendor editedDaniel \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder(DANIEL_VENDOR).withTags(VALID_TAG_HIGH_RATINGS)","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"                        .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        uniqueVendorList.setItem(DANIEL_VENDOR, editedDaniel);","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"        expectedUniqueVendorList.add(editedDaniel);","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"    public void setVendor_editedVendorHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"        uniqueVendorList.add(DANIEL_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"        uniqueVendorList.setItem(DANIEL_VENDOR, ELLE_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"        expectedUniqueVendorList.add(ELLE_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"    public void setVendor_editedVendorHasNonUniqueIdentity_throwsDuplicateItemException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        uniqueVendorList.add(DANIEL_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"        uniqueVendorList.add(ELLE_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniqueVendorList.setItem(DANIEL_VENDOR, ELLE_VENDOR));","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"    public void remove_nullVendor_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.remove(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"    public void remove_personDoesNotExist_throwsItemNotFoundException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniqueVendorList.remove(DANIEL_VENDOR));","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"    public void remove_existingVendor_removesVendor() {","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"        uniqueVendorList.add(DANIEL_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"        uniqueVendorList.remove(DANIEL_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"    public void setVendors_nullUniqueVendorList_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.setItems((UniqueVendorList) null));","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"    public void setVendors_uniqueVendorList_replacesOwnListWithProvidedUniqueVendorList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"        uniqueVendorList.add(DANIEL_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"        expectedUniqueVendorList.add(ELLE_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"        uniqueVendorList.setItems(expectedUniqueVendorList);","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"    public void setVendors_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueVendorList.setItems((List\u003cVendor\u003e) null));","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"    public void setVendors_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"        uniqueVendorList.add(DANIEL_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"        List\u003cVendor\u003e vendorList \u003d Collections.singletonList(ELLE_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"        uniqueVendorList.setItems(vendorList);","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"        UniqueVendorList expectedUniqueVendorList \u003d new UniqueVendorList();","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"        expectedUniqueVendorList.add(ELLE_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(expectedUniqueVendorList, uniqueVendorList);","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"    public void setVendors_listWithDuplicateVendors_throwsDuplicateItemException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"        List\u003cVendor\u003e listWithDuplicateVendors \u003d Arrays.asList(DANIEL_VENDOR, DANIEL_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniqueVendorList.setItems(listWithDuplicateVendors));","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"            -\u003e uniqueVendorList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":173}},{"path":"src/test/java/seedu/address/model/vendor/VendorBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.Assert.assertFalse;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.Assert.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HIGH_RATINGS;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.DANIEL_VENDOR;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.getTypicalVendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.uniquelist.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.VendorBuilder;","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"public class VendorBookTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    private final VendorBook vendorBook \u003d new VendorBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    public void constructor() {","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(Collections.emptyList(), vendorBook.getVendorList());","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e vendorBook.resetData(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    public void resetData_withValidReadOnlyVendorBook_replacesData() {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        VendorBook newData \u003d getTypicalVendorBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        vendorBook.resetData(newData);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(newData, vendorBook);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    public void resetData_withDuplicateVendors_throwsDuplicateItemException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        // Two vendors with the same identity fields","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        Vendor editedDaniel \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder(DANIEL_VENDOR).withTags(VALID_TAG_HIGH_RATINGS).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        List\u003cVendor\u003e newVendors \u003d Arrays.asList(DANIEL_VENDOR, editedDaniel);","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        VendorBookStub newData \u003d new VendorBookStub(newVendors);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e vendorBook.resetData(newData));","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    public void hasVendor_nullVendor_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e vendorBook.hasVendor(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"    public void hasVendor_vendorNotInVendorBook_returnsFalse() {","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(vendorBook.hasVendor(DANIEL_VENDOR));","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"    public void hasVendor_vendorInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        vendorBook.addVendor(DANIEL_VENDOR);","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(vendorBook.hasVendor(DANIEL_VENDOR));","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"    public void hasVendor_vendorWithSameIdentityFieldsInVendorBook_returnsTrue() {","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        vendorBook.addVendor(DANIEL_VENDOR);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        Vendor editedDaniel \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder(DANIEL_VENDOR).withTags(VALID_TAG_HIGH_RATINGS)","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"                        .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(vendorBook.hasVendor(editedDaniel));","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"    public void getVendorList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e vendorBook.getVendorList().remove(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"     * A stub ReadOnlyVendorBook whose vendors list can violate interface constraints.","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"    private static class VendorBookStub implements ReadOnlyVendorBook {","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"        private final ObservableList\u003cVendor\u003e vendors \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        VendorBookStub(Collection\u003cVendor\u003e vendors) {","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"            this.vendors.setAll(vendors);","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"        public ObservableList\u003cVendor\u003e getVendorList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"            return vendors;","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":102}},{"path":"src/test/java/seedu/address/model/vendor/VendorIdContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_SECOND_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_FIRST_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_SECOND_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.VendorBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"public class VendorIdContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    public void equals() {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        VendorIdContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"                new VendorIdContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"        VendorIdContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"                new VendorIdContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        VendorIdContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"                new VendorIdContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    public void test_identifierContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        VendorIdContainsKeywordsPredicate predicate \u003d new VendorIdContainsKeywordsPredicate(","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"                Collections.singletonList(VENDOR_ID_FIRST_PERSON.toString()));","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withVendorId(VENDOR_ID_FIRST_PERSON.toString()).build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorIdContainsKeywordsPredicate(","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"                Collections.singletonList(VENDOR_ID_SECOND_PERSON.toString()));","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withVendorId(VENDOR_ID_SECOND_PERSON.toString()).build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        VendorIdContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"                new VendorIdContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new VendorBuilder().withVendorId(VENDOR_ID_FIRST_PERSON.toString()).build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorIdContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withVendorId(VENDOR_ID_FIRST_PERSON.toString()).build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorIdContainsKeywordsPredicate(Arrays.asList(VENDOR_ID_FIRST_PERSON.toString()));","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new VendorBuilder().withVendorId(VENDOR_ID_SECOND_PERSON.toString()).build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorIdContainsKeywordsPredicate(","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"                Collections.singletonList(VENDOR_ID_FIRST_PERSON.toString()));","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new VendorBuilder().withVendorId(","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"                PASSPORT_NUMBER_SECOND_PERSON.toString()).build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"        // Keywords match name, email and other respective fields, but does not match identifier","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorIdContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"12345\",","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"                \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(new VendorBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withVendorId(\"123\").build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"calvintanwj":87}},{"path":"src/test/java/seedu/address/model/vendor/VendorIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"public class VendorIdTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new VendorId(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    public void constructor_invalidVendorId_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"        String invalidVendorId \u003d \"\";","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new VendorId(invalidVendorId));","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    public void isValidVendorId() {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"        // null staff id","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e VendorId.isValidVendorId(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        // invalid staff id","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(VendorId.isValidVendorId(\"\")); // empty string","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(VendorId.isValidVendorId(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(VendorId.isValidVendorId(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(VendorId.isValidVendorId(\"  \")); // spaces only","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        // valid staff id","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(VendorId.isValidVendorId(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(VendorId.isValidVendorId(\"12345\")); // numbers only","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(VendorId.isValidVendorId(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(VendorId.isValidVendorId(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(VendorId.isValidVendorId(\"David Roger Jackson Ray Jr 2nd\")); // long staff id","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"NicolasCwy"},"content":"        assertTrue(VendorId.isValidVendorId(\"g\")); // single character","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":43,"NicolasCwy":1}},{"path":"src/test/java/seedu/address/model/vendor/VendorPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.VendorBuilder;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"public class VendorPredicateTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    public void equals() {","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.of(\"001\"), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.of(\"002\"), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.of(\"001\"), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    public void test_vendorIdContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d new VendorPredicate(Optional.of(\"123\"), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withVendorId(\"123\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        // Should be allowed","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.of(\"s123\"), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withVendorId(\"S123\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.of(\"   123   \"), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withVendorId(\"123\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"    public void test_vendorIdDoesNotContainsKeywords_returnsFalse() {","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d new VendorPredicate(Optional.of(\"1\"), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withVendorId(\"123\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.of(\"23\"), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withVendorId(\"123\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        // Keywords match name, email and other respective fields, but does not match vendor id","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.of(\"123\"), Optional.of(\"80958483\"), Optional.of(\"Bill\u0027s Delivery\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"bdelivery@email.com\"), Optional.of(Set.of(new Tag(\"Halal\"))),","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"123 Clementi Rd, 123456\"), Optional.of(\"Food\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"12\"), Optional.of(\"123 0900-1600\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withVendorId(\"456\").withPhone(\"80958483\").withName(\"Bill\u0027s Delivery\").withEmail(","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"                        \"bdelivery@email.com\").withTags(\"Halal\").withAddress(\"123 Clementi Rd, 123456\").withServiceName(","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"                        \"Food\").withCost(\"12\").withOperatingHours(\"123 0900-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.of(\"bill\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"        // Matching keywords (case-insensitive)","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withName(\"Bill\u0027s Delivery\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.of(\"Ill\u0027\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withName(\"Bill\u0027s Delivery\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.of(\"\u0027s deli\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withName(\"Bill\u0027s Delivery\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.of(\"delivery\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withName(\"Bill\u0027s Delivery\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.of(\"   bill    \"),","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withName(\"Bill\u0027s Delivery\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-30"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.of(\"bob\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-30"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withName(\"Bill\u0027s Delivery\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.of(\"delivery bill\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withName(\"Bill\u0027s Delivery\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"        // Keywords match passport number, email and other respective fields, but does not match name","lastModifiedDate":"2021-10-30"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.of(\"123\"), Optional.of(\"80958483\"), Optional.of(\"Bill\u0027s Delivery\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"bdelivery@email.com\"), Optional.of(Set.of(new Tag(\"Halal\"))),","lastModifiedDate":"2021-10-30"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"123 Clementi Rd, 123456\"), Optional.of(\"Food\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"12\"), Optional.of(\"123 0900-1600\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withVendorId(\"123\").withPhone(\"80958483\").withName(\"Bob\u0027s Delivery\").withEmail(","lastModifiedDate":"2021-10-30"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"                        \"bdelivery@email.com\").withTags(\"Halal\").withAddress(\"123 Clementi Rd, 123456\").withServiceName(","lastModifiedDate":"2021-10-30"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"                        \"Food\").withCost(\"12\").withOperatingHours(\"123 0900-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"    public void test_phoneNumberContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-30"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.of(\"87878787\"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withPhone(\"87878787\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.of(\"878\"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withPhone(\"87878787\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":187,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":188,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.of(\"\"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":190,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":191,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":192,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":193,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withPhone(\"87878787\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":194,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":196,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.of(\"   878   \"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":197,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":198,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":199,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":200,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":201,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withPhone(\"87878787\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":202,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":203,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":204,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":205,"author":{"gitId":"calvintanwj"},"content":"    public void test_phoneNumberDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-30"},{"lineNumber":206,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":207,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.of(\"123\"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":208,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":209,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":210,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":211,"author":{"gitId":"calvintanwj"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-30"},{"lineNumber":212,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":213,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withPhone(\"87878787\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":214,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":215,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":216,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.of(\"787\"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":217,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":218,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":219,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":220,"author":{"gitId":"calvintanwj"},"content":"        // Contains the number, but does not start with it","lastModifiedDate":"2021-10-30"},{"lineNumber":221,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":222,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withPhone(\"87878787\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":223,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":224,"author":{"gitId":"calvintanwj"},"content":"        // Keywords match passport number, email and other respective fields, but does not match phone number","lastModifiedDate":"2021-10-30"},{"lineNumber":225,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.of(\"123\"), Optional.of(\"80958483\"), Optional.of(\"Bill\u0027s Delivery\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":226,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"bdelivery@email.com\"), Optional.of(Set.of(new Tag(\"Halal\"))),","lastModifiedDate":"2021-10-30"},{"lineNumber":227,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"123 Clementi Rd, 123456\"), Optional.of(\"Food\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":228,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"12\"), Optional.of(\"123 0900-1600\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":229,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":230,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withVendorId(\"123\").withPhone(\"80958412\").withName(\"Bill\u0027s Delivery\").withEmail(","lastModifiedDate":"2021-10-30"},{"lineNumber":231,"author":{"gitId":"calvintanwj"},"content":"                        \"bdelivery@email.com\").withTags(\"Halal\").withAddress(\"123 Clementi Rd, 123456\").withServiceName(","lastModifiedDate":"2021-10-30"},{"lineNumber":232,"author":{"gitId":"calvintanwj"},"content":"                        \"Food\").withCost(\"12\").withOperatingHours(\"123 0900-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":233,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":234,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":235,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":236,"author":{"gitId":"calvintanwj"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-30"},{"lineNumber":237,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":238,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":239,"author":{"gitId":"calvintanwj"},"content":"                        Optional.of(\"alice@email.com\"), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":240,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":241,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":242,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":243,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":244,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":245,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":246,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":247,"author":{"gitId":"calvintanwj"},"content":"                        Optional.of(\"alice\"), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":248,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":249,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":250,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":251,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":252,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":253,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":254,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":255,"author":{"gitId":"calvintanwj"},"content":"                        Optional.of(\"ce@em\"), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":256,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":257,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":258,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":259,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":260,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":261,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":262,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":263,"author":{"gitId":"calvintanwj"},"content":"                        Optional.of(\"LiCe\"), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":264,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":265,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":266,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":267,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":268,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":269,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":270,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":271,"author":{"gitId":"calvintanwj"},"content":"                        Optional.of(\"   lice   \"), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":272,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":273,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":274,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":275,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":276,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":277,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":278,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":279,"author":{"gitId":"calvintanwj"},"content":"    public void test_emailDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-30"},{"lineNumber":280,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":281,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":282,"author":{"gitId":"calvintanwj"},"content":"                        Optional.of(\"ace\"), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":283,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":284,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":285,"author":{"gitId":"calvintanwj"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-30"},{"lineNumber":286,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":287,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":288,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":289,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":290,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":291,"author":{"gitId":"calvintanwj"},"content":"                        Optional.of(\"emailalice\"), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":292,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":293,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":294,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":295,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":296,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":297,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":298,"author":{"gitId":"calvintanwj"},"content":"        // Keywords match passport number, name and other respective fields, but does not match email","lastModifiedDate":"2021-10-30"},{"lineNumber":299,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.of(\"123\"), Optional.of(\"80958483\"), Optional.of(\"Bill\u0027s Delivery\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":300,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"bdelivery@email.com\"), Optional.of(Set.of(new Tag(\"Halal\"))),","lastModifiedDate":"2021-10-30"},{"lineNumber":301,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"123 Clementi Rd, 123456\"), Optional.of(\"Food\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":302,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"12\"), Optional.of(\"123 0900-1600\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":303,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":304,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withVendorId(\"123\").withPhone(\"80958483\").withName(\"Bill\u0027s Delivery\").withEmail(","lastModifiedDate":"2021-10-30"},{"lineNumber":305,"author":{"gitId":"calvintanwj"},"content":"                        \"nexdelivery@email.com\").withTags(\"Halal\").withAddress(","lastModifiedDate":"2021-10-30"},{"lineNumber":306,"author":{"gitId":"calvintanwj"},"content":"                        \"123 Clementi Rd, 123456\").withServiceName(","lastModifiedDate":"2021-10-30"},{"lineNumber":307,"author":{"gitId":"calvintanwj"},"content":"                        \"Food\").withCost(\"12\").withOperatingHours(\"123 0900-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":308,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":309,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":310,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":311,"author":{"gitId":"calvintanwj"},"content":"    public void test_tagsContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-30"},{"lineNumber":312,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":313,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":314,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.of(Set.of(new Tag(\"VIP\"))), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":315,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":316,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":317,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":318,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withTags(\"Vip\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":319,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":320,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":321,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":322,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.of(Set.of(new Tag(\"ViP\"))), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":323,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":324,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":325,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":326,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withTags(\"Vip\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":327,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":328,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":329,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":330,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.of(Set.of(new Tag(\"   vip   \"))), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":331,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":332,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":333,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":334,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withTags(\"Vip\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":335,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":336,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":337,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":338,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.of(Set.of(new Tag(\"vip\"), new Tag(\"second\"))), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":339,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":340,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":341,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":342,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":343,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withTags(\"Vip\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":344,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":345,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":346,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withTags(\"Second\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":347,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":348,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":349,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":350,"author":{"gitId":"calvintanwj"},"content":"    public void test_tagsDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-30"},{"lineNumber":351,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":352,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":353,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.of(Set.of(new Tag(\"qert\"))), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":354,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":355,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":356,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":357,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withTags(\"Vip\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":358,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":359,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":360,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":361,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.of(Set.of(new Tag(\"ip\"))), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":362,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":363,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":364,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":365,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withTags(\"Vip\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":366,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":367,"author":{"gitId":"calvintanwj"},"content":"        // Keywords match passport number, name and other respective fields, but does not match tags","lastModifiedDate":"2021-10-30"},{"lineNumber":368,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.of(\"123\"), Optional.of(\"80958483\"), Optional.of(\"Bill\u0027s Delivery\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":369,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"bdelivery@email.com\"), Optional.of(Set.of(new Tag(\"Halal\"))),","lastModifiedDate":"2021-10-30"},{"lineNumber":370,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"123 Clementi Rd, 123456\"), Optional.of(\"Food\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":371,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"12\"), Optional.of(\"123 0900-1600\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":372,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":373,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withVendorId(\"123\").withPhone(\"80958483\").withName(\"Bill\u0027s Delivery\").withEmail(","lastModifiedDate":"2021-10-30"},{"lineNumber":374,"author":{"gitId":"calvintanwj"},"content":"                        \"bdelivery@email.com\").withTags(\"Non Halal\").withAddress(","lastModifiedDate":"2021-10-30"},{"lineNumber":375,"author":{"gitId":"calvintanwj"},"content":"                        \"123 Clementi Rd, 123456\").withServiceName(","lastModifiedDate":"2021-10-30"},{"lineNumber":376,"author":{"gitId":"calvintanwj"},"content":"                        \"Food\").withCost(\"12\").withOperatingHours(\"123 0900-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":377,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":378,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":379,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":380,"author":{"gitId":"calvintanwj"},"content":"    public void test_addressContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-30"},{"lineNumber":381,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":382,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":383,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.of(\"123 Rd\"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":384,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":385,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":386,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":387,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withAddress(\"123 Rd\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":388,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":389,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":390,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":391,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.of(\"123 rd\"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":392,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":393,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":394,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":395,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withAddress(\"123 Rd\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":396,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":397,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":398,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":399,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.of(\"3 rd\"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":400,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":401,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":402,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":403,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withAddress(\"123 Rd\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":404,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":405,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":406,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":407,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.of(\"123 rD\"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":408,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":409,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":410,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":411,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withAddress(\"123 Rd\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":412,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":413,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":414,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":415,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.of(\"   123    \"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":416,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":417,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":418,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":419,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withAddress(\"123 Rd\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":420,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":421,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":422,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":423,"author":{"gitId":"calvintanwj"},"content":"    public void test_addressDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-30"},{"lineNumber":424,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":425,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":426,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.of(\"13 rd\"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":427,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":428,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":429,"author":{"gitId":"calvintanwj"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-30"},{"lineNumber":430,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":431,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withAddress(\"123 Rd\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":432,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":433,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":434,"author":{"gitId":"calvintanwj"},"content":"                new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":435,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty(), Optional.of(\"Rd 123\"), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":436,"author":{"gitId":"calvintanwj"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":437,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":438,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":439,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withAddress(\"123 Rd\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":440,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":441,"author":{"gitId":"calvintanwj"},"content":"        // Keywords match passport number, name and other respective fields, but does not match email","lastModifiedDate":"2021-10-30"},{"lineNumber":442,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.of(\"123\"), Optional.of(\"80958483\"), Optional.of(\"Bill\u0027s Delivery\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":443,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"bdelivery@email.com\"), Optional.of(Set.of(new Tag(\"Halal\"))),","lastModifiedDate":"2021-10-30"},{"lineNumber":444,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"123 Clementi Rd, 123456\"), Optional.of(\"Food\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":445,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"12\"), Optional.of(\"123 0900-1600\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":446,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":447,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withVendorId(\"123\").withPhone(\"80958483\").withName(\"Bill\u0027s Delivery\").withEmail(","lastModifiedDate":"2021-10-30"},{"lineNumber":448,"author":{"gitId":"calvintanwj"},"content":"                        \"bdelivery@email.com\").withTags(\"Halal\").withAddress(\"456 Clementi Rd, 123456\").withServiceName(","lastModifiedDate":"2021-10-30"},{"lineNumber":449,"author":{"gitId":"calvintanwj"},"content":"                        \"Food\").withCost(\"12\").withOperatingHours(\"123 0900-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":450,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":451,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":452,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":453,"author":{"gitId":"calvintanwj"},"content":"    public void test_serviceNameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-30"},{"lineNumber":454,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":455,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.of(\"Food\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":456,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":457,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":458,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":459,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withServiceName(\"Food\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":460,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":461,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":462,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.of(\"food\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":463,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":464,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":465,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":466,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withServiceName(\"Food\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":467,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":468,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":469,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.of(\"  food   \"),","lastModifiedDate":"2021-10-30"},{"lineNumber":470,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":471,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":472,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":473,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withServiceName(\"Food\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":474,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":475,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":476,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":477,"author":{"gitId":"calvintanwj"},"content":"    public void test_serviceNameDoesNotContainsKeywords_returnsFalse() {","lastModifiedDate":"2021-10-30"},{"lineNumber":478,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":479,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.of(\"mass\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":480,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":481,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":482,"author":{"gitId":"calvintanwj"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-30"},{"lineNumber":483,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":484,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withServiceName(\"Massage\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":485,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":486,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":487,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.of(\"age\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":488,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":489,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":490,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":491,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withServiceName(\"Massage\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":492,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":493,"author":{"gitId":"calvintanwj"},"content":"        // Keywords match name, email and other respective fields, but does not match service name","lastModifiedDate":"2021-10-30"},{"lineNumber":494,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.of(\"123\"), Optional.of(\"80958483\"), Optional.of(\"Bill\u0027s Delivery\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":495,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"bdelivery@email.com\"), Optional.of(Set.of(new Tag(\"Halal\"))),","lastModifiedDate":"2021-10-30"},{"lineNumber":496,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"123 Clementi Rd, 123456\"), Optional.of(\"Food\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":497,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"12\"), Optional.of(\"123 0900-1600\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":498,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":499,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withVendorId(\"123\").withPhone(\"80958483\").withName(\"Bill\u0027s Delivery\").withEmail(","lastModifiedDate":"2021-10-30"},{"lineNumber":500,"author":{"gitId":"calvintanwj"},"content":"                        \"bdelivery@email.com\").withTags(\"Halal\").withAddress(\"123 Clementi Rd, 123456\").withServiceName(","lastModifiedDate":"2021-10-30"},{"lineNumber":501,"author":{"gitId":"calvintanwj"},"content":"                        \"Massage\").withCost(\"12\").withOperatingHours(\"123 0900-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":502,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":503,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":504,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":505,"author":{"gitId":"calvintanwj"},"content":"    public void test_costContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-30"},{"lineNumber":506,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":507,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":508,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"10\"), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":509,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":510,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":511,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withCost(\"10\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":512,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":513,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":514,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":515,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"\u003c10\"), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":516,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":517,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":518,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withCost(\"9\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":519,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":520,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":521,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":522,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"\u003e10\"), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":523,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":524,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":525,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withCost(\"11\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":526,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":527,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":528,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":529,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"  \u003c10   \"), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":530,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":531,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":532,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withCost(\"9\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":533,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":534,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":535,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":536,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"  \u003e10   \"), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":537,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":538,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":539,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withCost(\"11\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":540,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":541,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":542,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":543,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"  10   \"), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":544,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":545,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":546,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withCost(\"10\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":547,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":548,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":549,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":550,"author":{"gitId":"calvintanwj"},"content":"    public void test_costDoesNotContainsKeywords_returnsFalse() {","lastModifiedDate":"2021-10-30"},{"lineNumber":551,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":552,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":553,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"10\"), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":554,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":555,"author":{"gitId":"calvintanwj"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-30"},{"lineNumber":556,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":557,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withCost(\"11\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":558,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":559,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":560,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":561,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"\u003e10\"), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":562,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":563,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":564,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withCost(\"10\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":565,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":566,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":567,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":568,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"\u003c10\"), Optional.empty());","lastModifiedDate":"2021-10-30"},{"lineNumber":569,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":570,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":571,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withCost(\"10\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":572,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":573,"author":{"gitId":"calvintanwj"},"content":"        // Keywords match name, email and other respective fields, but does not match cost","lastModifiedDate":"2021-10-30"},{"lineNumber":574,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.of(\"123\"), Optional.of(\"80958483\"), Optional.of(\"Bill\u0027s Delivery\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":575,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"bdelivery@email.com\"), Optional.of(Set.of(new Tag(\"Halal\"))),","lastModifiedDate":"2021-10-30"},{"lineNumber":576,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"123 Clementi Rd, 123456\"), Optional.of(\"Food\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":577,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"12\"), Optional.of(\"123 0900-1600\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":578,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":579,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withVendorId(\"123\").withPhone(\"80958483\").withName(\"Bill\u0027s Delivery\").withEmail(","lastModifiedDate":"2021-10-30"},{"lineNumber":580,"author":{"gitId":"calvintanwj"},"content":"                        \"bdelivery@email.com\").withTags(\"Halal\").withAddress(\"123 Clementi Rd, 123456\").withServiceName(","lastModifiedDate":"2021-10-30"},{"lineNumber":581,"author":{"gitId":"calvintanwj"},"content":"                        \"Food\").withCost(\"20\").withOperatingHours(\"123 0900-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":582,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":583,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":584,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":585,"author":{"gitId":"calvintanwj"},"content":"    public void test_operatingHoursContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-30"},{"lineNumber":586,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":587,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":588,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.of(\"123\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":589,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":590,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":591,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withOperatingHours(\"123 0800-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":592,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":593,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":594,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":595,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.of(\"  123   \"));","lastModifiedDate":"2021-10-30"},{"lineNumber":596,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":597,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":598,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withOperatingHours(\"123 0800-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":599,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":600,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":601,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":602,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.of(\"  13   \"));","lastModifiedDate":"2021-10-30"},{"lineNumber":603,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":604,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":605,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withOperatingHours(\"123 0800-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":606,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":607,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":608,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":609,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.of(\"123 0800\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":610,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":611,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":612,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withOperatingHours(\"123 0800-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":613,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":614,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":615,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":616,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.of(\"123 1600\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":617,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":618,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":619,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withOperatingHours(\"123 0800-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":620,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":621,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":622,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":623,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.of(\"123 1000\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":624,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":625,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":626,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withOperatingHours(\"123 0800-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":627,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":628,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":629,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":630,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.of(\"   123 0800   \"));","lastModifiedDate":"2021-10-30"},{"lineNumber":631,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":632,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":633,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withOperatingHours(\"123 0800-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":634,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":635,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":636,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":637,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.of(\"123 0800-1600\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":638,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":639,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":640,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withOperatingHours(\"123 0800-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":641,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":642,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":643,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":644,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.of(\"123 1600-2200\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":645,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":646,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":647,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withOperatingHours(\"123 0800-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":648,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":649,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":650,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":651,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.of(\"  13 0300-2200   \"));","lastModifiedDate":"2021-10-30"},{"lineNumber":652,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":653,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":654,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withOperatingHours(\"123 0800-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":655,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":656,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":657,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":658,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.of(\"  133311 0300-2200   \"));","lastModifiedDate":"2021-10-30"},{"lineNumber":659,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":660,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":661,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withOperatingHours(\"123 0800-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":662,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":663,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":664,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":665,"author":{"gitId":"calvintanwj"},"content":"    public void test_operatingHoursDoesNotContainsKeywords_returnsFalse() {","lastModifiedDate":"2021-10-30"},{"lineNumber":666,"author":{"gitId":"calvintanwj"},"content":"        VendorPredicate predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":667,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":668,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.of(\"123\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":669,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":670,"author":{"gitId":"calvintanwj"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-30"},{"lineNumber":671,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":672,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withOperatingHours(\"234 0800-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":673,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":674,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":675,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":676,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.of(\"23 0759\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":677,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":678,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":679,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withOperatingHours(\"234 0800-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":680,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":681,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":682,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":683,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.of(\"23 1601\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":684,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":685,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":686,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withOperatingHours(\"234 0800-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":687,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":688,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":689,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":690,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.of(\"23 0000-0700\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":691,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":692,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":693,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withOperatingHours(\"234 0800-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":694,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":695,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":696,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2021-10-30"},{"lineNumber":697,"author":{"gitId":"calvintanwj"},"content":"                Optional.empty(), Optional.of(\"23 1601-2000\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":698,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":699,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":700,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withOperatingHours(\"234 0800-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":701,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":702,"author":{"gitId":"calvintanwj"},"content":"        // Keywords match name, email and other respective fields, but does not match operating hours","lastModifiedDate":"2021-10-30"},{"lineNumber":703,"author":{"gitId":"calvintanwj"},"content":"        predicate \u003d new VendorPredicate(Optional.of(\"123\"), Optional.of(\"80958483\"), Optional.of(\"Bill\u0027s Delivery\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":704,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"bdelivery@email.com\"), Optional.of(Set.of(new Tag(\"Halal\"))),","lastModifiedDate":"2021-10-30"},{"lineNumber":705,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"123 Clementi Rd, 123456\"), Optional.of(\"Food\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":706,"author":{"gitId":"calvintanwj"},"content":"                Optional.of(\"12\"), Optional.of(\"123 0900-1600\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":707,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(predicate.test(","lastModifiedDate":"2021-10-30"},{"lineNumber":708,"author":{"gitId":"calvintanwj"},"content":"                new VendorBuilder().withVendorId(\"123\").withPhone(\"80958483\").withName(\"Bill\u0027s Delivery\").withEmail(","lastModifiedDate":"2021-10-30"},{"lineNumber":709,"author":{"gitId":"calvintanwj"},"content":"                        \"bdelivery@email.com\").withTags(\"Halal\").withAddress(\"123 Clementi Rd, 123456\").withServiceName(","lastModifiedDate":"2021-10-30"},{"lineNumber":710,"author":{"gitId":"calvintanwj"},"content":"                        \"Food\").withCost(\"12\").withOperatingHours(\"345 0900-1600\").build()));","lastModifiedDate":"2021-10-30"},{"lineNumber":711,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":712,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":713,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"calvintanwj":713}},{"path":"src/test/java/seedu/address/model/vendor/VendorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.model.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_DANIEL;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COST_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COST_FIONA;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_DANIEL;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DANIEL;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OPERATING_HOURS_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OPERATING_HOURS_FIONA;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_DANIEL;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SERVICE_NAME_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SERVICE_NAME_FIONA;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HIGH_RATINGS;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VENDOR_ID_DANIEL;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.DANIEL_VENDOR;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.FIONA_VENDOR;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.VendorBuilder;","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"public class VendorTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        Vendor vendor \u003d new VendorBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e vendor.getTags().remove(0));","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    public void isSame() {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(FIONA_VENDOR.isSame(FIONA_VENDOR));","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_VENDOR.isSame(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        // same VID, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        Vendor editedFiona \u003d new VendorBuilder(FIONA_VENDOR)","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"NicolasCwy"},"content":"                .withName(VALID_NAME_DANIEL)","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"NicolasCwy"},"content":"                .withPhone(VALID_PHONE_DANIEL)","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"NicolasCwy"},"content":"                .withEmail(VALID_EMAIL_DANIEL)","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"NicolasCwy"},"content":"                .withAddress(VALID_ADDRESS_DANIEL)","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"                .withTags(VALID_TAG_HIGH_RATINGS)","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"                .withCost(VALID_COST_FIONA)","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"                .withOperatingHours(VALID_OPERATING_HOURS_FIONA)","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"                .withServiceName(VALID_SERVICE_NAME_FIONA)","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"NicolasCwy"},"content":"                .build();","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(FIONA_VENDOR.isSame(editedFiona));","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        // different VID, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        editedFiona \u003d new VendorBuilder(FIONA_VENDOR).withVendorId(VALID_VENDOR_ID_DANIEL).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_VENDOR.isSame(editedFiona));","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        // SID has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        String idWithTrailingSpaces \u003d VALID_VENDOR_ID_DANIEL + \"  \";","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        Vendor editedDaniel \u003d new VendorBuilder(DANIEL_VENDOR).withVendorId(idWithTrailingSpaces).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(DANIEL_VENDOR.isSame(editedDaniel));","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        Vendor fionaCopy \u003d new VendorBuilder(FIONA_VENDOR).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(FIONA_VENDOR.equals(fionaCopy));","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        assertTrue(FIONA_VENDOR.equals(FIONA_VENDOR));","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_VENDOR.equals(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_VENDOR.equals(5));","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        // different vendor -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_VENDOR.equals(DANIEL_VENDOR));","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        // different vendor id -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        Vendor editedFiona \u003d new VendorBuilder(FIONA_VENDOR).withVendorId(VALID_VENDOR_ID_DANIEL).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_VENDOR.equals(editedFiona));","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        editedFiona \u003d new VendorBuilder(FIONA_VENDOR).withName(VALID_NAME_DANIEL).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_VENDOR.equals(editedFiona));","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        editedFiona \u003d new VendorBuilder(FIONA_VENDOR).withPhone(VALID_PHONE_DANIEL).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_VENDOR.equals(editedFiona));","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"        editedFiona \u003d new VendorBuilder(FIONA_VENDOR).withEmail(VALID_EMAIL_DANIEL).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_VENDOR.equals(editedFiona));","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"        editedFiona \u003d new VendorBuilder(FIONA_VENDOR).withAddress(VALID_ADDRESS_DANIEL).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_VENDOR.equals(editedFiona));","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"        editedFiona \u003d new VendorBuilder(FIONA_VENDOR).withTags(VALID_TAG_HIGH_RATINGS).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_VENDOR.equals(editedFiona));","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"        // different cost -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        editedFiona \u003d new VendorBuilder(FIONA_VENDOR).withCost(VALID_COST_DANIEL).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_VENDOR.equals(editedFiona));","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"        // different serviceName -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"        editedFiona \u003d new VendorBuilder(FIONA_VENDOR).withServiceName(VALID_SERVICE_NAME_DANIEL).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_VENDOR.equals(editedFiona));","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"        // different operatingHours -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"        editedFiona \u003d new VendorBuilder(FIONA_VENDOR).withOperatingHours(VALID_OPERATING_HOURS_DANIEL).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(FIONA_VENDOR.equals(editedFiona));","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"calvintanwj":68,"-":43,"NicolasCwy":9}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"        userPrefs.setGuestBookFilePath(Paths.get(\"guests.json\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"calvintanwj":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.archive.JsonArchiveStorage;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.guest.JsonGuestBookStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.vendor.JsonVendorBookStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        JsonGuestBookStorage guestBookStorage \u003d new JsonGuestBookStorage(getTempFilePath(\"gb\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        JsonVendorBookStorage vendorBookStorage \u003d new JsonVendorBookStorage(getTempFilePath(\"vb\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        JsonArchiveStorage archiveStorage \u003d new JsonArchiveStorage(getTempFilePath(\"a\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        storageManager \u003d new StorageManager(guestBookStorage, vendorBookStorage, userPrefsStorage, archiveStorage);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    public void guestBookReadSave() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"         * {@link JsonGuestBookStorage} class.","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonGuestBookStorageTest} class.","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        GuestBook original \u003d getTypicalGuestBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        storageManager.saveGuestBook(original);","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        ReadOnlyGuestBook retrieved \u003d storageManager.readGuestBook().get();","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(original, new GuestBook(retrieved));","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"    public void getGuestBookFilePath() {","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        assertNotNull(storageManager.getGuestBookFilePath());","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":19,"-":54}},{"path":"src/test/java/seedu/address/storage/archive/JsonArchiveStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rgbpokka"},"content":"// TO-DO","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"rgbpokka"},"content":"//package seedu.address.storage.archive;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"rgbpokka"},"content":"//import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"rgbpokka"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"rgbpokka"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"rgbpokka"},"content":"//import static seedu.address.testutil.guest.TypicalGuests.JEONGYEON_GUEST;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"rgbpokka"},"content":"//import static seedu.address.testutil.guest.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"//import java.io.IOException;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"rgbpokka"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"//import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"//import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"rgbpokka"},"content":"//import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"//public class JsonArchiveStorageTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"//   private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"Guest\", \"JsonGuestBookStorageTest\");","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"//    @TempDir","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"//    public Path testFolder;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"//    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"//    public void readGuestBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"//        assertThrows(NullPointerException.class, () -\u003e readGuestBook(null));","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"rgbpokka"},"content":"//    }","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"//    private java.util.Optional\u003cReadOnlyGuestBook\u003e readGuestBook(String filePath) throws Exception {","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"//        return new JsonGuestBookStorage(Paths.get(filePath)).readGuestBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"rgbpokka"},"content":"//    }","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"rgbpokka"},"content":"//    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"//        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"rgbpokka"},"content":"//                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"rgbpokka"},"content":"//                : null;","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"rgbpokka"},"content":"//    }","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"//    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"rgbpokka"},"content":"//    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"rgbpokka"},"content":"//        assertFalse(readGuestBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"rgbpokka"},"content":"//    }","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"//    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"rgbpokka"},"content":"//    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"rgbpokka"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readGuestBook(\"notJsonFormatGuestBook.json\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"rgbpokka"},"content":"//    }","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"rgbpokka"},"content":"//    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"//    public void readGuestBook_invalidGuestBook_throwDataConversionException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readGuestBook(\"invalidGuestBook.json\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"rgbpokka"},"content":"//    }","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"rgbpokka"},"content":"//    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"//    public void readGuestBook_invalidAndValidGuestBook_throwDataConversionException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readGuestBook(\"invalidAndValidGuestBook.json\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"//    }","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"//    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"rgbpokka"},"content":"//    public void readAndSaveGuestBook_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"rgbpokka"},"content":"//        Path filePath \u003d testFolder.resolve(\"TempGuestBook.json\");","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"//        GuestBook original \u003d getTypicalGuestBook();","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"//        JsonGuestBookStorage jsonGuestBookStorage \u003d new JsonGuestBookStorage(filePath);","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"rgbpokka"},"content":"//        // Save in new file and read back","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"rgbpokka"},"content":"//        jsonGuestBookStorage.saveGuestBook(original, filePath);","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"rgbpokka"},"content":"//        ReadOnlyGuestBook readBack \u003d jsonGuestBookStorage.readGuestBook(filePath).get();","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"rgbpokka"},"content":"//        assertEquals(original, new GuestBook(readBack));","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"rgbpokka"},"content":"//        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"rgbpokka"},"content":"//        original.addGuest(JEONGYEON_GUEST);","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"rgbpokka"},"content":"//        original.removeGuest(JEONGYEON_GUEST);","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"rgbpokka"},"content":"//        jsonGuestBookStorage.saveGuestBook(original, filePath);","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"rgbpokka"},"content":"//        readBack \u003d jsonGuestBookStorage.readGuestBook(filePath).get();","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"rgbpokka"},"content":"//        assertEquals(original, new GuestBook(readBack));","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"rgbpokka"},"content":"//        // Save and read without specifying file path","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"rgbpokka"},"content":"//        original.addGuest(JEONGYEON_GUEST);","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"rgbpokka"},"content":"//        jsonGuestBookStorage.saveGuestBook(original); // file path not specified","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"rgbpokka"},"content":"//        readBack \u003d jsonGuestBookStorage.readGuestBook().get(); // file path not specified","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"rgbpokka"},"content":"//        assertEquals(original, new GuestBook(readBack));","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"rgbpokka"},"content":"//    }","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"rgbpokka"},"content":"//    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"rgbpokka"},"content":"//    public void saveGuestBook_nullGuestBook_throwsNullPointerException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"rgbpokka"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveGuestBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"rgbpokka"},"content":"//    }","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"rgbpokka"},"content":"//    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"rgbpokka"},"content":"//     * Saves {@code guestBook} at the specified {@code filePath}.","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"rgbpokka"},"content":"//     */","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"rgbpokka"},"content":"//    private void saveGuestBook(ReadOnlyGuestBook guestBook, String filePath) {","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"rgbpokka"},"content":"//        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"rgbpokka"},"content":"//            new JsonGuestBookStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"rgbpokka"},"content":"//                    .saveGuestBook(guestBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"rgbpokka"},"content":"//        } catch (IOException ioe) {","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"rgbpokka"},"content":"//            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"rgbpokka"},"content":"//        }","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"rgbpokka"},"content":"//    }","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"rgbpokka"},"content":"//    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"rgbpokka"},"content":"//    public void saveGuestBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"rgbpokka"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveGuestBook(new GuestBook(), null));","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"rgbpokka"},"content":"//    }","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"rgbpokka"},"content":"//}","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"rgbpokka"},"content":"//","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"rgbpokka":110}},{"path":"src/test/java/seedu/address/storage/guest/JsonAdaptedGuestTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.storage.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.storage.guest.JsonAdaptedGuest.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.BENSON_GUEST;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.RoomNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.storage.JsonAdaptedChargeable;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.JsonAdaptedTag;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"class JsonAdaptedGuestTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    private static final String INVALID_PASSPORT_NUMBER \u003d \"@@@@@\";","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    private static final String INVALID_NAME \u003d \"   \";","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    private static final String INVALID_ROOM_NUMBER \u003d \"@@@@@@\";","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALID_PASSPORT_NUMBER \u003d BENSON_GUEST.getPassportNumber().toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"    private static final String VALID_NAME \u003d BENSON_GUEST.getName().toString();","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALID_ROOM_NUMBER \u003d BENSON_GUEST.getRoomNumber().toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"    private static final String VALID_EMAIL \u003d BENSON_GUEST.getEmail().toString();","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON_GUEST.getTags().stream()","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"    private static final List\u003cJsonAdaptedChargeable\u003e VALID_CHARGEABLE_USED \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"            BENSON_GUEST.getChargeableUsed().stream().map(JsonAdaptedChargeable::new).collect(","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"                    Collectors.toList());","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    public void toModelType_validGuestDetails_returnsGuest() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(BENSON_GUEST);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(BENSON_GUEST, guest.toModelType());","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidPassportNumber_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ROOM_NUMBER, INVALID_PASSPORT_NUMBER,","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"                        VALID_CHARGEABLE_USED);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d PassportNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_nullPassportNumber_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ROOM_NUMBER, null,","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"                        VALID_CHARGEABLE_USED);","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, PassportNumber.class.getSimpleName());","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedGuest(INVALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ROOM_NUMBER, VALID_PASSPORT_NUMBER,","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"bingcheng45"},"content":"                        VALID_CHARGEABLE_USED);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(null, VALID_EMAIL, VALID_TAGS,","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"bingcheng45"},"content":"                VALID_ROOM_NUMBER, VALID_PASSPORT_NUMBER, VALID_CHARGEABLE_USED);","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidRoomNumber_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_EMAIL, VALID_TAGS, INVALID_ROOM_NUMBER, VALID_PASSPORT_NUMBER,","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"bingcheng45"},"content":"                        VALID_CHARGEABLE_USED);","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d RoomNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_nullRoomNumber_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(VALID_NAME, VALID_EMAIL, VALID_TAGS, null, VALID_PASSPORT_NUMBER,","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"bingcheng45"},"content":"                VALID_CHARGEABLE_USED);","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, RoomNumber.class.getSimpleName());","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedGuest(VALID_NAME, INVALID_EMAIL, VALID_TAGS, VALID_ROOM_NUMBER, VALID_PASSPORT_NUMBER,","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"bingcheng45"},"content":"                        VALID_CHARGEABLE_USED);","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedGuest guest \u003d new JsonAdaptedGuest(VALID_NAME, null, VALID_TAGS,","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"bingcheng45"},"content":"                VALID_ROOM_NUMBER, VALID_PASSPORT_NUMBER, VALID_CHARGEABLE_USED);","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, guest::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":117,"author":{"gitId":"bingcheng45"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-10-15"},{"lineNumber":118,"author":{"gitId":"bingcheng45"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-10-15"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedGuest guest \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedGuest(VALID_NAME, VALID_EMAIL, invalidTags, VALID_ROOM_NUMBER, VALID_PASSPORT_NUMBER,","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"bingcheng45"},"content":"                        VALID_CHARGEABLE_USED);","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, guest::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":124,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"calvintanwj":50,"bingcheng45":74}},{"path":"src/test/java/seedu/address/storage/guest/JsonGuestBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.storage.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.JEONGYEON_GUEST;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalGuests.getTypicalGuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"public class JsonGuestBookStorageTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"Guest\", \"JsonGuestBookStorageTest\");","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    @TempDir","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    public Path testFolder;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    public void readGuestBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e readGuestBook(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    private java.util.Optional\u003cReadOnlyGuestBook\u003e readGuestBook(String filePath) throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        return new JsonGuestBookStorage(Paths.get(filePath)).readGuestBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"                : null;","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(readGuestBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DataConversionException.class, () -\u003e readGuestBook(\"notJsonFormatGuestBook.json\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    public void readGuestBook_invalidGuestBook_throwDataConversionException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DataConversionException.class, () -\u003e readGuestBook(\"invalidGuestBook.json\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    public void readGuestBook_invalidAndValidGuestBook_throwDataConversionException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DataConversionException.class, () -\u003e readGuestBook(\"invalidAndValidGuestBook.json\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    public void readAndSaveGuestBook_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        Path filePath \u003d testFolder.resolve(\"TempGuestBook.json\");","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        GuestBook original \u003d getTypicalGuestBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        JsonGuestBookStorage jsonGuestBookStorage \u003d new JsonGuestBookStorage(filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        jsonGuestBookStorage.saveGuestBook(original, filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        ReadOnlyGuestBook readBack \u003d jsonGuestBookStorage.readGuestBook(filePath).get();","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(original, new GuestBook(readBack));","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        original.addGuest(JEONGYEON_GUEST);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        original.removeGuest(JEONGYEON_GUEST);","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        jsonGuestBookStorage.saveGuestBook(original, filePath);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"        readBack \u003d jsonGuestBookStorage.readGuestBook(filePath).get();","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(original, new GuestBook(readBack));","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        original.addGuest(JEONGYEON_GUEST);","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"        jsonGuestBookStorage.saveGuestBook(original); // file path not specified","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        readBack \u003d jsonGuestBookStorage.readGuestBook().get(); // file path not specified","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(original, new GuestBook(readBack));","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"    public void saveGuestBook_nullGuestBook_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveGuestBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"     * Saves {@code guestBook} at the specified {@code filePath}.","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"    private void saveGuestBook(ReadOnlyGuestBook guestBook, String filePath) {","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"            new JsonGuestBookStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"                    .saveGuestBook(guestBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"    public void saveGuestBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveGuestBook(new GuestBook(), null));","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":107}},{"path":"src/test/java/seedu/address/storage/guest/JsonSerializableGuestBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.storage.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.guest.TypicalGuests;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"public class JsonSerializableGuestBookTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    private static final Path TEST_DATA_FOLDER \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"            Paths.get(\"src\", \"test\", \"data\", \"Guest\", \"JsonSerializableGuestBookTest\");","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    private static final Path TYPICAL_GUESTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalGuestBook.json\");","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    private static final Path INVALID_GUESTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidGuestBook.json\");","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    private static final Path DUPLICATE_GUEST_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateGuestBook.json\");","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    public void toModelType_typicalGuestsFile_success() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"        JsonSerializableGuestBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_GUESTS_FILE,","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"                JsonSerializableGuestBook.class).get();","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        GuestBook guestBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        GuestBook typicalGuestsBook \u003d TypicalGuests.getTypicalGuestBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(guestBookFromFile, typicalGuestsBook);","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    public void toModelType_invalidGuestsFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        JsonSerializableGuestBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_GUESTS_FILE,","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"                JsonSerializableGuestBook.class).get();","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    public void toModelType_duplicateGuests_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        JsonSerializableGuestBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_GUEST_FILE,","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"                JsonSerializableGuestBook.class).get();","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableGuestBook.MESSAGE_DUPLICATE_GUEST,","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":48}},{"path":"src/test/java/seedu/address/storage/vendor/JsonAdaptedVendorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.storage.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.storage.vendor.JsonAdaptedVendor.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.ELLE_VENDOR;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Address;","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Cost;","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.OperatingHours;","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ServiceName;","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.storage.JsonAdaptedTag;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"class JsonAdaptedVendorTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    private static final String INVALID_VID \u003d \"asdas @\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    private static final String INVALID_NAME \u003d \"   \";","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    private static final String INVALID_OPERATING_HOURS \u003d \"12388 1000-1300\";","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    private static final Double INVALID_COST \u003d -10.00;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    private static final String INVALID_SERVICE_NAME \u003d \"Service!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALID_VID \u003d ELLE_VENDOR.getVendorId().toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALID_NAME \u003d ELLE_VENDOR.getName().toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALID_PHONE \u003d ELLE_VENDOR.getPhone().toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALID_EMAIL \u003d ELLE_VENDOR.getEmail().toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALID_ADDRESS \u003d ELLE_VENDOR.getAddress().toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d ELLE_VENDOR.getTags().stream()","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALID_OPERATING_HOURS \u003d ELLE_VENDOR.getOperatingHours().operatingHoursStringRep;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    private static final Double VALID_COST \u003d ELLE_VENDOR.getCost().value;","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    private static final String VALID_SERVICE_NAME \u003d ELLE_VENDOR.getServiceName().toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    public void toModelType_validVendorDetails_returnsVendor() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d new JsonAdaptedVendor(ELLE_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(ELLE_VENDOR, vendor.toModelType());","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    public void toModelType_invalidVid_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, INVALID_VID, VALID_PHONE,","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"                        VALID_SERVICE_NAME, VALID_COST, VALID_OPERATING_HOURS);","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d VendorId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    public void toModelType_nullVid_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, null, VALID_PHONE,","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"                        VALID_SERVICE_NAME, VALID_COST, VALID_OPERATING_HOURS);","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, VendorId.class.getSimpleName());","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedVendor(INVALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, VALID_VID, VALID_PHONE,","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"                        VALID_SERVICE_NAME, VALID_COST, VALID_OPERATING_HOURS);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedVendor(null, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, VALID_VID, VALID_PHONE,","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"                        VALID_SERVICE_NAME, VALID_COST, VALID_OPERATING_HOURS);","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, VALID_VID, INVALID_PHONE,","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"                        VALID_SERVICE_NAME, VALID_COST, VALID_OPERATING_HOURS);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, VALID_VID, null,","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"                        VALID_SERVICE_NAME, VALID_COST, VALID_OPERATING_HOURS);","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedVendor(VALID_NAME, INVALID_EMAIL, VALID_TAGS, VALID_ADDRESS, VALID_VID, VALID_PHONE,","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"                        VALID_SERVICE_NAME, VALID_COST, VALID_OPERATING_HOURS);","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedVendor(VALID_NAME, null, VALID_TAGS, VALID_ADDRESS, VALID_VID, VALID_PHONE,","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"                        VALID_SERVICE_NAME, VALID_COST, VALID_OPERATING_HOURS);","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_EMAIL, VALID_TAGS, INVALID_ADDRESS, VALID_VID, VALID_PHONE,","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"                        VALID_SERVICE_NAME, VALID_COST, VALID_OPERATING_HOURS);","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"bingcheng45"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_EMAIL, VALID_TAGS, null, VALID_VID, VALID_PHONE,","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"                        VALID_SERVICE_NAME, VALID_COST, VALID_OPERATING_HOURS);","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"    public void toModelType_invalidCost_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, VALID_VID, VALID_PHONE,","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"                        VALID_SERVICE_NAME, INVALID_COST, VALID_OPERATING_HOURS);","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d Cost.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-30"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"    public void toModelType_nullCost_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, VALID_VID, VALID_PHONE,","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"                        VALID_SERVICE_NAME, null, VALID_OPERATING_HOURS);","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Cost.class.getSimpleName());","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"    public void toModelType_invalidServiceName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, VALID_VID, VALID_PHONE,","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"                        INVALID_SERVICE_NAME, VALID_COST, VALID_OPERATING_HOURS);","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d ServiceName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-30"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"    public void toModelType_nullServiceName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, VALID_VID, VALID_PHONE,","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"                        null, VALID_COST, VALID_OPERATING_HOURS);","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ServiceName.class.getSimpleName());","lastModifiedDate":"2021-10-30"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"    public void toModelType_invalidOperatingHours_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, VALID_VID, VALID_PHONE,","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"                        VALID_SERVICE_NAME, VALID_COST, INVALID_OPERATING_HOURS);","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d OperatingHours.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-30"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":188,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"calvintanwj"},"content":"    public void toModelType_nullOperatingHours_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_EMAIL, VALID_TAGS, VALID_ADDRESS, VALID_VID, VALID_PHONE,","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"calvintanwj"},"content":"                        VALID_SERVICE_NAME, VALID_COST, null);","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"calvintanwj"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, OperatingHours.class.getSimpleName());","lastModifiedDate":"2021-10-30"},{"lineNumber":195,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, vendor::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":200,"author":{"gitId":"bingcheng45"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":201,"author":{"gitId":"bingcheng45"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-10-14"},{"lineNumber":202,"author":{"gitId":"bingcheng45"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-10-14"},{"lineNumber":203,"author":{"gitId":"calvintanwj"},"content":"        JsonAdaptedVendor vendor \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"calvintanwj"},"content":"                new JsonAdaptedVendor(VALID_NAME, VALID_EMAIL, invalidTags, VALID_ADDRESS, VALID_VID, VALID_PHONE,","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"calvintanwj"},"content":"                        VALID_SERVICE_NAME, VALID_COST, VALID_OPERATING_HOURS);","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, vendor::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":208,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"calvintanwj":145,"bingcheng45":65}},{"path":"src/test/java/seedu/address/storage/vendor/JsonSerializableVendorBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.storage.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.TypicalVendors;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"public class JsonSerializableVendorBookTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    private static final Path TEST_DATA_FOLDER \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"            Paths.get(\"src\", \"test\", \"data\", \"Vendor\", \"JsonSerializableVendorBookTest\");","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    private static final Path TYPICAL_VENDOR_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalVendorBook.json\");","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    private static final Path INVALID_VENDOR_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidVendorBook.json\");","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"    private static final Path DUPLICATE_VENDOR_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateVendorBook.json\");","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    public void toModelType_typicalVendorsFile_success() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"        JsonSerializableVendorBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_VENDOR_FILE,","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"                JsonSerializableVendorBook.class).get();","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        VendorBook vendorBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        VendorBook typicalVendorBook \u003d TypicalVendors.getTypicalVendorBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(vendorBookFromFile, typicalVendorBook);","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    public void toModelType_invalidVendorsFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        JsonSerializableVendorBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_VENDOR_FILE,","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"                JsonSerializableVendorBook.class).get();","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    public void toModelType_duplicateVendors_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        JsonSerializableVendorBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_VENDOR_FILE,","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"                JsonSerializableVendorBook.class).get();","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableVendorBook.MESSAGE_DUPLICATE_VENDOR,","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":48}},{"path":"src/test/java/seedu/address/storage/vendor/JsonVendorBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.storage.vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.DANIEL_VENDOR;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendors.getTypicalVendorBook;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ReadOnlyVendorBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.testutil.vendor.VendorBuilder;","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"public class JsonVendorBookStorageTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    private static final Path","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"            TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"Vendor\", \"JsonVendorBookStorageTest\");","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    @TempDir","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    public Path testFolder;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    public void readVendorBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e readVendorBook(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    private java.util.Optional\u003cReadOnlyVendorBook\u003e readVendorBook(String filePath) throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        return new JsonVendorBookStorage(Paths.get(filePath)).readVendorBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"                : null;","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        assertFalse(readVendorBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DataConversionException.class, () -\u003e readVendorBook(\"notJsonFormatVendorBook.json\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    public void readVendorBook_invalidVendorBook_throwDataConversionException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DataConversionException.class, () -\u003e readVendorBook(\"invalidVendorBook.json\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    public void readVendorBook_invalidAndValidVendorBook_throwDataConversionException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(DataConversionException.class, () -\u003e readVendorBook(\"invalidAndValidVendorBook.json\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"    public void readAndSaveVendorBook_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        Path filePath \u003d testFolder.resolve(\"TempVendorBook.json\");","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        VendorBook original \u003d getTypicalVendorBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        JsonVendorBookStorage jsonVendorBookStorage \u003d new JsonVendorBookStorage(filePath);","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        jsonVendorBookStorage.saveVendorBook(original, filePath);","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        ReadOnlyVendorBook readBack \u003d jsonVendorBookStorage.readVendorBook(filePath).get();","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(original, new VendorBook(readBack));","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"        original.addVendor(new VendorBuilder(DANIEL_VENDOR).withVendorId(\"1231801\").build());","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        original.removeVendor(DANIEL_VENDOR);","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        jsonVendorBookStorage.saveVendorBook(original, filePath);","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"        readBack \u003d jsonVendorBookStorage.readVendorBook(filePath).get();","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(original, new VendorBook(readBack));","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"        original.addVendor(new VendorBuilder(DANIEL_VENDOR).withVendorId(\"12801\").build());","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        jsonVendorBookStorage.saveVendorBook(original); // file path not specified","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"        readBack \u003d jsonVendorBookStorage.readVendorBook().get(); // file path not specified","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"        assertEquals(original, new VendorBook(readBack));","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"    public void saveVendorBook_nullVendorBook_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveVendorBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"     * Saves {@code guestBook} at the specified {@code filePath}.","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"    private void saveVendorBook(ReadOnlyVendorBook guestBook, String filePath) {","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"            new JsonVendorBookStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"                    .saveVendorBook(guestBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"    public void saveVendorBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveVendorBook(new VendorBook(), null));","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"calvintanwj":112}},{"path":"src/test/java/seedu/address/testutil/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.ReadOnlyGuestBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ReadOnlyVendorBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":" * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    public Path getGuestBookFilePath() {","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    public void setGuestBookFilePath(Path guestManagerFilePath) {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"    public void setGuestBook(ReadOnlyGuestBook guestBook) {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"    public ReadOnlyGuestBook getGuestBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"    public void addGuest(Guest guest) {","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"    public Optional\u003cGuest\u003e getGuest(PassportNumber passportNumber) {","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    public boolean hasGuest(Guest guest) {","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"    public void deleteGuest(Guest target) {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    public void setGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"    public ObservableList\u003cGuest\u003e getFilteredGuestList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"    public void updateFilteredGuestList(Predicate\u003cGuest\u003e predicate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"rgbpokka"},"content":"    public void setArchive(Archive archive) {","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"rgbpokka"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"rgbpokka"},"content":"    public Archive getArchive() {","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"rgbpokka"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"rgbpokka"},"content":"    public boolean hasArchivedGuest(Guest guest) {","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"rgbpokka"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"rgbpokka"},"content":"    public void deleteArchivedGuest(Guest target) {","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"rgbpokka"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"rgbpokka"},"content":"    public void addArchivedGuest(Guest guest) {","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"rgbpokka"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"rgbpokka"},"content":"    public Optional\u003cGuest\u003e getArchivedGuest(PassportNumber passportNumber) {","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"rgbpokka"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"rgbpokka"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"rgbpokka"},"content":"    public void setArchivedGuest(Guest target, Guest editedGuest) {","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"rgbpokka"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"    public Path getArchiveFilePath() {","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"    public boolean hasVendor(Vendor vendor) {","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"    public void deleteVendor(Vendor target) {","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"    public void addVendor(Vendor vendor) {","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"    public void setVendor(Vendor target, Vendor editedVendor) {","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"    public Optional\u003cVendor\u003e getVendor(VendorId vendorId) {","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"calvintanwj"},"content":"    public ObservableList\u003cVendor\u003e getFilteredVendorList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"calvintanwj"},"content":"    public void updateFilteredVendorList(Predicate\u003cVendor\u003e predicate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"calvintanwj"},"content":"    public void setVendorBook(ReadOnlyVendorBook vendorManager) {","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"calvintanwj"},"content":"    public ReadOnlyVendorBook getVendorBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"calvintanwj"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"calvintanwj"},"content":"    public Path getVendorBookFilePath() {","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"calvintanwj"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"rgbpokka":36,"calvintanwj":154}},{"path":"src/test/java/seedu/address/testutil/guest/ArchiveBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rgbpokka"},"content":"package seedu.address.testutil.guest;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"rgbpokka"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"rgbpokka"},"content":" * A utility class to help with building Archive objects.","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"rgbpokka"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"rgbpokka"},"content":" * {@code Archive archive \u003d new ArchiveBuilder().withArchivedGuest(JOHN_DOE).build();}","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"rgbpokka"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"rgbpokka"},"content":"public class ArchiveBuilder {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"    private Archive archive;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"    public ArchiveBuilder() {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"rgbpokka"},"content":"        archive \u003d new Archive();","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"    public ArchiveBuilder(Archive archive) {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"rgbpokka"},"content":"        this.archive \u003d archive;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"     * Adds a new {@code Guest} to the {@code Archive} that we are building.","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"    public ArchiveBuilder withArchivedGuest(Guest guest) {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"        archive.addGuest(guest);","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"rgbpokka"},"content":"    public Archive build() {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"        return archive;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"rgbpokka":34}},{"path":"src/test/java/seedu/address/testutil/guest/EditGuestDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.testutil.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"rgbpokka"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"rgbpokka"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"rgbpokka"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.EditGuestCommand.EditGuestDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.RoomNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":" * A utility class to help with building EditGuestDescriptor objects.","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"rgbpokka"},"content":"public class EditGuestDescriptorBuilder {","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"    private final EditGuestDescriptor descriptor;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptorBuilder() {","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"rgbpokka"},"content":"        descriptor \u003d new EditGuestDescriptor();","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptorBuilder(EditGuestDescriptor descriptor) {","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"rgbpokka"},"content":"        this.descriptor \u003d new EditGuestDescriptor(descriptor);","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"     * Returns an {@code EditGuestDescriptor} with fields containing {@code Guest}\u0027s details","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptorBuilder(Guest guest) {","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"        descriptor \u003d new EditGuestDescriptor();","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setName(guest.getName());","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setEmail(guest.getEmail());","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setTags(guest.getTags());","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setPassportNumber(guest.getPassportNumber());","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setRoomNumber(guest.getRoomNumber());","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code Name} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code Email} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code RoomNumber} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptorBuilder withRoomNumber(String roomNumber) {","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setRoomNumber(new RoomNumber(roomNumber));","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code PassportNumber} of the {@code EditGuestDescriptor} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptorBuilder withPassportNumber(String passportNumber) {","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setPassportNumber(new PassportNumber(passportNumber));","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"rgbpokka"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditGuestDescriptor}","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"rgbpokka"},"content":"     * that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"rgbpokka"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"rgbpokka"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"rgbpokka"},"content":"    public EditGuestDescriptor build() {","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"rgbpokka"},"content":"        return descriptor;","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"rgbpokka"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"rgbpokka":77,"calvintanwj":9,"bingcheng45":1}},{"path":"src/test/java/seedu/address/testutil/guest/GuestBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.testutil.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":" * A utility class to help with building GuestBook objects.","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":" *     {@code GuestBook gb \u003d new GuestBookBuilder().withGuest(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"public class GuestBookBuilder {","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"    private GuestBook guestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    public GuestBookBuilder() {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"        guestBook \u003d new GuestBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    public GuestBookBuilder(GuestBook guestBook) {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"        this.guestBook \u003d guestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"     * Adds a new {@code Guest} to the {@code GuestBook} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    public GuestBookBuilder withGuest(Guest guest) {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        guestBook.addGuest(guest);","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    public GuestBook build() {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        return guestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":34}},{"path":"src/test/java/seedu/address/testutil/guest/GuestBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.testutil.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_DEFAULT;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.RoomNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"public class GuestBuilder {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"    public static final Name DEFAULT_NAME \u003d new Name(\"Amy Bee\");","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    public static final Email DEFAULT_EMAIL \u003d new Email(\"amy@gmail.com\");","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"    public static final RoomNumber DEFAULT_ROOM_NUMBER \u003d new RoomNumber(\"101\");","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"NicolasCwy"},"content":"    public static final PassportNumber DEFAULT_PASSPORT_NUMBER \u003d new PassportNumber(PASSPORT_NUMBER_DEFAULT.toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    private Name name;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"    private Email email;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    private RoomNumber roomNumber;","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    private PassportNumber passportNumber;","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"rgbpokka"},"content":"     * Creates a {@code GuestBuilder} with the default details.","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"rgbpokka"},"content":"    public GuestBuilder() {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"        name \u003d DEFAULT_NAME;","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"        email \u003d DEFAULT_EMAIL;","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"rgbpokka"},"content":"        roomNumber \u003d DEFAULT_ROOM_NUMBER;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"rgbpokka"},"content":"        passportNumber \u003d DEFAULT_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"rgbpokka"},"content":"     * Initializes the GuestBuilder with the data of {@code guestToCopy}.","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"rgbpokka"},"content":"    public GuestBuilder(Guest guestToCopy) {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        name \u003d guestToCopy.getName();","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        email \u003d guestToCopy.getEmail();","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        tags \u003d new HashSet\u003c\u003e(guestToCopy.getTags());","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"rgbpokka"},"content":"        roomNumber \u003d guestToCopy.getRoomNumber();","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"rgbpokka"},"content":"        passportNumber \u003d guestToCopy.getPassportNumber();","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code Name} of the {@code Guest} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"    public GuestBuilder withName(String name) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"rgbpokka"},"content":"        //        this.name \u003d new Name(\"name\");","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"rgbpokka"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"rgbpokka"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Guest} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"    public GuestBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code Email} of the {@code Guest} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"rgbpokka"},"content":"    public GuestBuilder withEmail(String email) {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code RoomNumber} of the {@code Guest} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"rgbpokka"},"content":"    public GuestBuilder withRoomNumber(String roomNumber) {","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"rgbpokka"},"content":"        this.roomNumber \u003d new RoomNumber(roomNumber);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"rgbpokka"},"content":"     * Sets the {@code PassportNumber} of the {@code Guest} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"rgbpokka"},"content":"    public GuestBuilder withPassportNumber(String passportNumber) {","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"rgbpokka"},"content":"        this.passportNumber \u003d new PassportNumber(passportNumber);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"rgbpokka"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"rgbpokka"},"content":"    public Guest build() {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"        return new Guest(name, email, tags, roomNumber, passportNumber);","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"rgbpokka"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"rgbpokka":65,"calvintanwj":29,"NicolasCwy":2}},{"path":"src/test/java/seedu/address/testutil/guest/GuestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.testutil.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PASSPORT_NUMBER;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROOM_NUMBER;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"alyssa-savier"},"content":"import seedu.address.logic.commands.guest.CheckInNewGuestCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.guest.EditGuestCommand.EditGuestDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"rgbpokka"},"content":" * A utility class for Guest.","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"rgbpokka"},"content":"public class GuestUtil {","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"rgbpokka"},"content":"     * Returns an add command string for adding the {@code guest}.","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"    public static String getAddCommand(Guest guest) {","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"alyssa-savier"},"content":"        return CheckInNewGuestCommand.COMMAND_WORD + \" \" + getGuestDetails(guest);","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"rgbpokka"},"content":"     * Returns the part of command string for the given {@code guest}\u0027s details.","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"rgbpokka"},"content":"    public static String getGuestDetails(Guest guest) {","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"rgbpokka"},"content":"        sb.append(PREFIX_NAME + guest.getName().fullName + \" \");","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"rgbpokka"},"content":"        sb.append(PREFIX_EMAIL + guest.getEmail().value + \" \");","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"NicolasCwy"},"content":"        sb.append(PREFIX_ROOM_NUMBER + guest.getRoomNumber().value + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"NicolasCwy"},"content":"        sb.append(PREFIX_PASSPORT_NUMBER + guest.getPassportNumber().value + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"rgbpokka"},"content":"        guest.getTags().stream().forEach(","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"rgbpokka"},"content":"     * Returns the part of command string for the given {@code EditGuestDescriptor}\u0027s details.","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"rgbpokka"},"content":"    public static String getEditGuestDescriptorDetails(EditGuestDescriptor descriptor) {","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"        descriptor.getPassportNumber().ifPresent(","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"            passportNumber -\u003e sb.append(PREFIX_PASSPORT_NUMBER).append(passportNumber.value).append(\" \"));","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"        descriptor.getRoomNumber().ifPresent(","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"            roomNumber -\u003e sb.append(PREFIX_ROOM_NUMBER).append(roomNumber.value).append(\" \"));","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"rgbpokka":12,"calvintanwj":7,"alyssa-savier":2,"-":40,"NicolasCwy":4}},{"path":"src/test/java/seedu/address/testutil/guest/TypicalGuests.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.testutil.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_ALICE;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BENSON;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_CARL;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ALICE;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BENSON;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_CARL;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PASSPORT_NUMBER_ALICE;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PASSPORT_NUMBER_BENSON;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PASSPORT_NUMBER_CARL;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOM_NUMBER_ALICE;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOM_NUMBER_BENSON;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROOM_NUMBER_CARL;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_ALICE;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BENSON;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CARL;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.guest.TypicalPassportNumbers.PASSPORT_NUMBER_FOURTH_PERSON_NOT_ADDED;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"rgbpokka"},"content":"import seedu.address.model.guest.Archive;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.Guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.GuestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":" * A utility class containing a list of {@code Guest} objects to be used in tests.","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"public class TypicalGuests {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public static final Guest ALICE_GUEST \u003d new GuestBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"            .withName(VALID_NAME_ALICE)","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"            .withEmail(VALID_EMAIL_ALICE)","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"            .withTags(VALID_TAG_ALICE)","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"            .withRoomNumber(VALID_ROOM_NUMBER_ALICE)","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"            .withPassportNumber(VALID_PASSPORT_NUMBER_ALICE)","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"            .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    public static final Guest BENSON_GUEST \u003d new GuestBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"            .withName(VALID_NAME_BENSON)","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"            .withEmail(VALID_EMAIL_BENSON)","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"            .withTags(VALID_TAG_BENSON)","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"            .withRoomNumber(VALID_ROOM_NUMBER_BENSON)","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"            .withPassportNumber(VALID_PASSPORT_NUMBER_BENSON)","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"            .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"    public static final Guest CARL_GUEST \u003d new GuestBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"            .withName(VALID_NAME_CARL)","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"            .withEmail(VALID_EMAIL_CARL)","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"            .withTags(VALID_TAG_CARL)","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"            .withRoomNumber(VALID_ROOM_NUMBER_CARL)","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"            .withPassportNumber(VALID_PASSPORT_NUMBER_CARL)","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"            .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"    public static final Guest JEONGYEON_GUEST \u003d new GuestBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"            .withName(\"Jeong Yeon\")","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"            .withEmail(\"jy@example.com\")","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"            .withRoomNumber(\"22233\")","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"            .withPassportNumber(PASSPORT_NUMBER_FOURTH_PERSON_NOT_ADDED.toString())","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"            .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"rgbpokka"},"content":"    public static final Guest BOB_ARCHIVED_GUEST \u003d new GuestBuilder()","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"rgbpokka"},"content":"            .withName(\"Bob\")","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"rgbpokka"},"content":"            .withEmail(\"bob@example.com\")","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"rgbpokka"},"content":"            .withRoomNumber(\"22113\")","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"rgbpokka"},"content":"            .withPassportNumber(\"X9995552\")","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"rgbpokka"},"content":"            .build();","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"    private TypicalGuests() {","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"     * Returns an {@code GuestBook} with all the typical guests.","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    public static GuestBook getTypicalGuestBook() {","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"        GuestBook guestBook \u003d new GuestBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"        for (Guest guest : getTypicalGuests()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"            guestBook.addGuest(guest);","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"        return guestBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"rgbpokka"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"rgbpokka"},"content":"     * Returns an {@code Archive} with all the archived guests.","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"rgbpokka"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"rgbpokka"},"content":"    public static Archive getTypicalArchive() {","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"rgbpokka"},"content":"        Archive archive \u003d new Archive();","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"rgbpokka"},"content":"        archive.addGuest(BOB_ARCHIVED_GUEST);","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"rgbpokka"},"content":"        return archive;","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"rgbpokka"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"rgbpokka"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"    public static List\u003cGuest\u003e getTypicalGuests() {","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_GUEST, BENSON_GUEST, CARL_GUEST));","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"rgbpokka":16,"calvintanwj":80}},{"path":"src/test/java/seedu/address/testutil/guest/TypicalPassportNumbers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.testutil.guest;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.guest.PassportNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"NicolasCwy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"NicolasCwy"},"content":"public class TypicalPassportNumbers {","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"NicolasCwy"},"content":"    public static final PassportNumber PASSPORT_NUMBER_FIRST_PERSON \u003d new PassportNumber(\"E0123122G\");","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"NicolasCwy"},"content":"    public static final PassportNumber PASSPORT_NUMBER_SECOND_PERSON \u003d new PassportNumber(\"T12312311A\");","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"NicolasCwy"},"content":"    public static final PassportNumber PASSPORT_NUMBER_THIRD_PERSON \u003d new PassportNumber(\"M123123124D\");","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"    public static final PassportNumber PASSPORT_NUMBER_FOURTH_PERSON_NOT_ADDED \u003d new PassportNumber(\"M999123124D\");","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"NicolasCwy"},"content":"    public static final PassportNumber PASSPORT_NUMBER_UNUSED \u003d new PassportNumber(\"L21312314H\");","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"NicolasCwy"},"content":"    // Default passport number used in builders","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"NicolasCwy"},"content":"    public static final PassportNumber PASSPORT_NUMBER_DEFAULT \u003d new PassportNumber(\"A163812686D\");","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"NicolasCwy"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"calvintanwj":2,"bingcheng45":1,"NicolasCwy":10}},{"path":"src/test/java/seedu/address/testutil/vendor/EditVendorDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.testutil.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.EditVendorCommand.EditVendorDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Address;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Cost;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ServiceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":" * A utility class to help with building EditVendorDescriptor objects.","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"public class EditVendorDescriptorBuilder {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    private final EditVendorDescriptor descriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"    public EditVendorDescriptorBuilder() {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        descriptor \u003d new EditVendorDescriptor();","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    public EditVendorDescriptorBuilder(EditVendorDescriptor descriptor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        this.descriptor \u003d new EditVendorDescriptor(descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"     * Returns an {@code EditVendorDescriptor} with fields containing {@code Vendor}\u0027s details","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"    public EditVendorDescriptorBuilder(Vendor vendor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        descriptor \u003d new EditVendorDescriptor();","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        descriptor.setName(vendor.getName());","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        descriptor.setEmail(vendor.getEmail());","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        descriptor.setTags(vendor.getTags());","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        descriptor.setPhone(vendor.getPhone());","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        descriptor.setAddress(vendor.getAddress());","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        descriptor.setVendorId(vendor.getVendorId());","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"        descriptor.setOperatingHours(vendor.getOperatingHours());","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        descriptor.setServiceName(vendor.getServiceName());","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        descriptor.setCost(vendor.getCost());","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"     * Sets the {@code Name} of the {@code EditVendorDescriptor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    public EditVendorDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"     * Sets the {@code Phone} of the {@code EditVendorDescriptor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    public EditVendorDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"     * Sets the {@code Email} of the {@code EditVendorDescriptor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"    public EditVendorDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"     * Sets the {@code Address} of the {@code EditVendorDescriptor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"    public EditVendorDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"     * Sets the {@code VendorId} of the {@code EditVendorDescriptor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"    public EditVendorDescriptorBuilder withVendorId(String vendorId) {","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"        descriptor.setVendorId(new VendorId(vendorId));","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"     * Sets the {@code Cost} of the {@code EditVendorDescriptor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"    public EditVendorDescriptorBuilder withCost(String cost) {","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"            descriptor.setCost(new Cost(Double.parseDouble(cost)));","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"     * Sets the {@code ServiceName} of the {@code EditVendorDescriptor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"    public EditVendorDescriptorBuilder withServiceName(String serviceName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"        descriptor.setServiceName(new ServiceName(serviceName));","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"     * Sets the {@code OperatingHours} of the {@code EditVendorDescriptor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"    public EditVendorDescriptorBuilder withOperatingHours(String operatingHours) {","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"            descriptor.setOperatingHours(ParserUtil.parseOperatingHours(operatingHours));","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditVendorDescriptor}","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"     * that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"    public EditVendorDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"    public EditVendorDescriptor build() {","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"        return descriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":136}},{"path":"src/test/java/seedu/address/testutil/vendor/TypicalVendorIds.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.testutil.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"public class TypicalVendorIds {","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"    public static final VendorId VENDOR_ID_FIRST_PERSON \u003d new VendorId(\"123\");","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"    public static final VendorId VENDOR_ID_SECOND_PERSON \u003d new VendorId(\"456\");","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"    public static final VendorId VENDOR_ID_THIRD_PERSON \u003d new VendorId(\"777\");","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"    public static final VendorId VENDOR_ID_FOURTH_PERSON \u003d new VendorId(\"888\");","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"    public static final VendorId VENDOR_ID_UNUSED \u003d new VendorId(\"999\");","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"    // Default vendor Id used in builders","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"    public static final VendorId VENDOR_ID_DEFAULT \u003d new VendorId(\"98765\");","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":13}},{"path":"src/test/java/seedu/address/testutil/vendor/TypicalVendors.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.testutil.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_DANIEL;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_ELLE;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_FIONA;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_GEORGE;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COST_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COST_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COST_FIONA;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COST_GEORGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_DANIEL;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_ELLE;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_FIONA;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_GEORGE;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DANIEL;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ELLE;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_FIONA;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_GEORGE;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OPERATING_HOURS_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OPERATING_HOURS_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OPERATING_HOURS_FIONA;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OPERATING_HOURS_GEORGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_DANIEL;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_ELLE;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_FIONA;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_GEORGE;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SERVICE_NAME_DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SERVICE_NAME_ELLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SERVICE_NAME_FIONA;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SERVICE_NAME_GEORGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DANIEL;","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_ELLE;","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FIONA;","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_GEORGE;","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VENDOR_ID_DANIEL;","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VENDOR_ID_ELLE;","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VENDOR_ID_FIONA;","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VENDOR_ID_GEORGE;","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":" * A utility class containing a list of {@code Vendor} objects to be used in tests.","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"public class TypicalVendors {","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    public static final Vendor DANIEL_VENDOR \u003d new VendorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"            .withName(VALID_NAME_DANIEL)","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"            .withEmail(VALID_EMAIL_DANIEL)","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"            .withTags(VALID_TAG_DANIEL)","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"            .withAddress(VALID_ADDRESS_DANIEL)","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"            .withPhone(VALID_PHONE_DANIEL)","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"            .withVendorId(VALID_VENDOR_ID_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"            .withCost(VALID_COST_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"            .withServiceName(VALID_SERVICE_NAME_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"            .withOperatingHours(VALID_OPERATING_HOURS_DANIEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"            .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    public static final Vendor ELLE_VENDOR \u003d new VendorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"            .withName(VALID_NAME_ELLE)","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"            .withEmail(VALID_EMAIL_ELLE)","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"            .withTags(VALID_TAG_ELLE)","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"            .withAddress(VALID_ADDRESS_ELLE)","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"            .withPhone(VALID_PHONE_ELLE)","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"            .withVendorId(VALID_VENDOR_ID_ELLE)","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"            .withCost(VALID_COST_ELLE)","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"            .withServiceName(VALID_SERVICE_NAME_ELLE)","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"            .withOperatingHours(VALID_OPERATING_HOURS_ELLE)","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"            .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"    public static final Vendor FIONA_VENDOR \u003d new VendorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"            .withName(VALID_NAME_FIONA)","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"            .withEmail(VALID_EMAIL_FIONA)","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"            .withTags(VALID_TAG_FIONA)","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"            .withAddress(VALID_ADDRESS_FIONA)","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"            .withPhone(VALID_PHONE_FIONA)","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"            .withVendorId(VALID_VENDOR_ID_FIONA)","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"calvintanwj"},"content":"            .withCost(VALID_COST_FIONA)","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"            .withServiceName(VALID_SERVICE_NAME_FIONA)","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"            .withOperatingHours(VALID_OPERATING_HOURS_FIONA)","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"            .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"    public static final Vendor GEORGE_VENDOR \u003d new VendorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"            .withName(VALID_NAME_GEORGE)","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"            .withEmail(VALID_EMAIL_GEORGE)","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"            .withTags(VALID_TAG_GEORGE)","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"            .withAddress(VALID_ADDRESS_GEORGE)","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"            .withPhone(VALID_PHONE_GEORGE)","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"            .withVendorId(VALID_VENDOR_ID_GEORGE)","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"            .withCost(VALID_COST_GEORGE)","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"            .withServiceName(VALID_SERVICE_NAME_GEORGE)","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"            .withOperatingHours(VALID_OPERATING_HOURS_GEORGE)","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"            .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"    private TypicalVendors() {","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"     * Returns an {@code VendorBook} with all the typical vendors.","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"    public static VendorBook getTypicalVendorBook() {","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"        VendorBook vendorBook \u003d new VendorBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        for (Vendor vendor : getTypicalVendors()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"            vendorBook.addVendor(vendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"        return vendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"    public static List\u003cVendor\u003e getTypicalVendors() {","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(DANIEL_VENDOR, ELLE_VENDOR, FIONA_VENDOR, GEORGE_VENDOR));","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":117}},{"path":"src/test/java/seedu/address/testutil/vendor/VendorBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.testutil.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":" * A utility class to help with building VendorBook objects.","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":" *     {@code VendorBook vb \u003d new VendorBookBuilder().withVendor(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"public class VendorBookBuilder {","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"    private VendorBook vendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"    public VendorBookBuilder() {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"        vendorBook \u003d new VendorBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"    public VendorBookBuilder(VendorBook vendorBook) {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"        this.vendorBook \u003d vendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"     * Adds a new {@code Vendor} to the {@code VendorBook} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"    public VendorBookBuilder withVendor(Vendor vendor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"        vendorBook.addVendor(vendor);","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    public VendorBook build() {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"        return vendorBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":34}},{"path":"src/test/java/seedu/address/testutil/vendor/VendorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.testutil.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.testutil.vendor.TypicalVendorIds.VENDOR_ID_DEFAULT;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Email;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.commonattributes.Name;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Address;","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Cost;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.OperatingHours;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.ServiceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.VendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"public class VendorBuilder {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    public static final Name DEFAULT_NAME \u003d new Name(\"Jims Massage Parlour\");","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"    public static final Email DEFAULT_EMAIL \u003d new Email(\"jim@gmail.com\");","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    public static final VendorId DEFAULT_VENDOR_ID \u003d new VendorId(VENDOR_ID_DEFAULT.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"    public static final Address DEFAULT_ADDRESS \u003d new Address(\"123, Jurong West Ave 6, #08-111\");","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    public static final Phone DEFAULT_PHONE \u003d new Phone(\"85355255\");","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"    public static final Cost DEFAULT_COST \u003d new Cost(10.00);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"    public static final ServiceName DEFAULT_SERVICE_NAME \u003d new ServiceName(\"Massage\");","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    public static final OperatingHours DEFAULT_OPERATING_HOURS \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"            new OperatingHours(LocalTime.of(8, 0), LocalTime.of(15, 30), new ArrayList\u003cDayOfWeek\u003e(","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"                    Arrays.asList(DayOfWeek.of(1), DayOfWeek.of(3), DayOfWeek.of(5))), \"135 0800-1530\");","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"    private Name name;","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"    private Email email;","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"    private Cost cost;","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"    private OperatingHours operatingHours;","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"    private ServiceName serviceName;","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"    private Address address;","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"    private VendorId vendorId;","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"    private Phone phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"     * Creates a {@code VendorBuilder} with the default details.","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"    public VendorBuilder() {","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"        name \u003d DEFAULT_NAME;","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"        email \u003d DEFAULT_EMAIL;","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        cost \u003d DEFAULT_COST;","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        operatingHours \u003d DEFAULT_OPERATING_HOURS;","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        address \u003d DEFAULT_ADDRESS;","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        vendorId \u003d DEFAULT_VENDOR_ID;","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        phone \u003d DEFAULT_PHONE;","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        serviceName \u003d DEFAULT_SERVICE_NAME;","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"     * Initializes the VendorBuilder with the data of {@code vendorToCopy}.","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"    public VendorBuilder(Vendor vendorToCopy) {","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"        name \u003d vendorToCopy.getName();","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"        email \u003d vendorToCopy.getEmail();","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"        tags \u003d new HashSet\u003c\u003e(vendorToCopy.getTags());","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"        address \u003d vendorToCopy.getAddress();","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"        vendorId \u003d vendorToCopy.getVendorId();","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        phone \u003d vendorToCopy.getPhone();","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        serviceName \u003d vendorToCopy.getServiceName();","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"        operatingHours \u003d vendorToCopy.getOperatingHours();","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"        cost \u003d vendorToCopy.getCost();","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"calvintanwj"},"content":"     * Sets the {@code Name} of the {@code Vendor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"calvintanwj"},"content":"    public VendorBuilder withName(String name) {","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"rgbpokka"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"calvintanwj"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Vendor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"calvintanwj"},"content":"    public VendorBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"calvintanwj"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"calvintanwj"},"content":"     * Sets the {@code Email} of the {@code Vendor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"calvintanwj"},"content":"    public VendorBuilder withEmail(String email) {","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"calvintanwj"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"calvintanwj"},"content":"     * Sets the {@code Address} of the {@code Vendor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"calvintanwj"},"content":"    public VendorBuilder withAddress(String address) {","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"calvintanwj"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"calvintanwj"},"content":"     * Sets the {@code VendorId} of the {@code Vendor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"calvintanwj"},"content":"    public VendorBuilder withVendorId(String vendorId) {","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"calvintanwj"},"content":"        this.vendorId \u003d new VendorId(vendorId);","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"calvintanwj"},"content":"     * Sets the {@code Phone} of the {@code Vendor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"calvintanwj"},"content":"    public VendorBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"calvintanwj"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"calvintanwj"},"content":"     * Sets the {@code Cost} of the {@code Vendor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"calvintanwj"},"content":"    public VendorBuilder withCost(String cost) {","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"calvintanwj"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"calvintanwj"},"content":"            this.cost \u003d new Cost(Double.parseDouble(cost));","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"calvintanwj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"calvintanwj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"calvintanwj"},"content":"     * Sets the {@code ServiceName} of the {@code Vendor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"calvintanwj"},"content":"    public VendorBuilder withServiceName(String serviceName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"calvintanwj"},"content":"        this.serviceName \u003d new ServiceName(serviceName);","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"calvintanwj"},"content":"     * Sets the {@code OperatingHours} of the {@code Vendor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"calvintanwj"},"content":"    public VendorBuilder withOperatingHours(String operatingHours) {","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"calvintanwj"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"calvintanwj"},"content":"            this.operatingHours \u003d ParserUtil.parseOperatingHours(operatingHours);","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"calvintanwj"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"calvintanwj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"calvintanwj"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"calvintanwj"},"content":"    public Vendor build() {","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"calvintanwj"},"content":"        return new Vendor(name, email, tags, vendorId, phone, serviceName, address, cost, operatingHours);","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"rgbpokka":1,"calvintanwj":161}},{"path":"src/test/java/seedu/address/testutil/vendor/VendorUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"calvintanwj"},"content":"package seedu.address.testutil.vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OPERATING_HOURS;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_NAME;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"calvintanwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VENDOR_ID;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"calvintanwj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.AddVendorCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.logic.commands.vendor.EditVendorCommand.EditVendorDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"calvintanwj"},"content":"import seedu.address.model.vendor.Vendor;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"calvintanwj"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"calvintanwj"},"content":" * A utility class for Vendor.","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"calvintanwj"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"calvintanwj"},"content":"public class VendorUtil {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"calvintanwj"},"content":"     * Returns an add command string for adding the {@code vendor}.","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"calvintanwj"},"content":"    public static String getAddCommand(Vendor vendor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"calvintanwj"},"content":"        return AddVendorCommand.COMMAND_WORD + \" \" + getVendorDetails(vendor);","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"calvintanwj"},"content":"     * Returns the part of command string for the given {@code vendor}\u0027s details.","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"calvintanwj"},"content":"    public static String getVendorDetails(Vendor vendor) {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"calvintanwj"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"calvintanwj"},"content":"        sb.append(PREFIX_NAME + vendor.getName().fullName + \" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"calvintanwj"},"content":"        sb.append(PREFIX_EMAIL + vendor.getEmail().value + \" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"calvintanwj"},"content":"        sb.append(PREFIX_VENDOR_ID + vendor.getVendorId().value + \" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"calvintanwj"},"content":"        sb.append(PREFIX_PHONE + vendor.getPhone().value + \" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"calvintanwj"},"content":"        sb.append(PREFIX_ADDRESS + vendor.getAddress().value + \" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"calvintanwj"},"content":"        sb.append(PREFIX_COST + vendor.getCost().value.toString() + \" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"calvintanwj"},"content":"        sb.append(PREFIX_SERVICE_NAME + vendor.getServiceName().serviceName + \" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"calvintanwj"},"content":"        sb.append(PREFIX_OPERATING_HOURS + vendor.getOperatingHours().operatingHoursStringRep + \" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"calvintanwj"},"content":"        vendor.getTags().stream().forEach(","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"calvintanwj"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"calvintanwj"},"content":"        );","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"calvintanwj"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"calvintanwj"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"calvintanwj"},"content":"     * Returns the part of command string for the given {@code EditVendorDescriptor}\u0027s details.","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"calvintanwj"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"calvintanwj"},"content":"    public static String getEditVendorDescriptorDetails(EditVendorDescriptor descriptor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"calvintanwj"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"calvintanwj"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"calvintanwj"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"calvintanwj"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"calvintanwj"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"calvintanwj"},"content":"        descriptor.getVendorId().ifPresent(vendorId -\u003e sb.append(PREFIX_VENDOR_ID).append(vendorId.value).append(\" \"));","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"calvintanwj"},"content":"        descriptor.getServiceName().ifPresent(","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"calvintanwj"},"content":"            serviceName -\u003e sb.append(PREFIX_SERVICE_NAME).append(serviceName.serviceName).append(\" \"));","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"calvintanwj"},"content":"        descriptor.getCost().ifPresent(cost -\u003e sb.append(PREFIX_COST).append(cost.value.toString()).append(\" \"));","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"calvintanwj"},"content":"        descriptor.getOperatingHours().ifPresent(operatingHours -\u003e sb.append(PREFIX_OPERATING_HOURS).append(","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"calvintanwj"},"content":"            operatingHours.operatingHoursStringRep).append(\" \"));","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"calvintanwj"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"calvintanwj"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"calvintanwj"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"calvintanwj"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"calvintanwj"},"content":"            } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"calvintanwj"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"calvintanwj"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"calvintanwj"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"calvintanwj"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"calvintanwj"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"calvintanwj"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"calvintanwj"},"content":"","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"calvintanwj":77}}]
